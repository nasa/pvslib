(|polar|
 (|argrng_TCC1| 0
  (|argrng_TCC1-1| |nil| 3297457117
   ("" (ASSERT) (("" (TYPEPRED "pi") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|pi_lb_new| CONST-DECL "posreal" |pi_def| |trig|)
    (|pi_ub_new| CONST-DECL "posreal" |pi_def| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|))
   SHOSTAK (|argrng| SUBTYPE "0" "argrng")))
 (|nzreal_is_nzcomplex| 0
  (|nzreal_is_nzcomplex-1| NIL 3930311188 ("" (JUDGEMENT-TCC) NIL NIL) NIL NIL
   (|nzreal_is_nzcomplex_| SUBTYPE "reals.nzreal" "complex_types.nzcomplex")))
 (|abs_TCC1| 0
  (|abs_TCC1-2| "" 3790100306
   ("" (SKOSIMP)
    (("" (LEMMA "complex_is_Re_Im" ("z" "z!1"))
      (("" (EXPAND "conjugate")
        (("" (NAME-REPLACE "R" "Re(z!1)")
          (("" (NAME-REPLACE "II" "Im(z!1)")
            (("" (REPLACE -1)
              (("" (HIDE -1)
                (("" (ASSERT)
                  (("" (REWRITE "sq.sq_rew")
                    (("" (REWRITE "sq.sq_rew")
                      (("" (LEMMA "i_axiom")
                        (("" (REWRITE "associative_mult" :DIR RL)
                          (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL))
   SHOSTAK
   (|abs| SUBTYPE "number_fields.*(polar.z, arithmetic.conjugate(polar.z))"
    "nonneg_real"))
  (|abs_TCC1-1| |nil| 3294310508
   ("" (SKOSIMP)
    (("" (LEMMA "complex_is_Re_Im" ("z" "z!1"))
      (("" (EXPAND "conjugate")
        (("" (NAME-REPLACE "R" "Re(z!1)")
          (("" (NAME-REPLACE "II" "Im(z!1)")
            (("" (REPLACE -1)
              (("" (HIDE -1)
                (("" (ASSERT)
                  (("" (REWRITE "sq.sq_rew")
                    (("" (REWRITE "sq.sq_rew")
                      (("" (LEMMA "i_axiom")
                        (("" (REWRITE "associative_mult" :DIR RL)
                          (("" (EXPAND "sq" -1)
                            (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL))
   SHOSTAK
   (|abs| SUBTYPE "number_fields.*(polar.z, arithmetic.conjugate(polar.z))"
    "nonneg_real")))
 (|abs_def| 0
  (|abs_def-1| |nil| 3385303712
   ("" (SKOSIMP)
    (("" (EXPAND "abs")
      (("" (LEMMA "complex_is_Re_Im" ("z" "z!1"))
        (("" (NAME-REPLACE "DRL100" "conjugate(z!1)")
          ((""
            (NAME-REPLACE "DRL101"
             "sqrt(reals@sq(Im(z!1)) + reals@sq(Re(z!1)))")
            (("" (REPLACE -1)
              (("" (HIDE -1)
                (("" (EXPAND "DRL100")
                  (("" (EXPAND "conjugate")
                    (("" (REWRITE "associative_mult" 1 :DIR RL)
                      (("" (REWRITE "associative_mult" 1 :DIR RL)
                        (("" (REWRITE "associative_mult" 1 :DIR RL)
                          (("" (REWRITE "i_axiom")
                            (("" (EXPAND "DRL101")
                              (("" (EXPAND "sq") (("" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs| CONST-DECL "nnreal" |polar| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (DRL100 SKOLEM-CONST-DECL "complex" |polar| NIL)
    (|associative_mult| FORMULA-DECL NIL |number_fields| NIL)
    (DRL101 SKOLEM-CONST-DECL
     "{nnz: nnreal | nnz * nnz = reals@sq(Im(z!1)) + reals@sq(Re(z!1))}"
     |polar| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|abs_real_rew| 0
  (|abs_real_rew-1| |nil| 3385304274
   ("" (SKOSIMP)
    (("" (REWRITE "abs_def")
      (("" (REWRITE "Im_real")
        (("" (REWRITE "Re_real")
          (("" (EXPAND "sq" 1 1) (("" (REWRITE "sqrt_sq_abs") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|sqrt_sq_abs| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK))
 (|abs_imag_rew| 0
  (|abs_imag_rew-1| |nil| 3596359128
   ("" (SKEEP)
    (("" (REWRITE "abs_def")
      (("" (REWRITE "Re_imag")
        (("" (REWRITE "Im_imag")
          (("" (CASE "sq.sq(0) = 0")
            (("1" (REPLACES -1)
              (("1" (ASSERT)
                (("1" (LEMMA "sqrt_sq")
                  (("1" (INST - "real_defs.abs(r)") (("1" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|i| CONST-DECL "complex" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im_imag| FORMULA-DECL NIL |arithmetic| NIL)
    (|sq_0| FORMULA-DECL NIL |number_fields_sq| NIL)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sq_abs| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq| CONST-DECL "numfield" |number_fields_sq| NIL)
    (|Re_imag| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK))
 (|abs_nzcomplex| 0
  (|abs_nzcomplex-1| |nil| 3294771107
   ("" (SKOSIMP)
    (("" (EXPAND "abs")
      (("" (LEMMA "nz_sq_abs_pos" ("n0z" "n0z!1"))
        (("" (LEMMA "sqrt_pos" ("px" "n0z!1 * conjugate(n0z!1)"))
          (("1" (PROPAX) NIL NIL)
           ("2" (EXPAND "conjugate") (("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|sqrt_pos| JUDGEMENT-TCC NIL |sqrt| |reals|)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|nz_sq_abs_pos| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK))
 (|abs_nz_iff_nz| 0
  (|abs_nz_iff_nz-1| |nil| 3294771228
   ("" (SKOSIMP)
    (("" (PROP)
      (("1" (REPLACE -2) (("1" (GRIND) NIL NIL)) NIL)
       ("2" (LEMMA "abs_nzcomplex" ("n0z" "z!1"))
        (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|abs_is_0| 0
  (|abs_is_0-1| |nil| 3295007153
   ("" (SKOSIMP)
    (("" (PROP)
      (("1" (EXPAND "abs")
        (("1" (REWRITE "sq_abs_def")
          (("1" (REWRITE "reals@sq_rew")
            (("1" (REWRITE "reals@sq_rew")
              (("1" (REWRITE "complex_is_0_Re_Im" 1)
                (("1" (TYPEPRED "reals@sq(Im(z!1))")
                  (("1" (TYPEPRED "reals@sq(Re(z!1))")
                    (("1"
                      (LEMMA "sqrt_eq"
                       ("nny" "reals@sq(Im(z!1)) + reals@sq(Re(z!1))" "nnz"
                        "0"))
                      (("1" (REWRITE "sqrt_0")
                        (("1" (REPLACE -1 -4)
                          (("1" (HIDE -1)
                            (("1" (LEMMA "reals@sq_nz_pos")
                              (("1" (CASE-REPLACE "Re(z!1) = 0")
                                (("1" (INST - "Im(z!1)")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (INST - "Re(z!1)")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (REPLACE -1)
        (("2" (EXPAND "abs")
          (("2" (REWRITE "zero_times1") (("2" (REWRITE "sqrt_0") NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|sq_abs_def| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqrt_eq| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_nz_pos| JUDGEMENT-TCC NIL |sq| |reals|)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|complex_is_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL))
   SHOSTAK))
 (|abs_neg| 0
  (|abs_neg-1| |nil| 3294998991
   ("" (SKOSIMP)
    (("" (EXPAND "abs")
      (("" (REWRITE "conjugate_neg") (("" (REWRITE "neg_times_neg") NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_complex_is_complex| APPLICATION-JUDGEMENT "complex" |complex_types|
     NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|neg_times_neg| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|conjugate_neg| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK))
 (|abs_mult| 0
  (|abs_mult-2| "" 3790100308
   ("" (EXPAND "abs")
    (("" (SKOLEM 1 ("a" "b"))
      (("" (LEMMA "sq_abs_nonneg" ("z" "a"))
        (("" (LEMMA "sq_abs_nonneg" ("z" "b"))
          (("" (LEMMA "sq_abs_nonneg" ("z" "a*b"))
            (("" (REWRITE "sqrt_times" :DIR RL)
              (("" (ASSERT) (("" (REWRITE "conjugate_times") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|sq_abs_realpred| FORMULA-DECL NIL |arithmetic| NIL)
    (|conjugate_times| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|sq_abs_nonneg| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK)
  (|abs_mult-1| |nil| 3294697248
   ("" (EXPAND "abs")
    (("" (SKOLEM 1 ("a" "b"))
      (("" (LEMMA "sq_abs_nonneg" ("z" "a"))
        (("" (LEMMA "sq_abs_nonneg" ("z" "b"))
          (("" (LEMMA "sq_abs_nonneg" ("z" "a*b"))
            (("" (REWRITE "sqrt_times" :DIR RL)
              (("1" (ASSERT) (("1" (REWRITE "conjugate_times") NIL NIL)) NIL)
               ("2" (ASSERT)
                (("2" (EXPAND "conjugate") (("2" (PROPAX) NIL NIL)) NIL)) NIL)
               ("3" (EXPAND "conjugate") (("3" (PROPAX) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_abs_realpred| FORMULA-DECL NIL |arithmetic| NIL)
    (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|conjugate_times| FORMULA-DECL NIL |arithmetic| NIL)
    (|sq_abs_nonneg| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|abs_inv_TCC1| 0
  (|abs_inv_TCC1-1| |nil| 3294998917
   ("" (SKOSIMP) (("" (REWRITE "abs_is_0") NIL NIL)) NIL)
   ((|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK (|abs_inv| SUBTYPE "polar.abs(polar.n0z)" "nznum")))
 (|abs_inv| 0
  (|abs_inv-2| "" 3790100308
   ("" (SKOSIMP)
    (("" (EXPAND "abs")
      (("" (REWRITE "conjugate_inv")
        (("" (LEMMA "conjugate_nz" ("n0z" "n0z!1"))
          (("" (REWRITE "div_times")
            (("" (LEMMA "nz_sq_abs_pos" ("n0z" "n0z!1"))
              (("" (REWRITE "sqrt_div") NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|conjugate_nz| FORMULA-DECL NIL |arithmetic| NIL)
    (|nz_sq_abs_pos| FORMULA-DECL NIL |arithmetic| NIL)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_abs_realpred| FORMULA-DECL NIL |arithmetic| NIL)
    (|div_times| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|conjugate_inv| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK)
  (|abs_inv-1| |nil| 3294999199
   ("" (SKOSIMP)
    (("" (EXPAND "abs")
      (("" (REWRITE "conjugate_inv")
        (("" (LEMMA "conjugate_nz" ("n0z" "n0z!1"))
          (("" (REWRITE "div_times")
            (("" (LEMMA "nz_sq_abs_pos" ("n0z" "n0z!1"))
              (("" (REWRITE "sqrt_div")
                (("" (EXPAND "conjugate") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|conjugate_nz| FORMULA-DECL NIL |arithmetic| NIL)
    (|nz_sq_abs_pos| FORMULA-DECL NIL |arithmetic| NIL)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_abs_realpred| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|div_times| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|conjugate_inv| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK))
 (|abs_div| 0
  (|abs_div-2| "" 3790100308
   ("" (SKOSIMP)
    (("" (LEMMA "div_def" ("y" "z!1" "n0x" "n0z!1"))
      (("" (LEMMA "abs_mult" ("z1" "z!1" "z2" "1/n0z!1"))
        (("" (REWRITE "abs_inv" -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_div_nzcomplex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL))
   SHOSTAK)
  (|abs_div-1| |nil| 3294999065
   ("" (SKOSIMP)
    (("" (LEMMA "div_def" ("y" "z!1" "n0x" "n0z!1"))
      (("" (LEMMA "abs_mult" ("z1" "z!1" "z2" "1/n0z!1"))
        (("1" (REWRITE "abs_inv" -1) (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (LEMMA "real_is_complex" ("x" "1"))
          (("2" (REWRITE "closed_divides") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_div_nzcomplex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL))
   SHOSTAK))
 (|abs_triangle| 0
  (|abs_triangle-2| |nil| 3307889278
   ("" (SKOLEM 1 ("a" "b"))
    (("" (EXPAND "abs")
      (("" (LEMMA "sq_abs_nonneg" ("z" "a"))
        (("" (LEMMA "sq_abs_nonneg" ("z" "b"))
          (("" (LEMMA "sq_abs_nonneg" ("z" "a+b"))
            (("" (CASE "real_pred(a * conjugate(a))")
              (("1" (CASE "real_pred(b * conjugate(b))")
                (("1" (CASE "real_pred((a+b) * conjugate(a+b))")
                  (("1" (NAME "A2" "a * conjugate(a)")
                    (("1" (REPLACE -1)
                      (("1" (NAME "B2" "b * conjugate(b)")
                        (("1" (REPLACE -1)
                          (("1" (NAME "AB2" "(a+b) * conjugate(a+b)")
                            (("1" (REPLACE -1)
                              (("1"
                                (CASE-REPLACE
                                 "conjugate(a + b) * a + conjugate(a + b) * b = AB2")
                                (("1" (REWRITE "sq_le" 1 :DIR RL)
                                  (("1" (REWRITE "sqrt.sq_sqrt")
                                    (("1" (REWRITE "sq.sq_plus")
                                      (("1" (REWRITE "sqrt.sq_sqrt")
                                        (("1" (REWRITE "sqrt.sq_sqrt")
                                          (("1"
                                            (REWRITE "sqrt.sqrt_times" 1 :DIR
                                             RL)
                                            (("1" (REWRITE "conjugate_plus")
                                              (("1" (REWRITE "distributive" -2)
                                                (("1"
                                                  (LEMMA "commutative_mult")
                                                  (("1"
                                                    (INST-CP - "a"
                                                     "conjugate(a)")
                                                    (("1"
                                                      (INST-CP - "b"
                                                       "conjugate(b)")
                                                      (("1" (REPLACE -2 * RL)
                                                        (("1" (REPLACE -3 * RL)
                                                          (("1" (REPLACE -6)
                                                            (("1" (REPLACE -7)
                                                              (("1" (HIDE -4)
                                                                (("1"
                                                                  (NAME "DRL"
                                                                        "conjugate(a) * b + conjugate(b) * a")
                                                                  (("1"
                                                                    (CASE-REPLACE
                                                                     "A2 + conjugate(a) * b + conjugate(b) * a + B2 = A2+B2+DRL")
                                                                    (("1"
                                                                      (CASE
                                                                          "real_pred(DRL)")
                                                                      (("1"
                                                                        (HIDE
                                                                         -2)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -6 1
                                                                           RL)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "A2*B2>=0")
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "both_sides_plus_le2"
                                                                                 ("z"
                                                                                  "A2+B2"
                                                                                  "x"
                                                                                  "DRL"
                                                                                  "y"
                                                                                  "2*sqrt(A2 * B2)"))
                                                                                (("1"
                                                                                  (CASE
                                                                                      "DRL<=2 * sqrt(A2 * B2)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (HIDE
                                                                                     -1
                                                                                     2)
                                                                                    (("2"
                                                                                      (NAME-REPLACE
                                                                                       "CA"
                                                                                       "conjugate(a)")
                                                                                      (("2"
                                                                                        (NAME-REPLACE
                                                                                         "CB"
                                                                                         "conjugate(b)")
                                                                                        (("2"
                                                                                          (LEMMA
                                                                                           "complex_is_Re_Im"
                                                                                           ("z"
                                                                                            "a"))
                                                                                          (("2"
                                                                                            (LEMMA
                                                                                             "complex_is_Re_Im"
                                                                                             ("z"
                                                                                              "b"))
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -1
                                                                                               -5)
                                                                                              (("2"
                                                                                                (REPLACE
                                                                                                 -2
                                                                                                 -5)
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "CA")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "CB")
                                                                                                    (("2"
                                                                                                      (EXPAND
                                                                                                       "conjugate")
                                                                                                      (("2"
                                                                                                        (CASE-REPLACE
                                                                                                         "DRL = 2*(Re(a)*Re(b)+Im(a)*Im(b))")
                                                                                                        (("1"
                                                                                                          (LEMMA
                                                                                                           "both_sides_times_pos_le1"
                                                                                                           ("pz"
                                                                                                            "2"
                                                                                                            "x"
                                                                                                            "Re(a) * Re(b) + Im(a) * Im(b)"
                                                                                                            "y"
                                                                                                            "sqrt(A2 * B2)"))
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -1
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (HIDE
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (LEMMA
                                                                                                                 "reals.closed_divides"
                                                                                                                 ("x"
                                                                                                                  "2 * (Re(a) * Re(b) + Im(a) * Im(b))"
                                                                                                                  "n0z"
                                                                                                                  "2"))
                                                                                                                (("1"
                                                                                                                  (REWRITE
                                                                                                                   "times_div1"
                                                                                                                   -1
                                                                                                                   :DIR
                                                                                                                   RL)
                                                                                                                  (("1"
                                                                                                                    (REWRITE
                                                                                                                     "div_cancel1"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (CASE
                                                                                                                          "Im(a) * Im(b) + Re(a) * Re(b) < 0")
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (REWRITE
                                                                                                                         "sq_le"
                                                                                                                         2
                                                                                                                         :DIR
                                                                                                                         RL)
                                                                                                                        (("2"
                                                                                                                          (REWRITE
                                                                                                                           "sq_sqrt")
                                                                                                                          (("2"
                                                                                                                            (EXPAND
                                                                                                                             "B2"
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (REWRITE
                                                                                                                               "sq_abs_def"
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (NAME-REPLACE
                                                                                                                                 "DRL_B"
                                                                                                                                 "(Im(b) * Im(b) + Re(b) * Re(b))")
                                                                                                                                (("2"
                                                                                                                                  (EXPAND
                                                                                                                                   "A2")
                                                                                                                                  (("2"
                                                                                                                                    (LEMMA
                                                                                                                                     "sq_abs_def"
                                                                                                                                     ("z"
                                                                                                                                      "a"))
                                                                                                                                    (("2"
                                                                                                                                      (INST-CP
                                                                                                                                       -9
                                                                                                                                       "conjugate(a)"
                                                                                                                                       "DRL_B")
                                                                                                                                      (("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -10
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (REWRITE
                                                                                                                                           "associative_mult"
                                                                                                                                           2
                                                                                                                                           :DIR
                                                                                                                                           RL)
                                                                                                                                          (("2"
                                                                                                                                            (INST-CP
                                                                                                                                             -9
                                                                                                                                             "conjugate(a)"
                                                                                                                                             "a")
                                                                                                                                            (("2"
                                                                                                                                              (REPLACE
                                                                                                                                               -10
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (REPLACE
                                                                                                                                                 -1
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "DRL_B")
                                                                                                                                                  (("2"
                                                                                                                                                    (EXPAND
                                                                                                                                                     "sq")
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (NAME
                                                                                                                                                         "IA"
                                                                                                                                                         "Im(a)")
                                                                                                                                                        (("2"
                                                                                                                                                          (REPLACE
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (NAME
                                                                                                                                                             "IB"
                                                                                                                                                             "Im(b)")
                                                                                                                                                            (("2"
                                                                                                                                                              (REPLACE
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (NAME
                                                                                                                                                                 "RB"
                                                                                                                                                                 "Re(b)")
                                                                                                                                                                (("2"
                                                                                                                                                                  (REPLACE
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (NAME
                                                                                                                                                                     "RA"
                                                                                                                                                                     "Re(a)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (REPLACE
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (NAME-REPLACE
                                                                                                                                                                         "DRL10"
                                                                                                                                                                         "IA * IA * IB * IB ")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (NAME-REPLACE
                                                                                                                                                                           "DRL11"
                                                                                                                                                                           "RA * RA * RB * RB ")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (ASSERT)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (LEMMA
                                                                                                                                                                               "both_sides_plus_le2"
                                                                                                                                                                               ("z"
                                                                                                                                                                                "DRL10 + DRL11"
                                                                                                                                                                                "x"
                                                                                                                                                                                "2 * (IA * IB * RA * RB)"
                                                                                                                                                                                "y"
                                                                                                                                                                                "IA * IA * RB * RB + IB * IB * RA * RA"))
                                                                                                                                                                              (("2"
                                                                                                                                                                                (REPLACE
                                                                                                                                                                                 -1
                                                                                                                                                                                 2)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                                                   (1
                                                                                                                                                                                    2))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (CASE
                                                                                                                                                                                        "IA*IB >= -(RA*RB)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (HIDE
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (LEMMA
                                                                                                                                                                                         "trichotomy"
                                                                                                                                                                                         ("x"
                                                                                                                                                                                          "IA*RB-RA*IB"))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (SPLIT)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (LEMMA
                                                                                                                                                                                             "sq_lt"
                                                                                                                                                                                             ("nna"
                                                                                                                                                                                              "0"
                                                                                                                                                                                              "nnb"
                                                                                                                                                                                              "IA * RB - RA * IB"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (EXPAND
                                                                                                                                                                                                 "sq")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                  NIL
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              NIL
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (LEMMA
                                                                                                                                                                                             "sq_eq"
                                                                                                                                                                                             ("nna"
                                                                                                                                                                                              "IA * RB - RA * IB"
                                                                                                                                                                                              "nnb"
                                                                                                                                                                                              "0"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (EXPAND
                                                                                                                                                                                                 "sq")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                  NIL
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              NIL
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (LEMMA
                                                                                                                                                                                             "sq_lt"
                                                                                                                                                                                             ("nna"
                                                                                                                                                                                              "0"
                                                                                                                                                                                              "nnb"
                                                                                                                                                                                              "-(IA * RB - RA * IB)"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (REWRITE
                                                                                                                                                                                                 "sq.sq_neg")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (EXPAND
                                                                                                                                                                                                   "sq")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                    NIL
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              NIL
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (ASSERT)
                                                                                                                                                                                      NIL
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (REPLACE
                                                                                                           -5
                                                                                                           1
                                                                                                           RL)
                                                                                                          (("2"
                                                                                                            (HIDE-ALL-BUT
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (REWRITE
                                                                                                               "associative_mult"
                                                                                                               :DIR
                                                                                                               RL)
                                                                                                              (("2"
                                                                                                                (REWRITE
                                                                                                                 "associative_mult"
                                                                                                                 :DIR
                                                                                                                 RL)
                                                                                                                (("2"
                                                                                                                  (REWRITE
                                                                                                                   "associative_mult"
                                                                                                                   :DIR
                                                                                                                   RL)
                                                                                                                  (("2"
                                                                                                                    (LEMMA
                                                                                                                     "i_axiom")
                                                                                                                    (("2"
                                                                                                                      (REPLACE
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "reals.closed_plus"
                                                                                     ("x"
                                                                                      "A2"
                                                                                      "y"
                                                                                      "B2"))
                                                                                    (("2"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("3"
                                                                                  (LEMMA
                                                                                   "reals.closed_times"
                                                                                   ("x"
                                                                                    "A2"
                                                                                    "y"
                                                                                    "B2"))
                                                                                  (("3"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (HIDE-ALL-BUT
                                                                                 (1
                                                                                  -13
                                                                                  -14
                                                                                  -10
                                                                                  -11))
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   ">=")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "<="
                                                                                     -3)
                                                                                    (("2"
                                                                                      (SPLIT)
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "both_sides_times_pos_le1"
                                                                                         ("pz"
                                                                                          "B2"
                                                                                          "x"
                                                                                          "0"
                                                                                          "y"
                                                                                          "A2"))
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (REWRITE
                                                                                             "zero_times1")
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (REPLACE
                                                                                         -1
                                                                                         *
                                                                                         RL)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (LEMMA
                                                                                 "reals.closed_times"
                                                                                 ("x"
                                                                                  "A2"
                                                                                  "y"
                                                                                  "B2"))
                                                                                (("3"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (EXPAND
                                                                         "DRL")
                                                                        (("2"
                                                                          (CASE-REPLACE
                                                                           "conjugate(a) * b + conjugate(b) * a = AB2 - A2 - B2")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (HIDE-ALL-BUT
                                                                               (-8
                                                                                -9
                                                                                -10
                                                                                1))
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "reals.closed_minus")
                                                                                (("1"
                                                                                  (INST?)
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "reals.closed_minus")
                                                                                    (("1"
                                                                                      (INST?)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (HIDE-ALL-BUT
                                                                               (-6
                                                                                1))
                                                                              (("2"
                                                                                (LEMMA
                                                                                 "both_sides_minus1")
                                                                                (("2"
                                                                                  (INST
                                                                                   -
                                                                                   "A2 + conjugate(a) * b + conjugate(b) * a + B2"
                                                                                   "AB2"
                                                                                   "A2+B2")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (EXPAND
                                                                       "DRL")
                                                                      (("2"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "AB2") (("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (NAME-REPLACE "APB" "a + b") (("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|sq_le| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sq_plus| FORMULA-DECL NIL |sq| |reals|)
    (|conjugate_plus| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|times_div1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_abs_def| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sq_lt| FORMULA-DECL NIL |sq| |reals|)
    (|sq_eq| FORMULA-DECL NIL |sq| |reals|)
    (|sq_neg| FORMULA-DECL NIL |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|div_cancel1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|both_sides_minus1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_abs_realpred| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|sq_abs_nonneg| FORMULA-DECL NIL |arithmetic| NIL))
   NIL)
  (|abs_triangle-1| |nil| 3294999713
   ("" (SKOLEM 1 ("a" "b"))
    (("" (EXPAND "abs")
      (("" (LEMMA "sq_abs_nonneg" ("z" "a"))
        (("" (LEMMA "sq_abs_nonneg" ("z" "b"))
          (("" (LEMMA "sq_abs_nonneg" ("z" "a+b"))
            (("" (CASE "real_pred(a * conjugate(a))")
              (("1" (CASE "real_pred(b * conjugate(b))")
                (("1" (CASE "real_pred((a+b) * conjugate(a+b))")
                  (("1" (NAME "A2" "a * conjugate(a)")
                    (("1" (REPLACE -1)
                      (("1" (NAME "B2" "b * conjugate(b)")
                        (("1" (REPLACE -1)
                          (("1" (NAME "AB2" "(a+b) * conjugate(a+b)")
                            (("1" (REPLACE -1)
                              (("1"
                                (CASE-REPLACE
                                 "conjugate(a + b) * a + conjugate(a + b) * b = AB2")
                                (("1" (REWRITE "sq_le" 1 :DIR RL)
                                  (("1" (REWRITE "sq_sqrt")
                                    (("1" (REWRITE "sq.sq_plus")
                                      (("1" (REWRITE "sq_sqrt")
                                        (("1" (REWRITE "sq_sqrt")
                                          (("1"
                                            (REWRITE "sqrt_times" 1 :DIR RL)
                                            (("1" (REWRITE "conjugate_plus")
                                              (("1" (REWRITE "distributive" -2)
                                                (("1"
                                                  (LEMMA "commutative_mult")
                                                  (("1"
                                                    (INST-CP - "a"
                                                     "conjugate(a)")
                                                    (("1"
                                                      (INST-CP - "b"
                                                       "conjugate(b)")
                                                      (("1" (REPLACE -2 * RL)
                                                        (("1" (REPLACE -3 * RL)
                                                          (("1" (REPLACE -6)
                                                            (("1" (REPLACE -7)
                                                              (("1" (HIDE -4)
                                                                (("1"
                                                                  (NAME "DRL"
                                                                        "conjugate(a) * b + conjugate(b) * a")
                                                                  (("1"
                                                                    (CASE-REPLACE
                                                                     "A2 + conjugate(a) * b + conjugate(b) * a + B2 = A2+B2+DRL")
                                                                    (("1"
                                                                      (CASE
                                                                          "real_pred(DRL)")
                                                                      (("1"
                                                                        (HIDE
                                                                         -2)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -6 1
                                                                           RL)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "A2*B2>=0")
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "both_sides_plus_le2"
                                                                                 ("z"
                                                                                  "A2+B2"
                                                                                  "x"
                                                                                  "DRL"
                                                                                  "y"
                                                                                  "2*sqrt(A2 * B2)"))
                                                                                (("1"
                                                                                  (CASE
                                                                                      "DRL<=2 * sqrt(A2 * B2)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (HIDE
                                                                                     -1
                                                                                     2)
                                                                                    (("2"
                                                                                      (NAME-REPLACE
                                                                                       "CA"
                                                                                       "conjugate(a)")
                                                                                      (("2"
                                                                                        (NAME-REPLACE
                                                                                         "CB"
                                                                                         "conjugate(b)")
                                                                                        (("2"
                                                                                          (LEMMA
                                                                                           "complex_is_Re_Im"
                                                                                           ("z"
                                                                                            "a"))
                                                                                          (("2"
                                                                                            (LEMMA
                                                                                             "complex_is_Re_Im"
                                                                                             ("z"
                                                                                              "b"))
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -1
                                                                                               -5)
                                                                                              (("2"
                                                                                                (REPLACE
                                                                                                 -2
                                                                                                 -5)
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "CA")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "CB")
                                                                                                    (("2"
                                                                                                      (EXPAND
                                                                                                       "conjugate")
                                                                                                      (("2"
                                                                                                        (CASE-REPLACE
                                                                                                         "DRL = 2*(Re(a)*Re(b)+Im(a)*Im(b))")
                                                                                                        (("1"
                                                                                                          (LEMMA
                                                                                                           "both_sides_times_pos_le1"
                                                                                                           ("pz"
                                                                                                            "2"
                                                                                                            "x"
                                                                                                            "Re(a) * Re(b) + Im(a) * Im(b)"
                                                                                                            "y"
                                                                                                            "sqrt(A2 * B2)"))
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -1
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (HIDE
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (LEMMA
                                                                                                                 "reals.closed_divides"
                                                                                                                 ("x"
                                                                                                                  "2 * (Re(a) * Re(b) + Im(a) * Im(b))"
                                                                                                                  "n0z"
                                                                                                                  "2"))
                                                                                                                (("1"
                                                                                                                  (REWRITE
                                                                                                                   "times_div1"
                                                                                                                   -1
                                                                                                                   :DIR
                                                                                                                   RL)
                                                                                                                  (("1"
                                                                                                                    (REWRITE
                                                                                                                     "div_cancel1"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (CASE
                                                                                                                          "Im(a) * Im(b) + Re(a) * Re(b) < 0")
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (REWRITE
                                                                                                                         "sq_le"
                                                                                                                         2
                                                                                                                         :DIR
                                                                                                                         RL)
                                                                                                                        (("2"
                                                                                                                          (REWRITE
                                                                                                                           "sq_sqrt")
                                                                                                                          (("2"
                                                                                                                            (EXPAND
                                                                                                                             "B2"
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (REWRITE
                                                                                                                               "sq_abs_def"
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (NAME-REPLACE
                                                                                                                                 "DRL_B"
                                                                                                                                 "(Im(b) * Im(b) + Re(b) * Re(b))")
                                                                                                                                (("2"
                                                                                                                                  (EXPAND
                                                                                                                                   "A2")
                                                                                                                                  (("2"
                                                                                                                                    (LEMMA
                                                                                                                                     "sq_abs_def"
                                                                                                                                     ("z"
                                                                                                                                      "a"))
                                                                                                                                    (("2"
                                                                                                                                      (INST-CP
                                                                                                                                       -9
                                                                                                                                       "conjugate(a)"
                                                                                                                                       "DRL_B")
                                                                                                                                      (("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -10
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (REWRITE
                                                                                                                                           "associative_mult"
                                                                                                                                           2
                                                                                                                                           :DIR
                                                                                                                                           RL)
                                                                                                                                          (("2"
                                                                                                                                            (INST-CP
                                                                                                                                             -9
                                                                                                                                             "conjugate(a)"
                                                                                                                                             "a")
                                                                                                                                            (("2"
                                                                                                                                              (REPLACE
                                                                                                                                               -10
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (REPLACE
                                                                                                                                                 -1
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "DRL_B")
                                                                                                                                                  (("2"
                                                                                                                                                    (EXPAND
                                                                                                                                                     "sq")
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (NAME
                                                                                                                                                         "IA"
                                                                                                                                                         "Im(a)")
                                                                                                                                                        (("2"
                                                                                                                                                          (REPLACE
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (NAME
                                                                                                                                                             "IB"
                                                                                                                                                             "Im(b)")
                                                                                                                                                            (("2"
                                                                                                                                                              (REPLACE
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (NAME
                                                                                                                                                                 "RB"
                                                                                                                                                                 "Re(b)")
                                                                                                                                                                (("2"
                                                                                                                                                                  (REPLACE
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (NAME
                                                                                                                                                                     "RA"
                                                                                                                                                                     "Re(a)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (REPLACE
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (NAME-REPLACE
                                                                                                                                                                         "DRL10"
                                                                                                                                                                         "IA * IA * IB * IB ")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (NAME-REPLACE
                                                                                                                                                                           "DRL11"
                                                                                                                                                                           "RA * RA * RB * RB ")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (ASSERT)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (LEMMA
                                                                                                                                                                               "both_sides_plus_le2"
                                                                                                                                                                               ("z"
                                                                                                                                                                                "DRL10 + DRL11"
                                                                                                                                                                                "x"
                                                                                                                                                                                "2 * (IA * IB * RA * RB)"
                                                                                                                                                                                "y"
                                                                                                                                                                                "IA * IA * RB * RB + IB * IB * RA * RA"))
                                                                                                                                                                              (("2"
                                                                                                                                                                                (REPLACE
                                                                                                                                                                                 -1
                                                                                                                                                                                 2)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                                                   (1
                                                                                                                                                                                    2))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (CASE
                                                                                                                                                                                        "IA*IB >= -(RA*RB)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (HIDE
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (LEMMA
                                                                                                                                                                                         "trichotomy"
                                                                                                                                                                                         ("x"
                                                                                                                                                                                          "IA*RB-RA*IB"))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (SPLIT)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (LEMMA
                                                                                                                                                                                             "sq_lt"
                                                                                                                                                                                             ("nna"
                                                                                                                                                                                              "0"
                                                                                                                                                                                              "nnb"
                                                                                                                                                                                              "IA * RB - RA * IB"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (EXPAND
                                                                                                                                                                                                 "sq")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                  NIL
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              NIL
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (LEMMA
                                                                                                                                                                                             "sq_eq"
                                                                                                                                                                                             ("nna"
                                                                                                                                                                                              "IA * RB - RA * IB"
                                                                                                                                                                                              "nnb"
                                                                                                                                                                                              "0"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (EXPAND
                                                                                                                                                                                                 "sq")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                  NIL
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              NIL
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (LEMMA
                                                                                                                                                                                             "sq_lt"
                                                                                                                                                                                             ("nna"
                                                                                                                                                                                              "0"
                                                                                                                                                                                              "nnb"
                                                                                                                                                                                              "-(IA * RB - RA * IB)"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (REWRITE
                                                                                                                                                                                                 "sq.sq_neg")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (EXPAND
                                                                                                                                                                                                   "sq")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                    NIL
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              NIL
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (ASSERT)
                                                                                                                                                                                      NIL
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (REPLACE
                                                                                                           -5
                                                                                                           1
                                                                                                           RL)
                                                                                                          (("2"
                                                                                                            (HIDE-ALL-BUT
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (REWRITE
                                                                                                               "associative_mult"
                                                                                                               :DIR
                                                                                                               RL)
                                                                                                              (("2"
                                                                                                                (REWRITE
                                                                                                                 "associative_mult"
                                                                                                                 :DIR
                                                                                                                 RL)
                                                                                                                (("2"
                                                                                                                  (REWRITE
                                                                                                                   "associative_mult"
                                                                                                                   :DIR
                                                                                                                   RL)
                                                                                                                  (("2"
                                                                                                                    (LEMMA
                                                                                                                     "i_axiom")
                                                                                                                    (("2"
                                                                                                                      (REPLACE
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "reals.closed_plus"
                                                                                     ("x"
                                                                                      "A2"
                                                                                      "y"
                                                                                      "B2"))
                                                                                    (("2"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("3"
                                                                                  (LEMMA
                                                                                   "reals.closed_times"
                                                                                   ("x"
                                                                                    "A2"
                                                                                    "y"
                                                                                    "B2"))
                                                                                  (("3"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (HIDE-ALL-BUT
                                                                                 (1
                                                                                  -13
                                                                                  -14
                                                                                  -10
                                                                                  -11))
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   ">=")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "<="
                                                                                     -3)
                                                                                    (("2"
                                                                                      (SPLIT)
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "both_sides_times_pos_le1"
                                                                                         ("pz"
                                                                                          "B2"
                                                                                          "x"
                                                                                          "0"
                                                                                          "y"
                                                                                          "A2"))
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (REWRITE
                                                                                             "zero_times1")
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (REPLACE
                                                                                         -1
                                                                                         *
                                                                                         RL)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (LEMMA
                                                                                 "reals.closed_times"
                                                                                 ("x"
                                                                                  "A2"
                                                                                  "y"
                                                                                  "B2"))
                                                                                (("3"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (EXPAND
                                                                         "DRL")
                                                                        (("2"
                                                                          (CASE-REPLACE
                                                                           "conjugate(a) * b + conjugate(b) * a = AB2 - A2 - B2")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (HIDE-ALL-BUT
                                                                               (-8
                                                                                -9
                                                                                -10
                                                                                1))
                                                                              (("1"
                                                                                (POSTPONE)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (HIDE-ALL-BUT
                                                                               (-6
                                                                                1))
                                                                              (("2"
                                                                                (POSTPONE)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (EXPAND
                                                                       "DRL")
                                                                      (("2"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "AB2") (("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (NAME-REPLACE "APB" "a + b") (("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|sq_le| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sq_plus| FORMULA-DECL NIL |sq| |reals|)
    (|conjugate_plus| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|times_div1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_abs_def| FORMULA-DECL NIL |arithmetic| NIL)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sq_lt| FORMULA-DECL NIL |sq| |reals|)
    (|sq_eq| FORMULA-DECL NIL |sq| |reals|)
    (|sq_neg| FORMULA-DECL NIL |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|div_cancel1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_abs_nonneg| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|abs_triangle_minus| 0
  (|abs_triangle_minus-1| |nil| 3596297605
   ("" (SKEEP)
    (("" (LEMMA "abs_triangle")
      (("" (INST - "z2" "z1-z2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types|
     NIL))
   SHOSTAK))
 (|abs_abs| 0
  (|abs_abs-2| |nil| 3307886891
   ("" (SKOSIMP)
    (("" (TYPEPRED "abs(z!1)")
      (("" (EXPAND "abs")
        (("" (EXPAND "conjugate")
          (("" (LEMMA "complex_is_Re_Im" ("z" "z!1"))
            (("" (NAME-REPLACE "X" "Re(z!1)")
              (("" (NAME-REPLACE "Y" "Im(z!1)")
                (("" (REPLACE -1)
                  (("" (HIDE -1)
                    (("" (NAME "DRL1" "X * (X + Y * i) - Y * i * (X + Y * i)")
                      (("" (REPLACE -1)
                        (("" (REWRITE "Re_real" 1)
                          (("1" (REWRITE "Im_real" 1)
                            (("1" (REWRITE "zero_times1" 1)
                              (("1" (REWRITE "zero_times1" 1)
                                (("1" (REWRITE "sq.sq_rew" 1)
                                  (("1" (REWRITE "sqrt.sq_sqrt") NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE -2 2)
                            (("2" (REWRITE "sq.sq_rew")
                              (("2" (REWRITE "sq.sq_rew")
                                (("2" (REWRITE "associative_mult" -1 :DIR RL)
                                  (("2" (REWRITE "i_axiom")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sqrt_square| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL))
   NIL)
  (|abs_abs-1| |nil| 3297714813
   ("" (SKOSIMP)
    (("" (TYPEPRED "abs(z!1)")
      (("" (EXPAND "abs")
        (("" (EXPAND "conjugate")
          (("" (LEMMA "complex_is_Re_Im" ("z" "z!1"))
            (("" (NAME-REPLACE "X" "Re(z!1)")
              (("" (NAME-REPLACE "Y" "Im(z!1)")
                (("" (REPLACE -1)
                  (("" (HIDE -1)
                    (("" (NAME "DRL1" "X * (X + Y * i) - Y * i * (X + Y * i)")
                      (("" (REPLACE -1)
                        (("" (REWRITE "Re_real" 1)
                          (("1" (REWRITE "Im_real" 1)
                            (("1" (REWRITE "zero_times1" 1)
                              (("1" (REWRITE "zero_times1" 1)
                                (("1" (REWRITE "sq_rew" 1)
                                  (("1" (REWRITE "sq_sqrt" 1) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE -2 2)
                            (("2" (REWRITE "sq_rew")
                              (("2" (REWRITE "sq_rew")
                                (("2" (REWRITE "associative_mult" -1 :DIR RL)
                                  (("2" (REWRITE "i_axiom")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sqrt_square| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK))
 (|abs_i| 0
  (|abs_i-1| |nil| 3385194591
   ("" (EXPAND "abs")
    (("" (EXPAND "conjugate")
      (("" (LEMMA "Re_imag" ("x" "1"))
        (("" (LEMMA "Im_imag" ("x" "1"))
          (("" (REWRITE "identity_mult")
            (("" (REPLACE -1)
              (("" (REPLACE -2)
                (("" (REWRITE "zero_times1")
                  (("" (REWRITE "identity_mult")
                    (("" (REWRITE "i_axiom") (("" (REWRITE "sqrt_1") NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|Im_imag| FORMULA-DECL NIL |arithmetic| NIL)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re_imag| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK))
 (|arg_TCC1| 0
  (|arg_TCC1-1| |nil| 3294311190 ("" (SKOSIMP) (("" (ASSERT) NIL NIL)) NIL)
   ((|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK
   (|arg| SUBTYPE "complex_types.Im(polar.z)"
    "{z_1: reals.real | booleans.=>(complex_types.Re(polar.z) = 0, z_1 /= 0)}")))
 (|arg_TCC2| 0
  (|arg_TCC2-1| |nil| 3294311658
   ("" (SKOSIMP*)
    (("" (LEMMA "atan2_ge_0_lt_2pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
      (("" (SPLIT -1)
        (("1" (FLATTEN)
          (("1" (ASSERT)
            (("1" (LEMMA "trichotomy" ("x" "Re(z!1)"))
              (("1" (SPLIT -1)
                (("1" (LEMMA "atan2_quad4" ("x" "Re(z!1)" "y" "Im(z!1)"))
                  (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (LEMMA "atan2_is_3pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
                  (("2" (ASSERT) NIL NIL)) NIL)
                 ("3" (LEMMA "atan2_quad3" ("x" "Re(z!1)" "y" "Im(z!1)"))
                  (("3" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|atan2_quad3| FORMULA-DECL NIL |atan2_props| |trig|)
    (|atan2_is_3pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|atan2_quad4| FORMULA-DECL NIL |atan2_props| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK
   (|arg| SUBTYPE
    "(number_fields.-)(atan2.atan2(complex_types.Re(polar.z), complex_types.Im(polar.z)), number_fields.*(2, pi_def.pi))"
    "argrng")))
 (|arg_TCC3| 0
  (|arg_TCC3-2| "" 3790100317
   ("" (SKOSIMP)
    (("" (LEMMA "atan2_ge_0_lt_2pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
      (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1")) (("" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK
   (|arg| SUBTYPE "complex_types.Im(polar.z)"
    "{z_1: reals.real | booleans.=>(complex_types.Re(polar.z) = 0, z_1 /= 0)}"))
  (|arg_TCC3-1| |nil| 3294839112
   ("" (SKOSIMP)
    (("" (LEMMA "atan2_ge_0_lt_2pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
      (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
        (("" (ASSERT) (("" (REPLACE -1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK
   (|arg| SUBTYPE "complex_types.Im(polar.z)"
    "{z_1: reals.real | booleans.=>(complex_types.Re(polar.z) = 0, z_1 /= 0)}")))
 (|arg_TCC4| 0
  (|arg_TCC4-2| "" 3790100317
   ("" (SKOSIMP)
    (("" (LEMMA "atan2_is_0" ("x" "Re(z!1)" "y" "Im(z!1)"))
      (("1" (LEMMA "atan2_is_pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
        (("1" (LEMMA "atan2_is_pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
          (("1" (LEMMA "atan2_quad1" ("x" "Re(z!1)" "y" "Im(z!1)"))
            (("1" (LEMMA "atan2_quad2" ("x" "Re(z!1)" "y" "Im(z!1)"))
              (("1" (ASSERT)
                (("1" (CASE-REPLACE "Im(z!1)=0")
                  (("1" (ASSERT)
                    (("1" (LEMMA "trichotomy" ("x" "Re(z!1)"))
                      (("1" (SPLIT -1)
                        (("1" (PROPAX) NIL NIL)
                         ("2" (REPLACE -1)
                          (("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL)
                         ("3" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (ASSERT)
        (("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
          (("2" (ASSERT)
            (("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|atan2_is_0| FORMULA-DECL NIL |atan2_props| |trig|)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|atan2_is_pi| FORMULA-DECL NIL |atan2_props| |trig|)
    (|atan2_quad2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|atan2_quad1| FORMULA-DECL NIL |atan2_props| |trig|)
    (|atan2_is_pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK
   (|arg| SUBTYPE
    "atan2.atan2(complex_types.Re(polar.z), complex_types.Im(polar.z))"
    "argrng"))
  (|arg_TCC4-1| |nil| 3297458289
   ("" (SKOSIMP)
    (("" (LEMMA "atan2_is_0" ("x" "Re(z!1)" "y" "Im(z!1)"))
      (("1" (LEMMA "atan2_is_pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
        (("1" (LEMMA "atan2_is_pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
          (("1" (LEMMA "atan2_quad1" ("x" "Re(z!1)" "y" "Im(z!1)"))
            (("1" (LEMMA "atan2_quad2" ("x" "Re(z!1)" "y" "Im(z!1)"))
              (("1" (ASSERT)
                (("1" (CASE-REPLACE "Im(z!1)=0")
                  (("1" (ASSERT)
                    (("1" (LEMMA "trichotomy" ("x" "Re(z!1)"))
                      (("1" (SPLIT -1)
                        (("1" (ASSERT) NIL NIL)
                         ("2" (ASSERT)
                          (("2" (REPLACE -1)
                            (("2" (ASSERT)
                              (("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (LEMMA "trichotomy" ("x" "Re(z!1)"))
                      (("2" (SPLIT -1)
                        (("1" (ASSERT)
                          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                         ("2" (ASSERT) NIL NIL)
                         ("3" (ASSERT)
                          (("3" (FLATTEN) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (ASSERT)
        (("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
          (("2" (ASSERT)
            (("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|atan2_is_0| FORMULA-DECL NIL |atan2_props| |trig|)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|atan2_is_pi| FORMULA-DECL NIL |atan2_props| |trig|)
    (|atan2_quad2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|atan2_quad1| FORMULA-DECL NIL |atan2_props| |trig|)
    (|atan2_is_pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK
   (|arg| SUBTYPE
    "atan2.atan2(complex_types.Re(polar.z), complex_types.Im(polar.z))"
    "argrng")))
 (|arg_is_0_nz| 0
  (|arg_is_0_nz-1| |nil| 3295019855
   ("" (SKOSIMP*)
    (("" (TYPEPRED "arg(n0z!1)")
      (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "n0z!1"))
        (("" (ASSERT)
          (("" (LEMMA "atan2_is_0" ("x" "Re(n0z!1)" "y" "Im(n0z!1)"))
            (("1" (CASE-REPLACE "Re(n0z!1) > 0 AND Im(n0z!1) = 0")
              (("1" (FLATTEN)
                (("1" (REPLACE -2)
                  (("1" (EXPAND "arg") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (REPLACE 1)
                (("2" (FLATTEN)
                  (("2" (SPLIT 3)
                    (("1" (EXPAND "arg")
                      (("1" (CASE-REPLACE "Im(n0z!1) < 0")
                        (("1"
                          (LEMMA "atan2_ge_0_lt_2pi"
                           ("x" "Re(n0z!1)" "y" "Im(n0z!1)"))
                          (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL)
                     ("2" (PROPAX) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|atan2_is_0| FORMULA-DECL NIL |atan2_props| |trig|)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_is_0| 0
  (|arg_is_0-1| |nil| 3295013793
   ("" (SKOSIMP)
    (("" (CASE-REPLACE "z!1=0")
      (("1" (EXPAND "arg")
        (("1" (REWRITE "Re_real")
          (("1" (REWRITE "Im_real") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL)
       ("2" (LEMMA "arg_is_0_nz" ("n0z" "z!1"))
        (("1" (CASE-REPLACE "arg(z!1) = 0")
          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (REPLACE 1)
            (("2" (FLATTEN)
              (("2" (ASSERT)
                (("2" (FLATTEN)
                  (("2" (EXPAND ">=")
                    (("2" (EXPAND "<=")
                      (("2" (SPLIT -1)
                        (("1" (ASSERT) NIL NIL)
                         ("2" (REPLACE -1 * RL)
                          (("2" (LEMMA "complex_is_Re_Im" ("z" "z!1"))
                            (("2" (REPLACE -2 * RL)
                              (("2" (REPLACE -3)
                                (("2" (ASSERT)
                                  (("2" (REWRITE "zero_times1") NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_is_pi2| 0
  (|arg_is_pi2-2| "" 3790100320
   ("" (SKOSIMP)
    (("" (TYPEPRED "arg(z!1)")
      (("" (EXPAND "arg")
        (("" (CASE-REPLACE "z!1=0")
          (("1" (REWRITE "Im_real") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (ASSERT)
            (("2" (CASE-REPLACE "Im(z!1) < 0")
              (("1" (LEMMA "atan2_ge_0_lt_2pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
                (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (ASSERT)
                (("2" (LEMMA "atan2_is_pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
                  (("2" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|atan2_is_pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK)
  (|arg_is_pi2-1| |nil| 3295019935
   ("" (SKOSIMP)
    (("" (TYPEPRED "arg(z!1)")
      (("" (EXPAND "arg")
        (("" (CASE-REPLACE "z!1=0")
          (("1" (REWRITE "Im_real") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (ASSERT)
            (("2" (CASE-REPLACE "Im(z!1) < 0")
              (("1" (LEMMA "atan2_ge_0_lt_2pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
                (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (ASSERT)
                (("2" (LEMMA "atan2_is_pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
                  (("1" (PROPAX) NIL NIL)
                   ("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
                    (("2" (ASSERT)
                      (("2" (SPLIT -1)
                        (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|atan2_is_pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_is_pi| 0
  (|arg_is_pi-1| |nil| 3295019473
   ("" (SKOSIMP)
    (("" (CASE-REPLACE "z!1=0")
      (("1" (EXPAND "arg")
        (("1" (REWRITE "Re_real") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
        (("2" (ASSERT)
          (("2" (TYPEPRED "arg(z!1)")
            (("2" (LEMMA "atan2_is_pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
              (("1" (LEMMA "atan2_ge_0_lt_2pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
                (("1" (REPLACE -5 -1)
                  (("1" (FLATTEN -1)
                    (("1" (EXPAND "arg")
                      (("1" (CASE-REPLACE "Im(z!1) < 0")
                        (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SPLIT -3) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|atan2_is_pi| FORMULA-DECL NIL |atan2_props| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_is_mpi2| 0
  (|arg_is_mpi2-2| "" 3790100321
   ("" (SKOSIMP)
    (("" (CASE-REPLACE "z!1=0")
      (("1" (EXPAND "arg")
        (("1" (REWRITE "Im_real") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (TYPEPRED "arg(z!1)")
        (("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
          (("2" (ASSERT)
            (("2" (LEMMA "atan2_ge_0_lt_2pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
              (("2" (REPLACE -2 -1)
                (("2" (FLATTEN -1)
                  (("2" (EXPAND "arg")
                    (("2" (LEMMA "atan2_is_3pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
                      (("2" (CASE-REPLACE "Im(z!1) < 0")
                        (("1" (CASE-REPLACE "Re(z!1)=0")
                          (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|atan2_is_3pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK)
  (|arg_is_mpi2-1| |nil| 3297511933
   ("" (SKOSIMP)
    (("" (CASE-REPLACE "z!1=0")
      (("1" (EXPAND "arg")
        (("1" (REWRITE "Im_real") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (TYPEPRED "arg(z!1)")
        (("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
          (("2" (ASSERT)
            (("2" (LEMMA "atan2_ge_0_lt_2pi" ("x" "Re(z!1)" "y" "Im(z!1)"))
              (("2" (REPLACE -2 -1)
                (("2" (FLATTEN -1)
                  (("2" (EXPAND "arg")
                    (("2" (LEMMA "atan2_is_3pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
                      (("1" (CASE-REPLACE "Im(z!1) < 0")
                        (("1" (CASE-REPLACE "Re(z!1)=0")
                          (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL)
                       ("2" (SPLIT -3)
                        (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|atan2_is_3pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_lt_0| 0
  (|arg_lt_0-2| "" 3790100321
   ("" (SKOSIMP)
    (("" (TYPEPRED "arg(z!1)")
      (("" (EXPAND "arg")
        (("" (CASE-REPLACE "z!1=0")
          (("1" (REWRITE "Im_real") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (ASSERT)
            (("2" (LEMMA "atan2_is_3pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
              (("1" (LEMMA "atan2_quad3" ("x" "Re(z!1)" "y" "Im(z!1)"))
                (("1" (LEMMA "atan2_quad4" ("x" "Re(z!1)" "y" "Im(z!1)"))
                  (("1" (CASE-REPLACE "Im(z!1) < 0")
                    (("1" (LEMMA "trichotomy" ("x" "Re(z!1)"))
                      (("1" (SPLIT -1)
                        (("1" (ASSERT) NIL NIL)
                         ("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)
                         ("3" (ASSERT) NIL NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
                (("2" (ASSERT)
                  (("2" (SPLIT -1)
                    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|atan2_is_3pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|atan2_quad4| FORMULA-DECL NIL |atan2_props| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|atan2_quad3| FORMULA-DECL NIL |atan2_props| |trig|)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK)
  (|arg_lt_0-1| |nil| 3297512359
   ("" (SKOSIMP)
    (("" (TYPEPRED "arg(z!1)")
      (("" (EXPAND "arg")
        (("" (CASE-REPLACE "z!1=0")
          (("1" (REWRITE "Im_real") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (ASSERT)
            (("2" (LEMMA "atan2_is_3pi2" ("x" "Re(z!1)" "y" "Im(z!1)"))
              (("1" (LEMMA "atan2_quad3" ("x" "Re(z!1)" "y" "Im(z!1)"))
                (("1" (LEMMA "atan2_quad4" ("x" "Re(z!1)" "y" "Im(z!1)"))
                  (("1" (CASE-REPLACE "Im(z!1) < 0")
                    (("1" (LEMMA "trichotomy" ("x" "Re(z!1)"))
                      (("1" (SPLIT -1)
                        (("1" (ASSERT)
                          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                         ("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)
                         ("3" (ASSERT) NIL NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (HIDE 2 3 4)
                        (("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
                          (("2" (ASSERT)
                            (("2"
                              (LEMMA "atan2_ge_0_lt_2pi"
                               ("x" "Re(z!1)" "y" "Im(z!1)"))
                              (("2" (REPLACE -2 -1)
                                (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
                (("2" (ASSERT)
                  (("2" (SPLIT -1)
                    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|atan2_is_3pi2| FORMULA-DECL NIL |atan2_props| |trig|)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|atan2_quad4| FORMULA-DECL NIL |atan2_props| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|atan2_quad3| FORMULA-DECL NIL |atan2_props| |trig|)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_p_lt_pi| 0
  (|arg_p_lt_pi-1| |nil| 3297607614
   ("" (SKOSIMP*)
    (("" (CASE-REPLACE "z!1=0")
      (("1" (EXPAND "arg")
        (("1" (REWRITE "Im_real") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (TYPEPRED "arg(z!1)")
        (("2" (EXPAND "<=")
          (("2" (SPLIT -2)
            (("1" (REPLACE -1)
              (("1" (LEMMA "trichotomy" ("x" "arg(z!1)"))
                (("1" (SPLIT -1)
                  (("1" (HIDE -3)
                    (("1" (LEMMA "complex_is_ne_0_Re_Im" ("z" "z!1"))
                      (("1" (ASSERT)
                        (("1" (EXPAND "arg")
                          (("1"
                            (LEMMA "atan2_ge_0_lt_2pi"
                             ("x" "Re(z!1)" "y" "Im(z!1)"))
                            (("1" (REPLACE -2)
                              (("1" (FLATTEN)
                                (("1" (LEMMA "trichotomy" ("x" "Im(z!1)"))
                                  (("1" (SPLIT -1)
                                    (("1" (PROPAX) NIL NIL)
                                     ("2" (ASSERT)
                                      (("2" (REPLACE -1)
                                        (("2" (EXPAND "atan2")
                                          (("2" (REWRITE "atan_0")
                                            (("2" (CASE "Re(z!1)>0")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (LEMMA "arg_is_0_nz" ("n0z" "z!1"))
                    (("1" (ASSERT)
                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL)
                   ("3" (LEMMA "arg_lt_0" ("z" "z!1")) (("3" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (REPLACE -1)
              (("2" (LEMMA "arg_is_pi" ("z" "z!1"))
                (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|atan_0| FORMULA-DECL NIL |atan| |trig|)
    (|atan2_ge_0_lt_2pi| FORMULA-DECL NIL |atan2| |trig|)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_gt_0| 0
  (|arg_gt_0-1| |nil| 3297512850
   ("" (SKOSIMP*)
    (("" (TYPEPRED "arg(z!1)")
      (("" (EXPAND "<=")
        (("" (LEMMA "arg_p_lt_pi" ("z" "z!1"))
          (("" (LEMMA "arg_is_pi" ("z" "z!1"))
            (("" (SPLIT 1)
              (("1" (FLATTEN 1)
                (("1" (SPLIT -5)
                  (("1" (ASSERT) NIL NIL)
                   ("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN 1)
                (("2" (SPLIT -1)
                  (("1" (ASSERT) NIL NIL)
                   ("2" (FLATTEN -1) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_div_abs| 0
  (|arg_div_abs-2| "" 3790100323
   ("" (SKOSIMP)
    (("" (LEMMA "abs_nz_iff_nz" ("z" "n0x!1"))
      (("" (ASSERT)
        (("" (EXPAND "arg")
          (("" (LEMMA "Im_div" ("z" "n0x!1" "n0z" "abs(n0x!1)"))
            (("" (TYPEPRED "abs(n0x!1)")
              (("" (LEMMA "Re_real" ("x" "abs(n0x!1)"))
                (("" (LEMMA "Im_real" ("x" "abs(n0x!1)"))
                  (("" (REPLACE -1)
                    (("" (EXPAND "conjugate")
                      (("" (REPLACE -1)
                        (("" (REPLACE -2)
                          (("" (REWRITE "zero_times1" -4)
                            (("" (REWRITE "zero_times1" -4)
                              ((""
                                (LEMMA "div_times"
                                 ("x" "Im(n0x!1)" "y" "abs(n0x!1)" "n0x"
                                  "abs(n0x!1)" "n0y" "abs(n0x!1)"))
                                (("" (REWRITE "div_simp" -1)
                                  (("" (REPLACE -1 -5 RL)
                                    (("" (HIDE -1)
                                      ((""
                                        (REWRITE
                                         "number_fields_right_identity_mult")
                                        (("" (REPLACE -4)
                                          ((""
                                            (LEMMA "Re_div"
                                             ("z" "n0x!1" "n0z" "abs(n0x!1)"))
                                            (("" (EXPAND "conjugate")
                                              (("" (REPLACE -2)
                                                (("" (REPLACE -3)
                                                  (("" (ASSERT)
                                                    ((""
                                                      (LEMMA "div_times"
                                                       ("x" "Re(n0x!1)" "y"
                                                        "abs(n0x!1)" "n0x"
                                                        "abs(n0x!1)" "n0y"
                                                        "abs(n0x!1)"))
                                                      (("" (REWRITE "div_simp")
                                                        ((""
                                                          (REWRITE
                                                           "number_fields_right_identity_mult")
                                                          (("" (REPLACE -1)
                                                            ((""
                                                              (LEMMA
                                                               "complex_is_ne_0_Re_Im"
                                                               ("z" "n0x!1"))
                                                              ((""
                                                                (LEMMA
                                                                 "atan2_cancel_pos"
                                                                 ("x"
                                                                  "Re(n0x!1)"
                                                                  "y"
                                                                  "Im(n0x!1)"
                                                                  "pz"
                                                                  "1/abs(n0x!1)"))
                                                                (("1"
                                                                  (SIMPLIFY -2)
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             -1)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -1 1)
                                                                      (("1"
                                                                        (REWRITE
                                                                         "div_mult_pos_lt1"
                                                                         1)
                                                                        (("1"
                                                                          (CASE-REPLACE
                                                                           "Im(n0x!1) < 0")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (LEMMA
                                                                   "posreal_div_posreal_is_posreal"
                                                                   ("px" "1"
                                                                    "py"
                                                                    "abs(n0x!1)"))
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|div_simp| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|atan2_cancel_pos| FORMULA-DECL NIL |atan2| |trig|)
    (|complex_div_nzcomplex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Re_div| FORMULA-DECL NIL |arithmetic| NIL)
    (|number_fields_right_identity_mult| FORMULA-DECL NIL |number_fields_bis|
     NIL)
    (|div_times| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im_div| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL))
   SHOSTAK)
  (|arg_div_abs-1| |nil| 3297701781
   ("" (SKOSIMP)
    (("" (LEMMA "abs_nz_iff_nz" ("z" "n0x!1"))
      (("" (ASSERT)
        (("" (EXPAND "arg")
          (("" (LEMMA "Im_div" ("z" "n0x!1" "n0z" "abs(n0x!1)"))
            (("1" (TYPEPRED "abs(n0x!1)")
              (("1" (LEMMA "Re_real" ("x" "abs(n0x!1)"))
                (("1" (LEMMA "Im_real" ("x" "abs(n0x!1)"))
                  (("1" (REPLACE -1)
                    (("1" (EXPAND "conjugate")
                      (("1" (REPLACE -1)
                        (("1" (REPLACE -2)
                          (("1" (REWRITE "zero_times1" -4)
                            (("1" (REWRITE "zero_times1" -4)
                              (("1"
                                (LEMMA "div_times"
                                 ("x" "Im(n0x!1)" "y" "abs(n0x!1)" "n0x"
                                  "abs(n0x!1)" "n0y" "abs(n0x!1)"))
                                (("1" (REWRITE "div_simp" -1)
                                  (("1" (REPLACE -1 -5 RL)
                                    (("1" (HIDE -1)
                                      (("1"
                                        (REWRITE
                                         "number_fields_right_identity_mult")
                                        (("1" (REPLACE -4)
                                          (("1"
                                            (LEMMA "Re_div"
                                             ("z" "n0x!1" "n0z" "abs(n0x!1)"))
                                            (("1" (EXPAND "conjugate")
                                              (("1" (REPLACE -2)
                                                (("1" (REPLACE -3)
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (LEMMA "div_times"
                                                       ("x" "Re(n0x!1)" "y"
                                                        "abs(n0x!1)" "n0x"
                                                        "abs(n0x!1)" "n0y"
                                                        "abs(n0x!1)"))
                                                      (("1"
                                                        (REWRITE "div_simp")
                                                        (("1"
                                                          (REWRITE
                                                           "number_fields_right_identity_mult")
                                                          (("1" (REPLACE -1)
                                                            (("1"
                                                              (LEMMA
                                                               "complex_is_ne_0_Re_Im"
                                                               ("z" "n0x!1"))
                                                              (("1"
                                                                (LEMMA
                                                                 "atan2_cancel_pos"
                                                                 ("x"
                                                                  "Re(n0x!1)"
                                                                  "y"
                                                                  "Im(n0x!1)"
                                                                  "pz"
                                                                  "1/abs(n0x!1)"))
                                                                (("1"
                                                                  (SIMPLIFY -2)
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             -1)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -1 1)
                                                                      (("1"
                                                                        (REWRITE
                                                                         "div_mult_pos_lt1"
                                                                         1)
                                                                        (("1"
                                                                          (CASE-REPLACE
                                                                           "Im(n0x!1) < 0")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (LEMMA
                                                                   "posreal_div_posreal_is_posreal"
                                                                   ("px" "1"
                                                                    "py"
                                                                    "abs(n0x!1)"))
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "real_is_complex" ("x" "abs(n0x!1)"))
              (("2" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|div_simp| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|atan2_cancel_pos| FORMULA-DECL NIL |atan2| |trig|)
    (|complex_div_nzcomplex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Re_div| FORMULA-DECL NIL |arithmetic| NIL)
    (|number_fields_right_identity_mult| FORMULA-DECL NIL |number_fields_bis|
     NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|div_times| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|zero_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im_div| FORMULA-DECL NIL |arithmetic| NIL)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|))
   SHOSTAK))
 (|Re_cos_abs1| 0
  (|Re_cos_abs1-2| |nil| 3307887108
   ("" (SKOSIMP*)
    (("" (EXPAND "arg")
      (("" (EXPAND "abs")
        (("" (EXPAND "conjugate")
          (("" (LEMMA "complex_is_Re_Im" ("z" "n0x!1"))
            (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "n0x!1"))
              (("" (SIMPLIFY -1)
                (("" (NAME-REPLACE "X" "Re(n0x!1)")
                  (("" (NAME-REPLACE "Y" "Im(n0x!1)")
                    (("" (REPLACE -2)
                      (("" (SIMPLIFY -3)
                        (("" (REWRITE "reals@sq_rew")
                          (("" (REWRITE "reals@sq_rew")
                            (("" (REWRITE "associative_mult" -3 :DIR RL)
                              (("" (REWRITE "i_axiom")
                                (("" (SIMPLIFY -3)
                                  ((""
                                    (LEMMA "cos_period"
                                     ("a" "atan2(X,Y)" "j" "-1"))
                                    (("1" (REPLACE -1 1 RL)
                                      (("1"
                                        (LEMMA "cos_atan2" ("x" "X" "y" "Y"))
                                        (("1" (REPLACE -3 -1)
                                          (("1" (CASE-REPLACE "X=0")
                                            (("1" (REPLACE -2)
                                              (("1" (CASE-REPLACE "Y<0")
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (ASSERT)
                                              (("2" (REPLACE -1 2)
                                                (("2"
                                                  (CASE-REPLACE
                                                   "1 + reals@sq(Y / X) = 1/reals@sq(X)")
                                                  (("1" (HIDE -1)
                                                    (("1" (HIDE -1)
                                                      (("1"
                                                        (CASE "reals@sq(X)>0")
                                                        (("1"
                                                          (REWRITE "sqrt_div")
                                                          (("1"
                                                            (CASE-REPLACE
                                                             "X>0")
                                                            (("1"
                                                              (REWRITE
                                                               "sqrt.sqrt_sq")
                                                              NIL NIL)
                                                             ("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (LEMMA
                                                           "reals@sq_nz_pos"
                                                           ("nz" "X"))
                                                          (("2" (PROPAX) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (REWRITE "reals@sq_div" 1)
                                                    (("2"
                                                      (LEMMA "add_div"
                                                       ("x" "1" "n0x" "1" "y"
                                                        "reals@sq(Y)" "n0y"
                                                        "reals@sq(X)"))
                                                      (("2" (REPLACE -1 1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3"
                                                    (LEMMA "reals@sq_eq_0"
                                                     ("a" "X"))
                                                    (("3" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sq_nz_pos| JUDGEMENT-TCC NIL |sq| |reals|)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|)
    (|add_div| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (|sq_eq_0| FORMULA-DECL NIL |sq| |reals|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|cos_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|cos_period| FORMULA-DECL NIL |sincos| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   NIL)
  (|Re_cos_abs1-1| |nil| 3297716468
   ("" (SKOSIMP*)
    (("" (EXPAND "arg")
      (("" (EXPAND "abs")
        (("" (EXPAND "conjugate")
          (("" (LEMMA "complex_is_Re_Im" ("z" "n0x!1"))
            (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "n0x!1"))
              (("" (SIMPLIFY -1)
                (("" (NAME-REPLACE "X" "Re(n0x!1)")
                  (("" (NAME-REPLACE "Y" "Im(n0x!1)")
                    (("" (REPLACE -2)
                      (("" (SIMPLIFY -3)
                        (("" (REWRITE "sq_rew")
                          (("" (REWRITE "sq_rew")
                            (("" (REWRITE "associative_mult" -3 :DIR RL)
                              (("" (REWRITE "i_axiom")
                                (("" (SIMPLIFY -3)
                                  ((""
                                    (LEMMA "cos_period"
                                     ("a" "atan2(X,Y)" "j" "-1"))
                                    (("1" (REPLACE -1 1 RL)
                                      (("1"
                                        (LEMMA "cos_atan2" ("x" "X" "y" "Y"))
                                        (("1" (REPLACE -3 -1)
                                          (("1" (CASE-REPLACE "X=0")
                                            (("1" (REPLACE -2)
                                              (("1" (CASE-REPLACE "Y<0")
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (ASSERT)
                                              (("2" (REPLACE -1 2)
                                                (("2"
                                                  (LEMMA "sq_eq"
                                                   ("nna" "sqrt(sq(X)+sq(Y))"
                                                    "nnb" "1"))
                                                  (("2" (REWRITE "sq_1")
                                                    (("2" (REWRITE "sq_sqrt")
                                                      (("2" (REPLACE -5 -1)
                                                        (("2" (FLATTEN -1)
                                                          (("2"
                                                            (CASE-REPLACE
                                                             "1 + sq(Y / X) = 1/sq(X)")
                                                            (("1" (HIDE -1)
                                                              (("1"
                                                                (CASE
                                                                    "sq(X)>0")
                                                                (("1"
                                                                  (REWRITE
                                                                   "sqrt_div")
                                                                  (("1"
                                                                    (CASE-REPLACE
                                                                     "X>0")
                                                                    (("1"
                                                                      (REWRITE
                                                                       "sqrt_sq")
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (LEMMA
                                                                   "sq_nz_pos"
                                                                   ("nz" "X"))
                                                                  (("2"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (REWRITE "sq_div"
                                                               1)
                                                              (("2"
                                                                (LEMMA
                                                                 "add_div"
                                                                 ("x" "1" "n0x"
                                                                  "1" "y"
                                                                  "sq(Y)" "n0y"
                                                                  "sq(X)"))
                                                                (("1"
                                                                  (REPLACE -2
                                                                           -1)
                                                                  (("1"
                                                                    (REPLACE -1
                                                                             1)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (LEMMA
                                                                   "sq_eq_0"
                                                                   ("a" "X"))
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3" (EXPAND "sq")
                                                              (("3"
                                                                (LEMMA
                                                                 "sq_eq_0"
                                                                 ("a" "X"))
                                                                (("3"
                                                                  (EXPAND "sq")
                                                                  (("3"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_eq| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (|sq_eq_0| FORMULA-DECL NIL |sq| |reals|)
    (|add_div| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_nz_pos| JUDGEMENT-TCC NIL |sq| |reals|)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_1| FORMULA-DECL NIL |sq| |reals|)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|cos_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|Im_sin_abs1| 0
  (|Im_sin_abs1-2| |nil| 3307887538
   ("" (SKOSIMP)
    (("" (EXPAND "arg")
      (("" (EXPAND "abs")
        (("" (EXPAND "conjugate")
          (("" (LEMMA "complex_is_Re_Im" ("z" "n0x!1"))
            (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "n0x!1"))
              (("" (SIMPLIFY -1)
                (("" (NAME-REPLACE "X" "Re(n0x!1)")
                  (("" (NAME-REPLACE "Y" "Im(n0x!1)")
                    (("" (REPLACE -2)
                      (("" (SIMPLIFY -3)
                        (("" (REWRITE "reals@sq_rew")
                          (("" (REWRITE "reals@sq_rew")
                            (("" (REWRITE "associative_mult" -3 :DIR RL)
                              (("" (REWRITE "i_axiom")
                                (("" (SIMPLIFY -3)
                                  ((""
                                    (LEMMA "sin_period"
                                     ("a" "atan2(X,Y)" "j" "-1"))
                                    (("1" (REPLACE -1 1 RL)
                                      (("1"
                                        (LEMMA "sin_atan2" ("x" "X" "y" "Y"))
                                        (("1" (REPLACE -3 -1)
                                          (("1" (CASE-REPLACE "X=0")
                                            (("1" (REPLACE -2)
                                              (("1" (CASE-REPLACE "Y<0")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2" (LEMMA "reals@sq_neg")
                                                  (("2" (INST - "Y")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT)
                                              (("2" (REPLACE -1 2)
                                                (("2" (HIDE -1)
                                                  (("2"
                                                    (LEMMA "reals@sq_eq"
                                                     ("nna"
                                                      "sqrt(reals@sq(X)+reals@sq(Y))"
                                                      "nnb" "1"))
                                                    (("2"
                                                      (REWRITE "reals@sq_1")
                                                      (("2"
                                                        (REWRITE
                                                         "sqrt.sq_sqrt")
                                                        (("2" (REPLACE -4 -1)
                                                          (("2" (FLATTEN -1)
                                                            (("2"
                                                              (LEMMA
                                                               "reals@sq_nz_pos"
                                                               ("nz" "X"))
                                                              (("2"
                                                                (CASE-REPLACE
                                                                 "1 + reals@sq(Y / X) = 1/reals@sq(X)")
                                                                (("1"
                                                                  (CASE-REPLACE
                                                                   "X>0")
                                                                  (("1"
                                                                    (REWRITE
                                                                     "sqrt.sqrt_div"
                                                                     2)
                                                                    (("1"
                                                                      (REWRITE
                                                                       "sqrt.sqrt_sq")
                                                                      (("1"
                                                                        (REWRITE
                                                                         "div_div2")
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "reals@sq_neg")
                                                                      (("2"
                                                                        (INST -
                                                                         "X")
                                                                        (("2"
                                                                          (REPLACE
                                                                           -1 3
                                                                           RL)
                                                                          (("2"
                                                                            (REWRITE
                                                                             "sqrt.sqrt_div"
                                                                             3)
                                                                            (("2"
                                                                              (REWRITE
                                                                               "div_div1"
                                                                               3)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (LEMMA
                                                                   "add_div"
                                                                   ("x" "1"
                                                                    "n0x" "1"
                                                                    "y"
                                                                    "reals@sq(X)"
                                                                    "n0y"
                                                                    "reals@sq(Y)"))
                                                                  (("1"
                                                                    (REPLACE
                                                                     -3)
                                                                    (("1"
                                                                      (REWRITE
                                                                       "reals@sq_div"
                                                                       1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (EXPAND
                                                                     "/=" 1)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "reals@sq_eq_0"
                                                                       ("a"
                                                                        "Y"))
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("3" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sq_1| FORMULA-DECL NIL |sq| |reals|)
    (|sq_nz_pos| JUDGEMENT-TCC NIL |sq| |reals|)
    (|add_div| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (|sq_eq_0| FORMULA-DECL NIL |sq| |reals|)
    (|div_div2| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|div_div1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_eq| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sq_neg| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sin_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|sin_period| FORMULA-DECL NIL |sincos| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   NIL)
  (|Im_sin_abs1-1| |nil| 3297722477
   ("" (SKOSIMP)
    (("" (EXPAND "arg")
      (("" (EXPAND "abs")
        (("" (EXPAND "conjugate")
          (("" (LEMMA "complex_is_Re_Im" ("z" "n0x!1"))
            (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "n0x!1"))
              (("" (SIMPLIFY -1)
                (("" (NAME-REPLACE "X" "Re(n0x!1)")
                  (("" (NAME-REPLACE "Y" "Im(n0x!1)")
                    (("" (REPLACE -2)
                      (("" (SIMPLIFY -3)
                        (("" (REWRITE "sq_rew")
                          (("" (REWRITE "sq_rew")
                            (("" (REWRITE "associative_mult" -3 :DIR RL)
                              (("" (REWRITE "i_axiom")
                                (("" (SIMPLIFY -3)
                                  ((""
                                    (LEMMA "sin_period"
                                     ("a" "atan2(X,Y)" "j" "-1"))
                                    (("1" (REPLACE -1 1 RL)
                                      (("1"
                                        (LEMMA "sin_atan2" ("x" "X" "y" "Y"))
                                        (("1" (REPLACE -3 -1)
                                          (("1" (CASE-REPLACE "X=0")
                                            (("1" (REPLACE -2)
                                              (("1" (CASE-REPLACE "Y<0")
                                                (("1" (ASSERT)
                                                  (("1" (LEMMA "sq_neg")
                                                    (("1" (INST - "Y")
                                                      (("1" (REPLACE -1 -8 RL)
                                                        (("1"
                                                          (REWRITE "sqrt_sq"
                                                           -8)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (LEMMA "sqrt_sq")
                                                    (("2" (INST - "Y")
                                                      (("2" (SPLIT -1)
                                                        (("1" (REPLACE -1 -7)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT)
                                              (("2" (REPLACE -1 2)
                                                (("2" (HIDE -1)
                                                  (("2"
                                                    (LEMMA "sq_eq"
                                                     ("nna" "sqrt(sq(X)+sq(Y))"
                                                      "nnb" "1"))
                                                    (("2" (REWRITE "sq_1")
                                                      (("2" (REWRITE "sq_sqrt")
                                                        (("2" (REPLACE -4 -1)
                                                          (("2" (FLATTEN -1)
                                                            (("2"
                                                              (LEMMA
                                                               "sq_nz_pos"
                                                               ("nz" "X"))
                                                              (("2"
                                                                (CASE-REPLACE
                                                                 "1 + sq(Y / X) = 1/sq(X)")
                                                                (("1"
                                                                  (CASE-REPLACE
                                                                   "X>0")
                                                                  (("1"
                                                                    (REWRITE
                                                                     "sqrt_div"
                                                                     2)
                                                                    (("1"
                                                                      (REWRITE
                                                                       "sqrt_sq")
                                                                      (("1"
                                                                        (REWRITE
                                                                         "div_div2")
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "sq_neg")
                                                                      (("2"
                                                                        (INST -
                                                                         "X")
                                                                        (("2"
                                                                          (REPLACE
                                                                           -1 3
                                                                           RL)
                                                                          (("2"
                                                                            (REWRITE
                                                                             "sqrt_div"
                                                                             3)
                                                                            (("2"
                                                                              (REWRITE
                                                                               "div_div1"
                                                                               3)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (LEMMA
                                                                   "add_div"
                                                                   ("x" "1"
                                                                    "n0x" "1"
                                                                    "y" "sq(X)"
                                                                    "n0y"
                                                                    "sq(Y)"))
                                                                  (("1"
                                                                    (REPLACE
                                                                     -3)
                                                                    (("1"
                                                                      (REWRITE
                                                                       "sq_div"
                                                                       1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (EXPAND
                                                                     "/=" 1)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "sq_eq_0"
                                                                       ("a"
                                                                        "Y"))
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("3" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_1| FORMULA-DECL NIL |sq| |reals|)
    (|sq_nz_pos| JUDGEMENT-TCC NIL |sq| |reals|)
    (|add_div| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (|sq_eq_0| FORMULA-DECL NIL |sq| |reals|)
    (|div_div2| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|div_div1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sq_eq| FORMULA-DECL NIL |sq| |reals|)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_neg| FORMULA-DECL NIL |sq| |reals|)
    (|sin_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|arg_nnreal| 0
  (|arg_nnreal-1| |nil| 3385304736
   ("" (SKOSIMP)
    (("" (TYPEPRED "nnx!1")
      (("" (EXPAND "arg")
        (("" (EXPAND ">=")
          (("" (EXPAND "<=")
            (("" (SPLIT -1)
              (("1" (ASSERT)
                (("1" (REWRITE "Im_real")
                  (("1" (REWRITE "Re_real")
                    (("1" (ASSERT)
                      (("1" (EXPAND "atan2") (("1" (REWRITE "atan_0") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|atan_0| FORMULA-DECL NIL |atan| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_nreal| 0
  (|arg_nreal-1| |nil| 3385304815
   ("" (SKOSIMP)
    (("" (TYPEPRED "nx!1")
      (("" (HIDE -1)
        (("" (EXPAND "arg")
          (("" (REWRITE "Im_real")
            (("" (REWRITE "Re_real")
              (("" (ASSERT)
                (("" (EXPAND "atan2") (("" (REWRITE "atan_0") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|atan_0| FORMULA-DECL NIL |atan| |trig|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|))
   SHOSTAK))
 (|arg_i| 0
  (|arg_i-1| |nil| 3385194777
   ("" (LEMMA "arg_is_pi2" ("z" "i"))
    (("" (LEMMA "Re_imag" ("x" "1"))
      (("" (LEMMA "Im_imag" ("x" "1"))
        (("" (REWRITE "identity_mult")
          (("" (REPLACE -1) (("" (REPLACE -2) (("" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Re_imag| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_imag| FORMULA-DECL NIL |arithmetic| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK))
 (|arg_neg| 0
  (|arg_neg-1| |nil| 3297516982
   ("" (SKOLEM 1 ("a"))
    (("" (NAME "AA" "arg(a)")
      (("" (REPLACE -1)
        (("" (CASE-REPLACE "a=0")
          (("1" (ASSERT) NIL NIL)
           ("2" (LEMMA "complex_is_ne_0_Re_Im" ("z" "a"))
            (("2" (ASSERT)
              (("2" (TYPEPRED "arg(a)")
                (("2" (LEMMA "arg_gt_0" ("z" "a"))
                  (("2" (LEMMA "arg_lt_0" ("z" "a"))
                    (("2" (LEMMA "arg_is_0_nz" ("n0z" "a"))
                      (("2" (REPLACE -7)
                        (("2" (CASE-REPLACE "0<AA")
                          (("1" (ASSERT)
                            (("1" (EXPAND "arg")
                              (("1" (REWRITE "Im_neg")
                                (("1" (REWRITE "Re_neg")
                                  (("1"
                                    (LEMMA "atan2_cancel_neg"
                                     ("x" "-Re(a)" "y" "-Im(a)" "nz" "-1"))
                                    (("1" (SPLIT -1)
                                      (("1" (ASSERT)
                                        (("1" (SPLIT -3)
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (ASSERT)
                                            (("2" (FLATTEN)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (SPLIT -2)
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (FLATTEN)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (EXPAND "arg")
                              (("2" (CASE-REPLACE "AA=0")
                                (("1" (ASSERT)
                                  (("1" (REWRITE "Re_neg")
                                    (("1" (REWRITE "Im_neg")
                                      (("1"
                                        (LEMMA "atan2_cancel_neg"
                                         ("x" "-Re(a)" "y" "-Im(a)" "nz" "-1"))
                                        (("1" (ASSERT)
                                          (("1" (SPLIT -1)
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (SPLIT -5)
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2"
                                    (LEMMA "atan2_cancel_neg"
                                     ("x" "-Re(a)" "y" "-Im(a)" "nz" "-1"))
                                    (("2" (REWRITE "Im_neg")
                                      (("2" (REWRITE "Re_neg")
                                        (("2" (SPLIT -1)
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|minus_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_neg| FORMULA-DECL NIL |arithmetic| NIL)
    (|atan2_cancel_neg| FORMULA-DECL NIL |atan2| |trig|)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|Im_neg| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|))
   SHOSTAK))
 (|arg_mult| 0
  (|arg_mult-2| "" 3790100331
   ("" (SKOSIMP*)
    (("" (REWRITE "arg_div_abs")
      (("" (LEMMA "arg_div_abs" ("n0x" "n0x!1"))
        (("" (LEMMA "arg_div_abs" ("n0x" "n0y!1"))
          (("" (REPLACE -1)
            (("" (REPLACE -2)
              (("" (HIDE -1 -2)
                (("" (REWRITE "abs_mult")
                  (("" (REWRITE "div_times" 1 :DIR RL)
                    (("" (NAME "X" "n0x!1 / abs(n0x!1)")
                      (("" (REPLACE -1)
                        (("" (NAME "Y" "n0y!1 / abs(n0y!1)")
                          (("" (REPLACE -1)
                            (("" (LEMMA "Re_cos_abs1" ("n0x" "X"))
                              (("" (LEMMA "Re_cos_abs1" ("n0x" "Y"))
                                (("" (LEMMA "Im_sin_abs1" ("n0x" "X"))
                                  (("" (LEMMA "Im_sin_abs1" ("n0x" "Y"))
                                    (("" (CASE-REPLACE "abs(X)=1")
                                      (("1" (CASE-REPLACE "abs(Y)=1")
                                        (("1"
                                          (LEMMA "abs_mult"
                                           ("z1" "X" "z2" "Y"))
                                          (("1" (REPLACE -2)
                                            (("1" (REPLACE -3)
                                              (("1"
                                                (LEMMA "Re_cos_abs1"
                                                 ("n0x" "X*Y"))
                                                (("1"
                                                  (LEMMA "Im_sin_abs1"
                                                   ("n0x" "X*Y"))
                                                  (("1" (REPLACE -3)
                                                    (("1" (CASE "X/=0")
                                                      (("1" (CASE "Y/=0")
                                                        (("1" (CASE "X*Y/=0")
                                                          (("1"
                                                            (NAME "TH1"
                                                                  "arg(X)")
                                                            (("1"
                                                              (NAME "TH2"
                                                                    "arg(Y)")
                                                              (("1"
                                                                (TYPEPRED
                                                                 "arg(X)")
                                                                (("1"
                                                                  (TYPEPRED
                                                                   "arg(Y)")
                                                                  (("1"
                                                                    (REPLACE
                                                                     -5)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -6)
                                                                      (("1"
                                                                        (LEMMA
                                                                         "Re_times"
                                                                         ("z1"
                                                                          "X"
                                                                          "z2"
                                                                          "Y"))
                                                                        (("1"
                                                                          (LEMMA
                                                                           "Im_times"
                                                                           ("z1"
                                                                            "X"
                                                                            "z2"
                                                                            "Y"))
                                                                          (("1"
                                                                            (REPLACE
                                                                             -17
                                                                             (-1
                                                                              -2))
                                                                            (("1"
                                                                              (REPLACE
                                                                               -18
                                                                               (-1
                                                                                -2))
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -19
                                                                                 (-1
                                                                                  -2))
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -20
                                                                                   (-1
                                                                                    -2))
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "sin_plus"
                                                                                     ("a"
                                                                                      "TH1"
                                                                                      "b"
                                                                                      "TH2"))
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       -2
                                                                                       RL)
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "cos_plus"
                                                                                         ("a"
                                                                                          "TH1"
                                                                                          "b"
                                                                                          "TH2"))
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           -4
                                                                                           RL)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1
                                                                                             -2)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "arg"
                                                                                               1)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -2
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (CASE-REPLACE
                                                                                                     "TH1 + TH2 > pi")
                                                                                                    (("1"
                                                                                                      (CASE-REPLACE
                                                                                                       "TH1+TH2=2*pi")
                                                                                                      (("1"
                                                                                                        (REWRITE
                                                                                                         "sin_2pi")
                                                                                                        (("1"
                                                                                                          (REWRITE
                                                                                                           "cos_2pi")
                                                                                                          (("1"
                                                                                                            (EXPAND
                                                                                                             "atan2")
                                                                                                            (("1"
                                                                                                              (REWRITE
                                                                                                               "atan_0")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (LEMMA
                                                                                                         "sin_lt_0"
                                                                                                         ("a"
                                                                                                          "TH1+TH2"))
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (REWRITE
                                                                                                             "atan2_cos_sin")
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (CASE-REPLACE
                                                                                                       "TH1 + TH2 <= -pi")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (CASE-REPLACE
                                                                                                           "TH1 + TH2 = -pi")
                                                                                                          (("1"
                                                                                                            (REWRITE
                                                                                                             "sin_neg"
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (REWRITE
                                                                                                               "cos_neg"
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (REWRITE
                                                                                                                 "sin_pi")
                                                                                                                (("1"
                                                                                                                  (REWRITE
                                                                                                                   "cos_pi")
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "atan2")
                                                                                                                    (("1"
                                                                                                                      (REWRITE
                                                                                                                       "atan_0")
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (LEMMA
                                                                                                             "sin_gt_0"
                                                                                                             ("a"
                                                                                                              "TH1+TH2+2*pi"))
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (LEMMA
                                                                                                                 "sin_period"
                                                                                                                 ("a"
                                                                                                                  "TH1+TH2"
                                                                                                                  "j"
                                                                                                                  "1"))
                                                                                                                (("2"
                                                                                                                  (LEMMA
                                                                                                                   "cos_period"
                                                                                                                   ("a"
                                                                                                                    "TH1+TH2"
                                                                                                                    "j"
                                                                                                                    "1"))
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (LEMMA
                                                                                                                       "atan2_cos_sin"
                                                                                                                       ("a"
                                                                                                                        "TH1 + TH2 + 2 * pi"))
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (LEMMA
                                                                                                           "trichotomy"
                                                                                                           ("x"
                                                                                                            "TH1+TH2"))
                                                                                                          (("2"
                                                                                                            (SPLIT
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (LEMMA
                                                                                                               "sin_gt_0"
                                                                                                               ("a"
                                                                                                                "TH1+TH2"))
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (CASE-REPLACE
                                                                                                                   "TH1+TH2=pi")
                                                                                                                  (("1"
                                                                                                                    (REWRITE
                                                                                                                     "sin_pi")
                                                                                                                    (("1"
                                                                                                                      (REWRITE
                                                                                                                       "cos_pi")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "atan2")
                                                                                                                        (("1"
                                                                                                                          (REWRITE
                                                                                                                           "atan_0")
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (REWRITE
                                                                                                                       "atan2_cos_sin")
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (REPLACE
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (REWRITE
                                                                                                                 "sin_0")
                                                                                                                (("2"
                                                                                                                  (REWRITE
                                                                                                                   "cos_0")
                                                                                                                  (("2"
                                                                                                                    (EXPAND
                                                                                                                     "atan2")
                                                                                                                    (("2"
                                                                                                                      (REWRITE
                                                                                                                       "atan_0")
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("3"
                                                                                                              (LEMMA
                                                                                                               "sin_lt_0"
                                                                                                               ("a"
                                                                                                                "TH1+TH2+2*pi"))
                                                                                                              (("3"
                                                                                                                (ASSERT)
                                                                                                                (("3"
                                                                                                                  (LEMMA
                                                                                                                   "sin_period"
                                                                                                                   ("a"
                                                                                                                    "TH1+TH2"
                                                                                                                    "j"
                                                                                                                    "1"))
                                                                                                                  (("3"
                                                                                                                    (LEMMA
                                                                                                                     "cos_period"
                                                                                                                     ("a"
                                                                                                                      "TH1+TH2"
                                                                                                                      "j"
                                                                                                                      "1"))
                                                                                                                    (("3"
                                                                                                                      (ASSERT)
                                                                                                                      (("3"
                                                                                                                        (LEMMA
                                                                                                                         "atan2_cos_sin"
                                                                                                                         ("a"
                                                                                                                          "TH1 + TH2 + 2 * pi"))
                                                                                                                        (("3"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (LEMMA
                                                             "abs_nz_iff_nz"
                                                             ("z" "X*Y"))
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (LEMMA
                                                           "abs_nz_iff_nz"
                                                           ("z" "Y"))
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (LEMMA "abs_nz_iff_nz"
                                                         ("z" "X"))
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE-ALL-BUT (-6 1))
                                          (("2" (REPLACE -1 1 RL)
                                            (("2" (REWRITE "abs_div")
                                              (("2" (REWRITE "abs_abs")
                                                (("2" (REWRITE "div_simp") NIL
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE -6 1 RL)
                                        (("2" (HIDE-ALL-BUT 1)
                                          (("2" (REWRITE "abs_div")
                                            (("2" (REWRITE "abs_abs")
                                              (("2" (REWRITE "div_simp") NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|nzcomplex_times_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|div_simp| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|Im_times| FORMULA-DECL NIL |arithmetic| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_period| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_period| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_gt_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|atan_0| FORMULA-DECL NIL |atan| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|sin_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|atan2_cos_sin| FORMULA-DECL NIL |atan2| |trig|)
    (|sin_lt_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|cos_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_times| FORMULA-DECL NIL |arithmetic| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|div_times| FORMULA-DECL NIL |number_fields_bis| NIL))
   SHOSTAK)
  (|arg_mult-1| |nil| 3294697583
   ("" (SKOSIMP*)
    (("" (REWRITE "arg_div_abs")
      (("" (LEMMA "arg_div_abs" ("n0x" "n0x!1"))
        (("" (LEMMA "arg_div_abs" ("n0x" "n0y!1"))
          (("" (REPLACE -1)
            (("" (REPLACE -2)
              (("" (HIDE -1 -2)
                (("" (REWRITE "abs_mult")
                  (("" (REWRITE "div_times" 1 :DIR RL)
                    (("" (NAME "X" "n0x!1 / abs(n0x!1)")
                      (("" (REPLACE -1)
                        (("" (NAME "Y" "n0y!1 / abs(n0y!1)")
                          (("" (REPLACE -1)
                            (("" (LEMMA "Re_cos_abs1" ("n0x" "X"))
                              (("1" (LEMMA "Re_cos_abs1" ("n0x" "Y"))
                                (("1" (LEMMA "Im_sin_abs1" ("n0x" "X"))
                                  (("1" (LEMMA "Im_sin_abs1" ("n0x" "Y"))
                                    (("1" (CASE-REPLACE "abs(X)=1")
                                      (("1" (CASE-REPLACE "abs(Y)=1")
                                        (("1"
                                          (LEMMA "abs_mult"
                                           ("z1" "X" "z2" "Y"))
                                          (("1" (REPLACE -2)
                                            (("1" (REPLACE -3)
                                              (("1"
                                                (LEMMA "Re_cos_abs1"
                                                 ("n0x" "X*Y"))
                                                (("1"
                                                  (LEMMA "Im_sin_abs1"
                                                   ("n0x" "X*Y"))
                                                  (("1" (REPLACE -3)
                                                    (("1" (CASE "X/=0")
                                                      (("1" (CASE "Y/=0")
                                                        (("1" (CASE "X*Y/=0")
                                                          (("1"
                                                            (NAME "TH1"
                                                                  "arg(X)")
                                                            (("1"
                                                              (NAME "TH2"
                                                                    "arg(Y)")
                                                              (("1"
                                                                (TYPEPRED
                                                                 "arg(X)")
                                                                (("1"
                                                                  (TYPEPRED
                                                                   "arg(Y)")
                                                                  (("1"
                                                                    (REPLACE
                                                                     -5)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -6)
                                                                      (("1"
                                                                        (LEMMA
                                                                         "Re_times"
                                                                         ("z1"
                                                                          "X"
                                                                          "z2"
                                                                          "Y"))
                                                                        (("1"
                                                                          (LEMMA
                                                                           "Im_times"
                                                                           ("z1"
                                                                            "X"
                                                                            "z2"
                                                                            "Y"))
                                                                          (("1"
                                                                            (REPLACE
                                                                             -17
                                                                             (-1
                                                                              -2))
                                                                            (("1"
                                                                              (REPLACE
                                                                               -18
                                                                               (-1
                                                                                -2))
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -19
                                                                                 (-1
                                                                                  -2))
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -20
                                                                                   (-1
                                                                                    -2))
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "sin_plus"
                                                                                     ("a"
                                                                                      "TH1"
                                                                                      "b"
                                                                                      "TH2"))
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       -2
                                                                                       RL)
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "cos_plus"
                                                                                         ("a"
                                                                                          "TH1"
                                                                                          "b"
                                                                                          "TH2"))
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           -4
                                                                                           RL)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1
                                                                                             -2)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "arg"
                                                                                               1)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -2
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (CASE-REPLACE
                                                                                                     "TH1 + TH2 > pi")
                                                                                                    (("1"
                                                                                                      (CASE-REPLACE
                                                                                                       "TH1+TH2=2*pi")
                                                                                                      (("1"
                                                                                                        (REWRITE
                                                                                                         "sin_2pi")
                                                                                                        (("1"
                                                                                                          (REWRITE
                                                                                                           "cos_2pi")
                                                                                                          (("1"
                                                                                                            (EXPAND
                                                                                                             "atan2")
                                                                                                            (("1"
                                                                                                              (REWRITE
                                                                                                               "atan_0")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (LEMMA
                                                                                                         "sin_lt_0"
                                                                                                         ("a"
                                                                                                          "TH1+TH2"))
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (REWRITE
                                                                                                             "atan2_cos_sin")
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (CASE-REPLACE
                                                                                                       "TH1 + TH2 <= -pi")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (CASE-REPLACE
                                                                                                           "TH1 + TH2 = -pi")
                                                                                                          (("1"
                                                                                                            (REWRITE
                                                                                                             "sin_neg"
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (REWRITE
                                                                                                               "cos_neg"
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (REWRITE
                                                                                                                 "sin_pi")
                                                                                                                (("1"
                                                                                                                  (REWRITE
                                                                                                                   "cos_pi")
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "atan2")
                                                                                                                    (("1"
                                                                                                                      (REWRITE
                                                                                                                       "atan_0")
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (LEMMA
                                                                                                             "sin_gt_0"
                                                                                                             ("a"
                                                                                                              "TH1+TH2+2*pi"))
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (LEMMA
                                                                                                                 "sin_period"
                                                                                                                 ("a"
                                                                                                                  "TH1+TH2"
                                                                                                                  "j"
                                                                                                                  "1"))
                                                                                                                (("2"
                                                                                                                  (LEMMA
                                                                                                                   "cos_period"
                                                                                                                   ("a"
                                                                                                                    "TH1+TH2"
                                                                                                                    "j"
                                                                                                                    "1"))
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (LEMMA
                                                                                                                       "atan2_cos_sin"
                                                                                                                       ("a"
                                                                                                                        "TH1 + TH2 + 2 * pi"))
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (LEMMA
                                                                                                           "trichotomy"
                                                                                                           ("x"
                                                                                                            "TH1+TH2"))
                                                                                                          (("2"
                                                                                                            (SPLIT
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (LEMMA
                                                                                                               "sin_gt_0"
                                                                                                               ("a"
                                                                                                                "TH1+TH2"))
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (CASE-REPLACE
                                                                                                                   "TH1+TH2=pi")
                                                                                                                  (("1"
                                                                                                                    (REWRITE
                                                                                                                     "sin_pi")
                                                                                                                    (("1"
                                                                                                                      (REWRITE
                                                                                                                       "cos_pi")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "atan2")
                                                                                                                        (("1"
                                                                                                                          (REWRITE
                                                                                                                           "atan_0")
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (REWRITE
                                                                                                                       "atan2_cos_sin")
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (REPLACE
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (REWRITE
                                                                                                                 "sin_0")
                                                                                                                (("2"
                                                                                                                  (REWRITE
                                                                                                                   "cos_0")
                                                                                                                  (("2"
                                                                                                                    (EXPAND
                                                                                                                     "atan2")
                                                                                                                    (("2"
                                                                                                                      (REWRITE
                                                                                                                       "atan_0")
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("3"
                                                                                                              (LEMMA
                                                                                                               "sin_lt_0"
                                                                                                               ("a"
                                                                                                                "TH1+TH2+2*pi"))
                                                                                                              (("3"
                                                                                                                (ASSERT)
                                                                                                                (("3"
                                                                                                                  (LEMMA
                                                                                                                   "sin_period"
                                                                                                                   ("a"
                                                                                                                    "TH1+TH2"
                                                                                                                    "j"
                                                                                                                    "1"))
                                                                                                                  (("3"
                                                                                                                    (LEMMA
                                                                                                                     "cos_period"
                                                                                                                     ("a"
                                                                                                                      "TH1+TH2"
                                                                                                                      "j"
                                                                                                                      "1"))
                                                                                                                    (("3"
                                                                                                                      (ASSERT)
                                                                                                                      (("3"
                                                                                                                        (LEMMA
                                                                                                                         "atan2_cos_sin"
                                                                                                                         ("a"
                                                                                                                          "TH1 + TH2 + 2 * pi"))
                                                                                                                        (("3"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (LEMMA
                                                             "abs_nz_iff_nz"
                                                             ("z" "X*Y"))
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (LEMMA
                                                           "abs_nz_iff_nz"
                                                           ("z" "Y"))
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (LEMMA "abs_nz_iff_nz"
                                                         ("z" "X"))
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (LEMMA "abs_nz_iff_nz"
                                                   ("z" "X*Y"))
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE-ALL-BUT (-6 1))
                                          (("2" (REPLACE -1 1 RL)
                                            (("2" (REWRITE "abs_div")
                                              (("1" (REWRITE "abs_abs")
                                                (("1" (REWRITE "div_simp") NIL
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (REWRITE "real_is_complex" 1)
                                                NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE -6 1 RL)
                                        (("2" (HIDE-ALL-BUT 1)
                                          (("2" (REWRITE "abs_div")
                                            (("1" (REWRITE "abs_abs")
                                              (("1" (REWRITE "div_simp") NIL
                                                NIL))
                                              NIL)
                                             ("2" (REWRITE "real_is_complex" 1)
                                              NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (LEMMA "abs_nzcomplex" ("n0z" "n0y!1"))
                                  (("2"
                                    (LEMMA "real_is_complex"
                                     ("x" "abs(n0y!1)"))
                                    (("2"
                                      (LEMMA "nznum_div_nznum_is_nznum"
                                       ("nzx" "n0y!1" "nzy" "abs(n0y!1)"))
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (LEMMA "abs_nzcomplex" ("n0z" "n0x!1"))
                                (("2"
                                  (LEMMA "nznum_div_nznum_is_nznum"
                                   ("nzx" "n0x!1" "nzy" "abs(n0x!1)"))
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex_times_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|div_simp| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|Im_times| FORMULA-DECL NIL |arithmetic| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_period| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_period| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_gt_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|atan_0| FORMULA-DECL NIL |atan| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|sin_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|atan2_cos_sin| FORMULA-DECL NIL |atan2| |trig|)
    (|sin_lt_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|cos_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_times| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|div_times| FORMULA-DECL NIL |number_fields_bis| NIL))
   SHOSTAK))
 (|arg_inv| 0
  (|arg_inv-2| "" 3790100332
   ("" (SKOLEM 1 ("a"))
    (("" (TYPEPRED "a")
      (("" (HIDE -1 -2)
        (("" (LEMMA "arg_mult" ("n0x" "a" "n0y" "1/a"))
          (("" (REWRITE "times_div1" -1)
            (("" (REWRITE "div_simp" -1)
              (("" (LEMMA "arg_is_0_nz" ("n0z" "1"))
                (("" (REWRITE "Re_real")
                  (("" (REWRITE "Im_real")
                    (("" (ASSERT)
                      (("" (REPLACE -1)
                        (("" (TYPEPRED "arg(a)")
                          (("" (TYPEPRED "arg(1/a)")
                            (("" (CASE-REPLACE "arg(1 / a) + arg(a) > pi")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (CASE-REPLACE "arg(1 / a) + arg(a) <= -pi")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (ASSERT)
                                  (("2" (CASE-REPLACE "arg(a)=0")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|div_simp| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|times_div1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|nzcomplex_times_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|))
   SHOSTAK)
  (|arg_inv-1| |nil| 3295020761
   ("" (SKOLEM 1 ("a"))
    (("" (TYPEPRED "a")
      (("" (HIDE -1 -2)
        (("" (LEMMA "arg_mult" ("n0x" "a" "n0y" "1/a"))
          (("1" (REWRITE "times_div1" -1)
            (("1" (REWRITE "div_simp" -1)
              (("1" (LEMMA "arg_is_0_nz" ("n0z" "1"))
                (("1" (REWRITE "Re_real")
                  (("1" (REWRITE "Im_real")
                    (("1" (ASSERT)
                      (("1" (REPLACE -1)
                        (("1" (TYPEPRED "arg(a)")
                          (("1" (TYPEPRED "arg(1/a)")
                            (("1" (CASE-REPLACE "arg(1 / a) + arg(a) > pi")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (CASE-REPLACE "arg(1 / a) + arg(a) <= -pi")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (ASSERT)
                                  (("2" (CASE-REPLACE "arg(a)=0")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (LEMMA "inv_ne_0" ("n0x" "a")) (("2" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|div_simp| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|nzcomplex_times_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|times_div1| FORMULA-DECL NIL |number_fields_bis| NIL))
   SHOSTAK))
 (|arg_div| 0
  (|arg_div-2| "" 3790100333
   ("" (SKOLEM 1 ("a" "b"))
    (("" (REWRITE "div_def")
      (("" (LEMMA "arg_mult" ("n0x" "a" "n0y" "1/b"))
        (("" (LEMMA "arg_inv" ("n0z" "b"))
          (("" (TYPEPRED "arg(a)")
            (("" (CASE-REPLACE "arg(b)=0")
              (("1" (ASSERT) NIL NIL)
               ("2" (REPLACE 1)
                (("2" (CASE-REPLACE "arg(b)=pi")
                  (("1" (ASSERT)
                    (("1" (REPLACE -4)
                      (("1" (CASE-REPLACE "arg(a) > 0")
                        (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (REPLACE -3)
                      (("2" (CASE-REPLACE "arg(a) - arg(b) > pi")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (CASE-REPLACE "arg(a) - arg(b) <= -pi")
                          (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|nzcomplex_times_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|))
   SHOSTAK)
  (|arg_div-1| |nil| 3295021146
   ("" (SKOLEM 1 ("a" "b"))
    (("" (REWRITE "div_def")
      (("" (LEMMA "arg_mult" ("n0x" "a" "n0y" "1/b"))
        (("1" (LEMMA "arg_inv" ("n0z" "b"))
          (("1" (TYPEPRED "arg(a)")
            (("1" (CASE-REPLACE "arg(b)=0")
              (("1" (ASSERT) NIL NIL)
               ("2" (REPLACE 1)
                (("2" (CASE-REPLACE "arg(b)=pi")
                  (("1" (ASSERT)
                    (("1" (REPLACE -4)
                      (("1" (CASE-REPLACE "arg(a) > 0")
                        (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (REPLACE -3)
                      (("2" (CASE-REPLACE "arg(a) - arg(b) > pi")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (CASE-REPLACE "arg(a) - arg(b) <= -pi")
                          (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (LEMMA "real_is_complex" ("x" "1"))
          (("2" (LEMMA "closed_divides" ("z" "1" "n0z" "b"))
            (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|nzcomplex_div_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|nzcomplex_times_nzcomplex_is_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex"
     |complex_types| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|))
   SHOSTAK))
 (|arg_from_polar| 0
  (|arg_from_polar-1| |nil| 3596190942
   ("" (SKEEP)
    (("" (EXPAND "from_polar")
      ((""
        (CASE
            "NOT (Re(sin(theta) * i * r + r * cos(theta)) = r*cos(theta) AND Im(sin(theta) * i * r + r * cos(theta)) = r*sin(theta))")
        (("1" (HIDE 2)
          (("1" (SPLIT)
            (("1" (REWRITE "Re_plus")
              (("1" (LEMMA "Re_imag")
                (("1" (INST - "sin(theta)*r")
                  (("1" (ASSERT)
                    (("1" (REPLACE -1)
                      (("1" (ASSERT)
                        (("1" (HIDE -1) (("1" (REWRITE "Re_real") NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (REWRITE "Im_plus")
              (("2" (ASSERT)
                (("2" (LEMMA "Im_real")
                  (("2" (INST - "r*cos(theta)")
                    (("2" (REPLACES -1)
                      (("2" (ASSERT)
                        (("2" (LEMMA "Im_imag")
                          (("2" (INST - "sin(theta)*r")
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "arg")
            (("2" (REPLACE -1)
              (("2" (REPLACE -2)
                (("2" (LIFT-IF)
                  (("2" (GROUND)
                    (("1" (REWRITE "complex_is_0_Re_Im" -1)
                      (("1" (FLATTEN)
                        (("1" (REPLACE -3)
                          (("1" (REPLACE -4)
                            (("1" (ASSERT)
                              (("1" (LEMMA "sin_eq_0")
                                (("1" (INST - "theta")
                                  (("1" (GROUND)
                                    (("1" (SKOSIMP*)
                                      (("1" (CASE "i!1 >=2")
                                        (("1" (MULT-BY -1 "pi")
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (CASE "i!1 <= -1")
                                          (("1" (MULT-BY -1 "pi")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (CASE "i!1 = 1")
                                            (("1" (REPLACES -1)
                                              (("1" (ASSERT)
                                                (("1" (REPLACE -2)
                                                  (("1" (LEMMA "cos_pi")
                                                    (("1" (REPLACES -1)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (CASE "i!1 = 0")
                                              (("1" (REPLACES -1)
                                                (("1" (REPLACES -2)
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (MULT-BY 2 "r")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (EXPAND "atan2")
                      (("2" (LIFT-IF)
                        (("2" (GROUND)
                          (("1" (LEMMA "atan_tan")
                            (("1" (INST - "theta")
                              (("1" (EXPAND "tan")
                                (("1" (ASSERT)
                                  (("1"
                                    (CASE
                                        "r*sin(theta)/(r*cos(theta)) = atan(theta)")
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (REPLACE -1)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (HIDE (2 3))
                                  (("2"
                                    (CASE
                                        "NOT (cos(theta)>0 AND sin(theta)<0)")
                                    (("1" (SPLIT)
                                      (("1" (MULT-BY 1 "r")
                                        (("1" (ASSERT) NIL NIL)) NIL)
                                       ("2" (MULT-BY 1 "r")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL)
                                     ("2" (HIDE (-2 -3))
                                      (("2" (FLATTEN)
                                        (("2" (LEMMA "cos_le_0")
                                          (("2" (INST - "theta")
                                            (("2" (LEMMA "sin_ge_0")
                                              (("2" (INST - "theta")
                                                (("2" (ASSERT)
                                                  (("2" (LEMMA "cos_neg")
                                                    (("2" (INST - "theta")
                                                      (("2" (GROUND)
                                                        (("2"
                                                          (LEMMA "cos_le_0")
                                                          (("2"
                                                            (INST - "-theta")
                                                            (("2" (GROUND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "cos_eq_0")
                            (("2" (INST - "theta")
                              (("2" (ASSERT)
                                (("2" (GROUND)
                                  (("1" (SKOSIMP*)
                                    (("1" (LEMMA "sin_ge_0")
                                      (("1" (INST - "theta")
                                        (("1" (ASSERT)
                                          (("1" (SPLIT -)
                                            (("1" (MULT-BY -1 "r")
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CASE "NOT sin(theta)<0")
                                              (("1" (MULT-BY 1 "r")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (CASE "i!1>=0")
                                                (("1" (MULT-BY -1 "pi")
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (CASE "i!1 <= -2")
                                                  (("1" (MULT-BY -1 "pi")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (CASE "i!1 = -1")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (MULT-BY 2 "r")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3"
                            (CASE "NOT (cos(theta) < 0 AND sin(theta) < 0)")
                            (("1" (SPLIT)
                              (("1" (MULT-BY 1 "r") (("1" (ASSERT) NIL NIL))
                                NIL)
                               ("2" (MULT-BY 1 "r") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (HIDE (-3 1 3))
                                (("2" (LEMMA "atan_tan")
                                  (("2" (INST - "theta+pi")
                                    (("1" (CASE "tan(theta+pi) = tan(theta)")
                                      (("1" (REPLACES -1)
                                        (("1" (EXPAND "tan")
                                          (("1" (REPLACES -1)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (EXPAND "tan" 1)
                                        (("2" (REWRITE "sin_plus" 1)
                                          (("2" (REWRITE "cos_plus" 1)
                                            (("2" (REWRITE "cos_pi")
                                              (("2" (REWRITE "sin_pi")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (EXPAND "Tan?")
                                        (("3" (ASSERT) NIL NIL)) NIL))
                                      NIL)
                                     ("2" (LEMMA "cos_ge_0")
                                      (("2" (INST - "theta")
                                        (("2" (ASSERT)
                                          (("2" (LEMMA "sin_ge_0")
                                            (("2" (INST - "theta")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (CASE "NOT sin(theta)>=0")
                      (("1" (MULT-BY 1 "r") (("1" (ASSERT) NIL NIL)) NIL)
                       ("2" (HIDE 1)
                        (("2" (CASE "theta < 0")
                          (("1" (LEMMA "sin_lt_0")
                            (("1" (INST - "theta + 2*pi")
                              (("1" (ASSERT)
                                (("1" (REWRITE "sin_plus")
                                  (("1" (REWRITE "cos_2pi")
                                    (("1" (REWRITE "sin_2pi")
                                      (("1" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (CASE "NOT theta>=0")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (HIDE 1)
                                (("2" (EXPAND "atan2")
                                  (("2" (LIFT-IF)
                                    (("2" (ASSERT)
                                      (("2" (GROUND)
                                        (("1" (CASE "NOT cos(theta)>0")
                                          (("1" (MULT-BY 1 "r")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (HIDE -2)
                                            (("2" (LEMMA "atan_tan")
                                              (("2" (INST - "theta")
                                                (("1" (EXPAND "tan")
                                                  (("1" (ASSERT)
                                                    (("1" (REPLACES -1) NIL
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (LEMMA "cos_le_0")
                                                    (("2" (INST - "theta")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (LEMMA "cos_eq_0")
                                          (("2" (INST - "theta")
                                            (("2" (GROUND)
                                              (("1" (SKOSIMP*)
                                                (("1" (CASE "i!1 = 0")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (CASE "i!1>=1")
                                                    (("1" (MULT-BY -1 "pi")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (ASSERT)
                                                      (("2" (CASE "i!1<=-1")
                                                        (("1" (MULT-BY -1 "pi")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (MULT-BY 2 "r")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3" (LEMMA "cos_eq_0")
                                          (("3" (INST?)
                                            (("3" (ASSERT)
                                              (("3" (GROUND)
                                                (("1" (SKOSIMP*)
                                                  (("1" (CASE "i!1 = 0")
                                                    (("1" (ASSERT)
                                                      (("1" (REPLACES -1)
                                                        (("1" (ASSERT)
                                                          (("1" (REPLACES -2)
                                                            (("1"
                                                              (REWRITE
                                                               "sin_pi2")
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (CASE "i!1>=1")
                                                      (("1" (MULT-BY -1 "pi")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (CASE "i!1<=-1")
                                                        (("1" (MULT-BY -1 "pi")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (MULT-BY 2 "r")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("4" (CASE "NOT cos(theta)<0")
                                          (("1" (MULT-BY 1 "r")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (HIDE (1 3))
                                            (("2" (CASE "NOT theta > pi/2")
                                              (("1" (LEMMA "cos_ge_0")
                                                (("1" (INST - "theta")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2" (LEMMA "atan_tan")
                                                  (("2" (INST - "theta-pi")
                                                    (("2" (EXPAND "tan" -1)
                                                      (("2"
                                                        (REWRITE "sin_minus")
                                                        (("2"
                                                          (REWRITE "cos_minus")
                                                          (("2"
                                                            (REWRITE "sin_pi")
                                                            (("2"
                                                              (REWRITE
                                                               "cos_pi")
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (REPLACE -1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|sin_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_lt_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|cos_minus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_minus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_pi2| FORMULA-DECL NIL |sincos| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|real_abs_lt_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|tan_restrict| CONST-DECL "real" |trig_basic| |trig|)
    (|atan| CONST-DECL "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" |atan|
     |trig|)
    (|tan| CONST-DECL "real" |trig_basic| |trig|)
    (|cos_le_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|sin_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|atan_tan| FORMULA-DECL NIL |trig_inverses| |trig|)
    (|cos_eq_0| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|Tan?| CONST-DECL "bool" |trig_basic| |trig|)
    (|sin_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|complex_is_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|both_sides_times1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|cos_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_eq_0| FORMULA-DECL NIL |sincos| |trig|)
    (|Im_plus| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im_imag| FORMULA-DECL NIL |arithmetic| NIL)
    (|Re_plus| FORMULA-DECL NIL |arithmetic| NIL)
    (|Re_real| FORMULA-DECL NIL |arithmetic| NIL)
    (|Re_imag| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|))
   SHOSTAK))
 (|idempotent_rectangular| 0
  (|idempotent_rectangular-1| |nil| 3294313266
   ("" (SKOSIMP)
    (("" (EXPAND "rectangular")
      (("" (EXPAND "from_rectangular")
        (("" (LEMMA "complex_is_Re_Im" ("z" "z!1")) (("" (PROPAX) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL))
   SHOSTAK))
 (|idempotent_polar| 0
  (|idempotent_polar-3| "" 3884620822
   ("" (EXPAND "polar")
    (("" (EXPAND "from_polar")
      (("" (SKOSIMP)
        (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "n0z!1"))
          (("" (ASSERT)
            ((""
              (LEMMA "unique_characterization"
               ("x0" "Re(n0z!1)" "y0" "Im(n0z!1)" "y1"
                "abs(n0z!1) * sin(arg(n0z!1))" "x1"
                "abs(n0z!1) * cos(arg(n0z!1))"))
              (("" (LEMMA "complex_is_Re_Im" ("z" "n0z!1"))
                (("" (REPLACE -1 -2 RL)
                  (("" (REPLACE -2 1)
                    (("" (HIDE -2)
                      (("" (EXPAND "arg")
                        ((""
                          (CASE-REPLACE
                           "IF Im(n0z!1) < 0 THEN cos(atan2(Re(n0z!1), Im(n0z!1)) - 2 * pi)
          ELSE cos(atan2(Re(n0z!1), Im(n0z!1)))
          ENDIF = cos(atan2(Re(n0z!1), Im(n0z!1)))")
                          (("1"
                            (CASE-REPLACE
                             "IF Im(n0z!1) < 0 THEN sin(atan2(Re(n0z!1), Im(n0z!1)) - 2 * pi)
            ELSE sin(atan2(Re(n0z!1), Im(n0z!1)))
            ENDIF = sin(atan2(Re(n0z!1), Im(n0z!1)))")
                            (("1" (HIDE -1 -2)
                              (("1"
                                (LEMMA "sin_atan2"
                                 ("x" "Re(n0z!1)" "y" "Im(n0z!1)"))
                                (("1"
                                  (LEMMA "cos_atan2"
                                   ("x" "Re(n0z!1)" "y" "Im(n0z!1)"))
                                  (("1" (REPLACE -4)
                                    (("1" (CASE-REPLACE "Re(n0z!1)=0")
                                      (("1" (REPLACE -2)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "atan2")
                                            (("1" (REWRITE "sin_pi2")
                                              (("1" (REWRITE "sin_3pi2")
                                                (("1" (EXPAND "abs")
                                                  (("1" (EXPAND "conjugate")
                                                    (("1" (REWRITE -1)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (NAME-REPLACE "DRL1"
                                                           "Im(n0z!1)")
                                                          (("1" (REPLACE -2 1)
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (REWRITE
                                                                 "reals@sq_rew")
                                                                (("1"
                                                                  (REWRITE
                                                                   "associative_mult"
                                                                   1)
                                                                  (("1"
                                                                    (REWRITE
                                                                     "associative_mult"
                                                                     1)
                                                                    (("1"
                                                                      (REWRITE
                                                                       "associative_mult"
                                                                       1)
                                                                      (("1"
                                                                        (REWRITE
                                                                         "associative_mult"
                                                                         1 :DIR
                                                                         RL)
                                                                        (("1"
                                                                          (REWRITE
                                                                           "i_axiom")
                                                                          (("1"
                                                                            (REWRITE
                                                                             "commutative_mult"
                                                                             1)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "associative_mult"
                                                                               1)
                                                                              (("1"
                                                                                (CASE-REPLACE
                                                                                 "DRL1>0")
                                                                                (("1"
                                                                                  (REWRITE
                                                                                   "number_fields_right_identity_mult")
                                                                                  (("1"
                                                                                    (REWRITE
                                                                                     "number_fields_left_identity_mult")
                                                                                    (("1"
                                                                                      (REWRITE
                                                                                       "sqrt.sqrt_sq")
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (LEMMA
                                                                                   "reals@sq_neg")
                                                                                  (("2"
                                                                                    (INST
                                                                                     -
                                                                                     "DRL1")
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       2
                                                                                       RL)
                                                                                      (("2"
                                                                                        (REWRITE
                                                                                         "sqrt.sqrt_sq")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE 1)
                                        (("2"
                                          (NAME "DRL1" "Im(n0z!1) / Re(n0z!1)")
                                          (("2" (REPLACE -1)
                                            (("2" (ASSERT)
                                              (("2" (NAME "X" "Re(n0z!1)")
                                                (("2" (REPLACE -1)
                                                  (("2" (NAME "Y" "Im(n0z!1)")
                                                    (("2" (REPLACE -1)
                                                      (("2"
                                                        (CASE-REPLACE
                                                         "abs(n0z!1) = sqrt(reals@sq(X)+reals@sq(Y))")
                                                        (("1"
                                                          (CASE-REPLACE
                                                           "sqrt(1 + reals@sq(DRL1)) = sqrt(reals@sq(X) + reals@sq(Y))/IF X>0 THEN X ELSE -X ENDIF")
                                                          (("1"
                                                            (CASE-REPLACE
                                                             "X>0")
                                                            (("1"
                                                              (REWRITE
                                                               "div_div1")
                                                              (("1"
                                                                (REWRITE
                                                                 "div_div1")
                                                                (("1"
                                                                  (REPLACE -7)
                                                                  (("1"
                                                                    (REPLACE
                                                                     -8)
                                                                    (("1"
                                                                      (NAME-REPLACE
                                                                       "DRL3"
                                                                       "sqrt(reals@sq(X) + reals@sq(Y))")
                                                                      (("1"
                                                                        (LEMMA
                                                                         "div_cancel1"
                                                                         ("n0z"
                                                                          "DRL3"
                                                                          "x"
                                                                          "1*X"))
                                                                        (("1"
                                                                          (LEMMA
                                                                           "div_cancel1"
                                                                           ("n0z"
                                                                            "DRL3"
                                                                            "x"
                                                                            "DRL1*X"))
                                                                          (("1"
                                                                            (REPLACE
                                                                             -2)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -1)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -8
                                                                                 2
                                                                                 RL)
                                                                                (("1"
                                                                                  (REWRITE
                                                                                   "div_cancel2")
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2"
                                                              (HIDE -5 -6 3)
                                                              (("2"
                                                                (REPLACE -4 1
                                                                         RL)
                                                                (("2"
                                                                  (REWRITE
                                                                   "reals@sq_div")
                                                                  (("2"
                                                                    (CASE-REPLACE
                                                                     "X>0")
                                                                    (("1"
                                                                      (LEMMA
                                                                       "sqrt.sqrt_sq")
                                                                      (("1"
                                                                        (INST -
                                                                         "X")
                                                                        (("1"
                                                                          (SPLIT
                                                                           -1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "sqrt.sqrt_div")
                                                                            (("1"
                                                                              (INST
                                                                               -
                                                                               "reals@sq(X) + reals@sq(Y)"
                                                                               "reals@sq(X)")
                                                                              (("1"
                                                                                (SPLIT
                                                                                 -1)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (EXPAND
                                                                                   "sq")
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "posreal_times_posreal_is_posreal"
                                                                                     ("px"
                                                                                      "X"
                                                                                      "py"
                                                                                      "X"))
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "reals@sq_neg")
                                                                        (("2"
                                                                          (INST
                                                                           -
                                                                           "X")
                                                                          (("2"
                                                                            (LEMMA
                                                                             "sqrt.sqrt_sq"
                                                                             ("x"
                                                                              "-X"))
                                                                            (("2"
                                                                              (SPLIT
                                                                               -1)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "sqrt.sqrt_div")
                                                                                (("1"
                                                                                  (INST
                                                                                   -
                                                                                   "reals@sq(X)+reals@sq(Y)"
                                                                                   "reals@sq(-X)")
                                                                                  (("1"
                                                                                    (SPLIT
                                                                                     -1)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (EXPAND
                                                                                       "sq")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (LEMMA
                                                                                           "posreal_times_posreal_is_posreal"
                                                                                           ("px"
                                                                                            "-X"
                                                                                            "py"
                                                                                            "-X"))
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("3" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE -4 -5 3)
                                                          (("2" (EXPAND "abs")
                                                            (("2"
                                                              (EXPAND
                                                               "conjugate")
                                                              (("2"
                                                                (REPLACE -1)
                                                                (("2"
                                                                  (REPLACE -2)
                                                                  (("2"
                                                                    (REPLACE -4
                                                                             1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "reals@sq_rew")
                                                                        (("2"
                                                                          (REWRITE
                                                                           "reals@sq_rew")
                                                                          (("2"
                                                                            (REWRITE
                                                                             "associative_mult"
                                                                             1
                                                                             :DIR
                                                                             RL)
                                                                            (("2"
                                                                              (LEMMA
                                                                               "i_axiom")
                                                                              (("2"
                                                                                (REPLACE
                                                                                 -1)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT (1 -3))
                              (("2" (CASE-REPLACE "Im(n0z!1) < 0")
                                (("1"
                                  (LEMMA "sin_minus"
                                   ("a" "atan2(Re(n0z!1), Im(n0z!1))" "b"
                                    "2 * pi"))
                                  (("1" (REWRITE "sin_2pi")
                                    (("1" (REWRITE "cos_2pi")
                                      (("1" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE 2)
                            (("2" (CASE-REPLACE "Im(n0z!1) < 0")
                              (("1"
                                (LEMMA "cos_minus"
                                 ("a" "atan2(Re(n0z!1), Im(n0z!1))" "b"
                                  "2 * pi"))
                                (("1" (REWRITE "sin_2pi")
                                  (("1" (REWRITE "cos_2pi")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL)
                           ("3" (SPLIT -2)
                            (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                            NIL)
                           ("4" (SPLIT -2)
                            (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                            NIL)
                           ("5" (FLATTEN) (("5" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|unique_characterization| FORMULA-DECL NIL |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|sin_minus| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|sin_pi2| FORMULA-DECL NIL |sincos| |trig|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|sq_neg| FORMULA-DECL NIL |sq| |reals|)
    (|number_fields_right_identity_mult| FORMULA-DECL NIL |number_fields_bis|
     NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|number_fields_left_identity_mult| FORMULA-DECL NIL |number_fields_bis|
     NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|sin_3pi2| FORMULA-DECL NIL |sincos| |trig|)
    (|div_div1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|div_cancel2| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|div_cancel1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt_square| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sin_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|cos_minus| FORMULA-DECL NIL |sincos| |trig|)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL))
   SHOSTAK)
  (|idempotent_polar-2| |nil| 3307887703
   ("" (EXPAND "polar")
    (("" (EXPAND "from_polar")
      (("" (SKOSIMP)
        (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "n0z!1"))
          (("" (ASSERT)
            ((""
              (LEMMA "unique_characterization"
               ("x0" "Re(n0z!1)" "y0" "Im(n0z!1)" "y1"
                "abs(n0z!1) * sin(arg(n0z!1))" "x1"
                "abs(n0z!1) * cos(arg(n0z!1))"))
              (("" (LEMMA "complex_is_Re_Im" ("z" "n0z!1"))
                (("" (REPLACE -1 -2 RL)
                  (("" (REPLACE -2 1)
                    (("" (HIDE -2)
                      (("" (EXPAND "arg")
                        ((""
                          (CASE-REPLACE
                           "IF Im(n0z!1) < 0 THEN cos(atan2(Re(n0z!1), Im(n0z!1)) - 2 * pi)
          ELSE cos(atan2(Re(n0z!1), Im(n0z!1)))
          ENDIF = cos(atan2(Re(n0z!1), Im(n0z!1)))")
                          (("1"
                            (CASE-REPLACE
                             "IF Im(n0z!1) < 0 THEN sin(atan2(Re(n0z!1), Im(n0z!1)) - 2 * pi)
            ELSE sin(atan2(Re(n0z!1), Im(n0z!1)))
            ENDIF = sin(atan2(Re(n0z!1), Im(n0z!1)))")
                            (("1" (HIDE -1 -2)
                              (("1"
                                (LEMMA "sin_atan2"
                                 ("x" "Re(n0z!1)" "y" "Im(n0z!1)"))
                                (("1"
                                  (LEMMA "cos_atan2"
                                   ("x" "Re(n0z!1)" "y" "Im(n0z!1)"))
                                  (("1" (REPLACE -4)
                                    (("1" (CASE-REPLACE "Re(n0z!1)=0")
                                      (("1" (REPLACE -2)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "atan2")
                                            (("1" (REWRITE "sin_pi2")
                                              (("1" (REWRITE "sin_3pi2")
                                                (("1" (EXPAND "abs")
                                                  (("1" (EXPAND "conjugate")
                                                    (("1" (REWRITE -1)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (NAME-REPLACE "DRL1"
                                                           "Im(n0z!1)")
                                                          (("1" (REPLACE -2 1)
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (REWRITE
                                                                 "sq.sq_rew")
                                                                (("1"
                                                                  (REWRITE
                                                                   "associative_mult"
                                                                   1)
                                                                  (("1"
                                                                    (REWRITE
                                                                     "associative_mult"
                                                                     1)
                                                                    (("1"
                                                                      (REWRITE
                                                                       "associative_mult"
                                                                       1)
                                                                      (("1"
                                                                        (REWRITE
                                                                         "associative_mult"
                                                                         1 :DIR
                                                                         RL)
                                                                        (("1"
                                                                          (REWRITE
                                                                           "i_axiom")
                                                                          (("1"
                                                                            (REWRITE
                                                                             "commutative_mult"
                                                                             1)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "associative_mult"
                                                                               1)
                                                                              (("1"
                                                                                (CASE-REPLACE
                                                                                 "DRL1>0")
                                                                                (("1"
                                                                                  (REWRITE
                                                                                   "sqrt.sqrt_sq")
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (LEMMA
                                                                                   "sq.sq_neg")
                                                                                  (("2"
                                                                                    (INST
                                                                                     -
                                                                                     "DRL1")
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       2
                                                                                       RL)
                                                                                      (("2"
                                                                                        (REWRITE
                                                                                         "sqrt.sqrt_sq")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE 1)
                                        (("2"
                                          (NAME "DRL1" "Im(n0z!1) / Re(n0z!1)")
                                          (("2" (REPLACE -1)
                                            (("2" (ASSERT)
                                              (("2" (NAME "X" "Re(n0z!1)")
                                                (("2" (REPLACE -1)
                                                  (("2" (NAME "Y" "Im(n0z!1)")
                                                    (("2" (REPLACE -1)
                                                      (("2"
                                                        (CASE-REPLACE
                                                         "abs(n0z!1) = sqrt(sq.sq(X)+sq.sq(Y))")
                                                        (("1"
                                                          (CASE-REPLACE
                                                           "sqrt(1 + sq.sq(DRL1)) = sqrt(sq.sq(X) + sq.sq(Y))/IF X>0 THEN X ELSE -X ENDIF")
                                                          (("1"
                                                            (CASE-REPLACE
                                                             "X>0")
                                                            (("1"
                                                              (REWRITE
                                                               "div_div1")
                                                              (("1"
                                                                (REWRITE
                                                                 "div_div1")
                                                                (("1"
                                                                  (REPLACE -7)
                                                                  (("1"
                                                                    (REPLACE
                                                                     -8)
                                                                    (("1"
                                                                      (NAME-REPLACE
                                                                       "DRL3"
                                                                       "sqrt(sq.sq(X) + sq.sq(Y))")
                                                                      (("1"
                                                                        (LEMMA
                                                                         "div_cancel1"
                                                                         ("n0z"
                                                                          "DRL3"
                                                                          "x"
                                                                          "1*X"))
                                                                        (("1"
                                                                          (LEMMA
                                                                           "div_cancel1"
                                                                           ("n0z"
                                                                            "DRL3"
                                                                            "x"
                                                                            "DRL1*X"))
                                                                          (("1"
                                                                            (REPLACE
                                                                             -2)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -1)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -8
                                                                                 2
                                                                                 RL)
                                                                                (("1"
                                                                                  (REWRITE
                                                                                   "div_cancel2")
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2"
                                                              (HIDE -5 -6 3)
                                                              (("2"
                                                                (REPLACE -4 1
                                                                         RL)
                                                                (("2"
                                                                  (REWRITE
                                                                   "sq.sq_div")
                                                                  (("2"
                                                                    (CASE-REPLACE
                                                                     "X>0")
                                                                    (("1"
                                                                      (LEMMA
                                                                       "sqrt.sqrt_sq")
                                                                      (("1"
                                                                        (INST -
                                                                         "X")
                                                                        (("1"
                                                                          (SPLIT
                                                                           -1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "sqrt.sqrt_div")
                                                                            (("1"
                                                                              (INST
                                                                               -
                                                                               "sq.sq(X) + sq.sq(Y)"
                                                                               "sq.sq(X)")
                                                                              (("1"
                                                                                (SPLIT
                                                                                 -1)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (EXPAND
                                                                                   "sq")
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "posreal_times_posreal_is_posreal"
                                                                                     ("px"
                                                                                      "X"
                                                                                      "py"
                                                                                      "X"))
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "sq.sq_neg")
                                                                        (("2"
                                                                          (INST
                                                                           -
                                                                           "X")
                                                                          (("2"
                                                                            (LEMMA
                                                                             "sqrt.sqrt_sq"
                                                                             ("x"
                                                                              "-X"))
                                                                            (("2"
                                                                              (SPLIT
                                                                               -1)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "sqrt.sqrt_div")
                                                                                (("1"
                                                                                  (INST
                                                                                   -
                                                                                   "sq.sq(X)+sq.sq(Y)"
                                                                                   "sq.sq(-X)")
                                                                                  (("1"
                                                                                    (SPLIT
                                                                                     -1)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (EXPAND
                                                                                       "sq")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (LEMMA
                                                                                           "posreal_times_posreal_is_posreal"
                                                                                           ("px"
                                                                                            "-X"
                                                                                            "py"
                                                                                            "-X"))
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("3" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE -4 -5 3)
                                                          (("2" (EXPAND "abs")
                                                            (("2"
                                                              (EXPAND
                                                               "conjugate")
                                                              (("2"
                                                                (REPLACE -1)
                                                                (("2"
                                                                  (REPLACE -2)
                                                                  (("2"
                                                                    (REPLACE -4
                                                                             1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "sq.sq_rew")
                                                                        (("2"
                                                                          (REWRITE
                                                                           "sq.sq_rew")
                                                                          (("2"
                                                                            (REWRITE
                                                                             "associative_mult"
                                                                             1
                                                                             :DIR
                                                                             RL)
                                                                            (("2"
                                                                              (LEMMA
                                                                               "i_axiom")
                                                                              (("2"
                                                                                (REPLACE
                                                                                 -1)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT (1 -3))
                              (("2" (CASE-REPLACE "Im(n0z!1) < 0")
                                (("1"
                                  (LEMMA "sin_minus"
                                   ("a" "atan2(Re(n0z!1), Im(n0z!1))" "b"
                                    "2 * pi"))
                                  (("1" (REWRITE "sin_2pi")
                                    (("1" (REWRITE "cos_2pi")
                                      (("1" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE 2)
                            (("2" (CASE-REPLACE "Im(n0z!1) < 0")
                              (("1"
                                (LEMMA "cos_minus"
                                 ("a" "atan2(Re(n0z!1), Im(n0z!1))" "b"
                                  "2 * pi"))
                                (("1" (REWRITE "sin_2pi")
                                  (("1" (REWRITE "cos_2pi")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL)
                           ("3" (SPLIT -2)
                            (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                            NIL)
                           ("4" (SPLIT -2)
                            (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                            NIL)
                           ("5" (FLATTEN) (("5" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|complex_times_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|unique_characterization| FORMULA-DECL NIL |complex_types| NIL)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|sin_minus| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|sin_pi2| FORMULA-DECL NIL |sincos| |trig|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|sq_neg| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|number_fields_right_identity_mult| FORMULA-DECL NIL |number_fields_bis|
     NIL)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|number_fields_left_identity_mult| FORMULA-DECL NIL |number_fields_bis|
     NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|complex_minus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|sin_3pi2| FORMULA-DECL NIL |sincos| |trig|)
    (|div_div1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|div_cancel2| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|div_cancel1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt_square| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sin_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|cos_minus| FORMULA-DECL NIL |sincos| |trig|)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|complex_plus_complex_is_complex| APPLICATION-JUDGEMENT "complex"
     |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|Re_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL)
    (|Im_is_real| APPLICATION-JUDGEMENT "real" |complex_types| NIL))
   NIL)
  (|idempotent_polar-1| |nil| 3294313327
   ("" (EXPAND "polar")
    (("" (EXPAND "from_polar")
      (("" (SKOSIMP)
        (("" (LEMMA "complex_is_ne_0_Re_Im" ("z" "n0z!1"))
          (("" (ASSERT)
            ((""
              (LEMMA "unique_characterization"
               ("x0" "Re(n0z!1)" "y0" "Im(n0z!1)" "y1"
                "abs(n0z!1) * sin(arg(n0z!1))" "x1"
                "abs(n0z!1) * cos(arg(n0z!1))"))
              (("" (LEMMA "complex_is_Re_Im" ("z" "n0z!1"))
                (("" (REPLACE -1 -2 RL)
                  (("" (REPLACE -2 1)
                    (("" (HIDE -2)
                      (("" (EXPAND "arg")
                        ((""
                          (CASE-REPLACE
                           "IF Im(n0z!1) < 0 THEN cos(atan2(Re(n0z!1), Im(n0z!1)) - 2 * pi)
        ELSE cos(atan2(Re(n0z!1), Im(n0z!1)))
        ENDIF = cos(atan2(Re(n0z!1), Im(n0z!1)))")
                          (("1"
                            (CASE-REPLACE
                             "IF Im(n0z!1) < 0 THEN sin(atan2(Re(n0z!1), Im(n0z!1)) - 2 * pi)
        ELSE sin(atan2(Re(n0z!1), Im(n0z!1)))
        ENDIF = sin(atan2(Re(n0z!1), Im(n0z!1)))")
                            (("1" (HIDE -1 -2)
                              (("1"
                                (LEMMA "sin_atan2"
                                 ("x" "Re(n0z!1)" "y" "Im(n0z!1)"))
                                (("1"
                                  (LEMMA "cos_atan2"
                                   ("x" "Re(n0z!1)" "y" "Im(n0z!1)"))
                                  (("1" (REPLACE -4)
                                    (("1" (CASE-REPLACE "Re(n0z!1)=0")
                                      (("1" (REPLACE -2)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "atan2")
                                            (("1" (REWRITE "sin_pi2")
                                              (("1" (REWRITE "sin_3pi2")
                                                (("1" (EXPAND "abs")
                                                  (("1" (EXPAND "conjugate")
                                                    (("1" (REWRITE -1)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (NAME-REPLACE "DRL1"
                                                           "Im(n0z!1)")
                                                          (("1" (REPLACE -2 1)
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (REWRITE
                                                                 "sq_rew")
                                                                (("1"
                                                                  (REWRITE
                                                                   "associative_mult"
                                                                   1)
                                                                  (("1"
                                                                    (REWRITE
                                                                     "associative_mult"
                                                                     1)
                                                                    (("1"
                                                                      (REWRITE
                                                                       "associative_mult"
                                                                       1)
                                                                      (("1"
                                                                        (REWRITE
                                                                         "associative_mult"
                                                                         1 :DIR
                                                                         RL)
                                                                        (("1"
                                                                          (REWRITE
                                                                           "i_axiom")
                                                                          (("1"
                                                                            (REWRITE
                                                                             "commutative_mult"
                                                                             1)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "associative_mult"
                                                                               1)
                                                                              (("1"
                                                                                (CASE-REPLACE
                                                                                 "DRL1>0")
                                                                                (("1"
                                                                                  (REWRITE
                                                                                   "sqrt_sq")
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (LEMMA
                                                                                   "sq_neg")
                                                                                  (("2"
                                                                                    (INST
                                                                                     -
                                                                                     "DRL1")
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       2
                                                                                       RL)
                                                                                      (("2"
                                                                                        (REWRITE
                                                                                         "sqrt_sq")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE 1)
                                        (("2"
                                          (NAME "DRL1" "Im(n0z!1) / Re(n0z!1)")
                                          (("1" (REPLACE -1)
                                            (("1" (ASSERT)
                                              (("1" (NAME "X" "Re(n0z!1)")
                                                (("1" (REPLACE -1)
                                                  (("1" (NAME "Y" "Im(n0z!1)")
                                                    (("1" (REPLACE -1)
                                                      (("1"
                                                        (CASE-REPLACE
                                                         "abs(n0z!1) = sqrt(sq(X)+sq(Y))")
                                                        (("1"
                                                          (CASE-REPLACE
                                                           "sqrt(1 + sq(DRL1)) = sqrt(sq(X) + sq(Y))/IF X>0 THEN X ELSE -X ENDIF")
                                                          (("1"
                                                            (CASE-REPLACE
                                                             "X>0")
                                                            (("1"
                                                              (REWRITE
                                                               "div_div1")
                                                              (("1"
                                                                (REWRITE
                                                                 "div_div1")
                                                                (("1"
                                                                  (REPLACE -7)
                                                                  (("1"
                                                                    (REPLACE
                                                                     -8)
                                                                    (("1"
                                                                      (NAME-REPLACE
                                                                       "DRL3"
                                                                       "sqrt(sq(X) + sq(Y))")
                                                                      (("1"
                                                                        (LEMMA
                                                                         "div_cancel1"
                                                                         ("n0z"
                                                                          "DRL3"
                                                                          "x"
                                                                          "1*X"))
                                                                        (("1"
                                                                          (LEMMA
                                                                           "div_cancel1"
                                                                           ("n0z"
                                                                            "DRL3"
                                                                            "x"
                                                                            "DRL1*X"))
                                                                          (("1"
                                                                            (REPLACE
                                                                             -2)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -1)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -8
                                                                                 2
                                                                                 RL)
                                                                                (("1"
                                                                                  (REWRITE
                                                                                   "div_cancel2")
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (LEMMA
                                                                           "abs_nz_iff_nz"
                                                                           ("z"
                                                                            "n0z!1"))
                                                                          (("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2" (HIDE -5 -6 3)
                                                            (("2"
                                                              (REPLACE -4 1 RL)
                                                              (("2"
                                                                (REWRITE
                                                                 "sq_div")
                                                                (("2"
                                                                  (CASE-REPLACE
                                                                   "X>0")
                                                                  (("1"
                                                                    (LEMMA
                                                                     "sqrt_sq")
                                                                    (("1"
                                                                      (INST -
                                                                       "X")
                                                                      (("1"
                                                                        (SPLIT
                                                                         -1)
                                                                        (("1"
                                                                          (LEMMA
                                                                           "sqrt_div")
                                                                          (("1"
                                                                            (INST
                                                                             -
                                                                             "sq(X) + sq(Y)"
                                                                             "sq(X)")
                                                                            (("1"
                                                                              (SPLIT
                                                                               -1)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (EXPAND
                                                                                 "sq")
                                                                                (("2"
                                                                                  (LEMMA
                                                                                   "posreal_times_posreal_is_posreal"
                                                                                   ("px"
                                                                                    "X"
                                                                                    "py"
                                                                                    "X"))
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "sq_neg")
                                                                      (("2"
                                                                        (INST -
                                                                         "X")
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sqrt_sq"
                                                                           ("x"
                                                                            "-X"))
                                                                          (("2"
                                                                            (SPLIT
                                                                             -1)
                                                                            (("1"
                                                                              (LEMMA
                                                                               "sqrt_div")
                                                                              (("1"
                                                                                (INST
                                                                                 -
                                                                                 "sq(X)+sq(Y)"
                                                                                 "sq(-X)")
                                                                                (("1"
                                                                                  (SPLIT
                                                                                   -1)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (EXPAND
                                                                                     "sq")
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "posreal_times_posreal_is_posreal"
                                                                                       ("px"
                                                                                        "-X"
                                                                                        "py"
                                                                                        "-X"))
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("3" (ASSERT) NIL
                                                            NIL)
                                                           ("4" (FLATTEN) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE -4 -5 3)
                                                          (("2" (EXPAND "abs")
                                                            (("2"
                                                              (EXPAND
                                                               "conjugate")
                                                              (("2"
                                                                (REPLACE -1)
                                                                (("2"
                                                                  (REPLACE -2)
                                                                  (("2"
                                                                    (REPLACE -4
                                                                             1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "sq_rew")
                                                                        (("2"
                                                                          (REWRITE
                                                                           "sq_rew")
                                                                          (("2"
                                                                            (REWRITE
                                                                             "associative_mult"
                                                                             1
                                                                             :DIR
                                                                             RL)
                                                                            (("2"
                                                                              (LEMMA
                                                                               "i_axiom")
                                                                              (("2"
                                                                                (REPLACE
                                                                                 -1)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT (1 -3))
                              (("2" (CASE-REPLACE "Im(n0z!1) < 0")
                                (("1"
                                  (LEMMA "sin_minus"
                                   ("a" "atan2(Re(n0z!1), Im(n0z!1))" "b"
                                    "2 * pi"))
                                  (("1" (REWRITE "sin_2pi")
                                    (("1" (REWRITE "cos_2pi")
                                      (("1" (ASSERT) NIL NIL)) NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL)
                             ("3" (SPLIT -3)
                              (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                              NIL)
                             ("4" (SPLIT -3)
                              (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                              NIL)
                             ("5" (FLATTEN 1) (("5" (ASSERT) NIL NIL)) NIL))
                            NIL)
                           ("2" (HIDE 2)
                            (("2" (CASE-REPLACE "Im(n0z!1) < 0")
                              (("1"
                                (LEMMA "cos_minus"
                                 ("a" "atan2(Re(n0z!1), Im(n0z!1))" "b"
                                  "2 * pi"))
                                (("1" (REWRITE "sin_2pi")
                                  (("1" (REWRITE "cos_2pi")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (SPLIT -3)
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL)
                           ("3" (SPLIT -2)
                            (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                            NIL)
                           ("4" (SPLIT -2)
                            (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                            NIL)
                           ("5" (FLATTEN) (("5" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex| NONEMPTY-TYPE-FROM-DECL NIL |complex_types| NIL)
    (|complex_pred| CONST-DECL "[number_field -> boolean]" |complex_types| NIL)
    (|complex_is_ne_0_Re_Im| FORMULA-DECL NIL |arithmetic| NIL)
    (|Im| CONST-DECL "{y | EXISTS x: z = x + y * i}" |complex_types| NIL)
    (|Re| CONST-DECL "{x | EXISTS y: z = x + y * i}" |complex_types| NIL)
    (|i| CONST-DECL "complex" |complex_types| NIL)
    (|unique_characterization| FORMULA-DECL NIL |complex_types| NIL)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|cos_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|i_axiom| FORMULA-DECL NIL |complex_types| NIL)
    (|sq_neg| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|conjugate| CONST-DECL "complex" |arithmetic| NIL)
    (|div_div1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|div_cancel2| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|div_cancel1| FORMULA-DECL NIL |number_fields_bis| NIL)
    (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sin_atan2| FORMULA-DECL NIL |atan2| |trig|)
    (|complex_is_Re_Im| FORMULA-DECL NIL |arithmetic| NIL))
   SHOSTAK)))

