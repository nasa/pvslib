(|cpolynomial_real|
 (|root_polynomial_odd| 0
  (|root_polynomial_odd-1| NIL 3931031157
   ("" (SKEEP)
    (("" (LEMMA "poly_sign_near_infinity")
      (("" (INST?)
        (("" (ASSERT)
          (("" (SKOLEM -1 "A")
            (("" (INST -1 "A")
              (("" (ASSERT)
                (("" (LEMMA "poly_sign_near_negative_infinity")
                  (("" (INST?)
                    (("" (ASSERT)
                      (("" (SKOLEM -1 "B")
                        (("" (INST -1 "-B")
                          (("" (ASSERT)
                            (("" (ASSERT)
                              (("" (LEMMA "even_or_odd")
                                (("" (INST?)
                                  (("" (ASSERT)
                                    (("" (LEMMA "sign_ext_nz")
                                      (("" (INST-CP -1 "p(n)")
                                        (("" (INST -1 "-p(n)")
                                          (("" (LEMMA "sign_sign_neg")
                                            (("" (INST -1 "p(n)")
                                              (("" (REPLACES -2)
                                                (("" (REPLACES -2)
                                                  ((""
                                                    (LEMMA
                                                     "continuous_polynomial")
                                                    (("" (INST?)
                                                      ((""
                                                        (LEMMA
                                                         "IntermediateValue")
                                                        ((""
                                                          (INST -1
                                                           "RealsConnected"
                                                           "polynomial(p,n)")
                                                          (("" (ASSERT)
                                                            (("" (SPLIT -1)
                                                              (("1"
                                                                (INST -1 "-B"
                                                                 "A")
                                                                (("1"
                                                                  (LEMMA
                                                                   "sign_ext_mult_1")
                                                                  (("1"
                                                                    (INST? -1)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (REWRITE
                                                                         "sign_ext_mult")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (SKEEP)
                                                                (("2"
                                                                  (INST 3 "c")
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|poly_sign_near_infinity| FORMULA-DECL NIL |more_polynomial_props|
     |reals|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|poly_sign_near_negative_infinity| FORMULA-DECL NIL
     |more_polynomial_props| |reals|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|sign_ext_nz| FORMULA-DECL NIL |sign| |reals|)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|Connected| TYPE-EQ-DECL NIL |connected_set| |reals|)
    (|RealsConnected| CONST-DECL "Connected" |connected_set| |reals|)
    (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|)
    (|sign_ext_mult_1| FORMULA-DECL NIL |sign| |reals|)
    (|sign_ext_mult| FORMULA-DECL NIL |sign| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|reals_connected| FORMULA-DECL NIL |connected_set| |reals|)
    (|sign_mult_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|IntermediateValue| FORMULA-DECL NIL |interm_value_thm| |analysis|)
    (|continuous_polynomial| FORMULA-DECL NIL |polynomial_deriv| |analysis|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|sign_sign_neg| FORMULA-DECL NIL |sign| |reals|)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|even_or_odd| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|cpolynomial_real_real| 0
  (|cpolynomial_real_real-1| NIL 3930903259
   ("" (SKEEP :BUT "n")
    (("" (INDUCT "n")
      (("1" (GRIND) NIL NIL)
       ("2" (SKEEP)
        (("2" (REWRITE "cpolynomial_rec")
          (("2" (SPLIT -1)
            (("1" (REWRITE "complex_plus_real_j")
              (("1" (HIDE 2)
                (("1" (REWRITE "complex_mult_real_j")
                  (("1" (HIDE 2) (("1" (REWRITE "complex_pow_real_j") NIL NIL))
                    NIL)
                   ("2" (EXPAND "cpolynomial_real?") (("2" (INST? -2) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE 2)
              (("2" (EXPAND "cpolynomial_real?")
                (("2" (SKEEP) (("2" (INSTEEP) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|cpolynomial_real?| CONST-DECL "bool" |cpolynomial_real| NIL)
    (|real_?| CONST-DECL "bool" |complex_types| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |complex_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|complex_plus_real_j| JUDGEMENT-TCC NIL |complex_types| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|complex_mult_real_j| JUDGEMENT-TCC NIL |complex_types| NIL)
    (|real_is_real| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_pow_real_j| RECURSIVE-JUDGEMENT-AXIOM NIL |complex_types| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   SHOSTAK))
 (|cpolynomial_polynomial| 0
  (|cpolynomial_polynomial-1| NIL 3931013237
   ("" (SKEEP :BUT "n")
    (("" (INDUCT "n")
      (("1" (GRIND) NIL NIL)
       ("2" (SKEEP)
        (("2" (REWRITE "cpolynomial_rec")
          (("2" (REWRITE "polynomial_rec" 1)
            (("2" (SPLIT -1)
              (("1" (REWRITE "complex_plus_real" :DIR RL)
                (("1" (REPLACES -1)
                  (("1" (REWRITE "complex_mult_real" :DIR RL)
                    (("1" (INST -1 "j+1")
                      (("1" (REPLACES -1 :DIR RL)
                        (("1" (REWRITE "cpow_real") (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2) (("2" (SKEEP) (("2" (INSTEEP) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|polynomial_rec| FORMULA-DECL NIL |polynomials| |reals|)
    (|complex_plus_real| FORMULA-DECL NIL |complex_types| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|complex_mult_real| FORMULA-DECL NIL |complex_types| NIL)
    (|cpow_real| FORMULA-DECL NIL |complex_types| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|cpow| DEF-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|real_root_cpolynomial_odd| 0
  (|real_root_cpolynomial_odd-1| NIL 3931036870
   ("" (SKEEP)
    (("" (LEMMA "root_polynomial_odd")
      (("" (INST -1 "n" "LAMBDA(n:nat):Re(a(n))")
        (("" (ASSERT)
          (("" (SPLIT -1)
            (("1" (SKEEP)
              (("1" (INST 2 "real_(x)")
                (("1" (ASSERT)
                  (("1" (LEMMA "cpolynomial_polynomial")
                    (("1" (INSTEEP :BUT (("p" "LAMBDA (n: nat): Re(a(n))")))
                      (("1" (SPLIT -1)
                        (("1" (REPLACES -2) NIL NIL)
                         ("2" (HIDE-ALL-BUT (-2 1))
                          (("2" (EXPAND "cpolynomial_real?")
                            (("2" (SKEEP)
                              (("2" (INSTEEP)
                                (("2" (GRIND)
                                  (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (FLATTEN)
              (("2" (HIDE-ALL-BUT (-1 -2 1))
                (("2" (EXPAND "cpolynomial_real?")
                  (("2" (INST -2 "n")
                    (("2" (DECOMPOSE-EQUALITY 1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|cpolynomial_polynomial| FORMULA-DECL NIL |cpolynomial_real| NIL)
    (|cpolynomial_real?| CONST-DECL "bool" |cpolynomial_real| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real_?| CONST-DECL "bool" |complex_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|root_polynomial_odd| FORMULA-DECL NIL |cpolynomial_real| NIL))
   SHOSTAK))
 (|cpolynomial_real_conjugate_real| 0
  (|cpolynomial_real_conjugate_real-1| NIL 3930830700
   ("" (SKEEP :BUT "n")
    (("" (INDUCT "n")
      (("1" (GRIND) NIL NIL)
       ("2" (SKEEP)
        (("2" (SPLIT -1)
          (("1" (REWRITE "cpolynomial_rec")
            (("1" (REWRITE "cpolynomial_rec")
              (("1" (REWRITE "conjugate_plus")
                (("1" (REWRITE "conjugate_times")
                  (("1" (REWRITE "conj_pow")
                    (("1" (REPLACES -1 :DIR RL)
                      (("1" (EXPAND "cpolynomial_real?")
                        (("1" (INST -1 "1+j")
                          (("1" (LEMMA "conjugate_eq")
                            (("1" (INST -1 "a(1+j)") (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2)
            (("2" (EXPAND "cpolynomial_real?")
              (("2" (SKEEP) (("2" (INSTEEP) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cpolynomial_real?| CONST-DECL "bool" |cpolynomial_real| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|conjugate| CONST-DECL "complex" |complex_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_?| CONST-DECL "bool" |complex_types| NIL)
    (|conjugate_times| FORMULA-DECL NIL |complex_types| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|conjugate_eq| FORMULA-DECL NIL |complex_types| NIL)
    (|conj_pow| FORMULA-DECL NIL |complex_types| NIL)
    (|conjugate_plus| FORMULA-DECL NIL |complex_types| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   SHOSTAK))
 (|cpolynomial_real_root_conjugate| 0
  (|cpolynomial_real_root_conjugate-1| NIL 3930933943
   ("" (SKEEP*)
    (("" (LEMMA "cpolynomial_real_conjugate_real")
      (("" (INSTEEP)
        (("" (ASSERT) (("" (REPLACES -3) (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|cpolynomial_real_conjugate_real| FORMULA-DECL NIL |cpolynomial_real| NIL)
    (|conjugate_real| FORMULA-DECL NIL |complex_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK)))

