% Analytical solution to cubic polynomials (including complex roots)

cubic : THEORY
BEGIN

  IMPORTING reals@power_props,
	    reals@sign3,
	    complex_types,
	    complex_root,
	    quadratic,
	    fundamental_algebra,
	    complex_props

  a         : VAR nzreal
  b,c,d,p,q : VAR real
  rz        : VAR (real_?)

%wikipedia

  cubic_discr(a,b,c,d):real =
    18*a*b*c*d-4*b^3*d+b^2*c^2-4*a*c^3-27*a^2*d^2
    
  delta0(a,b,c):real =
    sq(b)-3*a*c

  delta1(a,b,c,d):real =
    2*b^3-9*a*b*c+27*sq(a)*d

  delta_expr(a,b,c,d): MACRO real =
    sq(delta1(a,b,c,d))-4*delta0(a,b,c)^3

  delta_expr_cubic_discr: LEMMA
    delta_expr(a,b,c,d) = -27*a^2*cubic_discr(a,b,c,d)

  delta_expr_eq_0 : LEMMA
    delta_expr(a,b,c,d) = 0 IFF cubic_discr(a,b,c,d) = 0 

  cubic_discr_eq_0 : LEMMA
    cubic_discr(a,b,c,d) = 0 IMPLIES
    (delta0(a,b,c) = 0 IFF delta1(a,b,c,d) = 0)

  P(a,b,c) : real = -delta0(a,b,c)/(3*sq(a))

  P_eq_0 : LEMMA
    P(a,b,c) = 0 IFF delta0(a,b,c) = 0

  Q(a,b,c,d) : real = delta1(a,b,c,d)/((3*a)^3)

  Q_eq_0 : LEMMA
    Q(a,b,c,d) = 0 IFF delta1(a,b,c,d) = 0

  discr_cubic_discr : LEMMA
    discr(1,Q(a, b, c, d),-P(a, b, c)^3/27) = -cubic_discr(a,b,c,d)/(27*a^4)

  c_cubic(a,b,c,d)(x:complex) : complex =
    a*x^3 + b*x^2 + c*x + d

%vieta

  cubic_iff_reduced : LEMMA
    FORALL (x:complex):
      c_cubic(a,b,c,d)(x) = real_(0) IFF
      c_cubic(1,b/a,c/a,d/a)(x) = real_(0)

  depressed(p,q)(t:complex) : complex =
    t^3 + p*t + q 

  cubic_iff_depressed : LEMMA
    FORALL (x,t:complex):
      x = t-b/(3*a) IMPLIES
        (c_cubic(a,b,c,d)(x) = real_(0) IFF
         depressed(P(a,b,c),Q(a,b,c,d))(t) = real_(0))

  vieta(p,q)(w:nzcomplex) : complex =
    w^3 + q - p^3/(27*w^3)

  depressed_iff_vieta : LEMMA
    FORALL (t:complex,w:nzcomplex):
      t = w-p/(3*w) IMPLIES
        (depressed(p,q)(t) = real_(0) IFF
         vieta(p,q)(w) = real_(0))

  vieta_iff_quadratic : LEMMA
    FORALL (w:nzcomplex):
      vieta(p,q)(w) = real_(0) IFF
      c_quadratic(1,q,-p^3/27)(w^3) = real_(0)

  w_exists : LEMMA
    FORALL (t:complex,p:nzreal) :
      EXISTS (w:nzcomplex) : t = w-p/(3*w)

  x_from_t : LEMMA
    FORALL (x,t:complex) :
      x+b/(3*a) = t IFF x = t-b/(3*a)
  
  w_from_t : LEMMA
    FORALL (t:complex,w:nzcomplex):
      t = w-p/(3*w) AND real_?(t) IMPLIES
      c_quadratic(3,-3*Re(t),-p)(w) = real_(0)     
  
  cubic_iff_quadratic : THEOREM
    LET p = P(a,b,c),
        q = Q(a,b,c,d) IN
      FORALL (x:complex) :
        LET t = x+b/(3*a) IN
          c_cubic(a,b,c,d)(x) = real_(0) IFF
	  IF p = 0 THEN t^3 = real_(-q)
          ELSE
	    FORALL (w:nzcomplex):
             t = w-p/(3*w) IMPLIES
             c_quadratic(1,q,-p^3/27)(w^3) = real_(0)
	  ENDIF

  eps  : VAR Sign
  eps3 : VAR Sign3

%wikipedia

  zeta(eps3): nzcomplex =
    IF eps3 = 0 THEN real_(1)
    ELSE
      (-1/2)+eps3*(1/2)*sqrt(3)*complex_i
    ENDIF

  zeta_one: LEMMA
    zeta(1)=exp(2*pi/3*complex_i)

  zeta_neg: LEMMA
    zeta(-1)=exp(4*pi/3*complex_i)

  zeta_unit: LEMMA
    FORALL (eps:Sign):
    zeta(eps)*zeta(-eps) = real_(1)

  zeta_eq_1: LEMMA
   zeta(eps3) = real_(1) IFF eps3 = 0

  zeta_sq_eq_1: LEMMA
   sq(zeta(eps3)) = real_(1) IFF eps3 = 0
   
  zeta_cube: LEMMA
    FORALL (eps:Sign):
    cpow(zeta(eps))(3) = real_(1)
    
  zeta_closed: LEMMA
    FORALL(x,y:Sign3) : EXISTS (z:Sign3) :
    zeta(x)*zeta(y) = zeta(z)

  zeta_root_of_unity: LEMMA
    FORALL(m:nat | m<=3) : EXISTS(eps3:Sign3) :
    root_of_unity(3)(m) = zeta(eps3)
    
  zeta_inv: LEMMA
    1/zeta(eps3) = zeta(-eps3)

%complex cube root properties

  cubicrt(z:complex) : MACRO complex =
    c_root(z,3)

  cubicrt_real : LEMMA
    FORALL (r:real):
    cubicrt(real_(r)) = real_(root(r,3))

  cubicrt_mult_real : LEMMA
    FORALL (r1,r2:real):
      cubicrt(real_(r1))*cubicrt(real_(r2)) = cubicrt(real_(r1*r2))

  cubicrt_realj : JUDGEMENT
    cubicrt(rz) HAS_TYPE (real_?)

  cubicrt_def : LEMMA
    FORALL (z:complex) : cubicrt(z)^3 = z
  
  cubicrt_eq_zero : LEMMA
    FORALL (z:complex): cubicrt(z) = real_(0) IFF z = real_(0)
  
  cubicrt_complete : LEMMA
    FORALL (z1,z2:complex) :
    z2^3 = z1 IFF EXISTS (eps3): z2=zeta(eps3)*cubicrt(z1)

  cubicrt_real_aux: LEMMA
    FORALL (r1:real,r2:nzreal):
    cubicrt(real_(-(r1/(r2^3)))) = (-1/r2)*cubicrt(real_(r1))

  d0,d1,dd : VAR real

  c_term_cubic3(d0,d1,dd) : complex = %C^3 in wikipedia
    IF d0 = 0 THEN real_(d1) 
    ELSIF dd = 0 THEN real_(d1/2)
    ELSIF dd > 0 THEN real_((d1+sqrt(dd))/2)
    ELSE complex_(d1,sqrt(-dd))/2
    ENDIF

   c_term_cubic3_minus(d0,d1,dd) : complex = %other choice of C^3
    IF d0 = 0 THEN real_(d1) 
    ELSIF dd = 0 THEN real_(d1/2)
    ELSIF dd > 0 THEN real_((d1-sqrt(dd))/2)
    ELSE complex_(d1,-sqrt(-dd))/2
    ENDIF

  c_term_conj : LEMMA
    dd <= 0 IMPLIES
    c_term_cubic3_minus(d0,d1,dd) = conjugate(c_term_cubic3(d0,d1,dd))

  c_term_cubic3_eq_zero : LEMMA
    FORALL (D0,D1:real) : 
      LET DD = sq(D1)-4*D0^3 IN
      c_term_cubic3(D0,D1,DD) = real_(0) IFF (DD = 0 AND D0 = 0)

  c_term_cubic(d0,d1,dd) : complex =  %C in wikipedia
    cubicrt(c_term_cubic3(d0,d1,dd))

  c_term_cubic_minus(a,d0,d1,dd) : complex =  %C in wikipedia
    cubicrt(c_term_cubic3_minus(d0,d1,dd))

  c_term_cubic_eq_zero : LEMMA
    FORALL (D0,D1:real) : 
      LET DD = sq(D1)-4*D0^3 IN
      c_term_cubic(D0,D1,DD) = real_(0) IFF (DD = 0 AND D0 = 0)

  c_term_cubic_eq_zero2 : LEMMA
    FORALL (D0,D1:real) : 
      LET DD = sq(D1)-4*D0^3 IN
      c_term_cubic(D0,D1,DD) = real_(0) IMPLIES DD = 0 

  cubic_root(a,b,c,d,eps3) : complex = %from wiki
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = sq(D1)-4*D0^3,
        C0 = c_term_cubic(D0,D1,DD) IN
    IF C0=real_(0) THEN
      real_(-b/(3*a)) %1 repeated root 3 times case
    ELSE
      LET C = zeta(eps3)*C0 IN %x_k in wiki
      (-1/(3*a))*(b+C+D0/C)
    ENDIF

  cubic_root_DD_D0_eq_0 : LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = sq(D1)-4*D0^3 IN
    DD=0 AND D0=0 IMPLIES
    cubic_root(a,b,c,d,eps3) = real_(-b/(3*a))

  c_term_cubic3_real : LEMMA
    FORALL (D0:nzreal,D1:real) : 
    c_term_cubic3(D0,D1,0) = real_(D1/2)

  c_term_cubic_real : LEMMA
    FORALL (D0:nzreal,D1:real) : 
    real_?(c_term_cubic(D0,D1,0))

  c3_times_cminus3 : LEMMA
  LET D0 = delta0(a,b,c),
      D1 = delta1(a,b,c,d),
      DD = sq(D1)-4*D0^3 IN
    D0 /= 0 IMPLIES
    c_term_cubic3_minus( D0, D1, DD) * c_term_cubic3(D0, D1, DD) = real_(D0) ^ 3
  
  c_times_cminus : LEMMA
  LET D0 = delta0(a,b,c),
      D1 = delta1(a,b,c,d),
      DD = sq(D1)-4*D0^3 IN
    D0 /= 0 IMPLIES
    EXISTS(eps3: Sign3) : c_term_cubic_minus(a, D0, D1, DD) * c_term_cubic(D0, D1, DD) = zeta(eps3) * D0

END cubic
