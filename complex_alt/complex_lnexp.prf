(|complex_lnexp|
 (|exp_TCC1| 0
  (|exp_TCC1-1| |nil| 3294275262
   ("" (SKOSIMP)
    (("" (ASSERT)
      (("" (REWRITE "zero_times3")
        (("" (REWRITE "zero_times3")
          (("" (LEMMA "sin_cos_eq_0" ("a" "Im(z!1)"))
            (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|sin_cos_eq_0| FORMULA-DECL NIL |trig_basic| |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|zero_times3| FORMULA-DECL NIL |real_props| NIL))
   SHOSTAK
   (|exp| SUBTYPE
    "complex_types.complex_(number_fields.*(ln_exp.exp(Re(complex_lnexp.z)), sincos_def.cos(Im(complex_lnexp.z))), number_fields.*(ln_exp.exp(Re(complex_lnexp.z)), sincos_def.sin(Im(complex_lnexp.z))))"
    "nzcomplex")))
 (|exp_real| 0
  (|exp_real-1| NIL 3930686907
   ("" (GRIND)
    (("1" (REWRITE "sin_0") (("1" (ASSERT) NIL NIL)) NIL)
     ("2" (REWRITE "cos_0") (("2" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((|cos_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL))
   SHOSTAK))
 (|Re_exp| 0
  (|Re_exp-1| |nil| 3456000255 ("" (GRIND) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|))
   SHOSTAK))
 (|Im_exp| 0
  (|Im_exp-1| |nil| 3456000259 ("" (GRIND) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|))
   SHOSTAK))
 (|exp_i_pi| 0
  (|exp_i_pi-1| |nil| 3294274991
   ("" (REWRITE "complex_ext")
    (("" (REWRITE "cos_pi") (("" (REWRITE "sin_pi") NIL NIL)) NIL)) NIL)
   ((|cos_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|Re_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL))
   SHOSTAK))
 (|exp_plus| 0
  (|exp_plus-1| |nil| 3294335316
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "exp_sum")
        (("" (REWRITE "cos_plus")
          (("" (REWRITE "sin_plus") (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|mul_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|cos_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|exp_sum| FORMULA-DECL NIL |ln_exp| |lnexp|))
   SHOSTAK))
 (|exp_negate| 0
  (|exp_negate-1| |nil| 3294275508
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "exp_neg")
        (("" (TYPEPRED "exp(x!1)")
          (("" (LEMMA "nz_sq_abs_pos" ("n0z" "exp(x!1)"))
            (("" (REWRITE "div_cancel4" 1)
              (("" (REWRITE "div_cancel4" 1)
                (("" (REWRITE "cos_neg")
                  (("" (REWRITE "sin_neg")
                    ((""
                      (LEMMA "div_cancel3"
                       ("n0z" "exp(Re(x!1))" "x"
                        "cos(Im(x!1)) * sq_abs(exp(x!1))" "y"
                        "exp(Re(x!1)) * cos(Im(x!1))"))
                      (("" (REPLACE -1)
                        (("" (HIDE -1)
                          ((""
                            (LEMMA "div_cancel3"
                             ("n0z" "exp(Re(x!1))" "x"
                              "(-1)*sin(Im(x!1)) * sq_abs(exp(x!1))" "y"
                              "(-1)*exp(Re(x!1)) * sin(Im(x!1))"))
                            (("" (REPLACE -1)
                              (("" (HIDE -1)
                                (("" (EXPAND "sq_abs")
                                  (("" (ASSERT)
                                    (("" (REWRITE "sq_times")
                                      (("" (REWRITE "sq_times")
                                        ((""
                                          (LEMMA "sin2_cos2" ("a" "Im(x!1)"))
                                          ((""
                                            (LEMMA "sq_nz_pos"
                                             ("nz" "exp(Re(x!1))"))
                                            ((""
                                              (LEMMA "both_sides_times1"
                                               ("n0z" "sq(exp(Re(x!1)))" "x"
                                                "sq(sin(Im(x!1))) + sq(cos(Im(x!1)))"
                                                "y" "1"))
                                              (("" (REPLACE -1 -3 RL)
                                                (("" (EXPAND "sq" -3 4)
                                                  (("" (ASSERT) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|nz_sq_abs_pos| APPLICATION-JUDGEMENT "posreal" |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_div2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_div2| FORMULA-DECL NIL |complex_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|div_cancel4| FORMULA-DECL NIL |real_props| NIL)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|div_cancel3| FORMULA-DECL NIL |real_props| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_times| FORMULA-DECL NIL |sq| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|)
    (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|sq_nz_pos| JUDGEMENT-TCC NIL |sq| |reals|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|nz_sq_abs_pos| JUDGEMENT-TCC NIL |complex_types| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|exp_neg| FORMULA-DECL NIL |ln_exp| |lnexp|))
   SHOSTAK))
 (|exp_minus| 0
  (|exp_minus-3| |nil| 3721237518
   ("" (AUTO-REWRITE "complex_ext")
    (("" (SKOSIMP)
      (("" (LEMMA "exp_negate" ("x" "y!1"))
        (("" (LEMMA "exp_plus" ("x" "x!1" "y" "-y!1"))
          (("" (ASSERT)
            (("" (FLATTEN)
              (("" (REWRITE "cos_neg")
                (("" (REWRITE "sin_neg")
                  (("" (REWRITE "exp_neg")
                    (("" (REPLACE -1)
                      (("" (REPLACE -2)
                        (("" (HIDE -1 -2)
                          (("" (SPLIT)
                            (("1" (CROSS-MULT)
                              (("1"
                                (LEMMA "div_distributes_minus"
                                 ("x"
                                  "sq_abs(exp(y!1)) * cos(Im(x!1)) * cos(Im(y!1)) * exp(Re(x!1))"
                                  "y"
                                  "sq_abs(exp(y!1)) * exp(Re(x!1)) * sin(Im(x!1)) * -sin(Im(y!1))"
                                  "n0z" "exp(Re(y!1))"))
                                (("1" (REPLACE -1)
                                  (("1" (HIDE -1) (("1" (CROSS-MULT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (CROSS-MULT)
                              (("2"
                                (LEMMA "div_distributes"
                                 ("x"
                                  "sq_abs(exp(y!1)) * cos(Im(x!1)) * -sin(Im(y!1)) * exp(Re(x!1))"
                                  "y"
                                  "sq_abs(exp(y!1)) * exp(Re(x!1)) * sin(Im(x!1)) * cos(Im(y!1))"
                                  "n0z" "exp(Re(y!1))"))
                                (("2" (REPLACE -1)
                                  (("2" (HIDE -1) (("2" (CROSS-MULT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|exp_plus| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|div_distributes| FORMULA-DECL NIL |real_props| NIL)
    (|times_div1| FORMULA-DECL NIL |real_props| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|div_cancel4| FORMULA-DECL NIL |real_props| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|div_cancel3| FORMULA-DECL NIL |real_props| NIL)
    (|div_distributes_minus| FORMULA-DECL NIL |real_props| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|exp_neg| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Im_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_div2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div2| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|mul_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nz_sq_abs_pos| APPLICATION-JUDGEMENT "posreal" |complex_types| NIL)
    (|div_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|exp_negate| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   NIL))
 (|exp_periodicity| 0
  (|exp_periodicity-2| "" 3790337245
   ("" (SKOSIMP)
    (("" (EXPAND "exp")
      (("" (ASSERT)
        (("" (LEMMA "sin_period" ("a" "Im(x!1)" "j" "j!1"))
          (("" (REPLACE -1 1 RL)
            (("" (LEMMA "cos_period" ("a" "Im(x!1)" "j" "j!1"))
              (("" (REPLACE -1 1 RL) (("" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|exp_periodicity-1| |nil| 3295026159
   ("" (SKOSIMP)
    (("" (EXPAND "exp")
      (("" (LEMMA "Re_imag" ("x" "2 * j!1 * pi"))
        (("" (ASSERT)
          (("" (LEMMA "Im_imag" ("x" "2 * j!1 * pi"))
            (("" (ASSERT)
              (("" (REWRITE "Re_plus")
                (("" (REWRITE "Im_plus")
                  (("" (REPLACE -1)
                    (("" (REPLACE -2)
                      (("" (ASSERT)
                        (("" (LEMMA "sin_period" ("a" "Im(x!1)" "j" "j!1"))
                          (("" (REPLACE -1 1 RL)
                            (("" (LEMMA "cos_period" ("a" "Im(x!1)" "j" "j!1"))
                              (("" (REPLACE -1 1 RL) (("" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sin_period| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_period| FORMULA-DECL NIL |sincos| |trig|)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|))
   SHOSTAK))
 (|abs_exp| 0
  (|abs_exp-1| |nil| 3294844650
   ("" (SKOSIMP)
    (("" (ASSERT)
      (("" (EXPAND "abs")
        (("" (EXPAND "sq_abs")
          (("" (ASSERT)
            (("" (REWRITE "sq_eq" 1 :DIR RL)
              (("" (ASSERT)
                (("" (LEMMA "sin2_cos2" ("a" "Im(z!1)"))
                  (("" (ASSERT)
                    (("" (REWRITE "sq_times")
                      (("" (REWRITE "sq_times") (("" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq_eq| FORMULA-DECL NIL |sq| |reals|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sq_times| FORMULA-DECL NIL |sq| |reals|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|abs| CONST-DECL "nnreal" |polar| NIL))
   SHOSTAK))
 (|arg_exp| 0
  (|arg_exp-1| |nil| 3456123074
   ("" (SKOSIMP)
    (("" (ASSERT)
      (("" (EXPAND "exp")
        (("" (EXPAND "arg")
          (("" (ASSERT)
            (("" (REWRITE "zero_times3")
              (("" (REWRITE "zero_times3")
                (("" (CASE-REPLACE "cos(Im(z!1)) = 0 AND sin(Im(z!1)) = 0")
                  (("1" (LEMMA "sin_cos_eq_0" ("a" "Im(z!1)"))
                    (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                   ("2" (REPLACE 1 2)
                    (("2" (HIDE 1)
                      (("2"
                        (LEMMA "both_sides_times_pos_lt1"
                         ("pz" "exp(Re(z!1))" "x" "sin(Im(z!1))" "y" "0"))
                        (("2" (REPLACE -1)
                          (("2" (HIDE -1)
                            (("2"
                              (LEMMA "atan2_cancel_pos"
                               ("x" "cos(Im(z!1))" "y" "sin(Im(z!1))" "pz"
                                "exp(Re(z!1))"))
                              (("2" (SPLIT)
                                (("1" (REPLACE -1)
                                  (("1" (HIDE -1)
                                    (("1" (CASE "0<=Im(z!1)")
                                      (("1" (LEMMA "sin_ge_0" ("a" "Im(z!1)"))
                                        (("1" (ASSERT)
                                          (("1" (HIDE -3)
                                            (("1" (REWRITE "atan2_cos_sin") NIL
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (CASE "Im(z!1)<0")
                                        (("1" (HIDE 1)
                                          (("1"
                                            (LEMMA "sin_period"
                                             ("a" "Im(z!1)" "j" "1"))
                                            (("1"
                                              (LEMMA "cos_period"
                                               ("a" "Im(z!1)" "j" "1"))
                                              (("1" (REPLACE -1)
                                                (("1" (REPLACE -2)
                                                  (("1" (HIDE -1 -2)
                                                    (("1"
                                                      (LEMMA "sin_lt_0"
                                                       ("a"
                                                        "Im(z!1) + 2 * 1 * pi"))
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (REWRITE
                                                           "atan2_cos_sin")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (LEMMA "sin_cos_eq_0" ("a" "Im(z!1)"))
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|zero_times3| FORMULA-DECL NIL |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sin_cos_eq_0| FORMULA-DECL NIL |trig_basic| |trig|)
    (|atan2_cancel_pos| FORMULA-DECL NIL |atan2| |trig|)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|atan2_cos_sin| FORMULA-DECL NIL |atan2| |trig|)
    (|sin_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|cos_period| FORMULA-DECL NIL |sincos| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_lt_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sin_period| FORMULA-DECL NIL |sincos| |trig|)
    (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL))
   SHOSTAK))
 (|exp_imag| 0
  (|exp_imag-1| |nil| 3722764752
   ("" (SKOSIMP)
    (("" (EXPAND "exp")
      (("" (CASE "Re(r!1 * complex_i)=0")
        (("1" (REPLACE -1 1)
          (("1" (LEMMA "exp_0")
            (("1" (REPLACE -1 1)
              (("1" (CASE "Im(r!1 * complex_i)=r!1")
                (("1" (REPLACE -1 1)
                  (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                  NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|Im_add2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_add2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL))
   SHOSTAK))
 (|arg_exp_imag| 0
  (|arg_exp_imag-1| |nil| 3722764946
   ("" (SKEEP)
    (("" (REWRITE "exp_imag")
      (("" (TYPEPRED "theta")
        (("" (EXPAND "arg")
          (("" (LIFT-IF)
            (("" (GRIND :EXCLUDE "atan2")
              (("1" (LEMMA "cos_eq_0_2pi")
                (("1" (LEMMA "sin_eq_0_2pi")
                  (("1" (INST -1 "theta+pi")
                    (("1" (INST -2 "theta+pi")
                      (("1" (LEMMA "sin_plus")
                        (("1" (LEMMA "cos_plus")
                          (("1" (INST? -)
                            (("1" (INST? -)
                              (("1" (LEMMA "cos_pi")
                                (("1" (LEMMA "sin_pi") (("1" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLIP-INEQ -3)
                (("2" (LEMMA "sin_ge_0")
                  (("2" (INST -1 "theta")
                    (("2" (CASE "0<= theta AND theta<=pi")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (CASE "-pi<theta AND theta<0")
                        (("1" (EXPAND "atan2")
                          (("1" (GRIND)
                            (("1" (FLIP-INEQ -4)
                              (("1"
                                (CASE "1 * sin(theta) / cos(theta)=tan(theta)")
                                (("1" (REPLACE -1 4)
                                  (("1" (HIDE -1)
                                    (("1" (LEMMA "atan_tan")
                                      (("1" (CASE "-pi/2<theta")
                                        (("1" (INST -2 "theta") NIL NIL)
                                         ("2" (CASE "theta<=-pi/2")
                                          (("1" (LEMMA "cos_le_0")
                                            (("1" (INST -1 "theta+2*pi")
                                              (("1" (LEMMA "cos_plus")
                                                (("1" (INST? -)
                                                  (("1" (LEMMA "cos_period")
                                                    (("1" (INST -1 "theta" "1")
                                                      (("1" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL)
                             ("2" (LEMMA "cos_eq_0_2pi")
                              (("2" (INST -1 "theta+pi")
                                (("2" (LEMMA "cos_plus")
                                  (("2" (INST -1 "theta" "pi")
                                    (("2" (LEMMA "cos_pi")
                                      (("2" (LEMMA "sin_pi")
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (CASE "theta<-pi/2")
                              (("1" (LEMMA "atan_tan")
                                (("1" (INST -1 "theta+pi")
                                  (("1" (LEMMA "tan_plus")
                                    (("1" (INST -1 "theta" "pi")
                                      (("1" (ASSERT)
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "cos_pi")
                                            (("1" (LEMMA "cos_plus")
                                              (("1" (INST -1 "pi" "theta")
                                                (("1" (LEMMA "sin_pi")
                                                  (("1" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (CASE "-pi/2<=theta")
                                (("1" (LEMMA "cos_ge_0")
                                  (("1" (INST -1 "theta")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3" (CASE "theta<=0")
                (("1" (LEMMA "sin_le_0")
                  (("1" (INST -1 "theta+2*pi")
                    (("1" (LEMMA "sin_period")
                      (("1" (INST -1 "theta" "1") (("1" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (CASE "theta=pi")
                  (("1" (LEMMA "sin_pi") (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (CASE "theta<pi")
                    (("1" (EXPAND "atan2")
                      (("1" (GRIND :EXCLUDE "atan")
                        (("1" (FLIP-INEQ -4)
                          (("1" (CASE "pi/2<=theta")
                            (("1" (LEMMA "cos_le_0")
                              (("1" (INST -1 "theta") (("1" (ASSERT) NIL NIL))
                                NIL))
                              NIL)
                             ("2" (CASE "theta<pi/2 AND 0<theta")
                              (("1"
                                (CASE "1 * sin(theta) / cos(theta)=tan(theta)")
                                (("1" (REPLACE -1 7)
                                  (("1" (LEMMA "atan_tan")
                                    (("1" (INST -1 "theta")
                                      (("1" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "cos_eq_0_2pi")
                          (("2" (INST -1 "theta+pi")
                            (("2" (LEMMA "cos_plus")
                              (("2" (INST -1 "theta" "pi")
                                (("2" (LEMMA "sin_pi")
                                  (("2" (LEMMA "cos_pi")
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (CASE "0<theta")
                          (("1" (CASE "theta<=pi/2")
                            (("1" (LEMMA "cos_ge_0")
                              (("1" (INST -1 "theta") (("1" (ASSERT) NIL NIL))
                                NIL))
                              NIL)
                             ("2" (CASE "pi/2<theta")
                              (("1"
                                (CASE "1 * sin(theta) / cos(theta)=tan(theta)")
                                (("1" (REPLACE -1 8)
                                  (("1" (HIDE -1)
                                    (("1" (LEMMA "atan_tan")
                                      (("1" (INST -1 "theta-pi")
                                        (("1" (LEMMA "tan_minus")
                                          (("1" (INST -1 "theta" "pi")
                                            (("1" (LEMMA "tan_pi")
                                              (("1" (LEMMA "sin_pi")
                                                (("1" (LEMMA "cos_pi")
                                                  (("1" (SPLIT -4)
                                                    (("1" (REPLACE -4 -1)
                                                      (("1" (REPLACE -1 -5)
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT) NIL NIL)
                                                     ("3" (ASSERT) NIL NIL)
                                                     ("4" (ASSERT)
                                                      (("4" (LEMMA "cos_minus")
                                                        (("4"
                                                          (INST -1 "theta"
                                                           "pi")
                                                          (("4" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("5" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("4" (CASE "theta<0")
                (("1" (LEMMA "sin_lt_0")
                  (("1" (INST -1 "theta+2*pi")
                    (("1" (LEMMA "sin_period")
                      (("1" (INST -1 "theta" "1") (("1" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (GRIND)
                  (("1" (FLIP-INEQ -3)
                    (("1" (CASE "pi/2<=theta")
                      (("1" (LEMMA "cos_le_0")
                        (("1" (INST -1 "theta") (("1" (ASSERT) NIL NIL)) NIL))
                        NIL)
                       ("2" (CASE "theta<pi/2 AND 0<=theta")
                        (("1" (CASE "1 * sin(theta) / cos(theta)=tan(theta)")
                          (("1" (REPLACE -1 6)
                            (("1" (HIDE -1)
                              (("1" (LEMMA "atan_tan")
                                (("1" (INST -1 "theta")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (CASE "0<=theta AND theta<=pi/2")
                    (("1" (LEMMA "cos_ge_0")
                      (("1" (INST -1 "theta") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("2" (CASE "pi/2<theta")
                      (("1" (LEMMA "atan_tan")
                        (("1" (INST -1 "theta-pi")
                          (("1" (LEMMA "tan_minus")
                            (("1" (INST -1 "theta" "pi")
                              (("1" (LEMMA "tan_pi")
                                (("1" (LEMMA "cos_pi")
                                  (("1" (LEMMA "sin_pi")
                                    (("1" (SPLIT -4)
                                      (("1" (REPLACE -1 -5)
                                        (("1"
                                          (CASE
                                              "1 * sin(theta) / cos(theta)=tan(theta)")
                                          (("1" (REPLACE -1 6)
                                            (("1" (GRIND :EXCLUDE "tan") NIL
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT) NIL NIL)
                                       ("3" (ASSERT) NIL NIL)
                                       ("4" (ASSERT)
                                        (("4" (LEMMA "cos_eq_0_2pi")
                                          (("4" (LEMMA "cos_minus")
                                            (("4" (INST -1 "theta" "pi")
                                              (("4" (INST -2 "theta")
                                                (("4" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("5" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|exp_imag| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sin_eq_0_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|cos_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_plus| FORMULA-DECL NIL |sincos| |trig|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cos_eq_0_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|tan_plus| FORMULA-DECL NIL |trig_basic| |trig|)
    (|cos_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|atan_tan| FORMULA-DECL NIL |atan| |trig|)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|cos_period| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_le_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|real_abs_lt_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|tan| CONST-DECL "real" |trig_basic| |trig|)
    (|Tan?| CONST-DECL "bool" |trig_basic| |trig|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|tan_minus| FORMULA-DECL NIL |trig_basic| |trig|)
    (|tan_pi| FORMULA-DECL NIL |trig_basic| |trig|)
    (|cos_minus| FORMULA-DECL NIL |sincos| |trig|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sin_le_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (|sin_period| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_lt_0| FORMULA-DECL NIL |trig_ineq| |trig|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|))
   SHOSTAK))
 (|ln_real_TCC1| 0
  (|ln_real_TCC1-1| NIL 3930687023 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|ln_real| SUBTYPE "complex_types.complex_(complex_lnexp.p, 0)"
    "nzcomplex")))
 (|ln_real| 0
  (|ln_real-1| NIL 3930687031 ("" (GRIND) NIL NIL)
   ((|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|ln| CONST-DECL "complex" |complex_lnexp| NIL)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|atan_0| FORMULA-DECL NIL |atan| |trig|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|Integral| CONST-DECL "real" |integral_def| |analysis|)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|sqrt_square| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL))
   SHOSTAK))
 (|Re_ln| 0
  (|Re_ln-1| |nil| 3456000946
   ("" (SKOSIMP) (("" (EXPAND "ln" 1 1) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|ln| CONST-DECL "complex" |complex_lnexp| NIL)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|Im_ln| 0
  (|Im_ln-1| |nil| 3456000994
   ("" (SKOSIMP) (("" (EXPAND "ln" 1 1) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|ln| CONST-DECL "complex" |complex_lnexp| NIL)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|ln_exp| 0
  (|ln_exp-3| |nil| 3721237724
   ("" (AUTO-REWRITE "complex_ext")
    ((""
      (CASE "FORALL (z: complex):
                             -pi < Im(z) AND Im(z) <= pi =>
                              ln(exp(z))=z")
      (("1" (SKOSIMP)
        (("1" (INST - "z!1+(2 * -j!1 * pi) * complex_i")
          (("1" (SPLIT)
            (("1" (LEMMA "exp_periodicity" ("x" "z!1" "j" "-j!1"))
              (("1" (ASSERT)
                (("1" (FLATTEN)
                  (("1" (EXPAND "arg")
                    (("1" (ASSERT)
                      (("1" (REPLACE -1)
                        (("1" (REPLACE -2)
                          (("1"
                            (CASE-REPLACE "exp(Re(z!1)) * cos(Im(z!1)) = 0 AND
                            exp(Re(z!1)) * sin(Im(z!1)) = 0")
                            (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                             ("2"
                              (CASE-REPLACE "exp(Re(z!1)) * sin(Im(z!1)) < 0")
                              (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2) (("2" (SKOSIMP) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|ln| CONST-DECL "complex" |complex_lnexp| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|exp_periodicity| FORMULA-DECL NIL |complex_lnexp| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|abs_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|arg_exp| FORMULA-DECL NIL |complex_lnexp| NIL))
   NIL))
 (|exp_ln| 0
  (|exp_ln-2| |nil| 3721237900
   ("" (SKEEP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "exp_ln")
        (("" (LEMMA "Re_cos_abs1" ("n0x" "n0z/abs(n0z)"))
          (("" (LEMMA "Im_sin_abs1" ("n0x" "n0z/abs(n0z)"))
            (("" (LEMMA "arg_div_abs" ("n0x" "n0z"))
              (("" (REPLACES -1 :DIR RL)
                (("" (REWRITE "abs_div2")
                  (("" (REWRITE "div_simp") (("" (GRIND-REALS) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|ln| CONST-DECL "complex" |complex_lnexp| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|div_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|Re_cos_abs1| FORMULA-DECL NIL |polar| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|arg_div_abs| FORMULA-DECL NIL |polar| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|abs_div2| FORMULA-DECL NIL |polar| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|abs_abs| FORMULA-DECL NIL |polar| NIL)
    (|Im_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|div_cancel3| FORMULA-DECL NIL |real_props| NIL)
    (|Re_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|div_simp| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|Im_sin_abs1| FORMULA-DECL NIL |polar| NIL)
    (|exp_ln| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL))
   NIL))
 (|ln_mult| 0
  (|ln_mult-1| |nil| 3294856600
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "ln_mult")
        (("" (REWRITE "arg_mult") (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mul_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|ln| CONST-DECL "complex" |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|abs_mult| FORMULA-DECL NIL |polar| NIL)
    (|Re_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|arg_mult| FORMULA-DECL NIL |polar| NIL)
    (|ln_mult| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL))
   SHOSTAK))
 (|ln_inv_TCC1| 0
  (|ln_inv_TCC1-1| |nil| 3722878107 ("" (SUBTYPE-TCC) NIL NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|ln_inv| SUBTYPE
    "complex_types./(complex_types.complex_(1, 0), complex_lnexp.n0x)"
    "nzcomplex")))
 (|ln_inv| 0
  (|ln_inv-1| |nil| 3294948253
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "arg_inv")
        (("" (SPLIT)
          (("1" (REWRITE "ln_div") NIL NIL)
           ("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|ln| CONST-DECL "complex" |complex_lnexp| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|abs_inv| FORMULA-DECL NIL |polar| NIL)
    (|Re_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|ln_div| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|ln_1| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|arg_inv| FORMULA-DECL NIL |polar| NIL))
   SHOSTAK))
 (|ln_div| 0
  (|ln_div-1| |nil| 3295030968
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "ln_div")
        (("" (REWRITE "arg_div") (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|div_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|ln| CONST-DECL "complex" |complex_lnexp| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|abs_div| FORMULA-DECL NIL |polar| NIL)
    (|Re_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_ln| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|arg_div| FORMULA-DECL NIL |polar| NIL)
    (|ln_div| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL))
   SHOSTAK))
 (|sin_real| 0
  (|sin_real-1| NIL 3930687124 ("" (GRIND) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (|sin| CONST-DECL "complex" |complex_lnexp| NIL))
   SHOSTAK))
 (|cos_real| 0
  (|cos_real-1| NIL 3930687129 ("" (GRIND) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (|cos| CONST-DECL "complex" |complex_lnexp| NIL))
   SHOSTAK))
 (|Re_sin| 0
  (|Re_sin-1| |nil| 3456899317
   ("" (SKOSIMP) (("" (EXPAND "sin" 1 1) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|sin| CONST-DECL "complex" |complex_lnexp| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|Im_sin| 0
  (|Im_sin-1| |nil| 3456899337
   ("" (SKOSIMP) (("" (EXPAND "sin" 1 1) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|sin| CONST-DECL "complex" |complex_lnexp| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|Re_cos| 0
  (|Re_cos-1| |nil| 3456899346
   ("" (SKOSIMP) (("" (EXPAND "cos" 1 1) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|cos| CONST-DECL "complex" |complex_lnexp| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|Im_cos| 0
  (|Im_cos-1| |nil| 3456899357
   ("" (SKOSIMP) (("" (EXPAND "cos" 1 1) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|cos| CONST-DECL "complex" |complex_lnexp| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|sinh_TCC1| 0
  (|sinh_TCC1-1| |nil| 3770638965 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|sinh| SUBTYPE "complex_types.complex_(2, 0)" "nzcomplex")))
 (|Re_sinh| 0
  (|Re_sinh-1| |nil| 3456644280
   ("" (SKOSIMP)
    (("" (EXPAND "sinh")
      (("" (ASSERT) (("" (REWRITE "cos_neg") (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|Re_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|Im_sinh| 0
  (|Im_sinh-1| |nil| 3456644391
   ("" (SKOSIMP)
    (("" (EXPAND "sinh")
      (("" (ASSERT)
        (("" (REWRITE "sin_neg")
          (("" (EXPAND "cosh") (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|Im_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|Re_cosh| 0
  (|Re_cosh-1| |nil| 3456644501
   ("" (SKOSIMP)
    (("" (EXPAND "cosh")
      (("" (ASSERT) (("" (REWRITE "cos_neg") (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|Re_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL))
   SHOSTAK))
 (|Im_cosh| 0
  (|Im_cosh-1| |nil| 3456644519
   ("" (SKOSIMP)
    (("" (ASSERT)
      (("" (EXPAND "cosh")
        (("" (ASSERT)
          (("" (EXPAND "sinh")
            (("" (REWRITE "sin_neg") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL))
   SHOSTAK))
 (|sinh_eq_0| 0
  (|sinh_eq_0-4| |nil| 3721238661
   ("" (AUTO-REWRITE "complex_ext")
    (("" (SKOSIMP)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (ASSERT)
            (("1" (FLATTEN)
              (("1" (TYPEPRED "cosh(Re(z!1))")
                (("1" (REWRITE "zero_times3" -3)
                  (("1" (LEMMA "sin_cos_eq_0" ("a" "Im(z!1)"))
                    (("1" (REPLACE -3)
                      (("1" (REWRITE "zero_times3" -2)
                        (("1" (REPLACE 1)
                          (("1" (LEMMA "sin_eq_0" ("a" "Im(z!1)"))
                            (("1" (ASSERT)
                              (("1" (SKOSIMP)
                                (("1" (INST + "i!1")
                                  (("1" (ASSERT)
                                    (("1" (REWRITE "zero_times1")
                                      (("1" (HIDE-ALL-BUT (-3 2))
                                        (("1" (EXPAND "sinh")
                                          (("1" (NAME-REPLACE "ZZ" "Re(z!1)")
                                            (("1" (REWRITE "div_cancel3" -1)
                                              (("1"
                                                (LEMMA "exp_strict_increasing")
                                                (("1"
                                                  (EXPAND "strict_increasing?")
                                                  (("1"
                                                    (LEMMA "trichotomy"
                                                     ("x" "ZZ"))
                                                    (("1" (SPLIT)
                                                      (("1" (INST - "-ZZ" "ZZ")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (PROPAX) NIL NIL)
                                                       ("3" (INST - "ZZ" "-ZZ")
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP*)
          (("2" (ASSERT)
            (("2" (FLATTEN)
              (("2" (REWRITE "zero_times1")
                (("2" (REWRITE "one_times")
                  (("2" (REPLACE -1)
                    (("2" (REPLACE -2)
                      (("2" (HIDE -1 -2)
                        (("2" (REWRITE "sinh_0")
                          (("2" (REWRITE "cosh_0")
                            (("2" (REWRITE "sin_k_pi") (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|one_times| FORMULA-DECL NIL |extra_tegies| NIL)
    (|sinh_0| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|sin_k_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|cosh_0| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|zero_times3| FORMULA-DECL NIL |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|zero_times1| FORMULA-DECL NIL |real_props| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|div_cancel3| FORMULA-DECL NIL |real_props| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|strict_increasing?| CONST-DECL "bool" |real_fun_preds| |reals|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trichotomy| FORMULA-DECL NIL |real_axioms| NIL)
    (|exp_strict_increasing| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_eq_0| FORMULA-DECL NIL |sincos| |trig|)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|sin_cos_eq_0| FORMULA-DECL NIL |trig_basic| |trig|)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|posreal_ge1| NONEMPTY-TYPE-EQ-DECL NIL |hyperbolic| |lnexp|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|))
   NIL))
 (|cosh_eq_0| 0
  (|cosh_eq_0-2| |nil| 3721238759
   ("" (AUTO-REWRITE "complex_ext")
    (("" (SKOSIMP)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (ASSERT)
            (("1" (FLATTEN)
              (("1" (REWRITE "zero_times3" -1)
                (("1" (LEMMA "sin_cos_eq_0" ("a" "Im(z!1)"))
                  (("1" (REPLACE -1)
                    (("1" (REWRITE "zero_times3" -2)
                      (("1" (REPLACE 1)
                        (("1" (HIDE 1)
                          (("1" (REWRITE "cos_eq_0")
                            (("1" (SKOSIMP)
                              (("1" (INST + "i!1")
                                (("1" (ASSERT)
                                  (("1" (HIDE -1)
                                    (("1" (NAME-REPLACE "ZZ" "Re(z!1)")
                                      (("1" (EXPAND "sinh")
                                        (("1" (LEMMA "exp_strict_increasing")
                                          (("1" (EXPAND "strict_increasing?")
                                            (("1"
                                              (LEMMA "trichotomy" ("x" "ZZ"))
                                              (("1" (SPLIT)
                                                (("1" (INST - "-ZZ" "ZZ")
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (PROPAX) NIL NIL)
                                                 ("3" (INST - "ZZ" "-ZZ")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP*)
          (("2" (ASSERT)
            (("2" (FLATTEN)
              (("2" (REPLACE -1)
                (("2" (REPLACE -2)
                  (("2" (HIDE -1 -2)
                    (("2" (REWRITE "sinh_0")
                      (("2" (REWRITE "cosh_0")
                        (("2" (ASSERT)
                          (("2"
                            (LEMMA "cos_eq_0" ("a" "1 / 2 * pi + j!1 * pi"))
                            (("2" (REPLACE -1)
                              (("2" (INST + "j!1") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sinh_0| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|cosh_0| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|sin_cos_eq_0| FORMULA-DECL NIL |trig_basic| |trig|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|exp_strict_increasing| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|trichotomy| FORMULA-DECL NIL |real_axioms| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|strict_increasing?| CONST-DECL "bool" |real_fun_preds| |reals|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|cos_eq_0| FORMULA-DECL NIL |sincos| |trig|)
    (|zero_times3| FORMULA-DECL NIL |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|posreal_ge1| NONEMPTY-TYPE-EQ-DECL NIL |hyperbolic| |lnexp|)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL))
 (|tanh_TCC1| 0
  (|tanh_TCC1-1| |nil| 3456899039 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|Cosh?| CONST-DECL "bool" |complex_lnexp| NIL))
   NIL (|tanh| SUBTYPE "complex_lnexp.cosh(complex_lnexp.cz)" "nzcomplex")))
 (|csch_TCC1| 0
  (|csch_TCC1-1| |nil| 3456899039 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|Sinh?| CONST-DECL "bool" |complex_lnexp| NIL))
   NIL (|csch| SUBTYPE "complex_lnexp.sinh(complex_lnexp.sz)" "nzcomplex")))
 (|c_sinh_0| 0
  (|c_sinh_0-1| |nil| 3456901842
   ("" (REWRITE "complex_ext")
    (("" (REWRITE "sin_0")
      (("" (REWRITE "sinh_0") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|sin_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sinh_0| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|c_cosh_0| 0
  (|c_cosh_0-1| |nil| 3456901865
   ("" (REWRITE "complex_ext")
    (("" (REWRITE "sin_0")
      (("" (REWRITE "cos_0")
        (("" (REWRITE "cosh_0") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|sin_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cosh_0| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|c_tanh_0_TCC1| 0
  (|c_tanh_0_TCC1-1| |nil| 3456901832
   ("" (EXPAND "Cosh?")
    (("" (FLATTEN)
      (("" (REWRITE "complex_ext")
        (("" (FLATTEN)
          (("" (HIDE -2)
            (("" (REWRITE "cos_0")
              (("" (REWRITE "cosh_0") (("" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cos_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cosh_0| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Cosh?| CONST-DECL "bool" |complex_lnexp| NIL))
   NIL
   (|c_tanh_0| SUBTYPE "complex_types.complex_(0, 0)"
    "(complex_lnexp.Cosh?)")))
 (|c_tanh_0| 0
  (|c_tanh_0-1| |nil| 3456901957
   ("" (EXPAND "tanh")
    (("" (REWRITE "c_sinh_0")
      (("" (REWRITE "c_cosh_0") (("" (REWRITE "complex_ext") NIL NIL)) NIL))
      NIL))
    NIL)
   ((|c_sinh_0| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|c_cosh_0| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|tanh| CONST-DECL "complex" |complex_lnexp| NIL))
   SHOSTAK))
 (|c_sech_0| 0
  (|c_sech_0-2| "" 3790337257
   ("" (EXPAND "sech")
    (("" (REWRITE "c_cosh_0") (("" (REWRITE "complex_ext") NIL NIL)) NIL)) NIL)
   NIL SHOSTAK)
  (|c_sech_0-1| |nil| 3456902083
   ("" (EXPAND "sech")
    (("" (REWRITE "c_cosh_0")
      (("" (REWRITE "complex_ext")
        (("" (EXPAND "sq_abs") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|c_cosh_0| FORMULA-DECL NIL |complex_lnexp| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_div3| FORMULA-DECL NIL |complex_types| NIL)
    (|sech| CONST-DECL "complex" |complex_lnexp| NIL))
   SHOSTAK))
 (|c_cosh_sinh_one| 0
  (|c_cosh_sinh_one-1| |nil| 3456902156
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (LEMMA "sin2_cos2" ("a" "Im(z!1)"))
        (("" (LEMMA "cosh_sinh_one" ("x" "Re(z!1)"))
          ((""
            (LEMMA "both_sides_times1"
             ("x" "sq(cosh(Re(z!1))) - sq(sinh(Re(z!1)))" "y" "1" "n0z"
              "sq(sin(Im(z!1))) + sq(cos(Im(z!1)))"))
            (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|cosh_sinh_one| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posreal_ge1| NONEMPTY-TYPE-EQ-DECL NIL |hyperbolic| |lnexp|)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|))
   SHOSTAK))
 (|c_tanh_sech_one| 0
  (|c_tanh_sech_one-1| |nil| 3721245869
   ("" (AUTO-REWRITE ("complex_ext" "complex_sq_def"))
    (("" (SKOSIMP)
      (("" (TYPEPRED "cz!1")
        (("" (EXPAND "Cosh?")
          (("" (EXPAND "tanh")
            (("" (EXPAND "sech")
              (("" (LEMMA "c_cosh_sinh_one" ("z" "cz!1"))
                ((""
                  (LEMMA "complex_sq_div"
                   ("z" "sinh(cz!1)" "n0z" "cosh(cz!1)"))
                  ((""
                    (LEMMA "complex_sq_div"
                     ("z" "complex_(1,0)" "n0z" "cosh(cz!1)"))
                    (("" (CASE "sq(cosh(cz!1)) /=real_(0)")
                      (("1" (NAME-REPLACE "SC" "sq(cosh(cz!1))")
                        (("1" (NAME-REPLACE "SS" "sq(sinh(cz!1))")
                          (("1"
                            (NAME-REPLACE "DRL1" "sq(sinh(cz!1) / cosh(cz!1))")
                            (("1" (NAME-REPLACE "DRL2" "sq(1 / cosh(cz!1))")
                              (("1"
                                (NAME "DRL3" "sq(complex_(1, 0) / cosh(cz!1))")
                                (("1" (HIDE -1)
                                  (("1" (HIDE -5)
                                    (("1" (ASSERT)
                                      (("1" (FLATTEN)
                                        (("1"
                                          (CASE-REPLACE "Re(DRL2)=Re(DRL3)")
                                          (("1" (HIDE -1)
                                            (("1"
                                              (CASE-REPLACE
                                               "Im(DRL2)=Im(DRL3)")
                                              (("1" (HIDE -1)
                                                (("1" (REPLACE -1)
                                                  (("1" (REPLACE -2)
                                                    (("1" (REPLACE -3)
                                                      (("1" (REPLACE -4)
                                                        (("1"
                                                          (HIDE -1 -2 -3 -4)
                                                          (("1"
                                                            (CASE
                                                                "sq_abs(SC)>0")
                                                            (("1"
                                                              (LEMMA
                                                               "div_cancel3"
                                                               ("y" "1" "x"
                                                                "Im(SS) * Im(SC) + Re(SS) * Re(SC)+Re(SC)"
                                                                "n0z"
                                                                "sq_abs(SC)"))
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1" (HIDE -1)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "div_cancel3"
                                                                     ("y" "0"
                                                                      "x"
                                                                      "Im(SS) * Re(SC) - Re(SS) * Im(SC)-Im(SC)"
                                                                      "n0z"
                                                                      "sq_abs(SC)"))
                                                                    (("1"
                                                                      (REPLACE
                                                                       -1)
                                                                      (("1"
                                                                        (HIDE
                                                                         -1)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "sq_abs")
                                                                          (("1"
                                                                            (EXPAND
                                                                             "sq")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL)
                                                             ("2"
                                                              (HIDE-ALL-BUT
                                                               (1 2))
                                                              (("2"
                                                                (EXPAND
                                                                 "sq_abs")
                                                                (("2" (SPLIT)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "sq_nz_pos"
                                                                     ("nz"
                                                                      "Re(SC)"))
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (LEMMA
                                                                       "sq_nz_pos"
                                                                       ("nz"
                                                                        "Im(SC)"))
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (LEMMA
                                                                         "sq_pos")
                                                                        (("2"
                                                                          (INST
                                                                           -1
                                                                           "Re(SC)")
                                                                          (("2"
                                                                            (EXPAND
                                                                             "SC")
                                                                            (("2"
                                                                              (TYPEPRED
                                                                               "cz!1")
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "Cosh?")
                                                                                (("2"
                                                                                  (NAME-REPLACE
                                                                                   "I"
                                                                                   "cosh(cz!1)")
                                                                                  (("2"
                                                                                    (NAME-REPLACE
                                                                                     "A"
                                                                                     "Im(sq(I))")
                                                                                    (("2"
                                                                                      (NAME-REPLACE
                                                                                       "B"
                                                                                       "Re(sq(I))")
                                                                                      (("2"
                                                                                        (LEMMA
                                                                                         "sq_plus_eq_0")
                                                                                        (("2"
                                                                                          (INST
                                                                                           -1
                                                                                           "A"
                                                                                           "B")
                                                                                          (("2"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (EXPAND
                                                                     "SC")
                                                                    (("2"
                                                                      (TYPEPRED
                                                                       "cz!1")
                                                                      (("2"
                                                                        (EXPAND
                                                                         "Cosh?")
                                                                        (("2"
                                                                          (NAME-REPLACE
                                                                           "I"
                                                                           "cosh(cz!1)")
                                                                          (("2"
                                                                            (NAME-REPLACE
                                                                             "A"
                                                                             "Im(sq(I))")
                                                                            (("2"
                                                                              (NAME-REPLACE
                                                                               "B"
                                                                               "Re(sq(I))")
                                                                              (("2"
                                                                                (LEMMA
                                                                                 "sq_plus_eq_0")
                                                                                (("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "A"
                                                                                   "B")
                                                                                  (("2"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "DRL2")
                                                (("2" (EXPAND "DRL3")
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (EXPAND "DRL2")
                                            (("2" (EXPAND "DRL3")
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "SC")
                                  (("2" (EXPAND "/")
                                    (("2" (GRIND :EXCLUDE "cosh") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE-ALL-BUT (1 -4))
                        (("2" (NAME-REPLACE "X" "cosh(cz!1)")
                          (("2" (ASSERT)
                            (("2" (FLATTEN)
                              (("2"
                                (LEMMA "zero_times3" ("x" "Im(X)" "y" "Re(X)"))
                                (("2" (ASSERT)
                                  (("2" (SPLIT)
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -1)
                                        (("1" (LEMMA "sq_eq_0" ("a" "Re(X)"))
                                          (("1" (ASSERT)
                                            (("1" (REWRITE "sq_rew") NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (REPLACE -1)
                                      (("2" (ASSERT)
                                        (("2" (REWRITE "sq_rew")
                                          (("2" (LEMMA "sq_eq_0" ("a" "Im(X)"))
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sech| CONST-DECL "complex" |complex_lnexp| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|complex_sq_div| FORMULA-DECL NIL |complex_types| NIL)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_sq_def| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sq_plus_eq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sq_pos| FORMULA-DECL NIL |sq| |reals|)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|sq_nz_pos| JUDGEMENT-TCC NIL |sq| |reals|)
    (|div_cancel3| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|posreal_ge1| NONEMPTY-TYPE-EQ-DECL NIL |hyperbolic| |lnexp|)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sq_eq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|zero_times3| FORMULA-DECL NIL |real_props| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|c_cosh_sinh_one| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|tanh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|Cosh?| CONST-DECL "bool" |complex_lnexp| NIL))
   NIL))
 (|c_coth_csch_one| 0
  (|c_coth_csch_one-1| |nil| 3721245990
   ("" (AUTO-REWRITE ("complex_ext" "complex_sq_def"))
    (("" (SKOSIMP)
      (("" (TYPEPRED "sz!1")
        (("" (EXPAND "Sinh?")
          (("" (EXPAND "coth")
            (("" (EXPAND "csch")
              ((""
                (LEMMA "complex_sq_div" ("z" "cosh(sz!1)" "n0z" "sinh(sz!1)"))
                ((""
                  (LEMMA "complex_sq_div"
                   ("z" "complex_(1,0)" "n0z" "sinh(sz!1)"))
                  (("" (LEMMA "c_cosh_sinh_one" ("z" "sz!1"))
                    (("" (NAME-REPLACE "SINH" "sinh(sz!1)")
                      (("" (NAME-REPLACE "DRL1" "sq(cosh(sz!1) / SINH)")
                        (("" (CASE "sq(complex_(1, 0) / SINH)=sq(1 / SINH)")
                          (("1"
                            (NAME-REPLACE "DRL2" "sq(complex_(1, 0) / SINH)")
                            (("1" (NAME-REPLACE "DRL3" "sq(1 / SINH)")
                              (("1" (NAME-REPLACE "SS" "sq(SINH)")
                                (("1" (NAME-REPLACE "SC" "sq(cosh(sz!1))")
                                  (("1" (ASSERT)
                                    (("1" (FLATTEN)
                                      (("1" (ASSERT)
                                        (("1" (REPLACE -5)
                                          (("1" (CASE-REPLACE "Im(SC)=Im(SS)")
                                            (("1"
                                              (CASE-REPLACE "Re(SC)=1+Re(SS)")
                                              (("1" (ASSERT)
                                                (("1"
                                                  (LEMMA "div_simp"
                                                   ("n0x" "sq_abs(SS)"))
                                                  (("1" (EXPAND "sq_abs" -1 1)
                                                    (("1" (EXPAND "sq" -1)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "/")
                                (("2" (GRIND :EXCLUDE "cosh") NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|csch| CONST-DECL "complex" |complex_lnexp| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|div_simp| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|Im_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_div2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div2| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_sq_def| FORMULA-DECL NIL |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|c_cosh_sinh_one| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|complex_sq_div| FORMULA-DECL NIL |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|coth| CONST-DECL "complex" |complex_lnexp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|Sinh?| CONST-DECL "bool" |complex_lnexp| NIL))
   NIL))
 (|c_cosh_plus_sinh| 0
  (|c_cosh_plus_sinh-1| |nil| 3456902338
   ("" (SKOSIMP)
    (("" (LEMMA "cosh_plus_sinh" ("x" "Re(z!1)"))
      (("" (REWRITE "complex_ext") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|cosh_plus_sinh| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|c_cosh_minus_sinh| 0
  (|c_cosh_minus_sinh-1| |nil| 3456902390
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (LEMMA "cosh_minus_sinh" ("x" "Re(z!1)"))
        (("" (REWRITE "cos_neg")
          (("" (REWRITE "sin_neg") (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cosh_minus_sinh| FORMULA-DECL NIL |hyperbolic| |lnexp|))
   SHOSTAK))
 (|c_sinh_neg| 0
  (|c_sinh_neg-1| |nil| 3456902501
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "sin_neg")
        (("" (REWRITE "cos_neg")
          (("" (REWRITE "cosh_neg")
            (("" (REWRITE "sinh_neg") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sinh_neg| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|cosh_neg| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL))
   SHOSTAK))
 (|c_cosh_neg| 0
  (|c_cosh_neg-1| |nil| 3456902540
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "sinh_neg")
        (("" (REWRITE "cosh_neg")
          (("" (REWRITE "cos_neg")
            (("" (REWRITE "sin_neg") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|cosh_neg| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sinh_neg| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL))
   SHOSTAK))
 (|c_tanh_neg_TCC1| 0
  (|c_tanh_neg_TCC1-1| |nil| 3456901832 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|Cosh?| CONST-DECL "bool" |complex_lnexp| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   NIL
   (|c_tanh_neg| SUBTYPE "(complex_types.-)(complex_lnexp.cz)"
    "(complex_lnexp.Cosh?)")))
 (|c_tanh_neg| 0
  (|c_tanh_neg-1| |nil| 3472834131
   ("" (SKOSIMP)
    (("" (EXPAND "tanh")
      (("" (LEMMA "c_sinh_neg" ("z" "cz!1"))
        (("" (LEMMA "c_cosh_neg" ("z" "cz!1"))
          (("" (REPLACES -)
            (("" (NAME-REPLACE "CZ" "cosh(cz!1)")
              (("" (NAME-REPLACE "SZ" "sinh(cz!1)") (("" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|tanh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|c_cosh_neg| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|c_sinh_neg| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Cosh?| CONST-DECL "bool" |complex_lnexp| NIL))
   SHOSTAK))
 (|c_csch_neg_TCC1| 0
  (|c_csch_neg_TCC1-1| |nil| 3456901832 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|Sinh?| CONST-DECL "bool" |complex_lnexp| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   NIL
   (|c_csch_neg| SUBTYPE "(complex_types.-)(complex_lnexp.sz)"
    "(complex_lnexp.Sinh?)")))
 (|c_csch_neg| 0
  (|c_csch_neg-1| |nil| 3472834811
   ("" (SKOSIMP)
    (("" (EXPAND "csch")
      (("" (LEMMA "c_sinh_neg" ("z" "sz!1"))
        (("" (REPLACES -1)
          (("" (NAME-REPLACE "SZ" "sinh(sz!1)") (("" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|csch| CONST-DECL "complex" |complex_lnexp| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|c_sinh_neg| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Sinh?| CONST-DECL "bool" |complex_lnexp| NIL))
   SHOSTAK))
 (|c_sech_neg| 0
  (|c_sech_neg-1| |nil| 3472834931
   ("" (SKOSIMP)
    (("" (EXPAND "sech")
      (("" (LEMMA "c_cosh_neg" ("z" "cz!1")) (("" (REPLACES -) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|sech| CONST-DECL "complex" |complex_lnexp| NIL)
    (|c_cosh_neg| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Cosh?| CONST-DECL "bool" |complex_lnexp| NIL))
   SHOSTAK))
 (|c_coth_neg| 0
  (|c_coth_neg-1| |nil| 3472834455
   ("" (SKOSIMP)
    (("" (EXPAND "coth")
      (("" (LEMMA "c_sinh_neg" ("z" "sz!1"))
        (("" (LEMMA "c_cosh_neg" ("z" "sz!1"))
          (("" (REPLACES -)
            (("" (NAME-REPLACE "SZ" "sinh(sz!1)")
              (("" (NAME-REPLACE "CZ" "cosh(sz!1)") (("" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coth| CONST-DECL "complex" |complex_lnexp| NIL)
    (|c_cosh_neg| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|c_sinh_neg| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Sinh?| CONST-DECL "bool" |complex_lnexp| NIL))
   SHOSTAK))
 (|c_sinh_sum| 0
  (|c_sinh_sum-1| |nil| 3456902582
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "sinh_sum")
        (("" (REWRITE "cosh_sum")
          (("" (REWRITE "cos_plus")
            (("" (REWRITE "sin_plus") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|cosh_sum| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|sin_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|cos_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sinh_sum| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL))
   SHOSTAK))
 (|c_sinh_diff| 0
  (|c_sinh_diff-1| |nil| 3456989995
   ("" (SKOSIMP)
    (("" (LEMMA "c_sinh_sum" ("x" "x!1" "y" "-y!1"))
      (("" (ASSERT)
        (("" (REWRITE "complex_plus_neg")
          (("" (REWRITE "complex_mult_neg")
            (("" (REWRITE "complex_plus_neg") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|c_sinh_sum| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|complex_plus_neg| FORMULA-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_mult_neg| FORMULA-DECL NIL |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|c_sinh_neg| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|c_cosh_neg| FORMULA-DECL NIL |complex_lnexp| NIL))
   SHOSTAK))
 (|c_cosh_sum| 0
  (|c_cosh_sum-1| |nil| 3456990162
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "cosh_sum")
        (("" (REWRITE "cos_plus")
          (("" (REWRITE "sinh_sum")
            (("" (REWRITE "sin_plus") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|cos_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sinh_sum| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|cosh_sum| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL))
   SHOSTAK))
 (|c_cosh_diff| 0
  (|c_cosh_diff-1| |nil| 3456990226
   ("" (SKOSIMP)
    (("" (LEMMA "c_cosh_sum" ("x" "x!1" "y" "-y!1"))
      (("" (ASSERT)
        (("" (REWRITE "complex_plus_neg")
          (("" (REWRITE "complex_mult_neg")
            (("" (REWRITE "complex_plus_neg") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|c_cosh_sum| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|complex_plus_neg| FORMULA-DECL NIL |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_mult_neg| FORMULA-DECL NIL |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|c_sinh_neg| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|c_cosh_neg| FORMULA-DECL NIL |complex_lnexp| NIL))
   SHOSTAK))
 (|c_sinh2x| 0
  (|c_sinh2x-1| |nil| 3456991337
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "cos_2a")
        (("" (REWRITE "sin_2a")
          (("" (REWRITE "sinh2x")
            (("" (REWRITE "cosh2x")
              (("" (SPLIT)
                (("1" (ASSERT) NIL NIL)
                 ("2"
                  (CASE-REPLACE
                   "2*sq(cosh(Re(x!1))) - 1=sq(cosh(Re(x!1)))+sq(sinh(Re(x!1)))")
                  (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)
                   ("2" (HIDE 2)
                    (("2" (LEMMA "cosh_sinh_one" ("x" "Re(x!1)"))
                      (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|sin_2a| FORMULA-DECL NIL |trig_basic| |trig|)
    (|cosh2x| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|posreal_ge1| NONEMPTY-TYPE-EQ-DECL NIL |hyperbolic| |lnexp|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|cosh_sinh_one| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|sinh2x| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|cos_2a| FORMULA-DECL NIL |trig_basic| |trig|))
   SHOSTAK))
 (|c_cosh2x| 0
  (|c_cosh2x-1| |nil| 3456991747
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "cosh2x")
        (("" (REWRITE "sinh2x")
          (("" (REWRITE "cos_2a")
            (("" (REWRITE "sin_2a")
              (("" (ASSERT)
                (("" (EXPAND "sq")
                  (("" (REWRITE "sq_rew")
                    (("" (REWRITE "sq_rew")
                      (("" (REWRITE "sq_rew")
                        (("" (LEMMA "sin2_cos2" ("a" "Im(x!1)"))
                          (("" (EXPAND "sq")
                            (("" (ASSERT)
                              ((""
                                (CASE-REPLACE
                                 "cos(Im(x!1)) * cos(Im(x!1))=1-sin(Im(x!1)) * sin(Im(x!1))")
                                (("1" (HIDE -1 -2)
                                  (("1" (ASSERT)
                                    (("1"
                                      (LEMMA "cosh_sinh_one" ("x" "Re(x!1)"))
                                      (("1" (EXPAND "sq")
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_sub3| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sub3| FORMULA-DECL NIL |complex_types| NIL)
    (|sinh2x| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|sin_2a| FORMULA-DECL NIL |trig_basic| |trig|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|posreal_ge1| NONEMPTY-TYPE-EQ-DECL NIL |hyperbolic| |lnexp|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|cosh_sinh_one| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|cos_2a| FORMULA-DECL NIL |trig_basic| |trig|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|cosh2x| FORMULA-DECL NIL |hyperbolic| |lnexp|))
   SHOSTAK))
 (|c_cosh2x_B| 0
  (|c_cosh2x_B-1| |nil| 3456992244
   ("" (SKOSIMP)
    (("" (LEMMA "c_cosh2x" ("x" "x!1"))
      (("" (LEMMA "c_cosh_sinh_one" ("z" "x!1"))
        (("" (NAME-REPLACE "SQC" "sq(cosh(x!1))")
          (("" (NAME-REPLACE "SQS" "sq(sinh(x!1))")
            (("" (NAME-REPLACE "C" "cosh(2*x!1)") (("" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|c_cosh2x| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|c_cosh_sinh_one| FORMULA-DECL NIL |complex_lnexp| NIL))
   SHOSTAK))
 (|c_cosh2x_C| 0
  (|c_cosh2x_C-1| |nil| 3456992191
   ("" (SKOSIMP)
    (("" (LEMMA "c_cosh2x" ("x" "x!1"))
      (("" (LEMMA "c_cosh_sinh_one" ("z" "x!1"))
        (("" (NAME-REPLACE "SQC" "sq(cosh(x!1))")
          (("" (NAME-REPLACE "SQS" "sq(sinh(x!1))")
            (("" (NAME-REPLACE "C" "cosh(2*x!1)") (("" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|c_cosh2x| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|c_cosh_sinh_one| FORMULA-DECL NIL |complex_lnexp| NIL))
   SHOSTAK))
 (|c_sinh4x| 0
  (|c_sinh4x-1| |nil| 3456992272
   ("" (AUTO-REWRITE "complex_sq_def")
    (("" (SKOSIMP)
      (("" (REWRITE "complex_ext")
        (("" (REWRITE "sinh4x")
          (("" (REWRITE "cosh4x")
            (("" (REWRITE "expt_x4")
              (("" (REWRITE "expt_x4")
                (("" (LEMMA "cos_2a" ("a" "Im(x!1)"))
                  (("" (LEMMA "cos_2a" ("a" "2*Im(x!1)"))
                    (("" (REPLACE -1)
                      (("" (REPLACE -2)
                        (("" (LEMMA "sin_2a" ("a" "Im(x!1)"))
                          (("" (LEMMA "sin_2a" ("a" "2*Im(x!1)"))
                            (("" (REPLACE -1)
                              (("" (REPLACE -2)
                                (("" (REPLACE -4)
                                  (("" (SPLIT)
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "sq")
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (HIDE-ALL-BUT 1)
                                        (("2" (EXPAND "sq")
                                          (("2" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sinh4x| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|cosh| CONST-DECL "posreal_ge1" |hyperbolic| |lnexp|)
    (|posreal_ge1| NONEMPTY-TYPE-EQ-DECL NIL |hyperbolic| |lnexp|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|expt_x4| FORMULA-DECL NIL |exponentiation| NIL)
    (|cos_2a| FORMULA-DECL NIL |trig_basic| |trig|)
    (|sin_2a| FORMULA-DECL NIL |trig_basic| |trig|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|sinh| CONST-DECL "real" |hyperbolic| |lnexp|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|cosh4x| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|complex_sq_def| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul2| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_sin_def| 0
  (|complex_sin_def-1| |nil| 3456899653
   ("" (SKOSIMP) (("" (REWRITE "complex_ext") NIL NIL)) NIL)
   ((|Im_sin| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sinh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_conjugate| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_conjugate| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sin| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|neg_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|sin| CONST-DECL "complex" |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|sinh| CONST-DECL "complex" |complex_lnexp| NIL)
    (|conjugate| CONST-DECL "complex" |complex_types| NIL))
   SHOSTAK))
 (|complex_cos_def| 0
  (|complex_cos_def-1| |nil| 3456899846
   ("" (SKOSIMP)
    (("" (REWRITE "complex_ext")
      (("" (REWRITE "Im_cos")
        (("" (LEMMA "cosh_neg" ("x" "Im(z!1)"))
          (("" (LEMMA "sinh_neg" ("x" "Im(z!1)")) (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cos| CONST-DECL "complex" |complex_lnexp| NIL)
    (|cosh| CONST-DECL "complex" |complex_lnexp| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_cos| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|Im_cosh| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|cosh_neg| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|sinh_neg| FORMULA-DECL NIL |hyperbolic| |lnexp|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Im_cos| FORMULA-DECL NIL |complex_lnexp| NIL))
   SHOSTAK)))

