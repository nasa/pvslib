% Analytical solution to cubic polynomials (including complex roots)

complex_cubic : THEORY
BEGIN

  IMPORTING reals@power_props,
	    reals@sign3,
	    complex_types,
	    complex_root,
	    complex_quadratic,
	    fundamental_algebra,
	    complex_props

  a         : VAR nzreal
  b,c,d,p,q : VAR real
  rz        : VAR (real_?)

%wikipedia

  cubic_discr(a,b,c,d):real =
    18*a*b*c*d-4*b^3*d+b^2*c^2-4*a*c^3-27*a^2*d^2
    
  delta0(a,b,c):real =
    sq(b)-3*a*c

  delta1(a,b,c,d):real =
    2*b^3-9*a*b*c+27*sq(a)*d

  delta_expr(a,b,c,d): MACRO real =
    sq(delta1(a,b,c,d))-4*delta0(a,b,c)^3

  delta_expr_cubic_discr: LEMMA
    delta_expr(a,b,c,d) = -27*a^2*cubic_discr(a,b,c,d)

  delta_expr_eq_0 : LEMMA
    delta_expr(a,b,c,d) = 0 IFF cubic_discr(a,b,c,d) = 0 

  cubic_discr_eq_0 : LEMMA
    cubic_discr(a,b,c,d) = 0 IMPLIES
    (delta0(a,b,c) = 0 IFF delta1(a,b,c,d) = 0)

  P(a,b,c) : real = -delta0(a,b,c)/(3*sq(a))

  P_eq_0 : LEMMA
    P(a,b,c) = 0 IFF delta0(a,b,c) = 0

  Q(a,b,c,d) : real = delta1(a,b,c,d)/((3*a)^3)

  Q_eq_0 : LEMMA
    Q(a,b,c,d) = 0 IFF delta1(a,b,c,d) = 0

  discr_cubic_discr : LEMMA
    discr(1,Q(a, b, c, d),-P(a, b, c)^3/27) = -cubic_discr(a,b,c,d)/(27*a^4)

  c_cubic(a,b,c,d)(x:complex) : complex =
    a*x^3 + b*x^2 + c*x + d

  IMPORTING cpolynomial_real

  cpoly_cubic(a,b,c,d)(n:nat) : complex =
    IF n=0 THEN real_(d)
    ELSIF n=1 THEN real_(c)
    ELSIF n=2 THEN real_(b)
    ELSIF n=3 THEN real_(a)
    ELSE real_(0)
    ENDIF

  cpoly_cubic_real : LEMMA
    FORALL (n:nat):
      cpolynomial_real?(n)(cpoly_cubic(a,b,c,d))

  c_cubic_eq_cpolynomial_cubic : LEMMA
    c_cubic(a,b,c,d) = cpolynomial(cpoly_cubic(a,b,c,d),3)

%vieta

  cubic_iff_reduced : LEMMA
    FORALL (x:complex):
      c_cubic(a,b,c,d)(x) = real_(0) IFF
      c_cubic(1,b/a,c/a,d/a)(x) = real_(0)

  depressed(p,q)(t:complex) : complex =
    t^3 + p*t + q 

  cubic_iff_depressed : LEMMA
    FORALL (x,t:complex):
      x = t-b/(3*a) IMPLIES
        (c_cubic(a,b,c,d)(x) = real_(0) IFF
         depressed(P(a,b,c),Q(a,b,c,d))(t) = real_(0))

  vieta(p,q)(w:nzcomplex) : complex =
    w^3 + q - p^3/(27*w^3)

  depressed_iff_vieta : LEMMA
    FORALL (t:complex,w:nzcomplex):
      t = w-p/(3*w) IMPLIES
        (depressed(p,q)(t) = real_(0) IFF
         vieta(p,q)(w) = real_(0))

  vieta_iff_quadratic : LEMMA
    FORALL (w:nzcomplex):
      vieta(p,q)(w) = real_(0) IFF
      c_quadratic(1,q,-p^3/27)(w^3) = real_(0)

  w_exists : LEMMA
    FORALL (t:complex,p:nzreal) :
      EXISTS (w:nzcomplex) : t = w-p/(3*w)

  x_from_t : LEMMA
    FORALL (x,t:complex) :
      x+b/(3*a) = t IFF x = t-b/(3*a)
  
  w_from_t : LEMMA
    FORALL (t:complex,w:nzcomplex):
      t = w-p/(3*w) AND real_?(t) IMPLIES
      c_quadratic(3,-3*Re(t),-p)(w) = real_(0)     
  
  cubic_iff_quadratic : THEOREM
    LET p = P(a,b,c),
        q = Q(a,b,c,d) IN
      FORALL (x:complex) :
        LET t = x+b/(3*a) IN
          c_cubic(a,b,c,d)(x) = real_(0) IFF
	  IF p = 0 THEN t^3 = real_(-q)
          ELSE
	    FORALL (w:nzcomplex):
             t = w-p/(3*w) IMPLIES
             c_quadratic(1,q,-p^3/27)(w^3) = real_(0)
	  ENDIF

  eps  : VAR Sign
  eps3 : VAR Sign3

%wikipedia

  zeta(eps3): nzcomplex =
    IF eps3 = 0 THEN real_(1)
    ELSE
      (-1/2)+eps3*(1/2)*sqrt(3)*complex_i
    ENDIF

  zeta_one: LEMMA
    zeta(1)=exp(2*pi/3*complex_i)

  zeta_neg: LEMMA
    zeta(-1)=exp(4*pi/3*complex_i)

  zeta_unit: LEMMA
    FORALL (eps:Sign):
    zeta(eps)*zeta(-eps) = real_(1)

  zeta_eq_1: LEMMA
   zeta(eps3) = real_(1) IFF eps3 = 0

  zeta_sq_eq_1: LEMMA
   sq(zeta(eps3)) = real_(1) IFF eps3 = 0
   
  zeta_cube: LEMMA
    FORALL (eps:Sign):
      zeta(eps)^(3) = real_(1)
    
  zeta_closed: LEMMA
    FORALL(x,y:Sign3) : EXISTS (z:Sign3) :
    zeta(x)*zeta(y) = zeta(z)

  zeta_root_of_unity: LEMMA
    FORALL(m:nat | m<=3) : EXISTS(eps3:Sign3) :
    root_of_unity(3)(m) = zeta(eps3)
    
  zeta_inv: LEMMA
    1/zeta(eps3) = zeta(-eps3)

%complex cube root properties

  cubicrt(z:complex) : MACRO complex =
    c_root(z,3)

  cubicrt_real : LEMMA
    FORALL (r:real):
    cubicrt(real_(r)) = real_(root(r,3))

  cubicrt_mult_real : LEMMA
    FORALL (r1,r2:real):
      cubicrt(real_(r1))*cubicrt(real_(r2)) = cubicrt(real_(r1*r2))

  cubicrt_realj : JUDGEMENT
    cubicrt(rz) HAS_TYPE (real_?)

  cubicrt_def : LEMMA
    FORALL (z:complex) : cubicrt(z)^3 = z
  
  cubicrt_eq_zero : LEMMA
    FORALL (z:complex): cubicrt(z) = real_(0) IFF z = real_(0)
  
  cubicrt_complete : LEMMA
    FORALL (z1,z2:complex) :
    z2^3 = z1 IFF EXISTS (eps3): z2=zeta(eps3)*cubicrt(z1)

  cubicrt_real_aux: LEMMA
    FORALL (r1:real,r2:nzreal):
    cubicrt(real_(-(r1/(r2^3)))) = (-1/r2)*cubicrt(real_(r1))

  d0,d1,dd : VAR real

  % dd = sq(d1)-4*d0^3
  c_term_cubic3(d0,d1,dd,eps) : complex = % C^3 in wikipedia
    IF d0 = 0 THEN real_(d1) 
    ELSIF dd = 0 THEN real_(d1/2)
    ELSIF dd > 0 THEN real_((d1+eps*sqrt(dd))/2)
    ELSE complex_(d1,eps*sqrt(-dd))/2
    ENDIF

  c_term_conj : LEMMA
    dd <= 0 IMPLIES
    c_term_cubic3(d0,d1,dd,eps) = conjugate(c_term_cubic3(d0,d1,dd,-eps))

  dd(D0,D1:real) : MACRO real = sq(D1)-4*D0^3

  c_term_cubic3_eq_zero : LEMMA
    FORALL (D0,D1:real) : 
      LET DD = dd(D0,D1) IN
      c_term_cubic3(D0,D1,DD,eps) = real_(0) IFF (DD = 0 AND D0 = 0)

  C_eq_zero_cubic_discr_eq_0 : LEMMA 
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1) IN
      c_term_cubic3(D0,D1,DD,eps) = real_(0) IMPLIES
      cubic_discr(a,b,c,d) = 0
       
  cubic_root(a,b,c,d,eps3) : complex = %from wiki
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1),
        C3 = c_term_cubic3(D0,D1,DD,1) IN
    IF C3=real_(0) THEN
      real_(-b/(3*a)) 
    ELSE
      LET C = zeta(eps3)*cubicrt(C3) IN 
      (-1/(3*a))*(b+C+D0/C)
    ENDIF

  cubic_root_DD_D0_eq_0 : LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1) IN
    DD=0 AND D0=0 IMPLIES
    cubic_root(a,b,c,d,eps3) = real_(-b/(3*a))

  cubic_root_correct_P_eq_0 : LEMMA
     P(a,b,c) = 0 IMPLIES
     FORALL (z:complex):
      c_cubic(a,b,c,d)(z) = real_(0) IFF
      EXISTS (eps3) : z = cubic_root(a,b,c,d,eps3)

  cubic_root_correct_discr_eq_0 : LEMMA %????
    P(a,b,c) /= 0 AND
    cubic_discr(a,b,c,d) = 0 IMPLIES
    FORALL (z:complex):
      c_cubic(a,b,c,d)(z) = real_(0) IFF
      EXISTS (eps3) : z = cubic_root(a,b,c,d,eps3)
      
  cubic_root_correct_nz : LEMMA %????
    P(a,b,c) /= 0 AND
    cubic_discr(a,b,c,d) /= 0 IMPLIES
    FORALL (z:complex):
      c_cubic(a,b,c,d)(z) = real_(0) IFF
      EXISTS (eps3) : z = cubic_root(a,b,c,d,eps3)
      
  cubic_root_correct : LEMMA
    FORALL (z:complex):
      c_cubic(a,b,c,d)(z) = real_(0) IFF
      EXISTS (eps3) : z = cubic_root(a,b,c,d,eps3)

  cubic_root_real : LEMMA
    EXISTS (eps3) : real_?(cubic_root(a,b,c,d,eps3))

%%%% BEGIN BORRAR

  c_term_cubic3(d0,d1,dd) : complex = % C^3 in wikipedia
    IF d0 = 0 THEN real_(d1) 
    ELSIF dd = 0 THEN real_(d1/2)
    ELSIF dd > 0 THEN real_((d1+sqrt(dd))/2)
    ELSE complex_(d1,sqrt(-dd))/2
    ENDIF

  % dd = sq(d1)-4*d0^3
   c_term_cubic3_minus(d0,d1,dd) : complex = % Negative choice of C^3
    IF d0 = 0 THEN real_(d1) 
    ELSIF dd = 0 THEN real_(d1/2)
    ELSIF dd > 0 THEN real_((d1-sqrt(dd))/2)
    ELSE complex_(d1,-sqrt(-dd))/2
    ENDIF

  c_term_cubic(d0,d1,dd) : complex =  %C in wikipedia
    cubicrt(c_term_cubic3(d0,d1,dd))

  c_term_cubic_minus(d0,d1,dd) : complex =  %C in wikipedia
    cubicrt(c_term_cubic3_minus(d0,d1,dd))

  c_term_cubic_eq_zero : LEMMA  %%% Is this needed?
    FORALL (D0,D1:real) : 
      LET DD = dd(D0,D1) IN
      cubicrt(c_term_cubic3(D0,D1,DD,eps)) = real_(0) IFF (DD = 0 AND D0 = 0)

  c_term_cubic_eq_zero2 : LEMMA  % This is trivial from c_term_cubic_eq_zero
    FORALL (D0,D1:real) : 
      LET DD = dd(D0,D1) IN
      c_term_cubic(D0,D1,DD) = real_(0) IMPLIES DD = 0

%%% END BORRAR

  c_term_cubic3_real : LEMMA
    FORALL (D0:nzreal,D1:real) : 
    c_term_cubic3(D0,D1,0) = real_(D1/2)

  c_term_cubic_real : LEMMA
    FORALL (D0:nzreal,D1:real) : 
    real_?(c_term_cubic(D0,D1,0))

  c3_times_cminus3 : LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1) IN
      D0 /= 0 IMPLIES
      c_term_cubic3_minus( D0, D1, DD) * c_term_cubic3(D0, D1, DD) = real_(D0) ^ 3
  
  c_times_cminus : LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1) IN
      D0 /= 0 IMPLIES
      EXISTS(eps3: Sign3) : c_term_cubic_minus(D0, D1, DD) * c_term_cubic(D0, D1, DD) = zeta(eps3) * D0

  sq_C3_eq_D03 : CONJECTURE
    FORALL (D0:real,D1:real) : 
      LET DD = dd(D0,D1),
  	  C3 = c_term_cubic3(D0,D1,DD) IN
      	 C3*C3 = real_(D0)^3 IMPLIES
	 DD = 0 

  sq_C0_eq_D0 : LEMMA
    FORALL (D0:nzreal,D1:real) : 
      LET DD = dd(D0,D1),
  	  C0 = c_term_cubic(D0,D1,DD) IN
      DD = 0 IFF	 
      C0*C0 = real_(D0)

   c1: VAR complex

  complex_conj_pairs: LEMMA
    c_cubic(a,b,c,d)(c1)=real_(0) IMPLIES
    c_cubic(a,b,c,d)(conjugate(c1))=real_(0)

  C_term_minus_satisfies_vieta : LEMMA
  FORALL ((z:complex),(a:nzreal),(b,c:real),
          (d:real | P(a,b,c)/=0 AND cubic_discr(a,b,c,d)/=0 )) :
      LET D0 = delta0(a,b,c),
          D1 = delta1(a,b,c,d),
          DD = dd(D0,D1),
	  p = P(a,b,c),
          q = Q(a,b,c,d) IN
    c_quadratic(1,q,-p^3/27)(-c_term_cubic3_minus(D0,D1,DD) / (27*a^3)) = real_(0)

  cubic_root_correct_C_eq_zero : LEMMA
    LET p  = P(a,b,c),
        D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1) IN
    c_term_cubic(D0,D1,DD) = real_(0) IMPLIES
    FORALL (z:complex):
      c_cubic(a,b,c,d)(z) = real_(0) IFF
      z = real_(-b/(3*a))

  c_root_w : LEMMA
    FORALL (w,z:complex) :
    w^3 = z IFF EXISTS (eps3) : zeta(eps3)*w=c_root(z,3)

  cubicrt_real_aux2: LEMMA
     FORALL (r1:nzreal,z:complex): EXISTS (eps3) :
     cubicrt(-z/(r1^3)) = -zeta(eps3)*(1/r1)*cubicrt(z)
 
  c_root_w2 : LEMMA
    FORALL (w:complex) :
    EXISTS (eps3) : c_root(w^3,3) = zeta(eps3)*w

  c_root_conj : LEMMA
    FORALL (z:complex) : EXISTS (eps3) :
    c_root(conjugate(z),3) = zeta(eps3)*conjugate(c_root(z,3))

  C_term_satisfies_vieta : LEMMA
   FORALL ((z:complex),(a:nzreal),(b,c:real),
          (d:real | P(a,b,c)/=0 AND cubic_discr(a,b,c,d)/=0 )) :
      LET D0 = delta0(a,b,c),
          D1 = delta1(a,b,c,d),
          DD = dd(D0,D1),
	  p = P(a,b,c),
          q = Q(a,b,c,d) IN
    c_quadratic(1,q,-p^3/27)(-c_term_cubic3(D0,D1,DD) / (27*a^3)) = real_(0)

  c_quadratic_eq_0 : LEMMA
    FORALL ((z:complex),(a:nzreal),(b,c:real),
          (d:real | P(a,b,c)/=0 AND cubic_discr(a,b,c,d)/=0 )) :
      LET D0 = delta0(a,b,c),
          D1 = delta1(a,b,c,d),
          DD = dd(D0,D1),
	  p = P(a,b,c),
          q = Q(a,b,c,d) IN
    c_quadratic(1,q,-p^3/27)(z) = real_(0) IFF
    (z = -c_term_cubic3_minus(D0,D1,DD) / (27*a^3)
    OR z = -c_term_cubic3(D0,D1,DD) / (27*a^3))

  cubic_root_conj : LEMMA
    EXISTS (e:Sign3) :
    conjugate(cubic_root(a,b,c,d,eps3)) = cubic_root(a,b,c,d,e)

  neg_discr_implies_pos_delta_expr: LEMMA
   cubic_discr(a,b,c,d)<0 IMPLIES delta_expr(a,b,c,d) > 0

  conjugate_cubic_root_im: LEMMA
    cubic_discr(a,b,c,d)<0 IMPLIES
    LET D0 = delta0(a,b,c),
    	D1 = delta1(a,b,c,d),
        DD = dd(D0,D1),
	C0 = c_term_cubic(D0,D1,DD),
	C_1 = zeta(eps3)*C0,
        z_1 = (-1/(3*a))*(b+C_1+D0/C_1),
	C_m1 = zeta(-eps3)*C0,
        z_m1 = (-1/(3*a))*(b+C_m1+D0/C_m1)
    IN z_1 = conjugate(z_m1)

  conjugate_cubic_root: LEMMA
   cubic_discr(a,b,c,d)<0 IMPLIES
    cubic_root(a,b,c,d,eps3) = conjugate(cubic_root(a,b,c,d,-eps3))

  one_real_two_complex: LEMMA
    cubic_discr(a,b,c,d)<0 AND real_?(cubic_root(a,b,c,d,0)) IMPLIES
    (cubic_root(a,b,c,d,1) = conjugate(cubic_root(a,b,c,d,-1)) AND
    NOT real_?(cubic_root(a,b,c,d,1)))

% WARNING: this lemma is not used but it may be good to have it anyway
  % three_real_roots : LEMMA
  %   LET D0 = delta0(a,b,c),
  %       D1 = delta1(a,b,c,d),
  %       DD = dd(D0,D1) IN
  %    DD=0 AND D0 /= 0 IMPLIES
  %    real_?(cubic_root(a,b,c,d,0)) IMPLIES
  %    cubic_root(a,b,c,d,eps) = cubic_root(a,b,c,d,-eps) AND
  %    real_?(cubic_root(a,b,c,d,eps))
  
  cubic_roots_discr_0_delta0_not0_root: LEMMA
    LET D0 = delta0(a, b, c),
        D1 = delta1(a, b, c, d),
        DD = sq(D1) - 4 * D0 ^ 3
    IN DD = 0 AND D0 /= 0
       IMPLIES
         LET root = real_(-9 * (sq(a) * d) - b ^ 3 + 4 * (a * b * c)) / (a * D0)
         IN c_cubic (a, b, c, d) (root) = real_(0)

  cubic_roots_discr_0_delta0_not0_root_1_is_a_root: LEMMA
    LET D0 = delta0(a, b, c),
        D1 = delta1(a, b, c, d),
        DD = sq(D1) - 4 * D0 ^ 3
    IN DD = 0 AND D0 /= 0
       IMPLIES
         LET root = real_((9 * (a * d) - b * c) / (2 * D0))
         IN c_cubic (a, b, c, d) (root) = real_(0)

  cubic_roots_discr_not0_root_1_is_a_root: LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1) IN
    DD /= 0
    IMPLIES  LET C0 = c_term_cubic(D0,D1,DD),
		 root1 = complex_((-1 / (3 * a)), (0)) *
               (complex_(b, (0)) + C0 + complex_(D0, (0)) / C0) IN
             c_cubic(a, b, c, d)(root1) = real_(0)

  cubic_roots_discr_not0_root_2_is_a_root: LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1) IN
    DD /= 0
    IMPLIES  LET C0 = c_term_cubic(D0,D1,DD),
           	   C1 = zeta(1)*C0,
		   root2 = complex_((-1 / (3 * a)), (0)) *
              (complex_(b, (0)) + C1 + complex_(D0, (0)) / C1) IN
              c_cubic(a, b, c, d)(root2) = real_(0)

  cubic_roots_discr_not0_root_3_is_a_root: LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1)
    IN DD /= 0
       IMPLIES  LET C0    = c_term_cubic(D0,D1,DD),
	     	    C2    = zeta(-1)*C0,
		    root3 = complex_((-1 / (3 * a)), (0)) * (complex_(b, (0)) + C2 + complex_(D0, (0)) / C2)
		IN c_cubic(a, b, c, d)(root3) = real_(0)
		
%PLEASE REMEMBER TO CHECK
    % cubic_roots_discr_not0_root_1_is_real : CONJECTURE
    %    LET D0 = delta0(a,b,c),
    %        D1 = delta1(a,b,c,d),
    %        DD = dd(D0,D1) IN
    %    DD /= 0
    %    IMPLIES  LET C0 = c_term_cubic(D0,D1,DD),
    % 		 root1 = complex_((-1 / (3 * a)), (0)) *
    %            (complex_(b, (0)) + C0 + complex_(D0, (0)) / C0) IN
    %             real_?(root1)

   not_three_distinct_complex_roots: CONJECTURE
   % only used in one_root_is_real
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1),
        C0 = c_term_cubic(D0,D1,DD)
    IN DD /=0 % TODO CHECK it was C0 /= 0 (may it be DD /= 0? it saves some tccs)
       IMPLIES LET root1 = (-1/(3*a))*(b+C0+D0/C0),
                   C1    = zeta(1)*C0,
                   root2 = (-1/(3*a))*(b+C1+D0/C1),
                   C2    = zeta(-1)*C0,
                   root3 = (-1/(3*a))*(b+C2+D0/C2)
               IN root1 /= root2 AND
                  root2 /= root3 AND
                  root1 /= root3
                  IMPLIES ( real_?(root1)
                            OR real_?(root2)
                            OR real_?(root3) )

  two_distinct_roots_equal: LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1),
        C0 = c_term_cubic(D0,D1,DD)
    IN ( EXISTS ((e1: Sign3) , (e2: Sign3 | e1 /= e2)):
         cubic_root(a,b,c,d,e1) = cubic_root(a,b,c,d,e2) )
      IMPLIES
       DD = 0

  one_root_is_real: LEMMA
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1),
        C0 = c_term_cubic(D0,D1,DD),
        C1 = zeta(1)*C0,
        C2 = zeta(-1)*C0
    IN DD /= 0
      IMPLIES LET root1 = (-1/(3*a))*(b+C0+D0/C0),
                  root2 = (-1/(3*a))*(b+C1+D0/C1),
                  root3 = (-1/(3*a))*(b+C2+D0/C2)
              IN real_?(root1) OR real_?(root2) OR real_?(root3)
  
  cubic_roots(a,b,c,d) : {l:(cons?[complex]) | length(l) <= 3 AND   
              LET r1 = nth(l,0) IN
		  c_cubic(a,b,c,d)(r1) = real_(0) AND
		  real_?(r1) AND
	          IF length(l) = 1 THEN cubic_discr(a, b, c, d) = 0 AND delta0(a, b, c) = 0 
	          ELSE LET r2 = nth(l,1) IN
			   c_cubic(a, b, c, d)(r2) = real_(0) AND
			   IF length(l) = 2 THEN cubic_discr(a, b, c, d) = 0 AND delta0(a, b, c) /= 0
			   ELSE LET r3 = nth(l,2) IN
			     c_cubic(a, b, c, d)(r3) = real_(0) AND
			     cubic_discr(a, b, c, d) /= 0 AND
			     (cubic_discr(a, b, c, d) < 0 IMPLIES r2 = conjugate(r3) AND
			     NOT real_?(r2))
			     ENDIF
			 ENDIF} =  
    LET D0 = delta0(a,b,c),
        D1 = delta1(a,b,c,d),
        DD = dd(D0,D1) IN
    IF DD=0 AND D0=0 THEN
      (: real_(-b/(3*a)) :)
    ELSIF DD=0 THEN
      (: real_((9*a*d-b*c)/(2*D0)), real_((4*a*b*c-9*sq(a)*d-b^3)/(a*D0)) :)
    ELSE LET C0 = c_term_cubic(D0,D1,DD),
             C1 = zeta(1)*C0,
	     C2 = zeta(-1)*C0,
	     root1 = (-1/(3*a))*(b+C0+D0/C0),
	     root2 = (-1/(3*a))*(b+C1+D0/C1),
	     root3 = (-1/(3*a))*(b+C2+D0/C2) IN
     IF DD > 0 THEN  	      (: root1,root2,root3 :)
     ELSIF real_?(root1) THEN    (: root1,root2,root3 :)
     ELSIF real_?(root2) THEN (: root2,root1,root3 :)
     ELSE                     (: root3,root1,root2 :)
     ENDIF
    ENDIF

  % Real cubic root of 8x^3 - 60x^2  + 150x - 125 is x = 5/2
  ctest_r : LEMMA
    cubic_roots(8,-60,150,-125) = (: real_(5/2) :)

  % Real cubic roots of 4^x^3 - 8x^2 - 11x - 3 are {-1/2,3}
  ctest_rr : LEMMA
    cubic_roots(4,-8,-11,-3) = (: real_(-1/2), real_(3) :)

  % % Real cubic roots of x^3 - (1/2)x^2 - (13/2)x - 3 are {-1/2,3,-2}
  % ctest_rrr : CONJECTURE
  %   cubic_roots(1,-1/2,-13/2,-3) = (: real_(-1/2), real_(3), real_(-2) :)

END complex_cubic
