(complex_root
 (expt_equiv 0
  (expt_equiv-1 nil 3722886037
   ("" (induct "n")
    (("1" (assert) nil nil) ("2" (assert) nil nil)
     ("3" (skeep)
      (("3" (skeep)
        (("3" (case "j=0")
          (("1" (grind)
            (("1" (decompose-equality) nil nil)
             ("2" (decompose-equality) nil nil))
            nil)
           ("2" (assert)
            (("2" (inst -1 "z")
              (("2" (expand "cpow" +)
                (("2" (expand "^" +)
                  (("2" (replace -1 2) (("2" (propax) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (complex_ const-decl "complex" complex_types nil)
    (* const-decl "complex" complex_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (^ def-decl "complex" complex_types nil)
    (cpow def-decl "complex" fundamental_algebra nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (complex type-eq-decl nil complex_types nil)
    (> const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (real_pow_TCC1 0
  (real_pow_TCC1-1 nil 3722887097 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)) nil
   (real_pow subtype "complex_root.n"
    "{i: integers.int | booleans.OR(complex_root.r /= 0, reals.>=(i, 0))}")))
 (real_pow 0
  (real_pow-1 nil 3722887101
   ("" (induct "n")
    (("1" (assert) nil nil) ("2" (assert) nil nil)
     ("3" (skeep)
      (("3" (skeep)
        (("3" (case "j=0")
          (("1" (rewrite -1) (("1" (assert) (("1" (grind) nil nil)) nil)) nil)
           ("2" (assert)
            (("2" (expand "^" 2 1)
              (("2" (inst -1 "r")
                (("2" (replace -1 2)
                  (("2" (expand "^" 2 2)
                    (("2" (expand "expt")
                      (("2" (grind :exclude ("^" "expt"))
                        (("2" (expand "^") (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (even_plus_odd_is_odd application-judgement "odd_int" integers nil)
    (expt_x1 formula-decl nil exponentiation nil)
    (expt def-decl "real" exponentiation nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (* const-decl "complex" complex_types nil)
    (expt_x0 formula-decl nil exponentiation nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (^ const-decl "real" exponentiation nil)
    (/= const-decl "boolean" notequal nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (complex_ const-decl "complex" complex_types nil)
    (^ def-decl "complex" complex_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (complex type-eq-decl nil complex_types nil)
    (> const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (c_root_TCC1 0
  (c_root_TCC1-1 nil 3721127504 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (odd? const-decl "bool" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers nil))
   nil
   (c_root subtype "complex_root.n"
    "{pm | booleans.OR(reals.>=(Re(complex_root.z), 0), integers.odd?(root.pm))}")))
 (c_root_TCC2 0
  (c_root_TCC2-2 "" 3790337414
   ("" (skeep)
    (("" (replace -1 1)
      (("" (replace -3 1)
        (("" (lemma "expt_root")
          (("" (lemma "real_pow")
            (("" (inst -1 "n" "root(Re(z),n)")
              (("1" (inst -2 "Re(z)" "n")
                (("1" (replace -1 1)
                  (("1" (replace -2 1)
                    (("1" (hide-all-but 1)
                      (("1" (grind)
                        (("1" (decompose-equality 1)
                          (("1" (reveal -4) (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (c_root subtype
    "complex_types.complex_(root.root(Re(complex_root.z), complex_root.n), 0)"
    "{x: complex_types.complex | booleans.AND(complex_types.^(x, complex_root.n) = complex_root.z, (booleans.IMPLIES((booleans.AND(Im(complex_root.z) = 0, integers.odd?(complex_root.n))), Im(x) = 0)))}"))
  (c_root_TCC2-1 nil 3721127504
   ("" (skeep)
    (("" (replace -1 1)
      (("" (replace -3 1)
        (("" (lemma "expt_root")
          (("" (lemma "real_pow")
            (("" (inst -1 "n" "root(Re(z),n)")
              (("1" (inst -2 "Re(z)" "n")
                (("1" (expand "real_")
                  (("1" (replace -1 1)
                    (("1" (replace -2 1)
                      (("1" (hide-all-but 1)
                        (("1" (grind)
                          (("1" (decompose-equality 1)
                            (("1" (reveal -4) (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((expt_root formula-decl nil root power)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (n skolem-const-decl "posnat" complex_root nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (odd? const-decl "bool" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (z skolem-const-decl "complex" complex_root nil)
    (complex type-eq-decl nil complex_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnreal type-eq-decl nil real_types nil)
    (nn_root const-decl "nnreal" nn_root power)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (/= const-decl "boolean" notequal nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (Sign type-eq-decl nil sign reals) (sign const-decl "Sign" sign reals)
    (root const-decl "{y: real | y = nn_root(abs(x), pn) * sign(x)}" root
          power)
    (Integral const-decl "real" integral_def analysis)
    (ln const-decl "real" ln_exp lnexp)
    (root_nn const-decl "{y: nnreal | y = nn_root(nx, pn)}" root power)
    (complex_ const-decl "complex" complex_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_pow formula-decl nil complex_root nil))
   nil
   (c_root subtype
    "complex_types.complex_(root.root(Re(complex_root.z), complex_root.n), 0)"
    "{x: complex_types.complex | booleans.AND(complex_types.^(x, complex_root.n) = complex_root.z, (booleans.IMPLIES((booleans.AND(Im(complex_root.z) = 0, integers.odd?(complex_root.n))), Im(x) = 0)))}")))
 (c_root_TCC3 0
  (c_root_TCC3-1 nil 3722859045
   ("" (skeep)
    (("" (lemma "expt_equiv")
      (("" (lemma "root_complex_def")
        (("" (inst -1 "z" "n")
          (("" (inst -2 "n" "root_complex(z)(n)")
            (("" (assert)
              (("" (ground)
                (("" (case "Re(z)>=0")
                  (("1" (hide -2 -3)
                    (("1" (expand "root_complex")
                      (("1" (expand "from_polar")
                        (("1" (lemma "arg_is_0")
                          (("1" (inst -1 "z")
                            (("1" (assert)
                              (("1" (rewrite -1)
                                (("1" (lemma "sin_0") (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((expt_equiv formula-decl nil complex_root nil)
    (real nonempty-type-from-decl nil reals nil)
    (complex type-eq-decl nil complex_types nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (arg_is_0 formula-decl nil polar nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (cos_range application-judgement "real_abs_le1" sincos trig)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (Im_i formula-decl nil complex_types nil)
    (Im_mul2 formula-decl nil complex_types nil)
    (Im_add2 formula-decl nil complex_types nil)
    (sin_0 formula-decl nil sincos_def trig)
    (from_polar const-decl "complex" polar nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (root_complex const-decl "complex" fundamental_algebra nil)
    (root_complex_def formula-decl nil fundamental_algebra nil))
   nil
   (c_root subtype
    "fundamental_algebra.root_complex(complex_root.z)(complex_root.n)"
    "{x: complex_types.complex | booleans.AND(complex_types.^(x, complex_root.n) = complex_root.z, (booleans.IMPLIES((booleans.AND(Im(complex_root.z) = 0, integers.odd?(complex_root.n))), Im(x) = 0)))}")))
 (c_root_zero 0
  (c_root_zero-1 nil 3722887613
   ("" (skeep)
    (("" (expand "c_root")
      (("" (ground)
        (("1" (case "Im(z) = 0 AND Re(z) < 0 AND odd?(n)")
          (("1" (replace -1 -2)
            (("1" (expand "complex_")
              (("1" (lemma "root_is_0")
                (("1" (inst -1 "Re(z)" "n") (("1" (assert) nil nil)) nil))
                nil))
              nil))
            nil)
           ("2" (replace 1 -1)
            (("2" (expand "root_complex")
              (("2" (expand "from_polar")
                (("2" (assert)
                  (("2"
                    (expand "+
")
                    (("2" (assert)
                      (("2" (lemma "root_root_nn_rew")
                        (("2" (inst -1 "abs(z)" "n")
                          (("2" (replace -1 -2 rl)
                            (("2" (hide -1)
                              (("2" (flatten)
                                (("2" (lemma "root_is_0")
                                  (("2" (inst -1 "abs(z)" "n")
                                    (("2" (assert)
                                      (("2"
                                        (lemma "abs_is_0")
                                        (("2"
                                          (inst -1 "z")
                                          (("2"
                                            (div-by -3 "root(abs(z), n)")
                                            (("2"
                                              (div-by -4 "root(abs(z), n)")
                                              (("2"
                                                (case "0 / root(abs(z), n)=0")
                                                (("1"
                                                  (rewrite -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide -1 -2)
                                                      (("1"
                                                        (reveal -1 -2)
                                                        (("1"
                                                          (typepred "arg(z)")
                                                          (("1"
                                                            (case
                                                             "-pi<arg(z)/n AND arg(z)/n<=pi")
                                                            (("1"
                                                              (lemma
                                                               "cos_eq_0_2pi")
                                                              (("1"
                                                                (lemma
                                                                 "sin_eq_0_2pi")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "arg(z)/n+pi")
                                                                  (("1"
                                                                    (inst
                                                                     -2
                                                                     "arg(z)/n+pi")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "0 <= arg(z) / n + pi AND arg(z) / n + pi <= 2 * pi")
                                                                        (("1"
                                                                          (rewrite
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "sin_plus")
                                                                              (("1"
                                                                                (lemma
                                                                                 "cos_plus")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "sin_pi")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "cos_pi")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -3
                                                                                       "arg(z)/n"
                                                                                       "pi")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -4
                                                                                         "arg(z)/n"
                                                                                         "pi")
                                                                                        (("1"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("3"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("4"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("5"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("5"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("6"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("6"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("7"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("7"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("8"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("8"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("9"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("9"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("10"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("10"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("11"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("11"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("12"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              -4))
                                                                                            (("12"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (-3
                                                                            1))
                                                                          (("2"
                                                                            (grind
                                                                             :exclude
                                                                             "arg")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-1 1))
                                                              (("2"
                                                                (typepred "n")
                                                                (("2"
                                                                  (case "n=1")
                                                                  (("1"
                                                                    (grind
                                                                     :exclude
                                                                     "arg")
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (case
                                                                     "n>1")
                                                                    (("1"
                                                                      (mult-by
                                                                       -1
                                                                       "pi")
                                                                      (("1"
                                                                        (div-by
                                                                         -3
                                                                         "n")
                                                                        (("1"
                                                                          (reveal
                                                                           -5)
                                                                          (("1"
                                                                            (div-by
                                                                             -1
                                                                             "n")
                                                                            (("1"
                                                                              (grind
                                                                               :exclude
                                                                               "arg")
                                                                              (("1"
                                                                                (grind
                                                                                 :exclude
                                                                                 "arg")
                                                                                (("1"
                                                                                  (div-by
                                                                                   -2
                                                                                   "n")
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (div-by
                                                                                 -2
                                                                                 "n")
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (grind) nil nil))
        nil))
      nil))
    nil)
   ((c_root const-decl
     "{x: complex | x ^ n = z AND ((Im(z) = 0 AND odd?(n)) IMPLIES Im(x) = 0)}"
     complex_root nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat" rationals
     nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (* const-decl "complex" complex_types nil)
    (complex_i const-decl "nzcomplex" complex_types nil)
    (root_nn const-decl "{y: nnreal | y = nn_root(nx, pn)}" root power)
    (ln const-decl "real" ln_exp lnexp)
    (Integral const-decl "real" integral_def analysis)
    (sq_abs const-decl "nnreal" complex_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (sqrt_0 formula-decl nil sqrt reals)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (int_times_even_is_even application-judgement "even_int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (even_plus_even_is_even application-judgement "even_int" integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (odd? const-decl "bool" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (complex type-eq-decl nil complex_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (complex_ const-decl "complex" complex_types nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (root_is_0 formula-decl nil root power)
    (root_complex const-decl "complex" fundamental_algebra nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (cos_range application-judgement "real_abs_le1" sincos trig)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (Re_i formula-decl nil complex_types nil)
    (Re_mul2 formula-decl nil complex_types nil)
    (Re_rew formula-decl nil complex_types nil)
    (Im_i formula-decl nil complex_types nil)
    (Im_mul2 formula-decl nil complex_types nil)
    (Im_rew formula-decl nil complex_types nil)
    (eq_rew formula-decl nil complex_types nil)
    (abs const-decl "nnreal" polar nil)
    (nnreal type-eq-decl nil real_types nil)
    (sin const-decl "real" sincos_def trig)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (both_sides_div_pos_gt1 formula-decl nil real_props nil)
    (both_sides_div_pos_le1 formula-decl nil real_props nil)
    (both_sides_div_pos_lt1 formula-decl nil real_props nil)
    (cos_eq_0_2pi formula-decl nil sincos trig)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (sin_plus formula-decl nil sincos trig)
    (sin_pi formula-decl nil sincos trig)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (atan2 const-decl "real" atan2 trig) (cos_pi formula-decl nil sincos trig)
    (cos_plus formula-decl nil sincos trig)
    (posreal_div_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (sin_eq_0_2pi formula-decl nil sincos trig)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (/= const-decl "boolean" notequal nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nn_root const-decl "nnreal" nn_root power)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (Sign type-eq-decl nil sign reals) (sign const-decl "Sign" sign reals)
    (root const-decl "{y: real | y = nn_root(abs(x), pn) * sign(x)}" root
          power)
    (z skolem-const-decl "complex" complex_root nil)
    (n skolem-const-decl "posnat" complex_root nil)
    (arg const-decl "gt_npi_le_pi" polar nil)
    (gt_npi_le_pi nonempty-type-eq-decl nil trig_types trig)
    (<= const-decl "bool" reals nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" pi_def
     trig)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (cos const-decl "real" sincos_def trig)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (both_sides_div1 formula-decl nil real_props nil)
    (abs_is_0 formula-decl nil polar nil)
    (root_root_nn_rew formula-decl nil root power)
    (+ const-decl "complex" complex_types nil)
    (from_polar const-decl "complex" polar nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak))
 (c_root_enum_TCC1 0
  (c_root_enum_TCC1-1 nil 3722859045 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (complex type-eq-decl nil complex_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (odd? const-decl "bool" integers nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil))
   nil
   (c_root_enum subtype
    "number_fields./(((number_fields.-)(complex_root.n, 1)), 2)" "posnat")))
 (c_root_enum 0
  (c_root_enum-1 nil 3722859953
   ("" (skeep)
    (("" (expand "root_complex_enum")
      (("" (typepred "z")
        (("" (typepred "n")
          (("" (expand "c_root")
            (("" (expand "root_complex")
              (("" (expand "from_polar")
                ((""
                  (case "root_nn(abs(z), n) * cos(arg(z) / n) +
         root_nn(abs(z), n) * sin(arg(z) / n) * complex_i = root_nn(abs(z),n)*exp(arg(z)/n*complex_i)")
                  (("1" (replace -1 1)
                    (("1" (lemma "exp_plus")
                      (("1"
                        (inst -1 "arg(z) / n * complex_i"
                         "(2 * complex_i * pi * ((n - 1) / 2)) / n")
                        (("1" (swap-rel -1)
                          (("1" (lemma "arg_is_pi")
                            (("1" (inst -1 "z")
                              (("1" (flatten)
                                (("1" (assert)
                                  (("1" (rewrite -2)
                                    (("1" (assert)
                                      (("1"
                                        (case
                                         "root_nn(abs(z), n) * exp(pi / n * complex_i) *
        exp((2 * complex_i * pi * ((n - 1) / 2)) / n) = exp(pi / n * complex_i) *
        exp((2 * complex_i * pi * ((n - 1) / 2)) / n)*root_nn(abs(z), n)")
                                        (("1"
                                          (replace -1 1)
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (replace -1 1)
                                              (("1"
                                                (case
                                                 "pi / n * complex_i + (2 * complex_i * pi * ((n - 1) / 2)) / n =
       pi*complex_i")
                                                (("1"
                                                  (rewrite -1)
                                                  (("1"
                                                    (hide -1 -2)
                                                    (("1"
                                                      (lemma
                                                       "root_root_nn_rew")
                                                      (("1"
                                                        (inst -1 "abs(z)" "n")
                                                        (("1"
                                                          (replace -1 1 rl)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand "exp")
                                                              (("1"
                                                                (lemma
                                                                 "cos_pi")
                                                                (("1"
                                                                  (lemma
                                                                   "sin_pi")
                                                                  (("1"
                                                                    (lemma
                                                                     "exp_0")
                                                                    (("1"
                                                                      (case
                                                                       "Re(pi * complex_i)=0")
                                                                      (("1"
                                                                        (rewrite
                                                                         -1)
                                                                        (("1"
                                                                          (rewrite
                                                                           -1)
                                                                          (("1"
                                                                            (case
                                                                             "Im(pi * complex_i) = pi")
                                                                            (("1"
                                                                              (rewrite
                                                                               -1)
                                                                              (("1"
                                                                                (rewrite
                                                                                 -1)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   -1)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "sqrt_sq_abs")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "Re(z)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sq")
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (hide-all-but 1)
                                                    (("2" (grind) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (hide-all-but 1)
                                            (("2"
                                              (grind
                                               :exclude
                                               ("root_nn" "abs" "exp"))
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (expand "exp")
                      (("2" (grind :exclude ("root_nn" "abs" "arg")) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((root_complex_enum const-decl "complex" fundamental_algebra nil)
    (odd? const-decl "bool" integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (> const-decl "bool" reals nil)
    (root_complex const-decl "complex" fundamental_algebra nil)
    (exp const-decl "nzcomplex" complex_lnexp nil)
    (complex_i const-decl "nzcomplex" complex_types nil)
    (nzcomplex nonempty-type-eq-decl nil complex_types nil)
    (sin const-decl "real" sincos_def trig)
    (* const-decl "complex" complex_types nil)
    (arg const-decl "gt_npi_le_pi" polar nil)
    (gt_npi_le_pi nonempty-type-eq-decl nil trig_types trig)
    (<= const-decl "bool" reals nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" pi_def
     trig)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (cos const-decl "real" sincos_def trig)
    (abs const-decl "nnreal" polar nil)
    (root_nn const-decl "{y: nnreal | y = nn_root(nx, pn)}" root power)
    (nn_root const-decl "nnreal" nn_root power)
    (nnreal type-eq-decl nil real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (complex_ const-decl "complex" complex_types nil)
    (+ const-decl "complex" complex_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (exp_plus formula-decl nil complex_lnexp nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (mul_nzcomplex1 application-judgement "nzcomplex" complex_types nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (cos_range application-judgement "real_abs_le1" sincos trig)
    (posreal_div_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (Im_exp formula-decl nil complex_lnexp nil)
    (Re_exp formula-decl nil complex_lnexp nil)
    (nnrat_plus_nnrat_is_nnrat application-judgement "nonneg_rat" rationals
     nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat" rationals
     nil)
    (posint_times_posint_is_posint application-judgement "posint" integers
     nil)
    (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (rat_times_rat_is_rat application-judgement "rat" rationals nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal" real_types
     nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (root_root_nn_rew formula-decl nil root power)
    (sin_pi formula-decl nil sincos trig)
    (Im_i formula-decl nil complex_types nil)
    (Im_mul2 formula-decl nil complex_types nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (int_times_even_is_even application-judgement "even_int" integers nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (Integral const-decl "real" integral_def analysis)
    (ln const-decl "real" ln_exp lnexp)
    (root const-decl "{y: real | y = nn_root(abs(x), pn) * sign(x)}" root
          power)
    (sq_abs const-decl "nnreal" complex_types nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (sq const-decl "nonneg_real" sq reals)
    (sqrt_sq_abs formula-decl nil sqrt reals)
    (Re_mul2 formula-decl nil complex_types nil)
    (Re_i formula-decl nil complex_types nil)
    (exp_0 formula-decl nil ln_exp lnexp)
    (cos_pi formula-decl nil sincos trig)
    (arg_is_pi formula-decl nil polar nil)
    (/ const-decl "complex" complex_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (from_polar const-decl "complex" polar nil)
    (c_root const-decl
     "{x: complex | x ^ n = z AND ((Im(z) = 0 AND odd?(n)) IMPLIES Im(x) = 0)}"
     complex_root nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (complex type-eq-decl nil complex_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (< const-decl "bool" reals nil))
   shostak))
 (c_root_real_root 0
  (c_root_real_root-1 nil 3722862197
   ("" (skeep)
    (("" (expand "c_root")
      ((""
        (case "Im(complex_(r, 0)) = 0 AND Re(complex_(r, 0)) < 0 AND odd?(n)")
        (("1" (assert) (("1" (flatten) (("1" (assert) nil nil)) nil)) nil)
         ("2" (assert)
          (("2" (case "r>=0")
            (("1" (assert)
              (("1" (expand "root_complex")
                (("1" (case "arg(complex_(r,0))=0")
                  (("1" (rewrite -1)
                    (("1" (lemma "root_root_nn_rew")
                      (("1" (inst -1 "abs(complex_(r, 0))" "n")
                        (("1" (replace -1 1 rl)
                          (("1" (expand "from_polar")
                            (("1" (lemma "sin_0")
                              (("1" (lemma "cos_0") (("1" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2 3)
                    (("2" (lemma "arg_is_0")
                      (("2" (inst -1 "complex_(r,0)") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (assert)
              (("2" (case "r<0")
                (("1" (typepred "r")
                  (("1" (typepred "n") (("1" (assert) nil nil)) nil)) nil)
                 ("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((c_root const-decl
     "{x: complex | x ^ n = z AND ((Im(z) = 0 AND odd?(n)) IMPLIES Im(x) = 0)}"
     complex_root nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (cos const-decl "real" sincos_def trig)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" pi_def
     trig)
    (<= const-decl "bool" reals nil)
    (gt_npi_le_pi nonempty-type-eq-decl nil trig_types trig)
    (arg const-decl "gt_npi_le_pi" polar nil)
    (root_root_nn_rew formula-decl nil root power)
    (sin_0 formula-decl nil sincos_def trig)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat" rationals
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (cos_range application-judgement "real_abs_le1" sincos trig)
    (sq const-decl "nonneg_real" sq reals)
    (sq_abs const-decl "nnreal" complex_types nil)
    (sqrt_square formula-decl nil sqrt reals)
    (Integral const-decl "real" integral_def analysis)
    (ln const-decl "real" ln_exp lnexp)
    (root_nn const-decl "{y: nnreal | y = nn_root(nx, pn)}" root power)
    (root const-decl "{y: real | y = nn_root(abs(x), pn) * sign(x)}" root
          power)
    (complex_i const-decl "nzcomplex" complex_types nil)
    (* const-decl "complex" complex_types nil)
    (+ const-decl "complex" complex_types nil)
    (exp_0 formula-decl nil ln_exp lnexp)
    (minus_real_is_real application-judgement "real" reals nil)
    (cos_0 formula-decl nil sincos_def trig)
    (from_polar const-decl "complex" polar nil)
    (nnreal type-eq-decl nil real_types nil)
    (abs const-decl "nnreal" polar nil) (arg_is_0 formula-decl nil polar nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (root_complex const-decl "complex" fundamental_algebra nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Im_rew formula-decl nil complex_types nil)
    (Re_rew formula-decl nil complex_types nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (complex type-eq-decl nil complex_types nil)
    (complex_ const-decl "complex" complex_types nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (odd? const-decl "bool" integers nil) (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil))
   shostak))
 (c_root_root_complex_TCC1 0
  (c_root_root_complex_TCC1-1 nil 3722870250 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (odd? const-decl "bool" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil))
   nil
   (c_root_root_complex subtype
    "number_fields./(((number_fields.-)(complex_root.n, 1)), 2)" "posnat")))
 (c_root_root_complex 0
  (c_root_root_complex-1 nil 3722870302
   ("" (skeep)
    (("" (case "Im(z) = 0 AND Re(z) < 0 AND n > 1 AND odd?(n)")
      (("1" (assert)
        (("1" (replace -1 1)
          (("1" (lemma "c_root_enum")
            (("1" (inst -1 "z" "n")
              (("1" (assert) (("1" (flatten) (("1" (assert) nil nil)) nil))
                nil)
               ("2" (flatten) (("2" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (replace 1 2)
        (("2" (expand "c_root")
          (("2" (case "n>1")
            (("1" (assert)
              (("1" (rewrite -1)
                (("1" (replace 1 2) (("1" (propax) nil nil)) nil)) nil))
              nil)
             ("2" (case "n=1")
              (("1" (lemma "sin_pi")
                (("1" (lemma "cos_pi")
                  (("1" (lemma "sqrt_sq_abs")
                    (("1" (inst -1 "Re(z)")
                      (("1" (lemma "exp_0")
                        (("1" (lemma "arg_is_0")
                          (("1" (lemma "arg_is_pi")
                            (("1" (inst -1 "z")
                              (("1" (inst -2 "z")
                                (("1" (ground)
                                  (("1" (expand "root_complex")
                                    (("1" (lemma "root_root_nn_rew")
                                      (("1"
                                        (inst -1 "abs(z)" "n")
                                        (("1"
                                          (replace -1 5 rl)
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (lemma "sqrt_sq_abs")
                                              (("1"
                                                (inst -1 "Re(z)")
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((odd? const-decl "bool" integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (> const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (complex type-eq-decl nil complex_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (z skolem-const-decl "complex" complex_root nil)
    (n skolem-const-decl "posnat" complex_root nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (c_root_enum formula-decl nil complex_root nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (c_root const-decl
     "{x: complex | x ^ n = z AND ((Im(z) = 0 AND odd?(n)) IMPLIES Im(x) = 0)}"
     complex_root nil)
    (cos_pi formula-decl nil sincos trig)
    (arg_is_0 formula-decl nil polar nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (sqrt_sq_neg formula-decl nil sqrt reals)
    (sqrt_sq formula-decl nil sqrt reals)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (cos_range application-judgement "real_abs_le1" sincos trig)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (root_root_nn_rew formula-decl nil root power)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nil application-judgement "nnreal_lt_2pi" atan2 trig)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (from_polar const-decl "complex" polar nil)
    (+ const-decl "complex" complex_types nil)
    (* const-decl "complex" complex_types nil)
    (complex_i const-decl "nzcomplex" complex_types nil)
    (sq_abs const-decl "nnreal" complex_types nil)
    (root const-decl "{y: real | y = nn_root(abs(x), pn) * sign(x)}" root
          power)
    (arg const-decl "gt_npi_le_pi" polar nil)
    (atan2 const-decl "real" atan2 trig)
    (complex_ const-decl "complex" complex_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sq const-decl "nonneg_real" sq reals)
    (nnreal type-eq-decl nil real_types nil)
    (abs const-decl "nnreal" polar nil)
    (root_complex const-decl "complex" fundamental_algebra nil)
    (arg_is_pi formula-decl nil polar nil)
    (exp_0 formula-decl nil ln_exp lnexp)
    (sqrt_sq_abs formula-decl nil sqrt reals)
    (sin_pi formula-decl nil sincos trig))
   shostak))
 (c_root_mult 0
  (c_root_mult-2 "" 3790337448
   ("" (skeep)
    (("" (expand "c_root")
      (("" (expand "root_of_unity")
        (("" (expand "root_complex")
          (("" (lemma "root_root_nn_rew")
            (("" (copy -1)
              (("" (inst -1 "abs(z1)" "n")
                (("" (replace -1 1 rl)
                  (("" (hide -1)
                    (("" (copy -1)
                      (("" (inst -1 "abs(z2)" "n")
                        (("" (replace -1 1 rl)
                          (("" (hide -1)
                            (("" (inst -1 "abs(z1 * z2)" "n")
                              (("" (replace -1 1 rl)
                                (("" (hide -1)
                                  ((""
                                    (case "NOT FORALL(z:complex) : -pi < arg(z)/n AND arg(z)/n <= pi")
                                    (("1" (hide 2)
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (case "n=1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "n>1")
                                            (("1"
                                              (copy -1)
                                              (("1"
                                                (mult-by -1 "pi")
                                                (("1"
                                                  (mult-by -2 "-pi" -)
                                                  (("1"
                                                    (split 2)
                                                    (("1"
                                                      (cross-mult 1)
                                                      (("1" (assert) nil nil))
                                                      nil)
                                                     ("2"
                                                      (cross-mult 1)
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case
                                       "NOT from_polar(root(abs(z1), n), arg(z1) / n) = root(abs(z1), n)*exp(arg(z1)/n*complex_i)")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (grind :exclude ("root" "arg"))
                                          nil
                                          nil))
                                        nil)
                                       ("2"
                                        (replaces -1)
                                        (("2"
                                          (case
                                           "NOT from_polar(root(abs(z2), n), arg(z2) / n) = root(abs(z2), n)*exp(arg(z2)/n*complex_i)")
                                          (("1"
                                            (hide 2)
                                            (("1"
                                              (grind :exclude ("root" "arg"))
                                              nil
                                              nil))
                                            nil)
                                           ("2"
                                            (replaces -1)
                                            (("2"
                                              (case
                                               "NOT from_polar(root(abs(z1 * z2), n), arg(z1 * z2) / n) = root(abs(z1 * z2), n)*exp(arg(z1*z2)/n*complex_i)")
                                              (("1"
                                                (hide 2)
                                                (("1"
                                                  (grind
                                                   :exclude
                                                   ("root" "arg"))
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (replaces -1)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (case
                                                     "Im(z1) = 0 AND Re(z1) < 0 AND odd?(n)")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "Im(z2) = 0 AND Re(z2) < 0")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "Re(z1) * Re(z2) - Im(z1) * Im(z2) < 0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -2)
                                                                    (("1"
                                                                      (replace
                                                                       -4)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (hide
                                                                           1)
                                                                          (("1"
                                                                            (grind-reals)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (lemma
                                                                     "arg_is_pi")
                                                                    (("2"
                                                                      (copy
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "z1")
                                                                        (("2"
                                                                          (inst
                                                                           -2
                                                                           "z2")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (lemma
                                                                               "arg_mult")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             2
                                                                                             "0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "NOT exp(complex_(0 / n, 0) * complex_i) = complex_(1,0)")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "sin_0")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "cos_0")
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "mult_root")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "Re(z1)"
                                                                                                       "Re(z2)"
                                                                                                       "n")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "sin_0")
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "cos_0")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "abs")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "sq_abs")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -6)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -8)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (grind
                                                                                                                       :exclude
                                                                                                                       ("root"
                                                                                                                        "arg"))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "z2=real_(0)")
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (grind
                                                                                       :exclude
                                                                                       ("root"
                                                                                        "arg"))
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (case
                                                                                     "z1=real_(0)")
                                                                                    (("1"
                                                                                      (grind
                                                                                       :exclude
                                                                                       ("root"
                                                                                        "arg"))
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (replace 1 2)
                                                              (("2"
                                                                (replace -1)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case
                                                                     "Re(z1) * Im(z2) = 0 AND Re(z1) * Re(z2) < 0")
                                                                    (("1"
                                                                      (case
                                                                       "NOT (Im(z2)=0 AND Re(z2)>0)")
                                                                      (("1"
                                                                        (hide
                                                                         3)
                                                                        (("1"
                                                                          (grind-reals)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "arg_is_0")
                                                                            (("2"
                                                                              (lemma
                                                                               "arg_is_pi")
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "z1")
                                                                                (("2"
                                                                                  (inst
                                                                                   -2
                                                                                   "z2")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "abs")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "sq_abs")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "mult_root")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (grind
                                                                                                         :exclude
                                                                                                         ("root"
                                                                                                          "arg"))
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (replace
                                                                         1
                                                                         3)
                                                                        (("2"
                                                                          (lemma
                                                                           "arg_is_pi")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "z1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 "arg_mult")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "NOT FORALL(x,y,z:complex) : x*(y*z) = (x*z)*y")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "NOT FORALL(x,y,z:complex) : x*(y*z) = x*y*z")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "mult_root")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "abs"
                                                                                                         3
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sq_abs")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -3)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "Re(z1)"
                                                                                                                 "abs(z2)"
                                                                                                                 "n")
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "NOT complex_(root(Re(z1), n), 0) * complex_(root(abs(z2), n), 0) = complex_(root(Re(z1) * abs(z2), n), 0)")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (grind
                                                                                                                       :exclude
                                                                                                                       ("root"
                                                                                                                        "abs"))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT complex_(root(-Re(z1) * abs(z2), n), 0) = -1*complex_(root(Re(z1) * abs(z2), n), 0)")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "neg_root")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (grind
                                                                                                                                 :exclude
                                                                                                                                 ("root"
                                                                                                                                  "abs"))
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT complex_(-1, 0) = exp(pi*complex_i)")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "sin_pi")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "cos_pi")
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replaces
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "NOT FORALL(x,y,z,w:complex) : x*(y*z*w) = z*(x*y*w)")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "arg(z2) + pi > pi")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -4)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         3
                                                                                                                                         "(n+1)/2")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -2)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "exp_plus")
                                                                                                                                              (("1"
                                                                                                                                                (copy
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1
                                                                                                                                                     3
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "complex_(2, 0) * complex_i * complex_(pi, 0) *
              complex_((n + 1) / 2, 0)
              / complex_(n, 0)
              + complex_(pi, 0) * complex_i"
                                                                                                                                                         "complex_((arg(z2) - pi) / n, 0) * complex_i")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1
                                                                                                                                                           3
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_((n + 1) / 2, 0)
             / complex_(n, 0)
             + complex_(pi, 0) * complex_i
             + complex_((arg(z2) - pi) / n, 0) * complex_i = (arg(z2)/n+2*pi)*complex_i")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (grind
                                                                                                                                                                   :exclude
                                                                                                                                                                   "arg")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (replaces
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT exp(complex_(arg(z2) / n, 0) * complex_i) = exp(complex_((arg(z2) / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "sin_period")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "cos_period")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -2
                                                                                                                                                                           "arg(z2)/n"
                                                                                                                                                                           "1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -1
                                                                                                                                                                             "arg(z2)/n"
                                                                                                                                                                             "1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind
                                                                                                                                                                               :exclude
                                                                                                                                                                               "arg")
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-6
                                                                                                                                            1))
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "odd?")
                                                                                                                                            (("2"
                                                                                                                                              (skeep)
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "n+1 = 2*(1+j)")
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (replaces
                                                                                                                                       -3)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         4
                                                                                                                                         "(n-1)/2")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "exp_plus")
                                                                                                                                              (("1"
                                                                                                                                                (copy
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1
                                                                                                                                                     4
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "complex_(2, 0) * complex_i * complex_(pi, 0) *
              complex_((n - 1) / 2, 0)
              / complex_(n, 0)
              + complex_(pi, 0) * complex_i"
                                                                                                                                                         "complex_((arg(z2) + pi) / n, 0) * complex_i")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1
                                                                                                                                                           4
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_((n - 1) / 2, 0)
             / complex_(n, 0)
             + complex_(pi, 0) * complex_i
             + complex_((arg(z2) + pi) / n, 0) * complex_i = (arg(z2)/n+2*pi)*complex_i")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (grind
                                                                                                                                                                   :exclude
                                                                                                                                                                   "arg")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (replaces
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT exp(complex_(arg(z2) / n, 0) * complex_i) = exp(complex_((arg(z2) / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "sin_period")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "cos_period")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "arg(z2)/n"
                                                                                                                                                                           "1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -2
                                                                                                                                                                             "arg(z2)/n"
                                                                                                                                                                             "1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind
                                                                                                                                                                               :exclude
                                                                                                                                                                               "arg")
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (expand
                                                                                                                                           "odd?")
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-5
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (skeep)
                                                                                                                                              (("2"
                                                                                                                                                (move-terms
                                                                                                                                                 -1
                                                                                                                                                 r
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "z2=real_(0)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (case
                                                                                     "z1=real_(0)")
                                                                                    (("1"
                                                                                      (grind
                                                                                       :exclude
                                                                                       ("exp"
                                                                                        "root"
                                                                                        "abs"))
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (replace 1 2)
                                                        (("2"
                                                          (case
                                                           "Im(z2) = 0 AND Re(z2) < 0 AND odd?(n)")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (case
                                                                     "Im(z1) * Re(z2) = 0 AND Re(z1) * Re(z2) < 0")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lemma
                                                                           "arg_is_0")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "z1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT (Re(z1) >= 0 AND Im(z1) = 0)")
                                                                                    (("1"
                                                                                      (hide
                                                                                       3)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (grind-reals)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -3)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "abs")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "sq_abs")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "0")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "mult_root")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "Re(z1)"
                                                                                                         "Re(z2)"
                                                                                                         "n")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "sin_0")
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "cos_0")
                                                                                                              (("2"
                                                                                                                (grind
                                                                                                                 :exclude
                                                                                                                 "root")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (replace
                                                                         1)
                                                                        (("2"
                                                                          (lemma
                                                                           "arg_is_pi")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "z2")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 "arg_mult")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1
                                                                                           3)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "NOT FORALL(x,y,z:complex) : x*y*z = x*z*y")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "NOT complex_(root(abs(z1), n), 0) * complex_(root(Re(z2), n), 0) = complex_(root(abs(z1)*Re(z2),n),0)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "mult_root")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (grind
                                                                                                             :exclude
                                                                                                             ("root"
                                                                                                              "abs"))
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "abs"
                                                                                                         3
                                                                                                         3)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sq_abs")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "NOT complex_(root(abs(z1) * -Re(z2), n), 0) = complex_(-1,0)*complex_(root(abs(z1) * Re(z2), n), 0)")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "neg_root")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "n"
                                                                                                                         "abs(z1) * Re(z2)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (grind
                                                                                                                             :exclude
                                                                                                                             ("root"
                                                                                                                              "abs"))
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT complex_(-1, 0) = exp(pi*complex_i)")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "sin_pi")
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "cos_pi")
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT FORALL(x,y,z,w:complex) : x*(y*z*w) = (x*y*w)*z")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (case
                                                                                                                             "arg(z1) + pi > pi")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 3
                                                                                                                                 "(n+1)/2")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (replaces
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "exp_plus")
                                                                                                                                      (("1"
                                                                                                                                        (copy
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             3
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_((n + 1) / 2, 0)
             / complex_(n, 0)
             + complex_(pi, 0) * complex_i"
                                                                                                                                                 "complex_((arg(z1) - pi) / n, 0) * complex_i")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1
                                                                                                                                                   3
                                                                                                                                                   rl)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_((n + 1) / 2, 0)
            / complex_(n, 0)
            + complex_(pi, 0) * complex_i
            + complex_((arg(z1) - pi) / n, 0) * complex_i = (arg(z1)/n+2*pi)*complex_i")
                                                                                                                                                      (("1"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replaces
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT exp(complex_((arg(z1) / n + 2 * pi), 0) * complex_i) = exp(complex_(arg(z1) / n, 0) * complex_i)")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (lemma
                                                                                                                                                               "cos_period")
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "sin_period")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "arg(z1)/n"
                                                                                                                                                                   "1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -2
                                                                                                                                                                     "arg(z1)/n"
                                                                                                                                                                     "1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (grind
                                                                                                                                                                       :exclude
                                                                                                                                                                       "arg")
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replaces
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "complex_commutative_mult")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   2
                                                                                                                                   3)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "odd?")
                                                                                                                                      (("2"
                                                                                                                                        (skeep)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "n+1=2+2*j")
                                                                                                                                          (("1"
                                                                                                                                            (factor
                                                                                                                                             -1
                                                                                                                                             r)
                                                                                                                                            (("1"
                                                                                                                                              (div-by
                                                                                                                                               -1
                                                                                                                                               "2")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 4
                                                                                                                                 "(n-1)/2")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "exp_plus")
                                                                                                                                      (("1"
                                                                                                                                        (copy
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             4
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_((n - 1) / 2, 0)
             / complex_(n, 0)
             + complex_(pi, 0) * complex_i"
                                                                                                                                                 "complex_((arg(z1) + pi) / n, 0) * complex_i")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1
                                                                                                                                                   4
                                                                                                                                                   rl)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_((n - 1) / 2, 0)
            / complex_(n, 0)
            + complex_(pi, 0) * complex_i
            + complex_((arg(z1) + pi) / n, 0) * complex_i = (arg(z1)/n+2*pi)*complex_i")
                                                                                                                                                      (("1"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (grind
                                                                                                                                                           :exclude
                                                                                                                                                           "arg")
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replaces
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT exp(complex_(arg(z1) / n, 0) * complex_i) = exp(complex_((arg(z1) / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (lemma
                                                                                                                                                               "sin_period")
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "cos_period")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "arg(z1)/n"
                                                                                                                                                                   "1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -2
                                                                                                                                                                     "arg(z1)/n"
                                                                                                                                                                     "1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (grind
                                                                                                                                                                       :exclude
                                                                                                                                                                       "arg")
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replaces
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "complex_commutative_mult")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   2
                                                                                                                                   3
                                                                                                                                   4)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "odd?")
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (skeep)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "n-1 = 2*j")
                                                                                                                                          (("1"
                                                                                                                                            (div-by
                                                                                                                                             -1
                                                                                                                                             "2")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (case
                                                                                       "z2=complex_(0,0)")
                                                                                      (("1"
                                                                                        (grind
                                                                                         :exclude
                                                                                         ("root"
                                                                                          "abs"
                                                                                          "arg"))
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (case
                                                                                     "z1=real_(0)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "arg_is_0")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "z1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (replace 1 3)
                                                              (("2"
                                                                (case
                                                                 "Im(z1) * Re(z2) + Re(z1) * Im(z2) = 0 AND
              Re(z1) * Re(z2) - Im(z1) * Im(z2) < 0 AND odd?(n)")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "Im(z1)=0")
                                                                      (("1"
                                                                        (grind-reals)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "Im(z2)=0")
                                                                        (("1"
                                                                          (grind-reals)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           3
                                                                           4)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (case
                                                                               "Re(z1)=0")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (case
                                                                                   "NOT Re(z2)=0")
                                                                                  (("1"
                                                                                    (grind-reals)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "abs")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "sq_abs")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT (arg(z1)+arg(z2)=-pi OR arg(z1)+arg(z2)=pi)")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 4)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "arg_is_pi2")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "arg_is_mpi2")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "Im(z1)<0")
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "z1")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -3
                                                                                                             "z2")
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -4)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT Im(z2)<0")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "NOT Im(z1)*Im(z2)>0")
                                                                                                                  (("1"
                                                                                                                    (grind-reals)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide
                                                                                                                     -8)
                                                                                                                    (("2"
                                                                                                                      (grind-reals)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "Im(z1)>0")
                                                                                                        (("1"
                                                                                                          (copy
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "z1")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT Im(z1)*Im(z2)>0")
                                                                                                                (("1"
                                                                                                                  (grind-reals)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -8)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -4
                                                                                                                     "z2")
                                                                                                                    (("2"
                                                                                                                      (grind-reals)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "NOT Im(z1)*Im(z2)>0")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   4)
                                                                                                  (("1"
                                                                                                    (grind
                                                                                                     :exclude
                                                                                                     "arg")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   -6)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "neg_root")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "n"
                                                                                                       "(Im(z1) * Im(z2))")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (replaces
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "NOT complex_(-root((Im(z1) * Im(z2)), n), 0) = exp(pi*complex_i)*complex_(root((Im(z1) * Im(z2)), n), 0)")
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "sin_pi")
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "cos_pi")
                                                                                                                  (("1"
                                                                                                                    (grind
                                                                                                                     :exclude
                                                                                                                     "root")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "NOT FORALL(x,y,z,w:complex) : x*y*(z*w) = x*z*(y*w)")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT complex_(root(sqrt(sq(Im(z1))), n), 0) *
         complex_(root(sqrt(sq(Im(z2))), n), 0) = complex_(root(sqrt(sq(Im(z1)))*sqrt(sq(Im(z2))),n),0)")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "mult_root")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (grind
                                                                                                                               :exclude
                                                                                                                               ("root"
                                                                                                                                "sqrt"
                                                                                                                                "sq"))
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "exp_plus")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -1
                                                                                                                               3
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "NOT complex_(arg(z1) / n, 0) * complex_i +
              complex_(arg(z2) / n, 0) * complex_i = (arg(z1)+arg(z2))/n*complex_i")
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (grind
                                                                                                                                       :exclude
                                                                                                                                       "arg")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "arg(z1) + arg(z2) = -pi")
                                                                                                                                      (("1"
                                                                                                                                        (replaces
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           3
                                                                                                                                           "(n-1)/2")
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "NOT FORALL(x,y,z:complex) : x*(y*z) = (x*y)*z")
                                                                                                                                            (("1"
                                                                                                                                              (hide-all-but
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (inst?)
                                                                                                                                              (("2"
                                                                                                                                                (replaces
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "exp_plus")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -1
                                                                                                                                                       3
                                                                                                                                                       rl)
                                                                                                                                                      (("2"
                                                                                                                                                        (hide
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_((n - 1) / 2, 0)
            / complex_(n, 0)
            + complex_(pi, 0) * complex_i = (-pi/n+2*pi)*complex_i")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replaces
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "NOT exp(complex_(-pi / n, 0) * complex_i) = exp(complex_((-pi / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "sin_period")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "cos_period")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "-pi/n"
                                                                                                                                                                       "1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -2
                                                                                                                                                                         "-pi/n"
                                                                                                                                                                         "1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (replaces
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "complex_commutative_mult")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "Im(z1)<0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "NOT Im(z2)<0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind-reals)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (case
                                                                                                                                                                         "Im(z1)>0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "NOT Im(z2)>0")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind-reals)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (expand
                                                                                                                                             "odd?")
                                                                                                                                            (("2"
                                                                                                                                              (skeep)
                                                                                                                                              (("2"
                                                                                                                                                (move-terms
                                                                                                                                                 -5
                                                                                                                                                 r
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (grind-reals)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (replaces
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             4
                                                                                                                                             "(n+1)/2")
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "NOT FORALL(x,y,z:complex) : x*(y*z) = (x*y)*z")
                                                                                                                                              (("1"
                                                                                                                                                (hide-all-but
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (inst?)
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "exp_plus")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1
                                                                                                                                                         4
                                                                                                                                                         rl)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_((n + 1) / 2, 0)
            / complex_(n, 0)
            + complex_(pi, 0) * complex_i = (pi/n+2*pi)*complex_i")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (grind)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replaces
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "NOT exp(complex_(pi / n, 0) * complex_i) = exp(complex_((pi / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "sin_period")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "cos_period")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -1
                                                                                                                                                                         "pi/n"
                                                                                                                                                                         "1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -2
                                                                                                                                                                           "pi/n"
                                                                                                                                                                           "1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (replaces
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "Im(z1)>0")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "NOT Im(z2)>0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind-reals)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "complex_commutative_mult")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "Im(z1)<0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "NOT Im(z2)<0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (grind-reals)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "complex_commutative_mult")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "odd?")
                                                                                                                                              (("2"
                                                                                                                                                (skeep)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "NOT n+1=2+2*j")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (factor
                                                                                                                                                     -1
                                                                                                                                                     r)
                                                                                                                                                    (("2"
                                                                                                                                                      (div-by
                                                                                                                                                       -1
                                                                                                                                                       "2")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (case
                                                                                   "Re(z2)=0")
                                                                                  (("1"
                                                                                    (hide
                                                                                     4)
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "arg_is_pi")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "z1*z2")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "arg_mult")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "z1"
                                                                                             "z2")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2
                                                                                               -1
                                                                                               rl)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "NOT FORALL(x,y,z,w:complex) : x*y*(z*w) = x*z*(y*w)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (replaces
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "NOT complex_(root(abs(z1), n), 0) * complex_(root(abs(z2), n), 0) = complex_(root(abs(z1)*abs(z2),n),0)")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "mult_root")
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                (("1"
                                                                                                                  (grind
                                                                                                                   :exclude
                                                                                                                   ("root"
                                                                                                                    "abs"))
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "exp_plus")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1
                                                                                                                   5
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT complex_(arg(z1) / n, 0) * complex_i +
              complex_(arg(z2) / n, 0) * complex_i = (arg(z1)+arg(z2))/n*complex_i")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (grind
                                                                                                                           :exclude
                                                                                                                           "arg")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT Im(z1*z2)=0")
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             6)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (grind
                                                                                                                                 :exclude
                                                                                                                                 "arg")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "abs_mult")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "z1"
                                                                                                                               "z2")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1
                                                                                                                                 5
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "abs")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "sq_abs")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "neg_root")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -1
                                                                                                                                               "n"
                                                                                                                                               "(Re(z1) * Re(z2) - Im(z1) * Im(z2))")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     "NOT complex_(-root((Re(z1) * Re(z2) - Im(z1) * Im(z2)), n), 0) = complex_(root(Re(z1) * Re(z2) - Im(z1) * Im(z2), n), 0)*exp(pi*complex_i)")
                                                                                                                                                    (("1"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "sin_pi")
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "cos_pi")
                                                                                                                                                          (("1"
                                                                                                                                                            (grind
                                                                                                                                                             :exclude
                                                                                                                                                             "root")
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replaces
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "exp_plus")
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT FORALL(x,y,z:complex) : x*y*z=y*z*x")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (replaces
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1
                                                                                                                                                                   5
                                                                                                                                                                   rl)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "NOT complex_(pi, 0) * complex_i +
             complex_((arg(z1) + arg(z2)) / n, 0) * complex_i = ((arg(z1)+arg(z2))/n+pi)*complex_i")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (grind
                                                                                                                                                                           :exclude
                                                                                                                                                                           "arg")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "arg(z1) + arg(z2) > pi")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             1
                                                                                                                                                                             -2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "arg(z1) + arg(z2) <= -pi")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "NOT arg(z1)+arg(z2)=-pi")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (replaces
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       6
                                                                                                                                                                                       "(n-1)/2")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (grind
                                                                                                                                                                                           :exclude
                                                                                                                                                                                           ("root"
                                                                                                                                                                                            "arg"
                                                                                                                                                                                            "exp"))
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "odd?")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (move-terms
                                                                                                                                                                                             -7
                                                                                                                                                                                             r
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (div-by
                                                                                                                                                                                               -7
                                                                                                                                                                                               "2")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -2
                                                                                                                                                                                   7
                                                                                                                                                                                   rl)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     7
                                                                                                                                                                                     "(n+1)/2")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (grind
                                                                                                                                                                                         :exclude
                                                                                                                                                                                         ("root"
                                                                                                                                                                                          "arg"
                                                                                                                                                                                          "exp"))
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "odd?")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skeep)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "NOT n+1 = 2*(1+j)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (div-by
                                                                                                                                                                                             -1
                                                                                                                                                                                             "2")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "z2=real_(0)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (grind-reals)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (case
                                                                                               "z1=real_(0)")
                                                                                              (("1"
                                                                                                (grind-reals)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (replace
                                                                     1
                                                                     4)
                                                                    (("2"
                                                                      (case
                                                                       "NOT FORALL(x,y,z,w:complex) : x*y*(z*w) = x*z*(y*w)")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst?)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (case
                                                                             "NOT complex_(root(abs(z1), n), 0) * complex_(root(abs(z2), n), 0) = complex_(root(abs(z1)*abs(z2),n),0)")
                                                                            (("1"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "mult_root")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (grind
                                                                                     :exclude
                                                                                     ("root"
                                                                                      "arg"
                                                                                      "exp"))
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "NOT FORALL(x,y,z:complex) : x*(y*z)=y*z*x")
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "exp_plus")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1
                                                                                           4
                                                                                           rl)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "NOT complex_(arg(z1) / n, 0) * complex_i +
             complex_(arg(z2) / n, 0) * complex_i = (arg(z1)+arg(z2))/n*complex_i")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind
                                                                                                   :exclude
                                                                                                   "arg")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replaces
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (name-replace
                                                                                                   "r1"
                                                                                                   "complex_(root(abs(z1) * abs(z2), n), 0)")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "arg_mult")
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "z1=real_(0)")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "r1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "abs")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "sq_abs")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (case-replace
                                                                                                                     "0 * sqrt(sq(Im(z2)) + sq(Re(z2))) = 0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "NOT root(0,n)=0")
                                                                                                                        (("1"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (grind)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replaces
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               2
                                                                                                                               "0")
                                                                                                                              (("2"
                                                                                                                                (name-replace
                                                                                                                                 "zz1"
                                                                                                                                 "exp(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(0, 0) /
            complex_(n, 0))")
                                                                                                                                (("2"
                                                                                                                                  (name-replace
                                                                                                                                   "zz2"
                                                                                                                                   "exp(complex_(arg(complex_(0, 0) * z2) / n, 0) * complex_i)")
                                                                                                                                  (("2"
                                                                                                                                    (name-replace
                                                                                                                                     "zz3"
                                                                                                                                     "exp(complex_((arg(complex_(0, 0)) + arg(z2)) / n, 0) * complex_i)")
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (grind)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "z2=complex_(0,0)")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             5
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "r1")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "abs")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "sq_abs")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "NOT root(0,n)=0")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "root")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replaces
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (name-replace
                                                                                                                                 "zz1"
                                                                                                                                 "exp(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(0, 0) /
            complex_(n, 0))")
                                                                                                                                (("2"
                                                                                                                                  (name-replace
                                                                                                                                   "zz2"
                                                                                                                                   "exp(complex_(arg(z1 * complex_(0, 0)) / n, 0) * complex_i)")
                                                                                                                                  (("2"
                                                                                                                                    (name-replace
                                                                                                                                     "zz3"
                                                                                                                                     "exp(complex_((arg(complex_(0, 0)) + arg(z1)) / n, 0) * complex_i)")
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       3)
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "z1"
                                                                                                           "z2")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             6)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "NOT FORALL(x,y,z:complex) : x*(y*z)=(x*z)*y")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (case
                                                                                                                     "arg(z1) + arg(z2) > pi")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         6
                                                                                                                         "1")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (replaces
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "exp_plus")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1
                                                                                                                                   6
                                                                                                                                   rl)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "NOT complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(1, 0) /
            complex_(n, 0)
            + complex_((arg(z1) + arg(z2) - 2 * pi) / n, 0) * complex_i = complex_((arg(z1) + arg(z2)) / n, 0) * complex_i")
                                                                                                                                      (("1"
                                                                                                                                        (hide-all-but
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (grind
                                                                                                                                           :exclude
                                                                                                                                           "arg")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (replaces
                                                                                                                                         -1)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (replace
                                                                                                                       1
                                                                                                                       7)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "arg(z1) + arg(z2) <= -pi")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (name-replace
                                                                                                                             "a"
                                                                                                                             "arg(z1)+arg(z2)")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               7
                                                                                                                               "n-1")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (replaces
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "exp_plus")
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1
                                                                                                                                         7
                                                                                                                                         rl)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_(n - 1, 0)
            / complex_(n, 0)
            + complex_((a + 2 * pi) / n, 0) * complex_i = (a/n+2*pi)*complex_i")
                                                                                                                                            (("1"
                                                                                                                                              (hide-all-but
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (replaces
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "NOT exp(complex_(a / n, 0) * complex_i) = exp(complex_((a / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                (("1"
                                                                                                                                                  (hide-all-but
                                                                                                                                                   1)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "sin_period")
                                                                                                                                                    (("1"
                                                                                                                                                      (lemma
                                                                                                                                                       "cos_period")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "a/n"
                                                                                                                                                         "1")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -2
                                                                                                                                                           "a/n"
                                                                                                                                                           "1")
                                                                                                                                                          (("1"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replace
                                                                                                                           1
                                                                                                                           8)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             8
                                                                                                                             "0")
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "NOT exp(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(0, 0) /
            complex_(n, 0)) = complex_(1,0)")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "sin_0")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "cos_0")
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (replaces
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   8)
                                                                                                                                  (("2"
                                                                                                                                    (grind
                                                                                                                                     :exclude
                                                                                                                                     "arg")
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "abs(z1)")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "abs(z2)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (typepred
                                                                             "abs(z2)")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (typepred
                                                                           "abs(z1)")
                                                                          (("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (hide 2)
                                                (("3" (inst?) nil nil))
                                                nil)
                                               ("4"
                                                (hide 2)
                                                (("4"
                                                  (typepred "abs(z1)")
                                                  (("4"
                                                    (typepred "abs(z2)")
                                                    (("4"
                                                      (assert)
                                                      (("4"
                                                        (flatten)
                                                        (("4"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3" (inst?) nil nil)
                                           ("4"
                                            (typepred "abs(z2)")
                                            (("4" (flatten) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (assert)
                                        (("3" (inst?) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "abs(z1)")
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (c_root_mult-1 nil 3729445821
   ("" (skeep)
    (("" (expand "c_root")
      (("" (expand "root_of_unity")
        (("" (expand "root_complex")
          (("" (lemma "root_root_nn_rew")
            (("" (copy -1)
              (("" (inst -1 "abs(z1)" "n")
                (("" (replace -1 1 rl)
                  (("" (hide -1)
                    (("" (copy -1)
                      (("" (inst -1 "abs(z2)" "n")
                        (("" (replace -1 1 rl)
                          (("" (hide -1)
                            (("" (inst -1 "abs(z1 * z2)" "n")
                              (("" (replace -1 1 rl)
                                (("" (hide -1)
                                  ((""
                                    (case "NOT FORALL(z:complex) : -pi < arg(z)/n AND arg(z)/n <= pi")
                                    (("1" (hide 2)
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (case "n=1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "n>1")
                                            (("1"
                                              (copy -1)
                                              (("1"
                                                (mult-by -1 "pi")
                                                (("1"
                                                  (mult-by -2 "-pi" -)
                                                  (("1"
                                                    (split 2)
                                                    (("1"
                                                      (cross-mult 1)
                                                      (("1" (assert) nil nil))
                                                      nil)
                                                     ("2"
                                                      (cross-mult 1)
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case
                                       "NOT from_polar(root(abs(z1), n), arg(z1) / n) = root(abs(z1), n)*exp(arg(z1)/n*complex_i)")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (grind :exclude ("root" "arg"))
                                          nil
                                          nil))
                                        nil)
                                       ("2"
                                        (replaces -1)
                                        (("2"
                                          (case
                                           "NOT from_polar(root(abs(z2), n), arg(z2) / n) = root(abs(z2), n)*exp(arg(z2)/n*complex_i)")
                                          (("1"
                                            (hide 2)
                                            (("1"
                                              (grind :exclude ("root" "arg"))
                                              nil
                                              nil))
                                            nil)
                                           ("2"
                                            (replaces -1)
                                            (("2"
                                              (case
                                               "NOT from_polar(root(abs(z1 * z2), n), arg(z1 * z2) / n) = root(abs(z1 * z2), n)*exp(arg(z1*z2)/n*complex_i)")
                                              (("1"
                                                (hide 2)
                                                (("1"
                                                  (grind
                                                   :exclude
                                                   ("root" "arg"))
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (replaces -1)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (case
                                                     "Im(z1) = 0 AND Re(z1) < 0 AND odd?(n)")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "Im(z2) = 0 AND Re(z2) < 0")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "Re(z1) * Re(z2) - Im(z1) * Im(z2) < 0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -2)
                                                                    (("1"
                                                                      (replace
                                                                       -4)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (hide
                                                                           1)
                                                                          (("1"
                                                                            (grind-reals)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (lemma
                                                                     "arg_is_pi")
                                                                    (("2"
                                                                      (copy
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "z1")
                                                                        (("2"
                                                                          (inst
                                                                           -2
                                                                           "z2")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (lemma
                                                                               "arg_mult")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             2
                                                                                             "0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "NOT exp(complex_(0 / n, 0) * complex_i) = complex_(1,0)")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "sin_0")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "cos_0")
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "mult_root")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "Re(z1)"
                                                                                                       "Re(z2)"
                                                                                                       "n")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "sin_0")
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "cos_0")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "abs")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "sq_abs")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -6)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -8)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (grind
                                                                                                                       :exclude
                                                                                                                       ("root"
                                                                                                                        "arg"))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "z2=real_(0)")
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (grind
                                                                                       :exclude
                                                                                       ("root"
                                                                                        "arg"))
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (case
                                                                                     "z1=real_(0)")
                                                                                    (("1"
                                                                                      (grind
                                                                                       :exclude
                                                                                       ("root"
                                                                                        "arg"))
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (replace 1 2)
                                                              (("2"
                                                                (replace -1)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case
                                                                     "Re(z1) * Im(z2) = 0 AND Re(z1) * Re(z2) < 0")
                                                                    (("1"
                                                                      (case
                                                                       "NOT (Im(z2)=0 AND Re(z2)>0)")
                                                                      (("1"
                                                                        (hide
                                                                         3)
                                                                        (("1"
                                                                          (grind-reals)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "arg_is_0")
                                                                            (("2"
                                                                              (lemma
                                                                               "arg_is_pi")
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "z1")
                                                                                (("2"
                                                                                  (inst
                                                                                   -2
                                                                                   "z2")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -2)
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "abs")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sq_abs")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "0")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "mult_root")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (grind
                                                                                                           :exclude
                                                                                                           ("root"
                                                                                                            "arg"))
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (replace
                                                                         1
                                                                         3)
                                                                        (("2"
                                                                          (lemma
                                                                           "arg_is_pi")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "z1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 "arg_mult")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "NOT FORALL(x,y,z:complex) : x*(y*z) = (x*z)*y")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "NOT FORALL(x,y,z:complex) : x*(y*z) = x*y*z")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "mult_root")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "abs"
                                                                                                         3
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sq_abs")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -3)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "Re(z1)"
                                                                                                                 "abs(z2)"
                                                                                                                 "n")
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "NOT complex_(root(Re(z1), n), 0) * complex_(root(abs(z2), n), 0) = complex_(root(Re(z1) * abs(z2), n), 0)")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (grind
                                                                                                                       :exclude
                                                                                                                       ("root"
                                                                                                                        "abs"))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT complex_(root(-Re(z1) * abs(z2), n), 0) = -1*complex_(root(Re(z1) * abs(z2), n), 0)")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "neg_root")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (grind
                                                                                                                                 :exclude
                                                                                                                                 ("root"
                                                                                                                                  "abs"))
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT complex_(-1, 0) = exp(pi*complex_i)")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "sin_pi")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "cos_pi")
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replaces
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "NOT FORALL(x,y,z,w:complex) : x*(y*z*w) = z*(x*y*w)")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "arg(z2) + pi > pi")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -4)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         3
                                                                                                                                         "(n+1)/2")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -2)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "exp_plus")
                                                                                                                                              (("1"
                                                                                                                                                (copy
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1
                                                                                                                                                     3
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "complex_(2, 0) * complex_i * complex_(pi, 0) *
              complex_((n + 1) / 2, 0)
              / complex_(n, 0)
              + complex_(pi, 0) * complex_i"
                                                                                                                                                         "complex_((arg(z2) - pi) / n, 0) * complex_i")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1
                                                                                                                                                           3
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_((n + 1) / 2, 0)
             / complex_(n, 0)
             + complex_(pi, 0) * complex_i
             + complex_((arg(z2) - pi) / n, 0) * complex_i = (arg(z2)/n+2*pi)*complex_i")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (grind
                                                                                                                                                                   :exclude
                                                                                                                                                                   "arg")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (replaces
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT exp(complex_(arg(z2) / n, 0) * complex_i) = exp(complex_((arg(z2) / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "sin_period")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "cos_period")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -2
                                                                                                                                                                           "arg(z2)/n"
                                                                                                                                                                           "1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -1
                                                                                                                                                                             "arg(z2)/n"
                                                                                                                                                                             "1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind
                                                                                                                                                                               :exclude
                                                                                                                                                                               "arg")
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-6
                                                                                                                                            1))
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "odd?")
                                                                                                                                            (("2"
                                                                                                                                              (skeep)
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "n+1 = 2*(1+j)")
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (replaces
                                                                                                                                       -3)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         4
                                                                                                                                         "(n-1)/2")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "exp_plus")
                                                                                                                                              (("1"
                                                                                                                                                (copy
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1
                                                                                                                                                     4
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "complex_(2, 0) * complex_i * complex_(pi, 0) *
              complex_((n - 1) / 2, 0)
              / complex_(n, 0)
              + complex_(pi, 0) * complex_i"
                                                                                                                                                         "complex_((arg(z2) + pi) / n, 0) * complex_i")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1
                                                                                                                                                           4
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_((n - 1) / 2, 0)
             / complex_(n, 0)
             + complex_(pi, 0) * complex_i
             + complex_((arg(z2) + pi) / n, 0) * complex_i = (arg(z2)/n+2*pi)*complex_i")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (grind
                                                                                                                                                                   :exclude
                                                                                                                                                                   "arg")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (replaces
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT exp(complex_(arg(z2) / n, 0) * complex_i) = exp(complex_((arg(z2) / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "sin_period")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "cos_period")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "arg(z2)/n"
                                                                                                                                                                           "1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -2
                                                                                                                                                                             "arg(z2)/n"
                                                                                                                                                                             "1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind
                                                                                                                                                                               :exclude
                                                                                                                                                                               "arg")
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (expand
                                                                                                                                           "odd?")
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-5
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (skeep)
                                                                                                                                              (("2"
                                                                                                                                                (move-terms
                                                                                                                                                 -1
                                                                                                                                                 r
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "z2=real_(0)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (case
                                                                                     "z1=real_(0)")
                                                                                    (("1"
                                                                                      (grind
                                                                                       :exclude
                                                                                       ("exp"
                                                                                        "root"
                                                                                        "abs"))
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (replace 1 2)
                                                        (("2"
                                                          (case
                                                           "Im(z2) = 0 AND Re(z2) < 0 AND odd?(n)")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (case
                                                                     "Im(z1) * Re(z2) = 0 AND Re(z1) * Re(z2) < 0")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lemma
                                                                           "arg_is_0")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "z1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT (Re(z1) >= 0 AND Im(z1) = 0)")
                                                                                    (("1"
                                                                                      (hide
                                                                                       3)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (grind-reals)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -3)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "abs")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "sq_abs")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "0")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "mult_root")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "Re(z1)"
                                                                                                         "Re(z2)"
                                                                                                         "n")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "sin_0")
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "cos_0")
                                                                                                              (("2"
                                                                                                                (grind
                                                                                                                 :exclude
                                                                                                                 "root")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (replace
                                                                         1)
                                                                        (("2"
                                                                          (lemma
                                                                           "arg_is_pi")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "z2")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 "arg_mult")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1
                                                                                           3)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "NOT FORALL(x,y,z:complex) : x*y*z = x*z*y")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "NOT complex_(root(abs(z1), n), 0) * complex_(root(Re(z2), n), 0) = complex_(root(abs(z1)*Re(z2),n),0)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "mult_root")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (grind
                                                                                                             :exclude
                                                                                                             ("root"
                                                                                                              "abs"))
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "abs"
                                                                                                         3
                                                                                                         3)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sq_abs")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "NOT complex_(root(abs(z1) * -Re(z2), n), 0) = complex_(-1,0)*complex_(root(abs(z1) * Re(z2), n), 0)")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "neg_root")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "n"
                                                                                                                         "abs(z1) * Re(z2)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (grind
                                                                                                                             :exclude
                                                                                                                             ("root"
                                                                                                                              "abs"))
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT complex_(-1, 0) = exp(pi*complex_i)")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "sin_pi")
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "cos_pi")
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT FORALL(x,y,z,w:complex) : x*(y*z*w) = (x*y*w)*z")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (case
                                                                                                                             "arg(z1) + pi > pi")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 3
                                                                                                                                 "(n+1)/2")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (replaces
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "exp_plus")
                                                                                                                                      (("1"
                                                                                                                                        (copy
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             3
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_((n + 1) / 2, 0)
             / complex_(n, 0)
             + complex_(pi, 0) * complex_i"
                                                                                                                                                 "complex_((arg(z1) - pi) / n, 0) * complex_i")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1
                                                                                                                                                   3
                                                                                                                                                   rl)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_((n + 1) / 2, 0)
            / complex_(n, 0)
            + complex_(pi, 0) * complex_i
            + complex_((arg(z1) - pi) / n, 0) * complex_i = (arg(z1)/n+2*pi)*complex_i")
                                                                                                                                                      (("1"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replaces
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT exp(complex_((arg(z1) / n + 2 * pi), 0) * complex_i) = exp(complex_(arg(z1) / n, 0) * complex_i)")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (lemma
                                                                                                                                                               "cos_period")
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "sin_period")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "arg(z1)/n"
                                                                                                                                                                   "1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -2
                                                                                                                                                                     "arg(z1)/n"
                                                                                                                                                                     "1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (grind
                                                                                                                                                                       :exclude
                                                                                                                                                                       "arg")
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replaces
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "complex_commutative_mult")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   2
                                                                                                                                   3)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "odd?")
                                                                                                                                      (("2"
                                                                                                                                        (skeep)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "n+1=2+2*j")
                                                                                                                                          (("1"
                                                                                                                                            (factor
                                                                                                                                             -1
                                                                                                                                             r)
                                                                                                                                            (("1"
                                                                                                                                              (div-by
                                                                                                                                               -1
                                                                                                                                               "2")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 4
                                                                                                                                 "(n-1)/2")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "exp_plus")
                                                                                                                                      (("1"
                                                                                                                                        (copy
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             4
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_((n - 1) / 2, 0)
             / complex_(n, 0)
             + complex_(pi, 0) * complex_i"
                                                                                                                                                 "complex_((arg(z1) + pi) / n, 0) * complex_i")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1
                                                                                                                                                   4
                                                                                                                                                   rl)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_((n - 1) / 2, 0)
            / complex_(n, 0)
            + complex_(pi, 0) * complex_i
            + complex_((arg(z1) + pi) / n, 0) * complex_i = (arg(z1)/n+2*pi)*complex_i")
                                                                                                                                                      (("1"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (grind
                                                                                                                                                           :exclude
                                                                                                                                                           "arg")
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replaces
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT exp(complex_(arg(z1) / n, 0) * complex_i) = exp(complex_((arg(z1) / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (lemma
                                                                                                                                                               "sin_period")
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "cos_period")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "arg(z1)/n"
                                                                                                                                                                   "1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -2
                                                                                                                                                                     "arg(z1)/n"
                                                                                                                                                                     "1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (grind
                                                                                                                                                                       :exclude
                                                                                                                                                                       "arg")
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replaces
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "complex_commutative_mult")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   2
                                                                                                                                   3
                                                                                                                                   4)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "odd?")
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (skeep)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "n-1 = 2*j")
                                                                                                                                          (("1"
                                                                                                                                            (div-by
                                                                                                                                             -1
                                                                                                                                             "2")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (case
                                                                                       "z2=complex_(0,0)")
                                                                                      (("1"
                                                                                        (grind
                                                                                         :exclude
                                                                                         ("root"
                                                                                          "abs"
                                                                                          "arg"))
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (case
                                                                                     "z1=real_(0)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "arg_is_0")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "z1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (replace 1 3)
                                                              (("2"
                                                                (case
                                                                 "Im(z1) * Re(z2) + Re(z1) * Im(z2) = 0 AND
              Re(z1) * Re(z2) - Im(z1) * Im(z2) < 0 AND odd?(n)")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "Im(z1)=0")
                                                                      (("1"
                                                                        (grind-reals)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "Im(z2)=0")
                                                                        (("1"
                                                                          (grind-reals)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           3
                                                                           4)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (case
                                                                               "Re(z1)=0")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (case
                                                                                   "NOT Re(z2)=0")
                                                                                  (("1"
                                                                                    (grind-reals)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "abs")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "sq_abs")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT (arg(z1)+arg(z2)=-pi OR arg(z1)+arg(z2)=pi)")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 4)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "arg_is_pi2")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "arg_is_mpi2")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "Im(z1)<0")
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "z1")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -3
                                                                                                             "z2")
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -4)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT Im(z2)<0")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "NOT Im(z1)*Im(z2)>0")
                                                                                                                  (("1"
                                                                                                                    (grind-reals)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide
                                                                                                                     -8)
                                                                                                                    (("2"
                                                                                                                      (grind-reals)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "Im(z1)>0")
                                                                                                        (("1"
                                                                                                          (copy
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "z1")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT Im(z1)*Im(z2)>0")
                                                                                                                (("1"
                                                                                                                  (grind-reals)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -8)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -4
                                                                                                                     "z2")
                                                                                                                    (("2"
                                                                                                                      (grind-reals)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "NOT Im(z1)*Im(z2)>0")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   4)
                                                                                                  (("1"
                                                                                                    (grind
                                                                                                     :exclude
                                                                                                     "arg")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   -6)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "neg_root")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "n"
                                                                                                       "(Im(z1) * Im(z2))")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (replaces
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "NOT complex_(-root((Im(z1) * Im(z2)), n), 0) = exp(pi*complex_i)*complex_(root((Im(z1) * Im(z2)), n), 0)")
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "sin_pi")
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "cos_pi")
                                                                                                                  (("1"
                                                                                                                    (grind
                                                                                                                     :exclude
                                                                                                                     "root")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "NOT FORALL(x,y,z,w:complex) : x*y*(z*w) = x*z*(y*w)")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT complex_(root(sqrt(sq(Im(z1))), n), 0) *
         complex_(root(sqrt(sq(Im(z2))), n), 0) = complex_(root(sqrt(sq(Im(z1)))*sqrt(sq(Im(z2))),n),0)")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "mult_root")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (grind
                                                                                                                               :exclude
                                                                                                                               ("root"
                                                                                                                                "sqrt"
                                                                                                                                "sq"))
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "exp_plus")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -1
                                                                                                                               3
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "NOT complex_(arg(z1) / n, 0) * complex_i +
              complex_(arg(z2) / n, 0) * complex_i = (arg(z1)+arg(z2))/n*complex_i")
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (grind
                                                                                                                                       :exclude
                                                                                                                                       "arg")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "arg(z1) + arg(z2) = -pi")
                                                                                                                                      (("1"
                                                                                                                                        (replaces
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           3
                                                                                                                                           "(n-1)/2")
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "NOT FORALL(x,y,z:complex) : x*(y*z) = (x*y)*z")
                                                                                                                                            (("1"
                                                                                                                                              (hide-all-but
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (inst?)
                                                                                                                                              (("2"
                                                                                                                                                (replaces
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "exp_plus")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -1
                                                                                                                                                       3
                                                                                                                                                       rl)
                                                                                                                                                      (("2"
                                                                                                                                                        (hide
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_((n - 1) / 2, 0)
            / complex_(n, 0)
            + complex_(pi, 0) * complex_i = (-pi/n+2*pi)*complex_i")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replaces
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "NOT exp(complex_(-pi / n, 0) * complex_i) = exp(complex_((-pi / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "sin_period")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "cos_period")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "-pi/n"
                                                                                                                                                                       "1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -2
                                                                                                                                                                         "-pi/n"
                                                                                                                                                                         "1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (replaces
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "complex_commutative_mult")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "Im(z1)<0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "NOT Im(z2)<0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind-reals)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (case
                                                                                                                                                                         "Im(z1)>0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "NOT Im(z2)>0")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind-reals)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (expand
                                                                                                                                             "odd?")
                                                                                                                                            (("2"
                                                                                                                                              (skeep)
                                                                                                                                              (("2"
                                                                                                                                                (move-terms
                                                                                                                                                 -5
                                                                                                                                                 r
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (grind-reals)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (replaces
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             4
                                                                                                                                             "(n+1)/2")
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "NOT FORALL(x,y,z:complex) : x*(y*z) = (x*y)*z")
                                                                                                                                              (("1"
                                                                                                                                                (hide-all-but
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (inst?)
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "exp_plus")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1
                                                                                                                                                         4
                                                                                                                                                         rl)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_((n + 1) / 2, 0)
            / complex_(n, 0)
            + complex_(pi, 0) * complex_i = (pi/n+2*pi)*complex_i")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (grind)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replaces
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "NOT exp(complex_(pi / n, 0) * complex_i) = exp(complex_((pi / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "sin_period")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "cos_period")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -1
                                                                                                                                                                         "pi/n"
                                                                                                                                                                         "1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -2
                                                                                                                                                                           "pi/n"
                                                                                                                                                                           "1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (replaces
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "Im(z1)>0")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "NOT Im(z2)>0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind-reals)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "complex_commutative_mult")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "Im(z1)<0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "NOT Im(z2)<0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (grind-reals)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "complex_commutative_mult")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "odd?")
                                                                                                                                              (("2"
                                                                                                                                                (skeep)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "NOT n+1=2+2*j")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (factor
                                                                                                                                                     -1
                                                                                                                                                     r)
                                                                                                                                                    (("2"
                                                                                                                                                      (div-by
                                                                                                                                                       -1
                                                                                                                                                       "2")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (case
                                                                                   "Re(z2)=0")
                                                                                  (("1"
                                                                                    (hide
                                                                                     4)
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "arg_is_pi")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "z1*z2")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "arg_mult")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "z1"
                                                                                             "z2")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2
                                                                                               -1
                                                                                               rl)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "NOT FORALL(x,y,z,w:complex) : x*y*(z*w) = x*z*(y*w)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (replaces
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "NOT complex_(root(abs(z1), n), 0) * complex_(root(abs(z2), n), 0) = complex_(root(abs(z1)*abs(z2),n),0)")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "mult_root")
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                (("1"
                                                                                                                  (grind
                                                                                                                   :exclude
                                                                                                                   ("root"
                                                                                                                    "abs"))
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "exp_plus")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1
                                                                                                                   5
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT complex_(arg(z1) / n, 0) * complex_i +
              complex_(arg(z2) / n, 0) * complex_i = (arg(z1)+arg(z2))/n*complex_i")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (grind
                                                                                                                           :exclude
                                                                                                                           "arg")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT Im(z1*z2)=0")
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             6)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (grind
                                                                                                                                 :exclude
                                                                                                                                 "arg")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "abs_mult")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "z1"
                                                                                                                               "z2")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1
                                                                                                                                 5
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "abs")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "sq_abs")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "neg_root")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -1
                                                                                                                                               "n"
                                                                                                                                               "(Re(z1) * Re(z2) - Im(z1) * Im(z2))")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     "NOT complex_(-root((Re(z1) * Re(z2) - Im(z1) * Im(z2)), n), 0) = complex_(root(Re(z1) * Re(z2) - Im(z1) * Im(z2), n), 0)*exp(pi*complex_i)")
                                                                                                                                                    (("1"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "sin_pi")
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "cos_pi")
                                                                                                                                                          (("1"
                                                                                                                                                            (grind
                                                                                                                                                             :exclude
                                                                                                                                                             "root")
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replaces
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "exp_plus")
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT FORALL(x,y,z:complex) : x*y*z=y*z*x")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (replaces
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1
                                                                                                                                                                   5
                                                                                                                                                                   rl)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "NOT complex_(pi, 0) * complex_i +
             complex_((arg(z1) + arg(z2)) / n, 0) * complex_i = ((arg(z1)+arg(z2))/n+pi)*complex_i")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (grind
                                                                                                                                                                           :exclude
                                                                                                                                                                           "arg")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "arg(z1) + arg(z2) > pi")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             1
                                                                                                                                                                             -2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "arg(z1) + arg(z2) <= -pi")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "NOT arg(z1)+arg(z2)=-pi")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (replaces
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       6
                                                                                                                                                                                       "(n-1)/2")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (grind
                                                                                                                                                                                           :exclude
                                                                                                                                                                                           ("root"
                                                                                                                                                                                            "arg"
                                                                                                                                                                                            "exp"))
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "odd?")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (move-terms
                                                                                                                                                                                             -7
                                                                                                                                                                                             r
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (div-by
                                                                                                                                                                                               -7
                                                                                                                                                                                               "2")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -2
                                                                                                                                                                                   7
                                                                                                                                                                                   rl)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     7
                                                                                                                                                                                     "(n+1)/2")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (grind
                                                                                                                                                                                         :exclude
                                                                                                                                                                                         ("root"
                                                                                                                                                                                          "arg"
                                                                                                                                                                                          "exp"))
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "odd?")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skeep)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "NOT n+1 = 2*(1+j)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (div-by
                                                                                                                                                                                             -1
                                                                                                                                                                                             "2")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "z2=real_(0)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (grind-reals)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (case
                                                                                               "z1=real_(0)")
                                                                                              (("1"
                                                                                                (grind-reals)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (replace
                                                                     1
                                                                     4)
                                                                    (("2"
                                                                      (case
                                                                       "NOT FORALL(x,y,z,w:complex) : x*y*(z*w) = x*z*(y*w)")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst?)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (case
                                                                             "NOT complex_(root(abs(z1), n), 0) * complex_(root(abs(z2), n), 0) = complex_(root(abs(z1)*abs(z2),n),0)")
                                                                            (("1"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "mult_root")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (grind
                                                                                     :exclude
                                                                                     ("root"
                                                                                      "arg"
                                                                                      "exp"))
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "NOT FORALL(x,y,z:complex) : x*(y*z)=y*z*x")
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "exp_plus")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1
                                                                                           4
                                                                                           rl)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "NOT complex_(arg(z1) / n, 0) * complex_i +
             complex_(arg(z2) / n, 0) * complex_i = (arg(z1)+arg(z2))/n*complex_i")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind
                                                                                                   :exclude
                                                                                                   "arg")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replaces
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (name-replace
                                                                                                   "r1"
                                                                                                   "complex_(root(abs(z1) * abs(z2), n), 0)")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "arg_mult")
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "z1=real_(0)")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "r1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "abs")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "sq_abs")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (case-replace
                                                                                                                     "0 * sqrt(sq(Im(z2)) + sq(Re(z2))) = 0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "NOT root(0,n)=0")
                                                                                                                        (("1"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (grind)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replaces
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               2
                                                                                                                               "0")
                                                                                                                              (("2"
                                                                                                                                (name-replace
                                                                                                                                 "zz1"
                                                                                                                                 "exp(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(0, 0) /
            complex_(n, 0))")
                                                                                                                                (("2"
                                                                                                                                  (name-replace
                                                                                                                                   "zz2"
                                                                                                                                   "exp(complex_(arg(complex_(0, 0) * z2) / n, 0) * complex_i)")
                                                                                                                                  (("2"
                                                                                                                                    (name-replace
                                                                                                                                     "zz3"
                                                                                                                                     "exp(complex_((arg(complex_(0, 0)) + arg(z2)) / n, 0) * complex_i)")
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (grind)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "z2=complex_(0,0)")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             5
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "r1")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "abs")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "sq_abs")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "NOT root(0,n)=0")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "root")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replaces
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (name-replace
                                                                                                                                 "zz1"
                                                                                                                                 "exp(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(0, 0) /
            complex_(n, 0))")
                                                                                                                                (("2"
                                                                                                                                  (name-replace
                                                                                                                                   "zz2"
                                                                                                                                   "exp(complex_(arg(z1 * complex_(0, 0)) / n, 0) * complex_i)")
                                                                                                                                  (("2"
                                                                                                                                    (name-replace
                                                                                                                                     "zz3"
                                                                                                                                     "exp(complex_((arg(complex_(0, 0)) + arg(z1)) / n, 0) * complex_i)")
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       3)
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "z1"
                                                                                                           "z2")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             6)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "NOT FORALL(x,y,z:complex) : x*(y*z)=(x*z)*y")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (case
                                                                                                                     "arg(z1) + arg(z2) > pi")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         6
                                                                                                                         "1")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (replaces
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "exp_plus")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1
                                                                                                                                   6
                                                                                                                                   rl)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "NOT complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(1, 0) /
            complex_(n, 0)
            + complex_((arg(z1) + arg(z2) - 2 * pi) / n, 0) * complex_i = complex_((arg(z1) + arg(z2)) / n, 0) * complex_i")
                                                                                                                                      (("1"
                                                                                                                                        (hide-all-but
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (grind
                                                                                                                                           :exclude
                                                                                                                                           "arg")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (replaces
                                                                                                                                         -1)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (replace
                                                                                                                       1
                                                                                                                       7)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "arg(z1) + arg(z2) <= -pi")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (name-replace
                                                                                                                             "a"
                                                                                                                             "arg(z1)+arg(z2)")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               7
                                                                                                                               "n-1")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (replaces
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "exp_plus")
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1
                                                                                                                                         7
                                                                                                                                         rl)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "NOT complex_(2, 0) * complex_i * complex_(pi, 0) *
            complex_(n - 1, 0)
            / complex_(n, 0)
            + complex_((a + 2 * pi) / n, 0) * complex_i = (a/n+2*pi)*complex_i")
                                                                                                                                            (("1"
                                                                                                                                              (hide-all-but
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (replaces
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "NOT exp(complex_(a / n, 0) * complex_i) = exp(complex_((a / n + 2 * pi), 0) * complex_i)")
                                                                                                                                                (("1"
                                                                                                                                                  (hide-all-but
                                                                                                                                                   1)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "sin_period")
                                                                                                                                                    (("1"
                                                                                                                                                      (lemma
                                                                                                                                                       "cos_period")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "a/n"
                                                                                                                                                         "1")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -2
                                                                                                                                                           "a/n"
                                                                                                                                                           "1")
                                                                                                                                                          (("1"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replace
                                                                                                                           1
                                                                                                                           8)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             8
                                                                                                                             "0")
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "NOT exp(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(0, 0) /
            complex_(n, 0)) = complex_(1,0)")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "sin_0")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "cos_0")
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (replaces
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   8)
                                                                                                                                  (("2"
                                                                                                                                    (grind
                                                                                                                                     :exclude
                                                                                                                                     "arg")
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "abs(z1)")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "abs(z2)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (typepred
                                                                             "abs(z2)")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (typepred
                                                                           "abs(z1)")
                                                                          (("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (hide 2)
                                                (("3" (inst?) nil nil))
                                                nil)
                                               ("4"
                                                (hide 2)
                                                (("4"
                                                  (typepred "abs(z1)")
                                                  (("4"
                                                    (typepred "abs(z2)")
                                                    (("4"
                                                      (assert)
                                                      (("4"
                                                        (flatten)
                                                        (("4"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3" (inst?) nil nil)
                                           ("4"
                                            (typepred "abs(z2)")
                                            (("4" (flatten) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (assert)
                                        (("3" (inst?) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "abs(z1)")
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((c_root const-decl
     "{x: complex | x ^ n = z AND ((Im(z) = 0 AND odd?(n)) IMPLIES Im(x) = 0)}"
     complex_root nil)
    (root_complex const-decl "complex" fundamental_algebra nil)
    (* const-decl "complex" complex_types nil)
    (complex_i const-decl "nzcomplex" complex_types nil)
    (exp const-decl "nzcomplex" complex_lnexp nil)
    (nzcomplex nonempty-type-eq-decl nil complex_types nil)
    (complex_ const-decl "complex" complex_types nil)
    (root const-decl "{y: real | y = nn_root(abs(x), pn) * sign(x)}" root
          power)
    (sign const-decl "Sign" sign reals) (Sign type-eq-decl nil sign reals)
    (nzint nonempty-type-eq-decl nil integers nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (nn_root const-decl "nnreal" nn_root power)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (odd? const-decl "bool" integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (from_polar const-decl "complex" polar nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (cos_range application-judgement "real_abs_le1" sincos trig)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (exp_0 formula-decl nil ln_exp lnexp)
    (+ const-decl "complex" complex_types nil)
    (sq_abs const-decl "nnreal" complex_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (both_sides_div1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (mult_commutes formula-decl nil fundamental_algebra nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (Im_rew formula-decl nil complex_types nil)
    (r1 skolem-const-decl "complex" complex_root nil)
    (zero_times1 formula-decl nil real_props nil)
    (arg_is_pi2 formula-decl nil polar nil)
    (pos_times_gt formula-decl nil real_props nil)
    (div_cancel4 formula-decl nil real_props nil)
    (arg_is_mpi2 formula-decl nil polar nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (Re_rew formula-decl nil complex_types nil)
    (Re_exp formula-decl nil complex_lnexp nil)
    (Im_exp formula-decl nil complex_lnexp nil)
    (arg_mult formula-decl nil polar nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat" rationals
     nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal" real_types
     nil)
    (even_plus_even_is_even application-judgement "even_int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posint_times_posint_is_posint application-judgement "posint" integers
     nil)
    (even_minus_even_is_even application-judgement "even_int" integers nil)
    (/ const-decl "complex" complex_types nil)
    (sqrt_sq_neg formula-decl nil sqrt reals) (sq_0 formula-decl nil sq reals)
    (minus_real_is_real application-judgement "real" reals nil)
    (mult_root formula-decl nil root power)
    (cos_0 formula-decl nil sincos_def trig)
    (rat_minus_rat_is_rat application-judgement "rat" rationals nil)
    (nnrat_times_nnrat_is_nnrat application-judgement "nonneg_rat" rationals
     nil)
    (nnrat_plus_nnrat_is_nnrat application-judgement "nonneg_rat" rationals
     nil)
    (sin_0 formula-decl nil sincos_def trig)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (z2 skolem-const-decl "complex" complex_root nil)
    (z1 skolem-const-decl "complex" complex_root nil)
    (arg_is_pi formula-decl nil polar nil)
    (neg_times_lt formula-decl nil real_props nil)
    (int_times_even_is_even application-judgement "even_int" integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (neg_root formula-decl nil root power)
    (sin_pi formula-decl nil sincos trig)
    (cos_pi formula-decl nil sincos trig)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (exp_plus formula-decl nil complex_lnexp nil)
    (posrat_times_posrat_is_posrat application-judgement "posrat" rationals
     nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (sin_period formula-decl nil sincos trig)
    (integer nonempty-type-from-decl nil integers nil)
    (cos_period formula-decl nil sincos trig)
    (n skolem-const-decl "posnat" complex_root nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat" rationals nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (rat_times_rat_is_rat application-judgement "rat" rationals nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nil application-judgement "nnreal_lt_2pi" atan2 trig)
    (atan2 const-decl "real" atan2 trig) (atan_0 formula-decl nil atan trig)
    (Integral const-decl "real" integral_def analysis)
    (ln const-decl "real" ln_exp lnexp)
    (root_nn const-decl "{y: nnreal | y = nn_root(nx, pn)}" root power)
    (sqrt_0 formula-decl nil sqrt reals)
    (nonzero_times3 formula-decl nil real_props nil)
    (zero_times3 formula-decl nil real_props nil)
    (sqrt_sq formula-decl nil sqrt reals)
    (arg_is_0 formula-decl nil polar nil)
    (abs_mult formula-decl nil polar nil)
    (Re_mul1 formula-decl nil complex_types nil)
    (Im_mul1 formula-decl nil complex_types nil)
    (TRUE const-decl "bool" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (both_sides_times_neg_gt1 formula-decl nil real_props nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (div_mult_pos_le1 formula-decl nil real_props nil)
    (div_mult_pos_lt2 formula-decl nil real_props nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cos const-decl "real" sincos_def trig)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" pi_def
     trig)
    (<= const-decl "bool" reals nil)
    (gt_npi_le_pi nonempty-type-eq-decl nil trig_types trig)
    (arg const-decl "gt_npi_le_pi" polar nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (abs const-decl "nnreal" polar nil)
    (complex type-eq-decl nil complex_types nil)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (root_root_nn_rew formula-decl nil root power)
    (root_of_unity const-decl "complex" fundamental_algebra nil))
   shostak)))

