complex_props : THEORY 
BEGIN

  IMPORTING complex_types,
            fundamental_algebra,
	    complex_root
	    
  x,y,z: VAR complex
  r,r1: VAR real
  n0r : VAR nzreal
  n0x,n0y: VAR nzcomplex
  n: VAR nat
  n0: VAR posnat

  add_eq_0: LEMMA x+y = complex_(0,0) IFF x = -y
  minus_eq_0: LEMMA  x-y = complex_(0,0) IFF x = y

  complex_mult_unity: LEMMA x * complex_(1,0) = x
  complex_mult_unity2: LEMMA real_(1) * x = x
  complex_div_unity: LEMMA x / complex_(1,0) = x
  complex_add_unity: LEMMA x + real_(0) = x
  complex_minus_unity: LEMMA x - real_(0) = x

  real_complex_minus: LEMMA complex_(-r,0) = -complex_(r,0)
  real_times_real: LEMMA complex_(r,0) * complex_(r1,0) = complex_(r*r1,0)
  complex_div_eq: LEMMA x/n0y = real_(1) IFF x = n0y
  complex_div_eq2: LEMMA x/n0y = real_(-1) IFF x = -n0y 
  add_div1: LEMMA (x/n0x) + (y/n0y) = (x * n0y + y * n0x)/(n0x * n0y)
  add_div2: LEMMA x + (y/n0y) = (x*n0y+y)/n0y
  minus_div1: LEMMA (x/n0x) - (y/n0y) = (x * n0y - y * n0x)/(n0x * n0y)
  minus_div2: LEMMA x - (y/n0y) = (x*n0y-y)/n0y
  cross_mult: LEMMA (x/n0x = y/n0y) IFF (x * n0y = y * n0x)
  separate_div: LEMMA x/(n0x*n0y) = (x/n0x) * (1/n0y)
  div_div_complex: LEMMA (x/n0x)/n0y = x/(n0x*n0y) 
  
  real_complex: LEMMA real_?(x) IMPLIES x = complex_(Re(x),0)
  real_div_mult1: LEMMA complex_((r/n0r)*r1,0) = complex_(r*r1/n0r,0)
  real_div_mult2: LEMMA complex_(r/n0r,0)/n0x = complex_(r,0)/(n0x*n0r)

  real_frac_times_complex: LEMMA complex_(r/n0r,0) * x = (r*x)/n0r
  expr_div_complex: LEMMA x/n0x = (x*n0y)/(n0x*n0y)
  
  inv_div: LEMMA 1/(n0x/n0y) = n0y/n0x
  
  complex_cancel: LEMMA x/n0x = y/n0x IFF x = y
  complex_mult_cancel: LEMMA x*n0x = y*n0x IFF x = y
  sq_abs_def      : LEMMA x * conjugate(x) = real_(Re(x)*Re(x) + Im(x)*Im(x))

  cpow_inv: LEMMA
    FORALL(n: nat) : cpow(1/n0x)(n) = 1/cpow(n0x)(n)

  cpow_div : LEMMA cpow(x/n0x)(n) = cpow(x)(n)/cpow(n0x)(n)

  c_root_inv: LEMMA
   FORALL(n0x: nzcomplex):
    EXISTS (m: nat | m <= n0):
      complex_(1, 0) / c_root(n0x, n0) = root_of_unity(n0)(m) * c_root(complex_(1, 0) / n0x, n0)

  c_root_div: LEMMA
    FORALL(x:complex, n0x: nzcomplex) : EXISTS (m:nat | m<=n0) :
    c_root(x,n0)/c_root(n0x,n0) = root_of_unity(n0)(m)*c_root(x/n0x,n0)

END complex_props
