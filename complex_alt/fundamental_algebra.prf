(|fundamental_algebra|
 (|mult_0_l| 0
  (|mult_0_l-1| |nil| 3595844278
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (LEMMA " idempotent_rectangular")
        (("" (INST-CP - "0*c")
          (("" (INST - "real_(0)")
            (("" (ASSERT)
              (("" (REPLACE -2)
                (("" (INVOKE (NAME "A" "%1") (! 1 1))
                  (("" (REPLACE -1)
                    (("" (REPLACE -2 +)
                      (("" (HIDE -)
                        (("" (EXPAND "A")
                          (("" (EXPAND "rectangular") (("" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|from_rectangular| CONST-DECL "complex" |polar| NIL)
    (|rectangular| CONST-DECL "[real, real]" |polar| NIL) NIL
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|idempotent_rectangular| FORMULA-DECL NIL |polar| NIL))
   SHOSTAK))
 (|mult_commutes| 0
  (|mult_commutes-1| |nil| 3595844876
   ("" (SKEEP) (("" (EXPAND "*") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|cpow_TCC1| 0
  (|cpow_TCC1-1| |nil| 3595783444 ("" (SUBTYPE-TCC) NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL (|cpow| SUBTYPE "(number_fields.-)(fundamental_algebra.n, 1)" "nat")))
 (|cpow_TCC2| 0
  (|cpow_TCC2-1| |nil| 3595783444 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|cpow| TERMINATION
    "fundamental_algebra.cpow(fundamental_algebra.c)((number_fields.-)(fundamental_algebra.n, 1))"
    "NIL")))
 (|cpow_0| 0
  (|cpow_0-1| |nil| 3595945547
   ("" (SKEEP :BUT "pn")
    (("" (INDUCT "pn")
      (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)
       ("4" (SKEEP)
        (("4" (ASSERT)
          (("4" (CASE "j=0")
            (("1" (ASSERT)
              (("1" (REWRITE -1)
                (("1" (ASSERT)
                  (("1" (EXPAND "cpow")
                    (("1" (EXPAND "cpow")
                      (("1" (LEMMA "zero_times")
                        (("1" (INST -1 "c" "complex_(1,0)")
                          (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "cpow" +)
                (("2" (LEMMA "zero_times")
                  (("2" (INST -1 "c" "cpow(c)(j)") (("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|zero_times| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|cpow_real_TCC1| 0
  (|cpow_real_TCC1-1| |nil| 3596554202 ("" (SUBTYPE-TCC) NIL NIL)
   ((/= CONST-DECL "boolean" |notequal| NIL)) NIL
   (|cpow_real| SUBTYPE "fundamental_algebra.n"
    "{i: integers.int | booleans.OR(fundamental_algebra.r /= 0, reals.>=(i, 0))}")))
 (|cpow_real| 0
  (|cpow_real-1| |nil| 3596554203
   ("" (SKEEP :BUT "n")
    (("" (INDUCT "n")
      (("1" (GRIND) NIL NIL)
       ("2" (SKEEP)
        (("2" (EXPAND "cpow" +)
          (("2" (REPLACE -1 1)
            (("2" (EXPAND "^")
              (("2" (EXPAND "expt") (("2" (GRIND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "complex" |complex_types| NIL))
   SHOSTAK))
 (|abs_rewrite_TCC1| 0
  (|abs_rewrite_TCC1-1| |nil| 3595939197 ("" (SUBTYPE-TCC) NIL NIL)
   ((/= CONST-DECL "boolean" |notequal| NIL)) NIL
   (|abs_rewrite| SUBTYPE "2"
    "{i: integers.int | booleans.OR(fundamental_algebra.s /= 0, reals.>=(i, 0))}")))
 (|abs_rewrite_TCC2| 0
  (|abs_rewrite_TCC2-1| |nil| 3595939197
   ("" (SKEEP)
    (("" (CASE "FORALL (xy:real): xy*xy>=0")
      (("1" (INST-CP - "s") (("1" (INST - "r") (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (SKEEP)
          (("2" (LEMMA "nnreal_times_nnreal_is_nnreal")
            (("2" (INST - "xy" "xy")
              (("2" (LEMMA "nnreal_times_nnreal_is_nnreal")
                (("2" (INST - "-xy" "-xy")
                  (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|xy| SKOLEM-CONST-DECL "real" |fundamental_algebra| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| JUDGEMENT-TCC NIL |real_types| NIL))
   NIL
   (|abs_rewrite| SUBTYPE
    "(number_fields.+)(exponentiation.^(fundamental_algebra.s, 2), exponentiation.^(fundamental_algebra.r, 2))"
    "nonneg_real")))
 (|abs_rewrite| 0
  (|abs_rewrite-2| "" 3790337281
   ("" (SKEEP)
    (("" (EXPAND "abs") (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
   NIL SHOSTAK)
  (|abs_rewrite-1| |nil| 3595939199
   ("" (SKEEP)
    (("" (EXPAND "abs")
      (("" (EXPAND "conjugate")
        (("" (ASSERT)
          (("" (REWRITE "Re_plus")
            (("" (REWRITE "Im_plus")
              (("" (REWRITE "Re_imag")
                (("" (REWRITE "Re_real")
                  (("" (REWRITE "Im_imag")
                    (("" (REWRITE "Im_real")
                      (("" (ASSERT)
                        (("" (LEMMA "i_axiom")
                          (("" (REPLACE -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs| CONST-DECL "nnreal" |polar| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|arg_cpow| 0
  (|arg_cpow-1| |nil| 3595945241
   (""
    (CASE "FORALL (c: complex, n: nat):
               -pi < (1+n) * arg(c) AND (1+n) * arg(c) <= pi IMPLIES
                arg(cpow(c)((1+n))) = (1+n) * arg(c)")
    (("1" (SKEEP) (("1" (INST - "c" "pn-1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "n")
        (("1" (SKEEP) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (INST - "c")
              (("2" (ASSERT)
                (("2" (SPLIT -)
                  (("1" (EXPAND "cpow" 1)
                    (("1" (REWRITE "arg_mult")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (FLATTEN)
                        (("2" (LEMMA "cpow_0")
                          (("2" (INST?)
                            (("2" (ASSERT)
                              (("2" (REPLACES -1)
                                (("2" (ASSERT)
                                  (("2" (EXPAND "arg" +)
                                    (("2" (ASSERT)
                                      (("2" (LIFT-IF)
                                        (("2" (GROUND)
                                          (("2" (REWRITE "zero_times1")
                                            (("2" (REWRITE "zero_times") NIL
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (FLATTEN)
                        (("3" (REPLACES -1)
                          (("3" (EXPAND "arg" +)
                            (("3" (LIFT-IF)
                              (("3" (SPLIT +)
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (FLATTEN)
                                  (("2" (REWRITE "zero_times") NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (HIDE 2)
                      (("2" (CASE "arg(c)>=0")
                        (("1" (COPY -1)
                          (("1" (MULT-BY -1 "j") (("1" (ASSERT) NIL NIL)) NIL))
                          NIL)
                         ("2" (COPY 1)
                          (("2" (MULT-BY 1 "j") (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (HIDE 2)
                    (("3" (CASE "arg(c)>=0")
                      (("1" (COPY 1)
                        (("1" (COPY -1)
                          (("1" (MULT-BY -1 "j") (("1" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (COPY 1)
                        (("2" (MULT-BY 1 "j") (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|arg_mult| FORMULA-DECL NIL |polar| NIL)
    (|cpow_0| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|)
    (|zero_times| FORMULA-DECL NIL |complex_types| NIL)
    (|zero_times1| FORMULA-DECL NIL |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|both_sides_times_pos_ge1| FORMULA-DECL NIL |real_props| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    NIL
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL))
   SHOSTAK))
 (|abs_cpow_TCC1| 0
  (|abs_cpow_TCC1-1| |nil| 3595784497 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|abs_cpow| SUBTYPE "fundamental_algebra.n"
    "{i: integers.int | booleans.OR(polar.abs(fundamental_algebra.c) /= 0, reals.>=(i, 0))}")))
 (|abs_cpow| 0
  (|abs_cpow-1| |nil| 3595784503
   ("" (INDUCT "n")
    (("1" (SKEEP)
      (("1" (EXPAND "cpow")
        (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INST - "c")
          (("2" (EXPAND "^")
            (("2" (EXPAND "expt" +)
              (("2" (REPLACES -1 + :DIR RL)
                (("2" (REWRITE "abs_mult" :DIR RL)
                  (("2" (EXPAND "cpow" 1 1)
                    (("2" (REWRITE "abs_mult") NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs_mult| FORMULA-DECL NIL |polar| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|nnreal_expt| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|abs_cpow_increasing| 0
  (|abs_cpow_increasing-1| |nil| 3595784734
   ("" (SKEEP)
    (("" (REWRITE "abs_cpow")
      (("" (REWRITE "abs_cpow")
        (("" (CASE "abs(y)=0")
          (("1" (ASSERT) NIL NIL)
           ("2" (CASE "abs(x)=0")
            (("1" (ASSERT)
              (("1" (REPLACES -1)
                (("1" (ASSERT)
                  (("1" (EXPAND "^" 2 1)
                    (("1" (EXPAND "expt")
                      (("1" (LIFT-IF)
                        (("1" (GROUND)
                          (("1" (REPLACES -1) (("1" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "both_sides_expt_pos_ge_aux")
              (("2" (CASE "n = 0")
                (("1" (REPLACES -1)
                  (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                 ("2" (INST - "n-1" "abs(x)" "abs(y)")
                  (("1" (ASSERT)
                    (("1" (EXPAND "^") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                   ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)
                   ("4" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs_cpow| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|nnreal_exp| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|both_sides_expt_pos_ge_aux| FORMULA-DECL NIL |exponentiation| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (> CONST-DECL "bool" |reals| NIL) NIL NIL
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat_exp| APPLICATION-JUDGEMENT "nat" |exponentiation| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nat_expt| APPLICATION-JUDGEMENT "nat" |exponentiation| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_expt| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|cpow_exp| 0
  (|cpow_exp-1| |nil| 3595843810
   ("" (INDUCT "n")
    (("1" (SKEEP)
      (("1" (ASSERT)
        (("1" (REWRITE "mult_0_l")
          (("1" (EXPAND "cpow")
            (("1" (GRIND)
              (("1" (LEMMA "sin_0") (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (LEMMA "cos_0") (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (ASSERT)
        (("2" (SKEEP)
          (("2" (INST - "c")
            (("2" (ASSERT)
              (("2" (CASE "(1+j)*c=c+j*c")
                (("1" (REWRITE -1)
                  (("1" (REWRITE "exp_plus")
                    (("1" (LEMMA "complex_commutative_mult")
                      (("1" (INST?)
                        (("1" (REPLACE -1)
                          (("1" (REPLACE -2 :DIR RL)
                            (("1" (EXPAND "cpow" 1 1) (("1" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (LEMMA "complex_commutative_mult")
                  (("2" (INST - "exp(c)" _)
                    (("2" (INST?)
                      (("2" (ASSERT)
                        (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|mult_commutes| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|mul_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|exp_plus| FORMULA-DECL NIL |complex_lnexp| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|mult_0_l| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|cpow_mult| 0
  (|cpow_mult-1| |nil| 3596548864
   ("" (INDUCT "n")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INST - "x" "y")
          (("2" (EXPAND "cpow" +)
            (("2" (REPLACE -1)
              (("2" (ASSERT) (("2" (GRIND :EXCLUDE "cpow") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|complex_continuous_sum| 0
  (|complex_continuous_sum-1| |nil| 3596302109
   ("" (SKEEP)
    (("" (EXPAND "complex_continuous?")
      (("" (SKEEP)
        (("" (INST - "x" "epsil/4")
          (("" (INST - "x" "epsil/4")
            (("" (SKOSIMP*)
              (("" (INST + "min(delta!1,delta!2)")
                (("" (SKEEP)
                  (("" (INST - "y")
                    (("" (INST - "y")
                      (("" (ASSERT)
                        (("" (EXPAND "cfunplus")
                          (("" (LEMMA "abs_triangle")
                            (("" (INST - "ff(x)-ff(y)" "gg(x)-gg(y)")
                              (("" (ASSERT)
                                (("" (GRIND-REALS) (("" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_continuous?| CONST-DECL "bool" |fundamental_algebra| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|cfunplus| CONST-DECL "complex" |fundamental_algebra| NIL) NIL
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|abs_triangle| FORMULA-DECL NIL |polar| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}"
     |real_defs| NIL))
   SHOSTAK))
 (|complex_continuous_mult| 0
  (|complex_continuous_mult-1| |nil| 3596302712
   ("" (SKEEP)
    (("" (EXPAND "complex_continuous?")
      (("" (SKEEP)
        (("" (NAME "epf" "min(1/2,epsil/(8*abs(gg(x))+8))")
          (("" (NAME "epg" "epsil/(8*abs(ff(x))+8)")
            (("" (INST - "x" "epf")
              (("" (INST - "x" "epg")
                (("" (SKOLEM - "def")
                  (("" (SKOLEM - "deg")
                    (("" (NAME "delt" "min(def,deg)")
                      (("" (INST + "delt")
                        (("" (SKEEP)
                          (("" (INST - "y")
                            (("" (INST - "y")
                              (("" (ASSERT)
                                (("" (EXPAND "cfunmult")
                                  (("" (LEMMA "abs_triangle")
                                    ((""
                                      (INST - "(ff(x)-ff(y))*gg(x)"
                                       "ff(y)*(gg(x)-gg(y))")
                                      ((""
                                        (INVOKE
                                         (CASE "%1 < epsil/2 AND %2<=epsil/2")
                                         (! -1 2 1) (! -1 2 2))
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT)
                                            (("1" (GRIND) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (HIDE (-1 2))
                                          (("2" (SPLIT)
                                            (("1" (REWRITE "abs_mult")
                                              (("1" (MULT-BY -4 "abs(gg(x))")
                                                (("1"
                                                  (CASE
                                                      "epf*abs(gg(x))<=epsil/2")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (HIDE (-4 2))
                                                    (("2"
                                                      (CASE
                                                          "abs(gg(x)) / (8 + 8 * abs(gg(x))) <= 1/2")
                                                      (("1"
                                                        (MULT-BY -1 "epsil")
                                                        (("1" (ASSERT)
                                                          (("1" (EXPAND "epf")
                                                            (("1"
                                                              (EXPAND "min" 1)
                                                              (("1" (LIFT-IF)
                                                                (("1" (GROUND)
                                                                  (("1"
                                                                    (CROSS-MULT
                                                                     1)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE 2)
                                                        (("2" (CROSS-MULT 1)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (REWRITE "abs_mult")
                                              (("2"
                                                (CASE
                                                    "(abs(ff(x))+1)*abs((gg(x) - gg(y))) <= epsil / 2")
                                                (("1"
                                                  (CASE
                                                      "abs(ff(y))<=abs(ff(x))+1")
                                                  (("1"
                                                    (MULT-BY -1
                                                     "abs(gg(x)-gg(y))")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (CASE
                                                          "NOT abs(ff(x)-ff(y))<=1/2")
                                                      (("1" (EXPAND "min")
                                                        (("1" (LIFT-IF)
                                                          (("1" (GROUND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (HIDE-ALL-BUT (-1 1))
                                                        (("2"
                                                          (LEMMA
                                                           "abs_triangle_minus")
                                                          (("2"
                                                            (INST - "ff(y)"
                                                             "ff(x)")
                                                            (("2"
                                                              (CASE
                                                                  "ff(y)-ff(x) = -(ff(x)-ff(y))")
                                                              (("1"
                                                                (REPLACES -1)
                                                                (("1"
                                                                  (REWRITE
                                                                   "abs_neg")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE-ALL-BUT
                                                                   1)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (MULT-BY -5 "abs(ff(x))+1")
                                                  (("2"
                                                    (CASE
                                                        "epg*(abs(ff(x))+1)<=epsil/2")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (HIDE (2 3))
                                                      (("2"
                                                        (NAME "DG"
                                                              "abs(ff(x))+1")
                                                        (("2" (REPLACE -1)
                                                          (("2"
                                                            (EXPAND "epg" 1
                                                                    :ASSERT?
                                                                    NONE)
                                                            (("2"
                                                              (CASE
                                                                  "DG/(8 * abs(ff(x)) + 8) <= 1/2")
                                                              (("1"
                                                                (MULT-BY -1
                                                                 "epsil")
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2"
                                                                (CROSS-MULT 1)
                                                                (("2"
                                                                  (EXPAND "DG"
                                                                          1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_continuous?| CONST-DECL "bool" |fundamental_algebra| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}"
     |real_defs| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|cfunmult| CONST-DECL "complex" |fundamental_algebra| NIL) NIL
    (* CONST-DECL "complex" |complex_types| NIL) NIL NIL
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|abs_triangle_minus| FORMULA-DECL NIL |polar| NIL) NIL
    (|abs_neg| FORMULA-DECL NIL |polar| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|div_mult_pos_gt2| FORMULA-DECL NIL |extra_real_props| NIL) NIL
    (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL)
    (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) NIL NIL
    (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|abs_mult| FORMULA-DECL NIL |polar| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|abs_triangle| FORMULA-DECL NIL |polar| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|complex_continuous_cpow| 0
  (|complex_continuous_cpow-1| |nil| 3596304212
   ("" (INDUCT "n")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INST - "c")
          (("2" (LEMMA "complex_continuous_mult")
            (("2" (INST - "LAMBDA (x): c*cpow(x)(j)" "LAMBDA (x): x")
              (("2" (SPLIT -)
                (("1" (EXPAND "cfunmult")
                  (("1" (EXPAND "cpow" +)
                    (("1" (ASSERT)
                      (("1" (INVOKE (NAME "bb" "%1") (! 1 1))
                        (("1" (REPLACE -1)
                          (("1" (INVOKE (NAME "ggv" "%1") (! -2 1))
                            (("1" (REPLACE -1)
                              (("1" (CASE "ggv = bb")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (DECOMPOSE-EQUALITY)
                                  (("2" (EXPAND "ggv" 1)
                                    (("2" (EXPAND "bb" 1)
                                      (("2" (ASSERT)
                                        (("2" (HIDE-ALL-BUT 1)
                                          (("2" (LEMMA "complex_commutative_mult")
                                            (("2" (INST?)
                                              (("2" (REPLACE -1)
                                                (("2" (HIDE -)
                                                  (("2" (LEMMA "complex_commutative_mult")
                                                    (("2"
                                                      (INST - "cpow(x!1)(j)"
                                                       "x!1")
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (REPLACES -1 :DIR RL)
                                                          (("2"
                                                            (LEMMA
                                                             "associative_mult")
                                                            (("2" (INST?)
                                                              (("2" (ASSERT)
                                                                (("2" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (PROPAX) NIL NIL)
                 ("3" (HIDE-ALL-BUT 1)
                  (("3" (EXPAND "complex_continuous?")
                    (("3" (SKOSIMP*)
                      (("3" (INST + "epsil!1/2")
                        (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|cfunmult| CONST-DECL "complex" |fundamental_algebra| NIL) NIL
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|associative_mult| FORMULA-DECL NIL |number_fields| NIL)
    (|mult_commutes| FORMULA-DECL NIL |fundamental_algebra| NIL) NIL
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex_continuous_mult| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL) NIL
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_continuous?| CONST-DECL "bool" |fundamental_algebra| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|root_neg_1_TCC1| 0
  (|root_neg_1_TCC1-1| |nil| 3722878108 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|root_neg_1| SUBTYPE "complex_types.complex_(fundamental_algebra.pn, 0)"
    "nzcomplex")))
 (|root_neg_1_def| 0
  (|root_neg_1_def-1| |nil| 3595843722
   ("" (SKEEP)
    (("" (EXPAND "root_neg_1")
      (("" (LIFT-IF)
        (("" (GROUND)
          (("1" (GRIND) NIL NIL)
           ("2" (REWRITE "cpow_exp")
            (("2" (ASSERT)
              (("2" (LEMMA "exp_i_pi")
                (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|root_neg_1| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|odd_minus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|odd_times_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnrat_times_nnrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat"
     |rationals| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|exp_i_pi| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|cpow_exp| FORMULA-DECL NIL |fundamental_algebra| NIL))
   SHOSTAK))
 (|root_complex_TCC1| 0
  (|root_complex_TCC1-1| |nil| 3595937189
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (TYPEPRED "arg(c)")
        (("1" (CASE "pn=1")
          (("1" (GRIND) NIL NIL)
           ("2" (CASE "pn>1")
            (("1" (CROSS-MULT 2)
              (("1" (MULT-BY -1 "-pi" -) (("1" (GRIND) NIL NIL)) NIL)) NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL)
       ("2" (TYPEPRED "arg(c)")
        (("2" (CASE "pn=1")
          (("1" (GRIND) NIL NIL)
           ("2" (CASE "pn>1")
            (("1" (MULT-BY -1 "pi")
              (("1" (CROSS-MULT 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonpos_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|negreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|both_sides_times_neg_gt1| FORMULA-DECL NIL |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|both_sides_times_pos_gt1| FORMULA-DECL NIL |real_props| NIL)
    (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL))
   NIL
   (|root_complex| SUBTYPE
    "number_fields./(polar.arg(fundamental_algebra.c), fundamental_algebra.pn)"
    "gt_npi_le_pi")))
 (|arg_root_complex| 0
  (|arg_root_complex-1| |nil| 3595946123
   ("" (SKEEP)
    (("" (EXPAND "root_complex")
      (("" (REWRITE "arg_from_polar")
        (("1" (TYPEPRED "root_nn(abs(c),pn)")
          (("1" (ASSERT)
            (("1" (CASE "NOT abs(c) = 0")
              (("1" (ASSERT)
                (("1" (CASE "root_nn(abs(c),pn)=0")
                  (("1" (LEMMA "root_is_0")
                    (("1" (INST -1 "abs(c)" "pn")
                      (("1" (REWRITE "root_root_nn_rew")
                        (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL))
                  NIL))
                NIL)
               ("2" (LEMMA "abs_is_0")
                (("2" (INST?)
                  (("2" (ASSERT)
                    (("2" (REPLACES -1)
                      (("2" (EXPAND "from_polar")
                        (("2" (ASSERT)
                          (("2" (REWRITE -1)
                            (("2" (LEMMA "root_is_0")
                              (("2" (INST -1 "0" "pn")
                                (("2" (REWRITE "root_root_nn_rew")
                                  (("2" (FLATTEN)
                                    (("2" (REWRITE -1) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (TYPEPRED "arg(c)")
            (("2" (CASE "pi>=pi/pn")
              (("1" (CROSS-MULT 1) (("1" (CROSS-MULT -1) NIL NIL)) NIL)
               ("2" (ASSERT)
                (("2" (CASE "pn>=1")
                  (("1" (MULT-BY -1 "pi")
                    (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                   ("2" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (CASE "pi>=pi/pn")
            (("1" (ASSERT)
              (("1" (CROSS-MULT 1) (("1" (CROSS-MULT -1) NIL NIL)) NIL)) NIL)
             ("2" (ASSERT)
              (("2" (CASE "pn>=1")
                (("1" (MULT-BY -1 "pi")
                  (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|root_complex| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|div_mult_pos_ge2| FORMULA-DECL NIL |real_props| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL)
    (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|odd?| CONST-DECL "bool" |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|root_root_nn_rew| FORMULA-DECL NIL |root| |power|)
    (|root_is_0| FORMULA-DECL NIL |root| |power|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_exp| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (|nnreal_expt| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|inverse| CONST-DECL "D" |function_inverse| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|from_polar| CONST-DECL "complex" |polar| NIL)
    (|abs_is_0| FORMULA-DECL NIL |polar| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|root_nn| CONST-DECL "{y: nnreal | y = nn_root(nx, pn)}" |root| |power|)
    (|nn_root| CONST-DECL "nnreal" |nn_root| |power|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|arg_from_polar| FORMULA-DECL NIL |polar| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|abs_root_complex| 0
  (|abs_root_complex-2| "" 3790337301
   ("" (SKEEP)
    (("" (EXPAND "root_complex")
      (("" (INVOKE (NAME "RR" "%1") (! 1 1 1 1))
        (("" (REPLACE -1)
          (("" (EXPAND "from_polar")
            (("" (LEMMA "abs_rewrite")
              (("" (INST -1 "RR * cos(arg(c) / pn)" "RR * sin(arg(c) / pn)")
                ((""
                  (CASE
                      "abs(RR * sin(arg(c) / pn) * complex_i + RR * cos(arg(c) / pn))= abs(RR * cos(arg(c) / pn) + RR * sin(arg(c) / pn) * complex_i)")
                  (("1" (REPLACE -1 -2)
                    (("1" (REPLACE -2 1)
                      (("1" (HIDE -1 -2)
                        (("1" (LEMMA "mult_expt_pos")
                          (("1" (INST-CP - "2" "sin(arg(c)/pn)" "RR")
                            (("1" (INST - "2" "cos(arg(c)/pn)" "RR")
                              (("1" (REPLACES -1)
                                (("1" (REPLACES -1)
                                  (("1" (ASSERT)
                                    (("1" (LEMMA "sqrt_times")
                                      (("1"
                                        (INST - "RR^2"
                                         "cos(arg(c) / pn) ^ 2 + sin(arg(c) / pn) ^ 2")
                                        (("1" (ASSERT)
                                          (("1" (REPLACE -1)
                                            (("1" (HIDE -1)
                                              (("1" (LEMMA "sqrt_sq")
                                                (("1" (INST - "RR")
                                                  (("1" (ASSERT)
                                                    (("1" (SPLIT -)
                                                      (("1" (EXPAND "^" 1 1)
                                                        (("1" (EXPAND "expt")
                                                          (("1" (EXPAND "expt")
                                                            (("1"
                                                              (EXPAND "expt")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "sin2_cos2")
                                                                  (("1" (INST?)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "^")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "expt")
                                                                        (("1"
                                                                          (EXPAND
                                                                           "expt")
                                                                          (("1"
                                                                            (EXPAND
                                                                             "expt")
                                                                            (("1"
                                                                              (EXPAND
                                                                               "sq"
                                                                               -1)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (TYPEPRED "RR")
                                          (("2" (ASSERT)
                                            (("2" (LEMMA "sin2_cos2")
                                              (("2" (INST? -)
                                                (("2" (EXPAND "sq")
                                                  (("2" (EXPAND "^")
                                                    (("2" (EXPAND "expt")
                                                      (("2" (EXPAND "expt")
                                                        (("2" (EXPAND "expt")
                                                          (("2"
                                                            (CASE
                                                                "cos(arg(c) / pn) * cos(arg(c) / pn) * RR * RR +
            sin(arg(c) / pn) * sin(arg(c) / pn) * RR * RR = RR*RR*(cos(arg(c) / pn) * cos(arg(c) / pn)+sin(arg(c) / pn) * sin(arg(c) / pn))")
                                                            (("1"
                                                              (REPLACE -1 2)
                                                              (("1"
                                                                (REPLACE -2 2)
                                                                (("1"
                                                                  (CASE
                                                                      "RR*RR*1=sq(RR)")
                                                                  (("1"
                                                                    (REWRITE
                                                                     -1)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "sqrt_sq")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (EXPAND
                                                                     "sq")
                                                                    (("2"
                                                                      (PROPAX)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (HIDE-ALL-BUT 1)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 2)
                    (("2" (LEMMA "sin2_cos2")
                      (("2" (INST?)
                        (("2" (EXPAND "^")
                          (("2" (EXPAND "expt")
                            (("2" (EXPAND "expt")
                              (("2" (EXPAND "expt")
                                (("2" (EXPAND "sq")
                                  (("2" (ASSERT)
                                    (("2" (HIDE-ALL-BUT 1)
                                      (("2" (CASE "RR>=0")
                                        (("1"
                                          (LEMMA
                                           "nnreal_times_nnreal_is_nnreal")
                                          (("1" (INST - "RR" "RR")
                                            (("1" (GRIND) NIL NIL)) NIL))
                                          NIL)
                                         ("2"
                                          (LEMMA
                                           "nnreal_times_nnreal_is_nnreal")
                                          (("2" (INST - "-RR" "-RR")
                                            (("1" (GRIND) NIL NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|abs_root_complex-1| |nil| 3595938884
   ("" (SKEEP)
    (("" (EXPAND "root_complex")
      (("" (INVOKE (NAME "RR" "%1") (! 1 1 1 1))
        (("" (REPLACE -1)
          (("" (EXPAND "from_polar")
            (("" (LEMMA "abs_rewrite")
              (("" (INST -1 "RR * cos(arg(c) / pn)" "RR * sin(arg(c) / pn)")
                ((""
                  (CASE
                      "abs(RR * sin(arg(c) / pn) * complex_i + RR * cos(arg(c) / pn))= abs(RR * cos(arg(c) / pn) + RR * sin(arg(c) / pn) * complex_i)")
                  (("1" (REPLACE -1 -2)
                    (("1" (REPLACE -2 1)
                      (("1" (HIDE -1 -2)
                        (("1" (LEMMA "mult_expt_pos")
                          (("1" (INST-CP - "2" "sin(arg(c)/pn)" "RR")
                            (("1" (INST - "2" "cos(arg(c)/pn)" "RR")
                              (("1" (REPLACES -1)
                                (("1" (REPLACES -1)
                                  (("1" (ASSERT)
                                    (("1" (LEMMA "sqrt_times")
                                      (("1"
                                        (INST - "RR^2"
                                         "cos(arg(c) / pn) ^ 2 + sin(arg(c) / pn) ^ 2")
                                        (("1" (ASSERT)
                                          (("1" (REPLACE -1)
                                            (("1" (HIDE -1)
                                              (("1" (LEMMA "sqrt_sq")
                                                (("1" (INST - "RR")
                                                  (("1" (ASSERT)
                                                    (("1" (SPLIT -)
                                                      (("1" (EXPAND "^" 1 1)
                                                        (("1" (EXPAND "expt")
                                                          (("1" (EXPAND "expt")
                                                            (("1"
                                                              (EXPAND "expt")
                                                              (("1"
                                                                (REPLACES -1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "sin2_cos2")
                                                                    (("1"
                                                                      (INST?)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "^")
                                                                        (("1"
                                                                          (EXPAND
                                                                           "expt")
                                                                          (("1"
                                                                            (EXPAND
                                                                             "expt")
                                                                            (("1"
                                                                              (EXPAND
                                                                               "expt")
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "sq"
                                                                                 -1)
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (TYPEPRED "RR")
                                          (("2" (ASSERT)
                                            (("2" (LEMMA "sin2_cos2")
                                              (("2" (INST? -)
                                                (("2" (EXPAND "sq")
                                                  (("2" (EXPAND "^")
                                                    (("2" (EXPAND "expt")
                                                      (("2" (EXPAND "expt")
                                                        (("2" (EXPAND "expt")
                                                          (("2"
                                                            (CASE
                                                                "cos(arg(c) / pn) * cos(arg(c) / pn) * RR * RR +
            sin(arg(c) / pn) * sin(arg(c) / pn) * RR * RR = RR*RR*(cos(arg(c) / pn) * cos(arg(c) / pn)+sin(arg(c) / pn) * sin(arg(c) / pn))")
                                                            (("1"
                                                              (REPLACE -1 2)
                                                              (("1"
                                                                (REPLACE -2 2)
                                                                (("1"
                                                                  (CASE
                                                                      "RR*RR*1=sq(RR)")
                                                                  (("1"
                                                                    (REWRITE
                                                                     -1)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "sqrt_sq")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (EXPAND
                                                                     "sq")
                                                                    (("2"
                                                                      (PROPAX)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (HIDE-ALL-BUT 1)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 2)
                    (("2" (LEMMA "sin2_cos2")
                      (("2" (INST?)
                        (("2" (EXPAND "^")
                          (("2" (EXPAND "expt")
                            (("2" (EXPAND "expt")
                              (("2" (EXPAND "expt")
                                (("2" (EXPAND "sq")
                                  (("2" (ASSERT)
                                    (("2" (HIDE-ALL-BUT 1)
                                      (("2" (CASE "RR>=0")
                                        (("1"
                                          (LEMMA
                                           "nnreal_times_nnreal_is_nnreal")
                                          (("1" (INST - "RR" "RR")
                                            (("1" (GRIND) NIL NIL)) NIL))
                                          NIL)
                                         ("2"
                                          (LEMMA
                                           "nnreal_times_nnreal_is_nnreal")
                                          (("2" (INST - "-RR" "-RR")
                                            (("1" (GRIND) NIL NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|root_complex| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|abs_rewrite| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|mult_expt_pos| FORMULA-DECL NIL |root| |reals|)
    (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|nnreal_expt| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sqrt_square| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) NIL NIL
    (^ CONST-DECL "real" |exponentiation| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|nnreal_exp| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL) NIL
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| JUDGEMENT-TCC NIL |real_types| NIL)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|from_polar| CONST-DECL "complex" |polar| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|root_nn| CONST-DECL "{y: nnreal | y = nn_root(nx, pn)}" |root| |power|)
    (|nn_root| CONST-DECL "nnreal" |nn_root| |power|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|root_complex_def| 0
  (|root_complex_def-1| |nil| 3595938557
   ("" (SKEEP)
    (("" (INVOKE (NAME "cp" "%1") (! 1 1))
      (("" (CASE "abs(cp)=abs(c) AND arg(cp) = arg(c)")
        (("1" (FLATTEN)
          (("1" (ASSERT)
            (("1" (REPLACE -3)
              (("1" (CASE "cp = real_(0) OR c = real_(0)")
                (("1" (SPLIT -)
                  (("1" (REPLACES -1)
                    (("1" (LEMMA "abs_is_0")
                      (("1" (INST-CP - "real_(0)")
                        (("1" (ASSERT)
                          (("1" (REPLACE -2)
                            (("1" (INST - "c") (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (REPLACE -1)
                    (("2" (LEMMA "abs_is_0")
                      (("2" (INST-CP - "real_(0)")
                        (("2" (ASSERT)
                          (("2" (INST - "cp") (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (ASSERT)
                    (("2" (LEMMA "idempotent_polar")
                      (("2" (INST-CP - "cp")
                        (("2" (INST - "c")
                          (("2" (HIDE -5)
                            (("2" (REPLACE -1 3)
                              (("2" (REPLACE -2 3)
                                (("2" (EXPAND "polar" +)
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE-ALL-BUT 1)
          (("2" (SPLIT)
            (("1" (EXPAND "cp")
              (("1" (REWRITE "abs_cpow")
                (("1" (REWRITE "abs_root_complex")
                  (("1" (ASSERT)
                    (("1" (LEMMA "root_root_nn_rew")
                      (("1" (INST -1 "abs(c)" "pn")
                        (("1" (REPLACE -1 1 RL)
                          (("1" (LEMMA "expt_root")
                            (("1" (INST -1 "abs(c)" "pn") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "cp")
              (("2" (REWRITE "arg_cpow")
                (("1" (REWRITE "arg_root_complex") (("1" (ASSERT) NIL NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (REWRITE "arg_root_complex") (("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (HIDE 2)
                  (("3" (REWRITE "arg_root_complex") (("3" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|root_complex| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|arg_root_complex| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|arg_cpow| FORMULA-DECL NIL |fundamental_algebra| NIL) NIL
    (|abs_root_complex| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|root_root_nn_rew| FORMULA-DECL NIL |root| |power|)
    (|odd?| CONST-DECL "bool" |integers| NIL)
    (|expt_root| FORMULA-DECL NIL |root| |power|)
    (|nnreal_exp| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (|abs_cpow| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|idempotent_polar| FORMULA-DECL NIL |polar| NIL)
    (|polar| CONST-DECL "[nnreal, gt_npi_le_pi]" |polar| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|abs_is_0| FORMULA-DECL NIL |polar| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL))
   SHOSTAK))
 (|roots_unity_unique_TCC1| 0
  (|roots_unity_unique_TCC1-1| |nil| 3722878108 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL))
   NIL
   (|roots_unity_unique| SUBTYPE
    "complex_types.complex_(fundamental_algebra.pn, 0)" "nzcomplex")))
 (|roots_unity_unique| 0
  (|roots_unity_unique-3| "" 3790337307
   ("" (SKEEP*)
    ((""
      (CASE
          "NOT arg(exp((2 * complex_i * pi * nn) / pn)) = arg(exp((2 * complex_i * pi * mm) / pn))")
      (("1" (ASSERT) NIL NIL)
       ("2" (LEMMA "exp_imag")
        (("2"
          (CASE "(2 * complex_i * pi * nn) / pn = ((2*pi*nn)/pn)*complex_i")
          (("1"
            (CASE "(2 * complex_i * pi * mm) / pn = ((2*pi*mm)/pn)*complex_i")
            (("1" (REPLACES -1)
              (("1" (REPLACES -1)
                (("1" (HIDE -1)
                  (("1" (LEMMA "arg_exp_imag")
                    (("1" (CASE "((2 * pi * nn) / pn)<=pi")
                      (("1" (REWRITE -2)
                        (("1" (CASE "((2 * pi * mm) / pn)<=pi")
                          (("1" (REWRITE -3)
                            (("1" (MULT-BY 1 "2*pi/pn")
                              (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (ASSERT)
                              (("2" (LEMMA "exp_periodicity")
                                (("2"
                                  (INST - "-1"
                                   "((2 * (mm * pi) / pn) * complex_i)")
                                  (("2" (REPLACES -1 :DIR RL)
                                    (("2"
                                      (CASE
                                          "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                      (("1" (REPLACES -1)
                                        (("1" (REWRITE -2)
                                          (("1"
                                            (CASE
                                                "(2 * (nn * pi) / pn)>0 AND ((2 * (mm * pi) / pn)) <= 2 * pi")
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CASE "mm/pn<=1")
                                              (("1" (MULT-BY -1 "2*pi")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (CROSS-MULT 1) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (CASE "2*(mm*pi)/pn<=3*pi")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (CROSS-MULT 1)
                                                (("2" (MULT-BY -4 "pi")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (GRIND :EXCLUDE "arg") NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "exp_periodicity")
                            (("2"
                              (INST - "-1"
                               "((2 * (mm * pi) / pn) * complex_i)")
                              (("2" (REPLACES -1 :DIR RL)
                                (("2"
                                  (CASE
                                      "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi *complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                  (("1" (REPLACES -1)
                                    (("1" (REWRITE -2)
                                      (("1"
                                        (CASE
                                            "(2 * (nn * pi) / pn)>0 AND ((2 * (mm * pi) / pn)) <= 2 * pi")
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (CASE "mm/pn<=1")
                                          (("1" (MULT-BY -1 "2*pi")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (CROSS-MULT 1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (CASE "2*(mm*pi)/pn<=3*pi")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (CROSS-MULT 1)
                                            (("2" (MULT-BY -4 "pi")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (GRIND :EXCLUDE "arg") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (LEMMA "exp_periodicity")
                            (("2"
                              (INST - "-1"
                               "((2 * (nn * pi) / pn) * complex_i)")
                              (("2" (REPLACES -1 :DIR RL)
                                (("2"
                                  (CASE
                                      "((2 * (nn * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (nn * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                  (("1" (REPLACES -1)
                                    (("1" (REWRITE -1)
                                      (("1" (CASE "((2 * pi * mm) / pn)<=pi")
                                        (("1" (REWRITE -2)
                                          (("1"
                                            (CASE
                                                "(2 * (mm * pi) / pn)>0 AND ((2 * (nn * pi) / pn)) <= 2 * pi")
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CASE "nn/pn<=1")
                                              (("1" (MULT-BY -1 "2*pi")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (CROSS-MULT 1) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LEMMA "exp_periodicity")
                                            (("2"
                                              (INST - "-1"
                                               "((2 * (mm * pi) / pn) * complex_i)")
                                              (("2" (REPLACES -1 :DIR RL)
                                                (("2" (LEMMA "exp_periodicity")
                                                  (("2"
                                                    (INST - "-1"
                                                     "((2 * (mm * pi) / pn) * complex_i)")
                                                    (("2"
                                                      (CASE
                                                          "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                                      (("1" (REPLACES -1)
                                                        (("1" (REWRITE -2)
                                                          (("1"
                                                            (CASE
                                                                "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                            (("1" (ASSERT) NIL
                                                              NIL)
                                                             ("2"
                                                              (CROSS-MULT -1)
                                                              (("2"
                                                                (MULT-BY 3
                                                                 "2*pi*pn")
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2"
                                                              (CASE
                                                                  "((2 * (mm * pi) / pn))<=2*pi")
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2"
                                                                (CROSS-MULT 1)
                                                                (("2"
                                                                  (MULT-BY -4
                                                                   "pi")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (ASSERT)
                                                        (("2"
                                                          (GRIND :EXCLUDE
                                                           "arg")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (LEMMA "exp_periodicity")
                                          (("2"
                                            (INST - "-1"
                                             "((2 * (mm * pi) / pn) * complex_i)")
                                            (("2" (REPLACES -1 :DIR RL)
                                              (("2"
                                                (CASE
                                                    "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                                (("1" (REPLACES -1)
                                                  (("1" (REWRITE -1)
                                                    (("1"
                                                      (CASE
                                                          "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (CROSS-MULT -1)
                                                        (("2"
                                                          (MULT-BY 3 "2*pi*pn")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT)
                                                      (("2"
                                                        (CASE
                                                            "((2 * (mm * pi) / pn))<=2*pi")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (CROSS-MULT 1)
                                                          (("2"
                                                            (MULT-BY -3 "pi")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (GRIND :EXCLUDE "arg")
                                                    NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (CASE "((2 * (nn * pi) / pn))<=2*pi")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1)
                                          (("2" (MULT-BY -2 "pi")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (GRIND :EXCLUDE "arg") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (LEMMA "exp_periodicity")
                          (("2"
                            (INST - "-1" "((2 * (nn * pi) / pn) * complex_i)")
                            (("2" (REPLACES -1 :DIR RL)
                              (("2"
                                (CASE
                                    "((2 * (nn * pi) / pn) *complex_i) + 2 * -1 * pi * complex_i = (((2 * (nn * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                (("1" (REPLACES -1)
                                  (("1" (CASE "(2 * (mm * pi) / pn) <= pi")
                                    (("1" (REWRITE -2)
                                      (("1" (REWRITE -2)
                                        (("1"
                                          (CASE
                                              "(2 * (mm * pi) / pn)>0 AND ((2 * (nn * pi) / pn)) <= 2 * pi")
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (CASE "nn/pn<=1")
                                            (("1" (MULT-BY -1 "2*pi")
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CROSS-MULT 1) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (CASE "((2 * (nn * pi) / pn))<=2*pi")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1)
                                          (("2" (MULT-BY -2 "pi")
                                            (("2" (MULT-BY -3 "pi")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (LEMMA "exp_periodicity")
                                      (("2"
                                        (INST - "-1"
                                         "((2 * (mm * pi) / pn) * complex_i)")
                                        (("2" (REPLACES -1 :DIR RL)
                                          (("2"
                                            (CASE
                                                "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                            (("1" (REPLACES -1)
                                              (("1" (REWRITE -1)
                                                (("1" (REWRITE -1)
                                                  (("1"
                                                    (CASE
                                                        "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (CROSS-MULT -1)
                                                      (("2"
                                                        (MULT-BY 3 "2*pi*pn")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT)
                                                    (("2"
                                                      (CASE
                                                          "((2 * (mm * pi) / pn))<=2*pi")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (CROSS-MULT 1)
                                                        (("2" (MULT-BY -3 "pi")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (CASE
                                                      "((2 * (nn * pi) / pn))<=2*pi")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (CROSS-MULT 1)
                                                    (("2" (MULT-BY -2 "pi")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT)
                                              (("2" (GRIND :EXCLUDE "arg") NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (GRIND :EXCLUDE "arg") NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL)
           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|roots_unity_unique-2| |nil| 3722773973
   ("" (SKEEP*)
    ((""
      (CASE
          "NOT arg(exp((2 * complex_i * pi * nn) / pn)) = arg(exp((2 * complex_i * pi * mm) / pn))")
      (("1" (ASSERT) NIL NIL)
       ("2" (LEMMA "exp_imag")
        (("2"
          (CASE "(2 * complex_i * pi * nn) / pn = ((2*pi*nn)/pn)*complex_i")
          (("1"
            (CASE "(2 * complex_i * pi * mm) / pn = ((2*pi*mm)/pn)*complex_i")
            (("1" (REPLACES -1)
              (("1" (REPLACES -1)
                (("1" (HIDE -1)
                  (("1" (LEMMA "arg_exp_imag")
                    (("1" (CASE "((2 * pi * nn) / pn)<=pi")
                      (("1" (REWRITE -2)
                        (("1" (CASE "((2 * pi * mm) / pn)<=pi")
                          (("1" (REWRITE -3)
                            (("1" (MULT-BY 1 "2*pi/pn")
                              (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (ASSERT)
                              (("2" (LEMMA "exp_periodicity")
                                (("2"
                                  (INST - "-1"
                                   "((2 * (mm * pi) / pn) * complex_i)")
                                  (("2" (REPLACES -1 :DIR RL)
                                    (("2"
                                      (CASE
                                          "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                      (("1" (REPLACES -1)
                                        (("1" (REWRITE -2)
                                          (("1"
                                            (CASE
                                                "(2 * (nn * pi) / pn)>0 AND ((2 * (mm * pi) / pn)) <= 2 * pi")
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CASE "mm/pn<=1")
                                              (("1" (MULT-BY -1 "2*pi")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (CROSS-MULT 1) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (CASE "2*(mm*pi)/pn<=3*pi")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (CROSS-MULT 1)
                                                (("2" (MULT-BY -4 "pi")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (GRIND :EXCLUDE "arg") NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "exp_periodicity")
                            (("2"
                              (INST - "-1"
                               "((2 * (mm * pi) / pn) * complex_i)")
                              (("2" (REPLACES -1 :DIR RL)
                                (("2"
                                  (CASE
                                      "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi *complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                  (("1" (REPLACES -1)
                                    (("1" (REWRITE -2)
                                      (("1"
                                        (CASE
                                            "(2 * (nn * pi) / pn)>0 AND ((2 * (mm * pi) / pn)) <= 2 * pi")
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (CASE "mm/pn<=1")
                                          (("1" (MULT-BY -1 "2*pi")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (CROSS-MULT 1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (CASE "2*(mm*pi)/pn<=3*pi")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (CROSS-MULT 1)
                                            (("2" (MULT-BY -4 "pi")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (GRIND :EXCLUDE "arg") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (LEMMA "exp_periodicity")
                            (("2"
                              (INST - "-1"
                               "((2 * (nn * pi) / pn) * complex_i)")
                              (("2" (REPLACES -1 :DIR RL)
                                (("2"
                                  (CASE
                                      "((2 * (nn * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (nn * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                  (("1" (REPLACES -1)
                                    (("1" (REWRITE -1)
                                      (("1" (CASE "((2 * pi * mm) / pn)<=pi")
                                        (("1" (REWRITE -2)
                                          (("1"
                                            (CASE
                                                "(2 * (mm * pi) / pn)>0 AND ((2 * (nn * pi) / pn)) <= 2 * pi")
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CASE "nn/pn<=1")
                                              (("1" (MULT-BY -1 "2*pi")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (CROSS-MULT 1) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LEMMA "exp_periodicity")
                                            (("2"
                                              (INST - "-1"
                                               "((2 * (mm * pi) / pn) * complex_i)")
                                              (("2" (REPLACES -1 :DIR RL)
                                                (("2" (LEMMA "exp_periodicity")
                                                  (("2"
                                                    (INST - "-1"
                                                     "((2 * (mm * pi) / pn) * complex_i)")
                                                    (("2" (REPLACES -1 :DIR RL)
                                                      (("2"
                                                        (CASE
                                                            "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                                        (("1" (REPLACES -1)
                                                          (("1" (REWRITE -2)
                                                            (("1"
                                                              (CASE
                                                                  "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2"
                                                                (CROSS-MULT -1)
                                                                (("2"
                                                                  (MULT-BY 3
                                                                   "2*pi*pn")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2"
                                                                (CASE
                                                                    "((2 * (mm * pi) / pn))<=2*pi")
                                                                (("1" (ASSERT)
                                                                  NIL NIL)
                                                                 ("2"
                                                                  (CROSS-MULT
                                                                   1)
                                                                  (("2"
                                                                    (MULT-BY -4
                                                                     "pi")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT)
                                                          (("2"
                                                            (GRIND :EXCLUDE
                                                             "arg")
                                                            NIL NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (LEMMA "exp_periodicity")
                                          (("2"
                                            (INST - "-1"
                                             "((2 * (mm * pi) / pn) * complex_i)")
                                            (("2" (REPLACES -1 :DIR RL)
                                              (("2"
                                                (CASE
                                                    "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                                (("1" (REPLACES -1)
                                                  (("1" (REWRITE -1)
                                                    (("1"
                                                      (CASE
                                                          "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (CROSS-MULT -1)
                                                        (("2"
                                                          (MULT-BY 3 "2*pi*pn")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT)
                                                      (("2"
                                                        (CASE
                                                            "((2 * (mm * pi) / pn))<=2*pi")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (CROSS-MULT 1)
                                                          (("2"
                                                            (MULT-BY -3 "pi")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (GRIND :EXCLUDE "arg")
                                                    NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (CASE "((2 * (nn * pi) / pn))<=2*pi")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1)
                                          (("2" (MULT-BY -2 "pi")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (GRIND :EXCLUDE "arg") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (LEMMA "exp_periodicity")
                          (("2"
                            (INST - "-1" "((2 * (nn * pi) / pn) * complex_i)")
                            (("2" (REPLACES -1 :DIR RL)
                              (("2"
                                (CASE
                                    "((2 * (nn * pi) / pn) *complex_i) + 2 * -1 * pi * complex_i = (((2 * (nn * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                (("1" (REPLACES -1)
                                  (("1" (CASE "(2 * (mm * pi) / pn) <= pi")
                                    (("1" (REWRITE -2)
                                      (("1" (REWRITE -2)
                                        (("1"
                                          (CASE
                                              "(2 * (mm * pi) / pn)>0 AND ((2 * (nn * pi) / pn)) <= 2 * pi")
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (CASE "nn/pn<=1")
                                            (("1" (MULT-BY -1 "2*pi")
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CROSS-MULT 1) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (CASE "((2 * (nn * pi) / pn))<=2*pi")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1)
                                          (("2" (MULT-BY -2 "pi")
                                            (("2" (MULT-BY -3 "pi")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (LEMMA "exp_periodicity")
                                      (("2"
                                        (INST - "-1"
                                         "((2 * (mm * pi) / pn) * complex_i)")
                                        (("2" (REPLACES -1 :DIR RL)
                                          (("2"
                                            (CASE
                                                "((2 * (mm * pi) / pn) * complex_i) + 2 * -1 * pi * complex_i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*complex_i")
                                            (("1" (REPLACES -1)
                                              (("1" (REWRITE -1)
                                                (("1" (REWRITE -1)
                                                  (("1"
                                                    (CASE
                                                        "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (CROSS-MULT -1)
                                                      (("2"
                                                        (MULT-BY 3 "2*pi*pn")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT)
                                                    (("2"
                                                      (CASE
                                                          "((2 * (mm * pi) / pn))<=2*pi")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (CROSS-MULT 1)
                                                        (("2" (MULT-BY -3 "pi")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (CASE
                                                      "((2 * (nn * pi) / pn))<=2*pi")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (CROSS-MULT 1)
                                                    (("2" (MULT-BY -2 "pi")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT)
                                              (("2" (GRIND :EXCLUDE "arg") NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (GRIND :EXCLUDE "arg") NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL)
           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (> CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Im_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|div_cancel3| FORMULA-DECL NIL |real_props| NIL)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|div_cancel4| FORMULA-DECL NIL |real_props| NIL)
    (|arg_exp| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nzint_times_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|exp_periodicity| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) NIL NIL NIL
    (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|arg_exp_imag| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|exp_imag| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL)
  (|roots_unity_unique-1| |nil| 3721654863
   ("" (SKEEP*)
    ((""
      (CASE
          "NOT arg(exp((2 * i * pi * nn) / pn)) = arg(exp((2 * i * pi * mm) / pn))")
      (("1" (ASSERT) NIL NIL)
       ("2" (LEMMA "exp_imag")
        (("2" (CASE "(2 * i * pi * nn) / pn = ((2*pi*nn)/pn)*i")
          (("1" (CASE "(2 * i * pi * mm) / pn = ((2*pi*mm)/pn)*i")
            (("1" (REPLACES -1)
              (("1" (REPLACES -1)
                (("1" (HIDE -1)
                  (("1" (LEMMA "arg_exp_imag")
                    (("1" (CASE "((2 * pi * nn) / pn)<=pi")
                      (("1" (REWRITE -2)
                        (("1" (CASE "((2 * pi * mm) / pn)<=pi")
                          (("1" (REWRITE -3)
                            (("1" (MULT-BY 1 "2*pi/pn")
                              (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (ASSERT)
                              (("2" (LEMMA "exp_periodicity")
                                (("2"
                                  (INST - "-1" "((2 * (mm * pi) / pn) * i)")
                                  (("2" (REPLACES -1 :DIR RL)
                                    (("2"
                                      (CASE
                                          "((2 * (mm * pi) / pn) * i) + 2 * -1 * pi * i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*i")
                                      (("1" (REPLACES -1)
                                        (("1" (REWRITE -2)
                                          (("1"
                                            (CASE
                                                "(2 * (nn * pi) / pn)>0 AND ((2 * (mm * pi) / pn)) <= 2 * pi")
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CASE "mm/pn<=1")
                                              (("1" (MULT-BY -1 "2*pi")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (CROSS-MULT 1) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (CASE "2*(mm*pi)/pn<=3*pi")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (CROSS-MULT 1)
                                                (("2" (MULT-BY -4 "pi")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "exp_periodicity")
                            (("2" (INST - "-1" "((2 * (mm * pi) / pn) * i)")
                              (("2" (REPLACES -1 :DIR RL)
                                (("2"
                                  (CASE
                                      "((2 * (mm * pi) / pn) * i) + 2 * -1 * pi * i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*i")
                                  (("1" (REPLACES -1)
                                    (("1" (REWRITE -2)
                                      (("1"
                                        (CASE
                                            "(2 * (nn * pi) / pn)>0 AND ((2 * (mm * pi) / pn)) <= 2 * pi")
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (CASE "mm/pn<=1")
                                          (("1" (MULT-BY -1 "2*pi")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (CROSS-MULT 1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (CASE "2*(mm*pi)/pn<=3*pi")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (CROSS-MULT 1)
                                            (("2" (MULT-BY -4 "pi")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (LEMMA "exp_periodicity")
                            (("2" (INST - "-1" "((2 * (nn * pi) / pn) * i)")
                              (("2" (REPLACES -1 :DIR RL)
                                (("2"
                                  (CASE
                                      "((2 * (nn * pi) / pn) * i) + 2 * -1 * pi * i = (((2 * (nn * pi) / pn)) + 2 * -1 * pi)*i")
                                  (("1" (REPLACES -1)
                                    (("1" (REWRITE -1)
                                      (("1" (CASE "((2 * pi * mm) / pn)<=pi")
                                        (("1" (REWRITE -2)
                                          (("1"
                                            (CASE
                                                "(2 * (mm * pi) / pn)>0 AND ((2 * (nn * pi) / pn)) <= 2 * pi")
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CASE "nn/pn<=1")
                                              (("1" (MULT-BY -1 "2*pi")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (CROSS-MULT 1) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LEMMA "exp_periodicity")
                                            (("2"
                                              (INST - "-1"
                                               "((2 * (mm * pi) / pn) * i)")
                                              (("2" (REPLACES -1 :DIR RL)
                                                (("2" (LEMMA "exp_periodicity")
                                                  (("2"
                                                    (INST - "-1"
                                                     "((2 * (mm * pi) / pn) * i)")
                                                    (("2" (REPLACES -1 :DIR RL)
                                                      (("2"
                                                        (CASE
                                                            "((2 * (mm * pi) / pn) * i) + 2 * -1 * pi * i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*i")
                                                        (("1" (REPLACES -1)
                                                          (("1" (REWRITE -2)
                                                            (("1"
                                                              (CASE
                                                                  "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2"
                                                                (CROSS-MULT -1)
                                                                (("2"
                                                                  (MULT-BY 3
                                                                   "2*pi*pn")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2"
                                                                (CASE
                                                                    "((2 * (mm * pi) / pn))<=2*pi")
                                                                (("1" (ASSERT)
                                                                  NIL NIL)
                                                                 ("2"
                                                                  (CROSS-MULT
                                                                   1)
                                                                  (("2"
                                                                    (MULT-BY -4
                                                                     "pi")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (LEMMA "exp_periodicity")
                                          (("2"
                                            (INST - "-1"
                                             "((2 * (mm * pi) / pn) * i)")
                                            (("2" (REPLACES -1 :DIR RL)
                                              (("2"
                                                (CASE
                                                    "((2 * (mm * pi) / pn) * i) + 2 * -1 * pi * i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*i")
                                                (("1" (REPLACES -1)
                                                  (("1" (REWRITE -1)
                                                    (("1"
                                                      (CASE
                                                          "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (CROSS-MULT -1)
                                                        (("2"
                                                          (MULT-BY 3 "2*pi*pn")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT)
                                                      (("2"
                                                        (CASE
                                                            "((2 * (mm * pi) / pn))<=2*pi")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (CROSS-MULT 1)
                                                          (("2"
                                                            (MULT-BY -3 "pi")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (CASE "((2 * (nn * pi) / pn))<=2*pi")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1)
                                          (("2" (MULT-BY -2 "pi")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (LEMMA "exp_periodicity")
                          (("2" (INST - "-1" "((2 * (nn * pi) / pn) * i)")
                            (("2" (REPLACES -1 :DIR RL)
                              (("2"
                                (CASE
                                    "((2 * (nn * pi) / pn) * i) + 2 * -1 * pi * i = (((2 * (nn * pi) / pn)) + 2 * -1 * pi)*i")
                                (("1" (REPLACES -1)
                                  (("1" (CASE "(2 * (mm * pi) / pn) <= pi")
                                    (("1" (REWRITE -2)
                                      (("1" (REWRITE -2)
                                        (("1"
                                          (CASE
                                              "(2 * (mm * pi) / pn)>0 AND ((2 * (nn * pi) / pn)) <= 2 * pi")
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (CASE "nn/pn<=1")
                                            (("1" (MULT-BY -1 "2*pi")
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (CROSS-MULT 1) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (CASE "((2 * (nn * pi) / pn))<=2*pi")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1)
                                          (("2" (MULT-BY -2 "pi")
                                            (("2" (MULT-BY -3 "pi")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (LEMMA "exp_periodicity")
                                      (("2"
                                        (INST - "-1"
                                         "((2 * (mm * pi) / pn) * i)")
                                        (("2" (REPLACES -1 :DIR RL)
                                          (("2"
                                            (CASE
                                                "((2 * (mm * pi) / pn) * i) + 2 * -1 * pi * i = (((2 * (mm * pi) / pn)) + 2 * -1 * pi)*i")
                                            (("1" (REPLACES -1)
                                              (("1" (REWRITE -1)
                                                (("1" (REWRITE -1)
                                                  (("1"
                                                    (CASE
                                                        "NOT ((2 * (nn * pi) / pn)) = ((2 * (mm * pi) / pn))")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (CROSS-MULT -1)
                                                      (("2"
                                                        (MULT-BY 3 "2*pi*pn")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT)
                                                    (("2"
                                                      (CASE
                                                          "((2 * (mm * pi) / pn))<=2*pi")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (CROSS-MULT 1)
                                                        (("2" (MULT-BY -3 "pi")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (CASE
                                                      "((2 * (nn * pi) / pn))<=2*pi")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (CROSS-MULT 1)
                                                    (("2" (MULT-BY -2 "pi")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (HIDE-ALL-BUT 1)
                (("2" (LEMMA "times_div2")
                  (("2" (INST - "pn" "2*(mm*pi)" "i")
                    (("2" (REPLACES -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE-ALL-BUT 1)
            (("2" (LEMMA "times_div2")
              (("2" (INST - "pn" "2*(nn*pi)" "i") (("2" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|root_of_unity_TCC1| 0
  (|root_of_unity_TCC1-1| |nil| 3730216805 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|root_of_unity| SUBTYPE "complex_types.complex_(fundamental_algebra.pn, 0)"
    "nzcomplex")))
 (|roots_of_unity_closed_TCC1| 0
  (|roots_of_unity_closed_TCC1-1| |nil| 3730216805 ("" (SUBTYPE-TCC) NIL NIL)
   NIL NIL
   (|roots_of_unity_closed| SUBTYPE "fundamental_algebra.n1"
    "{nn: naturalnumbers.nat | reals.<=(nn, fundamental_algebra.pn)}")))
 (|roots_of_unity_closed| 0
  (|roots_of_unity_closed-1| |nil| 3730216808
   ("" (SKEEP)
    (("" (EXPAND "root_of_unity")
      (("" (LEMMA "exp_plus")
        (("" (INST?)
          (("" (REPLACE -1 1 RL)
            (("" (HIDE -1)
              ((""
                (CASE
                    "NOT complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(n1, 0)
             / complex_(pn, 0)
             +
             complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(n2, 0)
              / complex_(pn, 0) = 2*pi*complex_i*(n1+n2)/pn")
                (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (REPLACES -1)
                  (("2" (EXPAND "exp")
                    (("2" (ASSERT)
                      (("2" (EXPAND "sq_abs")
                        (("2" (ASSERT)
                          (("2"
                            (CASE
                                "NOT (2 * (n1 * pi * pn) + 2 * (n2 * pi * pn)) / sq(pn) = 2*pi*(n1+n2)/pn")
                            (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)
                             ("2" (REPLACES -1)
                              (("2" (CASE "n1+n2<=pn")
                                (("1" (INST 1 "n1+n2") (("1" (GRIND) NIL NIL))
                                  NIL)
                                 ("2" (CASE "NOT (pn<n1+n2 AND n1+n2<=2*pn)")
                                  (("1" (TYPEPRED "n1")
                                    (("1" (TYPEPRED "n2")
                                      (("1" (HIDE 3)
                                        (("1" (GRIND-REALS) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (INST 2 "n1+n2-pn")
                                      (("1"
                                        (CASE
                                            "NOT 2 * ((n1 + n2 - pn) * pi * pn) / sq(pn) = 2 * pi * (n1 + n2) / pn - 2*pi")
                                        (("1" (HIDE-ALL-BUT 1)
                                          (("1" (GRIND) NIL NIL)) NIL)
                                         ("2" (REPLACES -1)
                                          (("2" (LEMMA "sin_minus_2pi")
                                            (("2" (LEMMA "cos_minus_2pi")
                                              (("2" (INST?)
                                                (("2" (INST?)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (GRIND-REALS) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|root_of_unity| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_i| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|Im_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cos_minus_2pi| FORMULA-DECL NIL |trig_extra| |trig|)
    (|sin_minus_2pi| FORMULA-DECL NIL |trig_extra| |trig|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL NIL NIL (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnrat_plus_nnrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnrat_times_nnrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat"
     |rationals| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|exp_plus| FORMULA-DECL NIL |complex_lnexp| NIL))
   SHOSTAK))
 (|roots_of_unity_inverses| 0
  (|roots_of_unity_inverses-2| "" 3790337310
   ("" (SKEEP)
    (("" (EXPAND "root_of_unity")
      (("" (LEMMA "exp_plus")
        (("" (CASE "n1=pn")
          (("1" (HIDE -2)
            (("1" (GRIND)
              (("1" (GRIND-REALS)
                (("1" (LEMMA "cos_2pi")
                  (("1" (LEMMA "sin_2pi") (("1" (GRIND) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (LEMMA "sin_2pi")
                (("2" (GRIND)
                  (("2" (LEMMA "cos_2pi") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (INST 2 "pn-n1")
            (("2"
              (INST -1
               "(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(n1, 0))
           / complex_(pn, 0)"
               "(complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_(pn - n1, 0))
            / complex_(pn, 0)")
              (("2" (ASSERT)
                (("2" (REPLACE -1 2 RL)
                  (("2" (REPLACE -1 2)
                    (("2" (REPLACE -1 2 RL)
                      (("2" (HIDE -1)
                        (("2" (LEMMA "sin_2pi")
                          (("2" (LEMMA "cos_2pi") (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|roots_of_unity_inverses-1| |nil| 3730640158
   ("" (SKEEP)
    (("" (EXPAND "root_of_unity")
      (("" (LEMMA "exp_plus")
        (("" (CASE "n1=pn")
          (("1" (HIDE -2)
            (("1" (GRIND)
              (("1" (GRIND-REALS)
                (("1" (LEMMA "cos_2pi")
                  (("1" (LEMMA "sin_2pi") (("1" (GRIND) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (LEMMA "sin_2pi")
                (("2" (GRIND)
                  (("2" (LEMMA "cos_2pi") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (INST 2 "pn-n1")
            (("1"
              (INST -1
               "(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(n1, 0))
           / complex_(pn, 0)"
               "(complex_(2, 0) * complex_i * complex_(pi, 0) *
             complex_(pn - n1, 0))
            / complex_(pn, 0)")
              (("1" (ASSERT)
                (("1" (REPLACE -1 2 RL)
                  (("1" (REPLACE -1 2)
                    (("1" (REPLACE -1 2 RL)
                      (("1" (HIDE -1)
                        (("1" (LEMMA "sin_2pi")
                          (("1" (LEMMA "cos_2pi") (("1" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|root_of_unity| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|cos_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|nnrat_times_nnrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat"
     |rationals| NIL)
    (|nnrat_plus_nnrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|mul_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|exp_plus| FORMULA-DECL NIL |complex_lnexp| NIL))
   SHOSTAK))
 (|root_complex_enum_TCC1| 0
  (|root_complex_enum_TCC1-1| |nil| 3722878108 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|root_complex_enum| SUBTYPE
    "complex_types.complex_(fundamental_algebra.pn, 0)" "nzcomplex")))
 (|root_complex_enum_unique| 0
  (|root_complex_enum_unique-1| |nil| 3721662271
   ("" (SKEEP*)
    (("" (LEMMA "roots_unity_unique")
      (("" (LEMMA "abs_root_complex")
        (("" (INST -2 "pn" "nn" "mm")
          (("" (CASE "nn/=mm")
            (("1" (ASSERT)
              (("1" (EXPAND "root_complex_enum")
                (("1" (ASSERT)
                  (("1"
                    (CASE
                        "FORALL ((a,b:complex),(c:nzcomplex)): a/=b IMPLIES c*a/=c*b")
                    (("1"
                      (INST -1
                       "exp(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(nn, 0) /
           complex_(pn, 0))"
                       "exp(complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(mm, 0) /
            complex_(pn, 0))"
                       "root_complex(nz)(pn)")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (HIDE-ALL-BUT 1)
                        (("2" (EXPAND "root_complex")
                          (("2" (EXPAND "from_polar")
                            (("2" (GRIND :EXCLUDE ("root_nn" "arg" "abs"))
                              (("2" (DIV-BY -1 "root_nn(abs(nz), pn)")
                                (("1" (DIV-BY -2 "root_nn(abs(nz), pn)")
                                  (("1" (CASE "0 / root_nn(abs(nz), pn)=0")
                                    (("1" (REWRITE -1)
                                      (("1" (TYPEPRED "arg(nz)")
                                        (("1" (LEMMA "cos_eq_0_2pi")
                                          (("1" (LEMMA "sin_eq_0_2pi")
                                            (("1" (DIV-BY -3 "pn")
                                              (("1" (DIV-BY -4 "pn")
                                                (("1"
                                                  (INST -1 "arg(nz)/pn+pi/pn")
                                                  (("1"
                                                    (INST -2
                                                     "arg(nz)/pn+pi/pn")
                                                    (("1" (ASSERT)
                                                      (("1"
                                                        (CASE
                                                            "arg(nz) / pn + pi / pn <= 2 * pi")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (LEMMA "sin_plus")
                                                            (("1" (INST? -)
                                                              (("1"
                                                                (LEMMA
                                                                 "cos_plus")
                                                                (("1" (INST? -)
                                                                  (("1"
                                                                    (GRIND
                                                                     :EXCLUDE
                                                                     "arg")
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (HIDE-ALL-BUT (-4 1))
                                                          (("2" (TYPEPRED "pn")
                                                            (("2" (CASE "pn=1")
                                                              (("1" (GRIND) NIL
                                                                NIL)
                                                               ("2"
                                                                (CASE "pn>1")
                                                                (("1"
                                                                  (MULT-BY -1
                                                                   "2*pi")
                                                                  (("1"
                                                                    (DIV-BY -1
                                                                     "pn")
                                                                    (("1"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL)
                                 ("2" (LEMMA "abs_is_0")
                                  (("2" (LEMMA "root_is_0")
                                    (("2" (INST -2 "nz")
                                      (("2" (INST -1 "abs(nz)" "pn")
                                        (("2" (REWRITE "root_root_nn_rew")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT 1)
                      (("2" (SKEEP)
                        (("2" (TYPEPRED "c")
                          (("2" (CASE "c*a/c=c*b/c")
                            (("1" (CASE "c*(a/c)=c*(b/c)")
                              (("1" (LEMMA "complex_div_cancel1")
                                (("1" (LEMMA "complex_div_cancel1")
                                  (("1" (INST -1 "c" "a")
                                    (("1" (INST -2 "c" "b")
                                      (("1" (REWRITE -1)
                                        (("1" (REWRITE -1) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (HIDE-ALL-BUT (-1 -2 1))
                                  (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|roots_unity_unique| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nz_sq_abs_pos| APPLICATION-JUDGEMENT "posreal" |complex_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|root_complex| CONST-DECL "complex" |fundamental_algebra| NIL) NIL NIL
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|abs_is_0| FORMULA-DECL NIL |polar| NIL)
    (|root_root_nn_rew| FORMULA-DECL NIL |root| |power|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|odd?| CONST-DECL "bool" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|root_is_0| FORMULA-DECL NIL |root| |power|)
    (|sin| CONST-DECL "real" |sincos_def| |trig|)
    (|times_div_cancel2| FORMULA-DECL NIL |extra_real_props| NIL)
    (|cos_eq_0_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|both_sides_div_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|both_sides_times_pos_gt1| FORMULA-DECL NIL |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|atan2| CONST-DECL "real" |atan2| |trig|)
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|both_sides_div_pos_gt1| FORMULA-DECL NIL |real_props| NIL)
    (|cos_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|sin_plus| FORMULA-DECL NIL |sincos| |trig|)
    (|both_sides_div_pos_le1| FORMULA-DECL NIL |real_props| NIL)
    (|sin_eq_0_2pi| FORMULA-DECL NIL |sincos| |trig|)
    (|times_div_cancel1| FORMULA-DECL NIL |extra_real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|nn_root| CONST-DECL "nnreal" |nn_root| |power|)
    (|root_nn| CONST-DECL "{y: nnreal | y = nn_root(nx, pn)}" |root| |power|)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|arg| CONST-DECL "gt_npi_le_pi" |polar| NIL)
    (|gt_npi_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|both_sides_div1| FORMULA-DECL NIL |real_props| NIL)
    (|from_polar| CONST-DECL "complex" |polar| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|root_complex_enum| CONST-DECL "complex" |fundamental_algebra| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|abs_root_complex| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|csigma_plus| 0
  (|csigma_plus-1| |nil| 3596276275
   ("" (INDUCT "n")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (ASSERT)
        (("2" (SKEEP)
          (("2" (INST - "a" "b")
            (("2" (ASSERT)
              (("2" (EXPAND "csigma" +)
                (("2" (EXPAND "+") (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |fundamental_algebra| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|csigma_scal_right| 0
  (|csigma_scal_right-1| |nil| 3596276537
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP) (("2" (INST -1 "a" "c") (("2" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) NIL
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|csigma_eq| 0
  (|csigma_eq-1| |nil| 3596284104
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INST - "a" "b")
          (("2" (SPLIT)
            (("1" (EXPAND "csigma" +)
              (("1" (INST - "1+j") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
             ("2" (SKOSIMP*)
              (("2" (INST - "i!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|csigma_real_triangle| 0
  (|csigma_real_triangle-1| |nil| 3596480258
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INST - "a")
          (("2" (ASSERT)
            (("2" (EXPAND "csigma" + 1)
              (("2" (EXPAND "sigma" 1)
                (("2" (LEMMA "abs_triangle")
                  (("2" (INST - "a(1+j)" "csigma(a,j)")
                    (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs_triangle| FORMULA-DECL NIL |polar| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|cpolynomial_rec| 0
  (|cpolynomial_rec-1| |nil| 3596279744
   ("" (SKEEP)
    (("" (EXPAND "cpolynomial")
      (("" (EXPAND "csigma" + 1) (("" (EXPAND "*") (("" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "complex" |complex_types| NIL) NIL
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL))
   SHOSTAK))
 (|cpolynomial_struct_rec| 0
  (|cpolynomial_struct_rec-1| |nil| 3596298936
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INST - "a" "c")
          (("2" (EXPAND "cpolynomial" +)
            (("2" (EXPAND "csigma" +) (("2" (GRIND) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   SHOSTAK))
 (|cpolynomial_add| 0
  (|cpolynomial_add-2| |nil| 3596295385
   ("" (SKEEP)
    (("" (DECOMPOSE-EQUALITY)
      (("" (EXPAND "cfunplus")
        (("" (EXPAND "cpolynomial")
          (("" (REWRITE "csigma_plus" :DIR RL)
            (("" (INVOKE (CASE "%1 = %2") (! 1 1 1) (! 1 2 1))
              (("1" (ASSERT) NIL NIL)
               ("2" (HIDE 2)
                (("2" (DECOMPOSE-EQUALITY)
                  (("2" (EXPAND "+")
                    (("2" (EXPAND "*")
                      (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (+ CONST-DECL "complex" |fundamental_algebra| NIL)
    (|cfunplus| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (|csigma_plus| FORMULA-DECL NIL |fundamental_algebra| NIL))
   NIL)
  (|cpolynomial_add-1| |nil| 3596280076
   ("" (SKEEP)
    (("" (DECOMPOSE-EQUALITY)
      (("" (EXPAND "+")
        (("" (EXPAND "cpolynomial")
          (("" (REWRITE "csigma_plus" :DIR RL)
            (("" (INVOKE (CASE "%1 = %2") (! 1 1 1) (! 1 2 1))
              (("1" (ASSERT) NIL NIL)
               ("2" (HIDE 2)
                (("2" (DECOMPOSE-EQUALITY)
                  (("2" (EXPAND "+")
                    (("2" (EXPAND "*")
                      (("2" (ASSERT)
                        (("2" (LEMMA "complex_commutative_mult")
                          (("2" (INST-CP - "a(x!2)" _)
                            (("2" (INST? -2)
                              (("2" (INST - "b(x!2)" _)
                                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|cpolynomial_eq_le_degree| 0
  (|cpolynomial_eq_le_degree-1| |nil| 3596283379
   ("" (INDUCT "n")
    (("1" (GRIND)
      (("1" (DECOMPOSE-EQUALITY)
        (("1" (GRIND)
          (("1" (EXPAND "cpolynomial") (("1" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INST - "a" "b")
          (("2" (ASSERT)
            (("2" (SPLIT -)
              (("1" (EXPAND "cpolynomial" +)
                (("1" (DECOMPOSE-EQUALITY +)
                  (("1" (EXPAND "cpolynomial" -1)
                    (("1" (DECOMPOSE-EQUALITY -1)
                      (("1" (INST - "x!1")
                        (("1" (EXPAND "csigma" +)
                          (("1" (ASSERT)
                            (("1" (REPLACES -1)
                              (("1" (EXPAND "*")
                                (("1" (INST - "1+j") (("1" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKEEP) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (* CONST-DECL "complex" |complex_types| NIL) NIL
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|cpolynomial_conjugate| 0
  (|cpolynomial_conjugate-1| NIL 3930817143
   ("" (INDUCT "n")
    (("1" (SKEEP)
      (("1" (EXPAND "cpolynomial")
        (("1" (EXPAND "csigma")
          (("1" (EXPAND "*")
            (("1" (EXPAND "cpow") (("1" (POSTPONE) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("2" (POSTPONE) NIL NIL))
    NIL)
   NIL SHOSTAK))
 (|complex_continuous_cpolynomial| 0
  (|complex_continuous_cpolynomial-1| |nil| 3596304706
   ("" (INDUCT "n")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (ASSERT)
        (("2" (SKEEP)
          (("2" (INST - "a")
            (("2" (LEMMA "complex_continuous_sum")
              (("2"
                (INST - "cpolynomial(a,j)" "LAMBDA (x): a(1+j)*cpow(x)(1+j)")
                (("2" (ASSERT)
                  (("2" (SPLIT -)
                    (("1" (INVOKE (CASE "%1 = %2") (! -1 1) (! 1 1))
                      (("1" (ASSERT) NIL NIL)
                       ("2" (HIDE-ALL-BUT 1)
                        (("2" (DECOMPOSE-EQUALITY)
                          (("2" (EXPAND "cfunplus")
                            (("2" (LEMMA "cpolynomial_rec")
                              (("2" (INST - "a" "x!1" "j")
                                (("2" (REPLACES -1) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT 1)
                      (("2" (LEMMA "complex_continuous_cpow")
                        (("2" (INST?) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_continuous_sum| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|complex_continuous_cpow| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|cfunplus| CONST-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL) NIL
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (* CONST-DECL "complex" |complex_types| NIL) NIL
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|complex_continuous?| CONST-DECL "bool" |fundamental_algebra| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|complex_binomial_theorem_TCC1| 0
  (|complex_binomial_theorem_TCC1-1| |nil| 3596275404
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|complex_binomial_theorem| SUBTYPE
    "(number_fields.-)(fundamental_algebra.n, fundamental_algebra.i)" "nat")))
 (|complex_binomial_theorem| 0
  (|complex_binomial_theorem-1| |nil| 3596275408
   ("" (INDUCT "n")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 "n")
      (("2" (FLATTEN)
        (("2" (SKEEP)
          (("2" (INST - "x" "y")
            (("2" (INVOKE (NAME "GG" "%1") (! 1 2 1))
              (("1" (REPLACE -1)
                (("1" (INVOKE (NAME "HH" "%1") (! -2 2 1))
                  (("1" (REPLACE -1)
                    (("1" (EXPAND "cpow" +)
                      (("1"
                        (CASE
                            "cpow(x+y)(n)*y = csigma(LAMBDA (i:nat): IF i>n THEN real_(0) ELSE C(n,i)*cpow(x)(i)*cpow(y)(n-i+1) ENDIF,n+1)")
                        (("1" (INVOKE (NAME "bb" "%1") (! -1 2 1))
                          (("1" (REPLACE -1)
                            (("1"
                              (CASE
                                  "cpow(x+y)(n) *x = csigma(LAMBDA (i:nat): IF i = 0 OR i>n+1 THEN real_(0) ELSE C(n,i-1)*cpow(x)(i)*cpow(y)(n-i+1) ENDIF,n+1)")
                              (("1" (INVOKE (NAME "aa" "%1") (! -1 2 1))
                                (("1" (REPLACE -1)
                                  (("1"
                                    (CASE
                                        "(x + y) * cpow(x + y)(n) = cpow(x+y)(n)*x+cpow(x+y)(n)*y")
                                    (("1" (REWRITE -1)
                                      (("1" (REPLACE -2)
                                        (("1" (REPLACE -4)
                                          (("1" (REWRITE "csigma_plus" :DIR RL)
                                            (("1" (CASE "aa+bb = GG")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (DECOMPOSE-EQUALITY)
                                                  (("2" (EXPAND "aa")
                                                    (("2" (EXPAND "+")
                                                      (("2" (EXPAND "bb")
                                                        (("2" (LIFT-IF)
                                                          (("2" (LIFT-IF)
                                                            (("2" (LIFT-IF)
                                                              (("2"
                                                                (EXPAND "GG")
                                                                (("2" (LIFT-IF)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (SPLIT)
                                                                      (("1"
                                                                        (FLATTEN)
                                                                        (("1"
                                                                          (SPLIT
                                                                           -)
                                                                          (("1"
                                                                            (REPLACES
                                                                             -1)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "C_0")
                                                                                (("1"
                                                                                  (INST-CP
                                                                                   -
                                                                                   "n")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -
                                                                                     "1+n")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (GRIND)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (GRIND)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (SPLIT
                                                                           +)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (CASE
                                                                                    "NOT x!1=1+n")
                                                                                (("1"
                                                                                  (GRIND)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "C_n")
                                                                                      (("2"
                                                                                        (INST-CP
                                                                                         -
                                                                                         "n")
                                                                                        (("2"
                                                                                          (INST
                                                                                           -
                                                                                           "1+n")
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (GRIND)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (LEMMA
                                                                                 "C_n_plus_1")
                                                                                (("2"
                                                                                  (INST
                                                                                   -
                                                                                   "n"
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (REPLACES
                                                                                       -1)
                                                                                      (("2"
                                                                                        (GRIND)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (EXPAND "GG")
                                      (("2" (GROUND) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                                  NIL)
                                 ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (REPLACE -5 +)
                                (("2" (HIDE-ALL-BUT 1)
                                  (("2" (INVOKE (NAME "aa" "%1") (! 1 2 1))
                                    (("1" (REWRITE "csigma_scal_right")
                                      (("1" (REPLACE -1)
                                        (("1"
                                          (CASE
                                              "FORALL (kk:nat): kk<=n IMPLIES csigma(x*HH,kk) = csigma(aa,kk+1)")
                                          (("1" (INST - "n")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (HIDE-ALL-BUT 1)
                                            (("2" (INDUCT "kk")
                                              (("1" (EXPAND "aa")
                                                (("1" (EXPAND "HH")
                                                  (("1" (GRIND) NIL NIL)) NIL))
                                                NIL)
                                               ("2" (SKEEP)
                                                (("2" (ASSERT)
                                                  (("2" (EXPAND "csigma" +)
                                                    (("2"
                                                      (CASE
                                                          "x*HH(1+j) = aa(2+j)")
                                                      (("1" (ASSERT)
                                                        (("1" (REPLACE -2)
                                                          (("1" (HIDE -2)
                                                            (("1" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE (-1 2))
                                                        (("2" (EXPAND "HH")
                                                          (("2" (EXPAND "aa")
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (EXPAND "cpow"
                                                                        + 3)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "complex_commutative_mult")
                                                                    (("2"
                                                                      (INST?)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (HIDE 2)
                                        (("2" (SKOSIMP*)
                                          (("2" (GROUND) NIL NIL)) NIL))
                                        NIL))
                                      NIL)
                                     ("3" (HIDE 2)
                                      (("3" (SKOSIMP*) (("3" (GROUND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (HIDE 2)
                                (("3" (SKOSIMP*) (("3" (GROUND) NIL NIL)) NIL))
                                NIL)
                               ("4" (HIDE 2)
                                (("4" (SKOSIMP*) (("4" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE 2)
                            (("2" (SKOSIMP*) (("2" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL)
                         ("2" (REPLACE -3)
                          (("2" (HIDE-ALL-BUT 1)
                            (("2" (INVOKE (NAME "aa" "%1") (! 1 2 1))
                              (("1" (REPLACE -1)
                                (("1" (REWRITE "csigma_scal_right")
                                  (("1" (CASE "y*HH = aa")
                                    (("1" (REPLACES -1)
                                      (("1" (EXPAND "csigma" + 2)
                                        (("1" (HIDE -1)
                                          (("1" (EXPAND "aa" + 2)
                                            (("1" (GRIND :EXCLUDE "csigma")
                                              (("1" (DECOMPOSE-EQUALITY 1) NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT 1)
                                      (("2" (DECOMPOSE-EQUALITY)
                                        (("2" (EXPAND "*")
                                          (("2" (EXPAND "HH")
                                            (("2" (EXPAND "aa")
                                              (("2" (LIFT-IF)
                                                (("2" (LIFT-IF)
                                                  (("2" (LIFT-IF)
                                                    (("2" (ASSERT)
                                                      (("2" (GROUND)
                                                        (("1"
                                                          (EXPAND "cpow" + 4)
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (LEMMA
                                                               "complex_commutative_mult")
                                                              (("1"
                                                                (INST - "y" _)
                                                                (("1" (INST?)
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (SKOSIMP*) (("2" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (HIDE 2)
                          (("3" (SKOSIMP*) (("3" (GROUND) NIL NIL)) NIL)) NIL)
                         ("4" (HIDE 2)
                          (("4" (SKOSIMP*) (("4" (GROUND) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 2)
                    (("2" (SKOSIMP*) (("2" (GROUND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (GROUND) NIL NIL)) NIL))
                NIL)
               ("3" (HIDE 2) (("3" (SKOSIMP*) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (GROUND)
      (("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (GROUND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    NIL (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (+ CONST-DECL "complex" |fundamental_algebra| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|odd_minus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|posrat_times_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|nnrat_plus_nnrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|nnrat_times_nnrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat"
     |rationals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (C_0 FORMULA-DECL NIL |binomial| |reals|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|C_n| FORMULA-DECL NIL |binomial| |reals|)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|C_n_plus_1| FORMULA-DECL NIL |binomial| |reals|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL NIL NIL (|csigma_plus| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|csigma_scal_right| FORMULA-DECL NIL |fundamental_algebra| NIL) NIL NIL
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    NIL
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|mult_commutes| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|factorial| DEF-DECL "posnat" |factorial| |ints|)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (C CONST-DECL "posnat" |binomial| |reals|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   SHOSTAK))
 (|complex_poly_shift| 0
  (|complex_poly_shift-3| "" 3790337334
   ("" (INDUCT "n")
    (("1" (SKEEP)
      (("1" (INST + "a")
        (("1" (GRIND) (("1" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL))
      NIL)
     ("2" (SKOLEM 1 "n")
      (("2" (ASSERT)
        (("2" (FLATTEN)
          (("2" (SKEEP)
            (("2" (INST - "a" "c")
              (("2" (SKOLEM - "bstar")
                (("2" (FLATTEN)
                  (("2"
                    (NAME "g"
                          "LaMBDa (i:nat): IF i>n THEN real_(0) ELSE bstar(i) ENDIF")
                    (("2"
                      (NAME "GG"
                            "LAMBDA (i:nat): IF i<=1+n THEN C(n+1,i)*cpow(c)(n+1-i) ELSE real_(0) ENDIF")
                      (("1" (NAME "bb" "(a(1+n)*GG)+g")
                        (("1" (INST + "bb")
                          (("1" (SPLIT +)
                            (("1" (EXPAND "bb" 1)
                              (("1" (EXPAND "+" 1)
                                (("1" (EXPAND "*" 1)
                                  (("1" (EXPAND "GG" 1)
                                    (("1" (ASSERT)
                                      (("1" (CASE "NOT g(0) = bstar(0)")
                                        (("1" (EXPAND "g" 1)
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (REPLACES -1)
                                          (("2" (LEMMA "C_0")
                                            (("2" (INST?)
                                              (("2" (REPLACES -1)
                                                (("2"
                                                  (REWRITE "cpolynomial_rec" +)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (REPLACE -4 + :DIR RL)
                                                      (("2"
                                                        (LEMMA "complex_commutative_mult")
                                                        (("2" (INST?)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (GRIND :EXCLUDE
                                                               ("cpolynomial"
                                                                "cpow"))
                                                              NIL NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2"
                              (CASE
                                  "FORALL (x): cpolynomial(a, 1 + n)(x+c) = cpolynomial(bb, 1 + n)(x)")
                              (("1" (SKEEP)
                                (("1" (INST - "x-c")
                                  (("1" (ASSERT)
                                    (("1" (CASE "x-c+c=x")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (DECOMPOSE-EQUALITY) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (SKEEP)
                                  (("2" (EXPAND "bb" +)
                                    (("2" (REWRITE "cpolynomial_add")
                                      (("2" (REWRITE "cpolynomial_rec" 1)
                                        (("2" (INST -5 "x+c")
                                          (("2" (REPLACE -5 1)
                                            (("2" (ASSERT)
                                              (("2" (LEMMA "cpolynomial_rec")
                                                (("2" (INST - "g" "x" "n")
                                                  (("2" (EXPAND "cfunplus" 1)
                                                    (("2" (REPLACE -1 +)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (LEMMA
                                                           "cpolynomial_eq_le_degree")
                                                          (("2"
                                                            (INST - "bstar" "g"
                                                             "n")
                                                            (("2" (SPLIT -)
                                                              (("1"
                                                                (REPLACES -1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (CASE
                                                                        "NOT g(1+n) = real_(0)")
                                                                    (("1"
                                                                      (EXPAND
                                                                       "g" 1)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (REPLACES
                                                                       -1)
                                                                      (("2"
                                                                        (CASE
                                                                            "NOT x+c-c=x")
                                                                        (("1"
                                                                          (HIDE-ALL-BUT
                                                                           1)
                                                                          (("1"
                                                                            (GRIND)
                                                                            (("1"
                                                                              (DECOMPOSE-EQUALITY
                                                                               +)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (REPLACES
                                                                           -1)
                                                                          (("2"
                                                                            (CASE
                                                                                "a(1 + n) * cpow(x + c)(1 + n) =
                            cpolynomial((a(1 + n) * GG), 1 + n)(x) +
                              complex_(0, 0) * cpow(x)(1 + n)")
                                                                            (("1"
                                                                              (HIDE-ALL-BUT
                                                                               (-1
                                                                                1))
                                                                              (("1"
                                                                                (GRIND
                                                                                 :EXCLUDE
                                                                                 ("csigma"
                                                                                  "cpolynomial"
                                                                                  "cpow"))
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE
                                                                               2)
                                                                              (("2"
                                                                                (CASE
                                                                                    "NOT complex_(0, 0) * cpow(x)(1 + n) = real_(0)")
                                                                                (("1"
                                                                                  (HIDE-ALL-BUT
                                                                                   1)
                                                                                  (("1"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (REWRITE
                                                                                   -1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (CASE
                                                                                          "a(1 + n) * cpow(x + c)(1 + n) =
                                cpolynomial((a(1 + n) * GG), 1 + n)(x)")
                                                                                      (("1"
                                                                                        (HIDE-ALL-BUT
                                                                                         (-1
                                                                                          1))
                                                                                        (("1"
                                                                                          (GRIND
                                                                                           :EXCLUDE
                                                                                           ("csigma"
                                                                                            "cpolynomial"
                                                                                            "cpow"))
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (HIDE
                                                                                         2)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "cpolynomial"
                                                                                           +)
                                                                                          (("2"
                                                                                            (LEMMA
                                                                                             "csigma_scal_right")
                                                                                            (("2"
                                                                                              (INST
                                                                                               -
                                                                                               "GG*cpow(x)"
                                                                                               "a(1+n)"
                                                                                               "1+n")
                                                                                              (("2"
                                                                                                (CASE
                                                                                                    "NOT a(1 + n) * (GG * cpow(x)) = (a(1 + n) * GG) * cpow(x)")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (DECOMPOSE-EQUALITY
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "*"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (HIDE-ALL-BUT
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (GRIND
                                                                                                           :EXCLUDE
                                                                                                           ("csigma"
                                                                                                            "GG"
                                                                                                            "cpolynomial"
                                                                                                            "cpow"))
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (REPLACES
                                                                                                   -1
                                                                                                   :DIR
                                                                                                   RL)
                                                                                                  (("2"
                                                                                                    (REPLACES
                                                                                                     -1
                                                                                                     :DIR
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (CASE
                                                                                                          "cpow(c + x)(1 + n) = csigma(GG * cpow(x), 1 + n) ")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (LEMMA
                                                                                                           "complex_commutative_mult")
                                                                                                          (("1"
                                                                                                            (INST?)
                                                                                                            (("1"
                                                                                                              (REPLACE
                                                                                                               -2
                                                                                                               :DIR
                                                                                                               RL)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (CASE
                                                                                                                      "x+c=c+x")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (HIDE-ALL-BUT
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (GRIND)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (HIDE
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (LEMMA
                                                                                                           "complex_binomial_theorem")
                                                                                                          (("2"
                                                                                                            (INST
                                                                                                             -
                                                                                                             "1+n"
                                                                                                             "x"
                                                                                                             "c")
                                                                                                            (("2"
                                                                                                              (CASE
                                                                                                                  "c+x = x+c")
                                                                                                              (("1"
                                                                                                                (REPLACES
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (REPLACES
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    (("1"
                                                                                                                      (LEMMA
                                                                                                                       "csigma_eq")
                                                                                                                      (("1"
                                                                                                                        (INST?)
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          (("1"
                                                                                                                            (HIDE
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (SKOSIMP*)
                                                                                                                              (("1"
                                                                                                                                (LIFT-IF)
                                                                                                                                (("1"
                                                                                                                                  (GROUND)
                                                                                                                                  (("1"
                                                                                                                                    (EXPAND
                                                                                                                                     "GG")
                                                                                                                                    (("1"
                                                                                                                                      (GRIND
                                                                                                                                       :EXCLUDE
                                                                                                                                       ("cpolynomial"
                                                                                                                                        "cpow"))
                                                                                                                                      NIL
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (HIDE
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (SKOSIMP*)
                                                                                                                            (("2"
                                                                                                                              (GROUND)
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (HIDE
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (GROUND)
                                                                                                                  (("2"
                                                                                                                    (HIDE-ALL-BUT
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (GRIND)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (HIDE 2)
                                                                (("2"
                                                                  (SKOSIMP*)
                                                                  (("2"
                                                                    (GROUND)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "g" 1)
                                                                      (("2"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (SKOSIMP*) (("2" (GROUND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|complex_poly_shift-2| |nil| 3727031648
   ("" (INDUCT "n")
    (("1" (SKEEP)
      (("1" (INST + "a")
        (("1" (GRIND) (("1" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL))
      NIL)
     ("2" (SKOLEM 1 "n")
      (("2" (ASSERT)
        (("2" (FLATTEN)
          (("2" (SKEEP)
            (("2" (INST - "a" "c")
              (("2" (SKOLEM - "bstar")
                (("2" (FLATTEN)
                  (("2"
                    (NAME "g"
                          "LaMBDa (i:nat): IF i>n THEN real_(0) ELSE bstar(i) ENDIF")
                    (("2"
                      (NAME "GG"
                            "LAMBDA (i:nat): IF i<=1+n THEN C(n+1,i)*cpow(c)(n+1-i) ELSE real_(0) ENDIF")
                      (("1" (NAME "bb" "(a(1+n)*GG)+g")
                        (("1" (INST + "bb")
                          (("1" (SPLIT +)
                            (("1" (EXPAND "bb" 1)
                              (("1" (EXPAND "+" 1)
                                (("1" (EXPAND "*" 1)
                                  (("1" (EXPAND "GG" 1)
                                    (("1" (ASSERT)
                                      (("1" (CASE "NOT g(0) = bstar(0)")
                                        (("1" (EXPAND "g" 1)
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (REPLACES -1)
                                          (("2" (LEMMA "C_0")
                                            (("2" (INST?)
                                              (("2" (REPLACES -1)
                                                (("2"
                                                  (REWRITE "cpolynomial_rec" +)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (REPLACE -4 + :DIR RL)
                                                      (("2"
                                                        (LEMMA "complex_commutative_mult")
                                                        (("2" (INST?)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (GRIND :EXCLUDE
                                                               ("cpolynomial"
                                                                "cpow"))
                                                              NIL NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2"
                              (CASE
                                  "FORALL (x): cpolynomial(a, 1 + n)(x+c) = cpolynomial(bb, 1 + n)(x)")
                              (("1" (SKEEP)
                                (("1" (INST - "x-c")
                                  (("1" (ASSERT)
                                    (("1" (CASE "x-c+c=x")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (DECOMPOSE-EQUALITY) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (SKEEP)
                                  (("2" (EXPAND "bb" +)
                                    (("2" (REWRITE "cpolynomial_add")
                                      (("2" (REWRITE "cpolynomial_rec" 1)
                                        (("2" (INST -5 "x+c")
                                          (("2" (REPLACE -5 1)
                                            (("2" (ASSERT)
                                              (("2" (LEMMA "cpolynomial_rec")
                                                (("2" (INST - "g" "x" "n")
                                                  (("2" (EXPAND "cfunplus" 1)
                                                    (("2" (REPLACE -1 +)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (LEMMA
                                                           "cpolynomial_eq_le_degree")
                                                          (("2"
                                                            (INST - "bstar" "g"
                                                             "n")
                                                            (("2" (SPLIT -)
                                                              (("1"
                                                                (REPLACES -1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (CASE
                                                                        "NOT g(1+n) = real_(0)")
                                                                    (("1"
                                                                      (EXPAND
                                                                       "g" 1)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (REPLACES
                                                                       -1)
                                                                      (("2"
                                                                        (CASE
                                                                            "NOT x+c-c=x")
                                                                        (("1"
                                                                          (HIDE-ALL-BUT
                                                                           1)
                                                                          (("1"
                                                                            (GRIND)
                                                                            (("1"
                                                                              (DECOMPOSE-EQUALITY
                                                                               +)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (REPLACES
                                                                           -1)
                                                                          (("2"
                                                                            (CASE
                                                                                "a(1 + n) * cpow(x + c)(1 + n) =
                            cpolynomial((a(1 + n) * GG), 1 + n)(x) +
                              complex_(0, 0) * cpow(x)(1 + n)")
                                                                            (("1"
                                                                              (HIDE-ALL-BUT
                                                                               (-1
                                                                                1))
                                                                              (("1"
                                                                                (GRIND
                                                                                 :EXCLUDE
                                                                                 ("csigma"
                                                                                  "cpolynomial"
                                                                                  "cpow"))
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE
                                                                               2)
                                                                              (("2"
                                                                                (CASE
                                                                                    "NOT complex_(0, 0) * cpow(x)(1 + n) = real_(0)")
                                                                                (("1"
                                                                                  (HIDE-ALL-BUT
                                                                                   1)
                                                                                  (("1"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (REWRITE
                                                                                   -1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (CASE
                                                                                          "a(1 + n) * cpow(x + c)(1 + n) =
                                cpolynomial((a(1 + n) * GG), 1 + n)(x)")
                                                                                      (("1"
                                                                                        (HIDE-ALL-BUT
                                                                                         (-1
                                                                                          1))
                                                                                        (("1"
                                                                                          (GRIND
                                                                                           :EXCLUDE
                                                                                           ("csigma"
                                                                                            "cpolynomial"
                                                                                            "cpow"))
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (HIDE
                                                                                         2)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "cpolynomial"
                                                                                           +)
                                                                                          (("2"
                                                                                            (LEMMA
                                                                                             "csigma_scal_right")
                                                                                            (("2"
                                                                                              (INST
                                                                                               -
                                                                                               "GG*cpow(x)"
                                                                                               "a(1+n)"
                                                                                               "1+n")
                                                                                              (("2"
                                                                                                (CASE
                                                                                                    "NOT a(1 + n) * (GG * cpow(x)) = (a(1 + n) * GG) * cpow(x)")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (DECOMPOSE-EQUALITY
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "*"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (HIDE-ALL-BUT
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (GRIND
                                                                                                           :EXCLUDE
                                                                                                           ("csigma"
                                                                                                            "GG"
                                                                                                            "cpolynomial"
                                                                                                            "cpow"))
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (REPLACES
                                                                                                   -1
                                                                                                   :DIR
                                                                                                   RL)
                                                                                                  (("2"
                                                                                                    (REPLACES
                                                                                                     -1
                                                                                                     :DIR
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (CASE
                                                                                                          "cpow(c + x)(1 + n) = csigma(GG * cpow(x), 1 + n) ")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (REPLACES
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (LEMMA
                                                                                                             "complex_commutative_mult")
                                                                                                            (("1"
                                                                                                              (INST?)
                                                                                                              (("1"
                                                                                                                (REPLACE
                                                                                                                 -2
                                                                                                                 :DIR
                                                                                                                 RL)
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (CASE
                                                                                                                        "x+c=c+x")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (HIDE-ALL-BUT
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (GRIND)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (HIDE
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (LEMMA
                                                                                                           "complex_binomial_theorem")
                                                                                                          (("2"
                                                                                                            (INST
                                                                                                             -
                                                                                                             "1+n"
                                                                                                             "x"
                                                                                                             "c")
                                                                                                            (("2"
                                                                                                              (REPLACES
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (CASE
                                                                                                                    "c+x = x+c")
                                                                                                                (("1"
                                                                                                                  (REPLACES
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (REPLACES
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (LEMMA
                                                                                                                         "csigma_eq")
                                                                                                                        (("1"
                                                                                                                          (INST?)
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (HIDE
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (SKOSIMP*)
                                                                                                                                (("1"
                                                                                                                                  (LIFT-IF)
                                                                                                                                  (("1"
                                                                                                                                    (GROUND)
                                                                                                                                    (("1"
                                                                                                                                      (EXPAND
                                                                                                                                       "GG")
                                                                                                                                      (("1"
                                                                                                                                        (GRIND
                                                                                                                                         :EXCLUDE
                                                                                                                                         ("cpolynomial"
                                                                                                                                          "cpow"))
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (HIDE
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (SKOSIMP*)
                                                                                                                              (("2"
                                                                                                                                (GROUND)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (HIDE
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (GROUND)
                                                                                                                    (("2"
                                                                                                                      (HIDE-ALL-BUT
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (GRIND)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (HIDE 2)
                                                                (("2"
                                                                  (SKOSIMP*)
                                                                  (("2"
                                                                    (GROUND)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "g" 1)
                                                                      (("2"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (SKOSIMP*) (("2" (GROUND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (C CONST-DECL "posnat" |binomial| |reals|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|cpolynomial_add| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|cpolynomial_eq_le_degree| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|complex_binomial_theorem| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|csigma_eq| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|factorial| DEF-DECL "posnat" |factorial| |ints|)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    NIL (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|csigma_scal_right| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|cfunplus| CONST-DECL "complex" |fundamental_algebra| NIL) NIL
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|mult_commutes| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (C_0 FORMULA-DECL NIL |binomial| |reals|) NIL
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) NIL NIL
    (+ CONST-DECL "complex" |fundamental_algebra| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (* CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) NIL
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL)
  (|complex_poly_shift-1| |nil| 3596279227
   ("" (INDUCT "n")
    (("1" (SKEEP)
      (("1" (INST + "a")
        (("1" (GRIND) (("1" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL))
      NIL)
     ("2" (SKOLEM 1 "n")
      (("2" (ASSERT)
        (("2" (FLATTEN)
          (("2" (SKEEP)
            (("2" (INST - "a" "c")
              (("2" (SKOLEM - "bstar")
                (("2" (FLATTEN)
                  (("2"
                    (NAME "g"
                          "LaMBDa (i:nat): IF i>n THEN real_(0) ELSE bstar(i) ENDIF")
                    (("2"
                      (NAME "GG"
                            "LAMBDA (i:nat): IF i<=1+n THEN C(n+1,i)*cpow(c)(n+1-i) ELSE real_(0) ENDIF")
                      (("1" (NAME "bb" "(a(1+n)*GG)+g")
                        (("1" (INST + "bb")
                          (("1" (SPLIT +)
                            (("1" (EXPAND "bb" 1)
                              (("1" (EXPAND "+" 1)
                                (("1" (EXPAND "*" 1)
                                  (("1" (EXPAND "GG" 1)
                                    (("1" (ASSERT)
                                      (("1" (CASE "NOT g(0) = bstar(0)")
                                        (("1" (EXPAND "g" 1)
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (REPLACES -1)
                                          (("2" (LEMMA "C_0")
                                            (("2" (INST?)
                                              (("2" (REPLACES -1)
                                                (("2"
                                                  (REWRITE "cpolynomial_rec" +)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (REPLACE -4 + :DIR RL)
                                                      (("2"
                                                        (LEMMA "complex_commutative_mult")
                                                        (("2" (INST?)
                                                          (("2" (ASSERT)
                                                            (("2" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2"
                              (CASE
                                  "FORALL (x): cpolynomial(a, 1 + n)(x+c) = cpolynomial(bb, 1 + n)(x)")
                              (("1" (SKEEP)
                                (("1" (INST - "x-c")
                                  (("1" (ASSERT)
                                    (("1" (HIDE-ALL-BUT (-1 1))
                                      (("1" (CASE "x-c+c=x")
                                        (("1" (REWRITE -1) NIL NIL)
                                         ("2" (HIDE-ALL-BUT 1)
                                          (("2" (GRIND)
                                            (("2" (DECOMPOSE-EQUALITY 1) NIL
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (SKEEP)
                                (("2" (SKEEP)
                                  (("2" (EXPAND "cpolynomial")
                                    (("2" (EXPAND "csigma" +)
                                      (("2" (INST -5 "x!1")
                                        (("2" (POSTPONE) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (POSTPONE) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((C CONST-DECL "posnat" |binomial| |reals|)
    (|factorial| DEF-DECL "posnat" |factorial| |ints|)
    (C_0 FORMULA-DECL NIL |binomial| |reals|))
   SHOSTAK))
 (|cpolynomial_limit_infinity| 0
  (|cpolynomial_limit_infinity-4| "" 3790337338
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (INST + "1") (("1" (GRIND) NIL NIL)) NIL)) NIL)
     ("2" (SKOLEM 1 "n")
      (("2" (FLATTEN)
        (("2" (ASSERT)
          (("2" (SKEEP)
            (("2" (LABEL "hyp1" -1)
              (("2" (COPY -1)
                (("2" (HIDE "hyp1")
                  (("2" (CASE "n = 0")
                    (("1" (REPLACES -1)
                      (("1" (HIDE -1)
                        (("1" (ASSERT)
                          (("1" (EXPAND "cpolynomial")
                            (("1" (EXPAND "csigma")
                              (("1" (EXPAND "csigma")
                                (("1" (EXPAND "*")
                                  (("1" (EXPAND "cpow")
                                    (("1" (EXPAND "cpow")
                                      (("1" (LEMMA "axiom_of_archimedes")
                                        (("1"
                                          (INST -
                                           "abs(abs(K) + abs(a(0)))/abs(a(1))")
                                          (("1" (SKEEP)
                                            (("1" (INST + "i")
                                              (("1" (SKEEP)
                                                (("1"
                                                  (CASE
                                                      "abs(x) > abs(abs(K) + abs(a(0))) /abs(a(1))")
                                                  (("1" (CROSS-MULT -1)
                                                    (("1" (SPLIT -)
                                                      (("1" (FLATTEN)
                                                        (("1"
                                                          (CASE
                                                              "abs(abs(a(0)) + abs(K)) = abs(a(0)) + abs(K)")
                                                          (("1" (REPLACES -1)
                                                            (("1"
                                                              (CASE
                                                                  "abs(K) = K")
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "abs_triangle_minus")
                                                                    (("1"
                                                                      (INST -
                                                                       "a(1)*x"
                                                                       "-a(0)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (CASE
                                                                              "abs(a(1)*x) > K + abs(a(0))")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "a(1)*x - -a(0) = a(0) + a(1)*x")
                                                                              (("1"
                                                                                (REPLACES
                                                                                 -1)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (HIDE-ALL-BUT
                                                                                   1)
                                                                                  (("2"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (LEMMA
                                                                             "neg_times_neg")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE-ALL-BUT
                                                                   1)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (LEMMA "abs_is_0")
                                                            (("2" (INST?)
                                                              (("2" (ASSERT)
                                                                (("2" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (ASSERT)
                                                        (("2"
                                                          (INVOKE
                                                           (CASE "%1 > 0")
                                                           (! -1 1))
                                                          (("1" (ASSERT)
                                                            (("1" (FLATTEN)
                                                              (("1"
                                                                (CROSS-MULT -2)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (TYPEPRED
                                                                     "abs(a(1))")
                                                                    (("1"
                                                                      (LEMMA
                                                                       "abs_is_0")
                                                                      (("1"
                                                                        (INST?
                                                                         -)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (FLATTEN) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2"
                                                  (INVOKE (CASE "%1 > 0")
                                                   (! -1 1))
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (CROSS-MULT 1)
                                                    (("2" (GROUND)
                                                      (("1" (LEMMA "abs_is_0")
                                                        (("1" (INST?)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (LEMMA "abs_is_0")
                                                        (("2" (INST?)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LEMMA "abs_is_0")
                                            (("2" (INST?)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2"
                        (INST - "1+abs(a(0)) + abs(K)"
                         "LAMBDA (i:nat): a(1+i)")
                        (("2" (ASSERT)
                          (("2" (SKEEP)
                            (("2" (COPY -1)
                              (("2" (LABEL "hyp2" -1)
                                (("2" (HIDE "hyp2")
                                  (("2" (INST + "M")
                                    (("2" (SKEEP)
                                      (("2" (INST - "x")
                                        (("2" (ASSERT)
                                          (("2"
                                            (LEMMA "cpolynomial_struct_rec")
                                            (("2" (INST - "a" "x" "n")
                                              (("2" (REPLACE -1 +)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (NAME "aa"
                                                          "LAMBDA (i: nat): a(1 + i)")
                                                    (("2" (REPLACES -1)
                                                      (("2"
                                                        (NAME "D"
                                                              "cpolynomial(aa, n)(x)")
                                                        (("2" (REPLACES -1)
                                                          (("2"
                                                            (CASE "abs(D) = 0")
                                                            (("1" (ASSERT) NIL
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2"
                                                                (CASE
                                                                    "NOT abs(x) > (1+abs(a(0)) + abs(K))/abs(D)")
                                                                (("1"
                                                                  (INVOKE
                                                                   (CASE
                                                                       "%1<1")
                                                                   (! 1 2))
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (CROSS-MULT
                                                                     1)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (CROSS-MULT
                                                                   -1)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "abs_mult")
                                                                    (("2"
                                                                      (INST -
                                                                       "x" "D")
                                                                      (("2"
                                                                        (REPLACE
                                                                         -1
                                                                         :DIR
                                                                         RL)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "abs_triangle_minus")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "D*x"
                                                                             "-a(0)")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (CASE
                                                                                    "NOT D*x - -a(0) = D*x + a(0)")
                                                                                (("1"
                                                                                  (HIDE-ALL-BUT
                                                                                   1)
                                                                                  (("1"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|cpolynomial_limit_infinity-3| |nil| 3596298772
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (INST + "1") (("1" (GRIND) NIL NIL)) NIL)) NIL)
     ("2" (SKOLEM 1 "n")
      (("2" (FLATTEN)
        (("2" (ASSERT)
          (("2" (SKEEP)
            (("2" (LABEL "hyp1" -1)
              (("2" (COPY -1)
                (("2" (HIDE "hyp1")
                  (("2" (CASE "n = 0")
                    (("1" (REPLACES -1)
                      (("1" (HIDE -1)
                        (("1" (ASSERT)
                          (("1" (EXPAND "cpolynomial")
                            (("1" (EXPAND "csigma")
                              (("1" (EXPAND "csigma")
                                (("1" (EXPAND "*")
                                  (("1" (EXPAND "cpow")
                                    (("1" (EXPAND "cpow")
                                      (("1" (LEMMA "axiom_of_archimedes")
                                        (("1"
                                          (INST -
                                           "abs(abs(K) + abs(a(0)))/abs(a(1))")
                                          (("1" (SKEEP)
                                            (("1" (INST + "i")
                                              (("1" (SKEEP)
                                                (("1"
                                                  (CASE
                                                      "abs(x) > abs(abs(K) + abs(a(0))) /abs(a(1))")
                                                  (("1" (CROSS-MULT -1)
                                                    (("1" (SPLIT -)
                                                      (("1" (FLATTEN)
                                                        (("1"
                                                          (CASE
                                                              "abs(abs(a(0)) + abs(K)) = abs(a(0)) + abs(K)")
                                                          (("1" (REPLACES -1)
                                                            (("1"
                                                              (CASE
                                                                  "abs(K) = K")
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "abs_triangle_minus")
                                                                    (("1"
                                                                      (INST -
                                                                       "a(1)*x"
                                                                       "-a(0)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (CASE
                                                                              "abs(a(1)*x) > K + abs(a(0))")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "a(1)*x - -a(0) = a(0) + a(1)*x")
                                                                              (("1"
                                                                                (REPLACES
                                                                                 -1)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (HIDE-ALL-BUT
                                                                                   1)
                                                                                  (("2"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (LEMMA
                                                                             "neg_times_neg")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE-ALL-BUT
                                                                   1)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (LEMMA "abs_is_0")
                                                            (("2" (INST?)
                                                              (("2" (ASSERT)
                                                                (("2" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (ASSERT)
                                                        (("2"
                                                          (INVOKE
                                                           (CASE "%1 > 0")
                                                           (! -1 1))
                                                          (("1" (ASSERT)
                                                            (("1" (FLATTEN)
                                                              (("1"
                                                                (CROSS-MULT -2)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (TYPEPRED
                                                                     "abs(a(1))")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (LEMMA
                                                                         "abs_is_0")
                                                                        (("1"
                                                                          (INST?
                                                                           -)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (FLATTEN)
                                                            (("2"
                                                              (LEMMA
                                                               "abs_is_0")
                                                              (("2" (INST? -)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2"
                                                  (INVOKE (CASE "%1 > 0")
                                                   (! -1 1))
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (CROSS-MULT 1)
                                                    (("2" (GROUND)
                                                      (("1" (LEMMA "abs_is_0")
                                                        (("1" (INST?)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (LEMMA "abs_is_0")
                                                        (("2" (INST?)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LEMMA "abs_is_0")
                                            (("2" (INST?)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2"
                        (INST - "1+abs(a(0)) + abs(K)"
                         "LAMBDA (i:nat): a(1+i)")
                        (("2" (ASSERT)
                          (("2" (SKEEP)
                            (("2" (COPY -1)
                              (("2" (LABEL "hyp2" -1)
                                (("2" (HIDE "hyp2")
                                  (("2" (INST + "M")
                                    (("2" (SKEEP)
                                      (("2" (INST - "x")
                                        (("2" (ASSERT)
                                          (("2"
                                            (LEMMA "cpolynomial_struct_rec")
                                            (("2" (INST - "a" "x" "n")
                                              (("2" (REPLACE -1 +)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (NAME "aa"
                                                          "LAMBDA (i: nat): a(1 + i)")
                                                    (("2" (REPLACES -1)
                                                      (("2"
                                                        (NAME "D"
                                                              "cpolynomial(aa, n)(x)")
                                                        (("2" (REPLACES -1)
                                                          (("2"
                                                            (CASE "abs(D) = 0")
                                                            (("1" (ASSERT) NIL
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2"
                                                                (CASE
                                                                    "NOT abs(x) > (1+abs(a(0)) + abs(K))/abs(D)")
                                                                (("1"
                                                                  (INVOKE
                                                                   (CASE
                                                                       "%1<1")
                                                                   (! 1 2))
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (CROSS-MULT
                                                                     1)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (CROSS-MULT
                                                                   -1)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "abs_mult")
                                                                    (("2"
                                                                      (INST -
                                                                       "x" "D")
                                                                      (("2"
                                                                        (REPLACE
                                                                         -1
                                                                         :DIR
                                                                         RL)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "abs_triangle_minus")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "D*x"
                                                                             "-a(0)")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (CASE
                                                                                    "NOT D*x - -a(0) = D*x + a(0)")
                                                                                (("1"
                                                                                  (HIDE-ALL-BUT
                                                                                   1)
                                                                                  (("1"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|div_mult_pos_gt2| FORMULA-DECL NIL |extra_real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|cpolynomial_struct_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    NIL (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    NIL (* CONST-DECL "complex" |complex_types| NIL) NIL
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|neg_times_neg| FORMULA-DECL NIL |real_props| NIL)
    (|abs_neg| FORMULA-DECL NIL |polar| NIL)
    (|abs_mult| FORMULA-DECL NIL |polar| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|abs_triangle_minus| FORMULA-DECL NIL |polar| NIL)
    (|abs_is_0| FORMULA-DECL NIL |polar| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|div_mult_pos_neg_lt1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|div_mult_pos_neg_gt2| FORMULA-DECL NIL |extra_real_props| NIL)
    (|div_mult_pos_neg_gt1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|axiom_of_archimedes| FORMULA-DECL NIL |real_props| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL)
  (|cpolynomial_limit_infinity-2| |nil| 3596296246
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (INST + "1") (("1" (GRIND) NIL NIL)) NIL)) NIL)
     ("2" (SKOLEM 1 "n")
      (("2" (FLATTEN)
        (("2" (ASSERT)
          (("2" (SKEEP)
            (("2" (LABEL "hyp1" -1)
              (("2" (COPY -1)
                (("2" (HIDE "hyp1")
                  (("2" (CASE "n = 0")
                    (("1" (REPLACES -1)
                      (("1" (HIDE -1)
                        (("1" (ASSERT)
                          (("1" (EXPAND "cpolynomial")
                            (("1" (EXPAND "csigma")
                              (("1" (EXPAND "csigma")
                                (("1" (EXPAND "*")
                                  (("1" (EXPAND "cpow")
                                    (("1" (EXPAND "cpow")
                                      (("1" (LEMMA "axiom_of_archimedes")
                                        (("1"
                                          (INST -
                                           "abs(abs(K) + abs(a(0)))/abs(a(1))")
                                          (("1" (SKEEP)
                                            (("1" (INST + "i!1")
                                              (("1" (SKEEP)
                                                (("1"
                                                  (CASE
                                                      "abs(x) > abs(abs(K) + abs(a(0))) /abs(a(1))")
                                                  (("1" (CROSS-MULT -1)
                                                    (("1" (SPLIT -)
                                                      (("1" (FLATTEN)
                                                        (("1"
                                                          (CASE
                                                              "abs(abs(a(0)) + abs(K)) = abs(a(0)) + abs(K)")
                                                          (("1" (REPLACES -1)
                                                            (("1"
                                                              (CASE
                                                                  "abs(K) = K")
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "abs_triangle_minus")
                                                                    (("1"
                                                                      (INST -
                                                                       "a(1)*x"
                                                                       "-a(0)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (REWRITE
                                                                           "abs_neg")
                                                                          (("1"
                                                                            (CASE
                                                                                "abs(a(1)*x) > K + abs(a(0))")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (CASE
                                                                                    "a(1)*x - -a(0) = a(0) + a(1)*x")
                                                                                (("1"
                                                                                  (REPLACES
                                                                                   -1)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (HIDE-ALL-BUT
                                                                                     1)
                                                                                    (("2"
                                                                                      (GRIND)
                                                                                      (("2"
                                                                                        (LEMMA
                                                                                         "neg_times_neg")
                                                                                        (("2"
                                                                                          (INST
                                                                                           -
                                                                                           "1"
                                                                                           "a(0)")
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -1)
                                                                                              (("2"
                                                                                                (REWRITE
                                                                                                 "identity_mult")
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (REWRITE
                                                                               "abs_mult")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (HIDE-ALL-BUT
                                                                 1)
                                                                (("2"
                                                                  (REWRITE
                                                                   "abs_real_rew")
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (LEMMA
                                                             "abs_real_rew")
                                                            (("2"
                                                              (INST -
                                                               "abs(a(0)) + abs(K)")
                                                              (("2"
                                                                (REPLACES -1)
                                                                (("2"
                                                                  (EXPAND "abs"
                                                                          1 1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (FLATTEN)
                                                        (("2"
                                                          (LEMMA "abs_is_0")
                                                          (("2" (INST?)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2"
                                                  (INVOKE (CASE "%1 > 0")
                                                   (! -1 1))
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (CROSS-MULT 1)
                                                    (("2" (GROUND)
                                                      (("1" (LEMMA "abs_is_0")
                                                        (("1" (INST?)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (LEMMA "abs_is_0")
                                                        (("2" (INST?)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LEMMA "abs_is_0")
                                            (("2" (INST?)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (POSTPONE) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|cpolynomial_limit_infinity-1| |nil| 3596296192 ("" (POSTPONE) NIL NIL) NIL
   SHOSTAK))
 (|complex_disk_complete| 0
  (|complex_disk_complete-4| "" 3790337347
   (""
    (CASE "NOT FORALL (xs, xyc, xv: real,epsil22:posreal):
                      xs <= xyc AND
                       xv >= xs AND xv < epsil22 / 2 + xs AND xs > xyc - epsil22 / 2
                       IMPLIES real_defs.abs(xv - xyc) < epsil22")
    (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (LABEL "hyp1" -1)
      (("2" (HIDE "hyp1")
        (("2" (SKEEP)
          (("2" (LABEL "eppy" -1)
            (("2"
              (NAME "xset"
                    "{r:real | EXISTS (N:nat): FORALL (j:nat): j>=N IMPLIES Re(a(j))>=r}")
              (("2" (CASE "nonempty?[real](xset) AND bounded_above?(xset)")
                (("1" (FLATTEN)
                  (("1" (ASSERT)
                    (("1" (NAME "xc" "lub(xset)")
                      (("1"
                        (CASE
                            "EXISTS (xseq:[nat->nat]): (FORALL (j:posnat): xseq(j)>=j AND real_defs.abs(Re(a(xseq(j)))-xc)<1/(1+j))")
                        (("1" (SKEEP -)
                          (("1"
                            (NAME "yset"
                                  "{r:real | EXISTS (N:nat): FORALL (j:nat): j>=N IMPLIES Im(a(xseq(j)))>=r}")
                            (("1"
                              (CASE
                                  "nonempty?[real](yset) AND bounded_above?(yset)")
                              (("1" (FLATTEN)
                                (("1" (NAME "yc" "lub(yset)")
                                  (("1" (NAME "cc" "xc + yc*complex_i")
                                    (("1"
                                      (CASE
                                          "EXISTS (yseq:[nat->nat]): (FORALL (j:posnat): yseq(j)>=j AND real_defs.abs(Im(a(xseq(yseq(j))))-yc)<1/(1+j))")
                                      (("1" (SKEEP -)
                                        (("1" (ASSERT)
                                          (("1"
                                            (CASE
                                                "FORALL (j:posnat): abs(cc-a(xseq(yseq(j))))<2/(1+j)")
                                            (("1" (INST + "cc")
                                              (("1"
                                                (CASE
                                                    "NOT (FORALL (epsil: posreal, N: nat):
                                                                                                                                EXISTS (j: nat): j > N AND abs(cc - a(j)) < epsil)")
                                                (("1" (HIDE 2)
                                                  (("1" (SKEEP)
                                                    (("1"
                                                      (CASE
                                                          "EXISTS (kk:posnat): 2/(1+kk)<epsil")
                                                      (("1" (SKEEP)
                                                        (("1"
                                                          (INST +
                                                           "xseq(yseq(max(1+kk,1+N)))")
                                                          (("1" (SPLASH +)
                                                            (("1"
                                                              (INVOKE
                                                               (NAME "jj" "%1")
                                                               (! -1 1 1 1))
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (INST - "jj")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "1/(1+jj) <= 1/(1+kk)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (CROSS-MULT
                                                                         1)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (HIDE -2)
                                                              (("2"
                                                                (INST -
                                                                 "max(1+kk,1+N)")
                                                                (("2" (FLATTEN)
                                                                  (("2"
                                                                    (INST -
                                                                     "yseq(max(1+kk,1+N))")
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE-ALL-BUT 1)
                                                        (("2"
                                                          (LEMMA
                                                           "axiom_of_archimedes")
                                                          (("2"
                                                            (INST - "4/epsil")
                                                            (("2" (SKOSIMP*)
                                                              (("2"
                                                                (CASE
                                                                    "i!1 <= 0")
                                                                (("1"
                                                                  (CASE
                                                                      "4/epsil<=0")
                                                                  (("1"
                                                                    (CROSS-MULT
                                                                     -1)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (INST +
                                                                   "i!1")
                                                                  (("1"
                                                                    (CROSS-MULT
                                                                     -1)
                                                                    (("1"
                                                                      (CROSS-MULT
                                                                       2)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACE -1)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (INST - "(abs(cc)-K)/2"
                                                       "1")
                                                      (("2" (SKEEP -1)
                                                        (("2" (INST "eppy" "j")
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (LEMMA
                                                               "abs_triangle")
                                                              (("2"
                                                                (INST -
                                                                 "cc-a(j)"
                                                                 "a(j)")
                                                                (("2" (ASSERT)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE 2)
                                              (("2" (SKEEP)
                                                (("2" (INST - "j")
                                                  (("2" (INST - "yseq(j)")
                                                    (("1"
                                                      (NAME "dd"
                                                            "a(xseq(yseq(j)))")
                                                      (("1" (REPLACE -1)
                                                        (("1" (FLATTEN)
                                                          (("1"
                                                            (LEMMA
                                                             "abs_triangle")
                                                            (("1"
                                                              (INST -
                                                               "real_(xc-Re(dd))"
                                                               "(yc-Im(dd))*complex_i")
                                                              (("1"
                                                                (CASE
                                                                    "cc-dd = xc - Re(dd) + (yc - Im(dd)) * complex_i")
                                                                (("1"
                                                                  (REPLACES -1
                                                                   :DIR RL)
                                                                  (("1"
                                                                    (CASE
                                                                        "abs(xc-Re(dd))<1/(1+j) AND abs((yc-Im(dd))*complex_i)<1/(1+j)")
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (HIDE-ALL-BUT
                                                                           (-1
                                                                            -2
                                                                            -3
                                                                            1))
                                                                          (("1"
                                                                            (CASE
                                                                                "abs(xc - Re(dd))=abs(complex_(xc - Re(dd), 0))")
                                                                            (("1"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE-ALL-BUT
                                                                               1)
                                                                              (("2"
                                                                                (GRIND)
                                                                                (("1"
                                                                                  (CASE
                                                                                      "Re(dd) * Re(dd) - 2 * (Re(dd) * xc) + xc * xc = sq(xc-Re(dd))")
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1
                                                                                     1)
                                                                                    (("1"
                                                                                      (LEMMA
                                                                                       "sqrt_sq_neg")
                                                                                      (("1"
                                                                                        (INST?
                                                                                         -)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (CASE
                                                                                      "Re(dd) * Re(dd) - 2 * (Re(dd) * xc) + xc * xc = sq(xc-Re(dd))")
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1
                                                                                     2)
                                                                                    (("1"
                                                                                      (LEMMA
                                                                                       "sqrt_sq")
                                                                                      (("1"
                                                                                        (INST?
                                                                                         -)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (HIDE
                                                                       (-1 2))
                                                                      (("2"
                                                                        (SPLIT
                                                                         +)
                                                                        (("1"
                                                                          (CASE
                                                                              "real_defs.abs(Re(dd)-xc) = real_defs.abs(xc - Re(dd))")
                                                                          (("1"
                                                                            (REPLACE
                                                                             -1
                                                                             :DIR
                                                                             RL)
                                                                            (("1"
                                                                              (CASE
                                                                                  "1/(1+yseq(j))<=1/(1+j)")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (CROSS-MULT
                                                                                 1)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (HIDE-ALL-BUT
                                                                             1)
                                                                            (("2"
                                                                              (GRIND
                                                                               :EXCLUDE
                                                                               "Re")
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE-ALL-BUT
                                                                           (-3
                                                                            1))
                                                                          (("2"
                                                                            (GRIND)
                                                                            (("1"
                                                                              (CASE
                                                                                  "Im(dd) * Im(dd) - 2 * (Im(dd) * yc) + yc * yc=sq(Im(dd)-yc)")
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (HIDE
                                                                                   -1)
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "sqrt_sq_neg")
                                                                                    (("1"
                                                                                      (INST?
                                                                                       -)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (LEMMA
                                                                               "sqrt_sq")
                                                                              (("2"
                                                                                (CASE
                                                                                    "Im(dd) * Im(dd) - 2 * (Im(dd) * yc) + yc * yc=sq(Im(dd)-yc)")
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -1
                                                                                   1)
                                                                                  (("1"
                                                                                    (HIDE
                                                                                     -1)
                                                                                    (("1"
                                                                                      (INST?
                                                                                       -)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (HIDE-ALL-BUT
                                                                   1)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "cc")
                                                                    (("2"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2"
                                          (CASE
                                              "FORALL (j:posnat): EXISTS (k:posnat): k>=j AND real_defs.abs(Im(a(xseq(k))) - yc) < 1 / (1 + j)")
                                          (("1"
                                            (NAME "yseq"
                                                  "LAMBDA (jj:nat): choose[posnat]({k:posnat|k>=jj+1 AND  real_defs.abs(Im(a(xseq(k))) - yc) < 1 / (2 + jj)})")
                                            (("1" (INST + "yseq")
                                              (("1" (SKEEP)
                                                (("1" (ASSERT)
                                                  (("1" (SPLIT)
                                                    (("1" (TYPEPRED "yseq(j)")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (TYPEPRED "yseq(j)")
                                                      (("2"
                                                        (CASE
                                                            "1/(2+j) < 1/(1+j)")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (CROSS-MULT 1)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE 2)
                                              (("2" (SKEEP)
                                                (("2" (EXPAND "nonempty?" 1)
                                                  (("2" (EXPAND "empty?")
                                                    (("2" (EXPAND "member")
                                                      (("2" (INST -2 "jj+1")
                                                        (("2" (SKOSIMP*)
                                                          (("2" (INST - "k!1")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE 2)
                                            (("2" (TYPEPRED "yc")
                                              (("2" (SKEEP)
                                                (("2"
                                                  (EXPAND "least_upper_bound?")
                                                  (("2" (FLATTEN)
                                                    (("2"
                                                      (NAME "epsil" "1/(1+j)")
                                                      (("2" (REPLACE -1)
                                                        (("2"
                                                          (CASE
                                                              "NOT epsil > 0")
                                                          (("1"
                                                            (EXPAND "epsil" 1)
                                                            (("1"
                                                              (CROSS-MULT 1)
                                                              NIL NIL))
                                                            NIL)
                                                           ("2"
                                                            (INST -
                                                             "yc - epsil/2")
                                                            (("2" (ASSERT)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (EXPAND
                                                                   "upper_bound?"
                                                                   1)
                                                                  (("2"
                                                                    (SKOSIMP*)
                                                                    (("2"
                                                                      (TYPEPRED
                                                                       "s!1")
                                                                      (("2"
                                                                        (EXPAND
                                                                         "yset"
                                                                         -1)
                                                                        (("2"
                                                                          (SKOSIMP*)
                                                                          (("2"
                                                                            (COPY
                                                                             -4)
                                                                            (("2"
                                                                              (EXPAND
                                                                               "upper_bound?"
                                                                               -1)
                                                                              (("2"
                                                                                (INST
                                                                                 -
                                                                                 "s!1")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (CASE
                                                                                        "yset(s!1 + epsil/2)")
                                                                                    (("1"
                                                                                      (COPY
                                                                                       -6)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "upper_bound?"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (INST
                                                                                           -
                                                                                           "s!1 + epsil/2")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "yset"
                                                                                         1)
                                                                                        (("2"
                                                                                          (INST
                                                                                           +
                                                                                           "max(j+2,N!1+2)")
                                                                                          (("2"
                                                                                            (SKOLEM
                                                                                             1
                                                                                             "q")
                                                                                            (("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (INST
                                                                                                 +
                                                                                                 "q")
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -
                                                                                                   "q")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (NAME
                                                                                                       "V"
                                                                                                       "Im(a(xseq(q)))")
                                                                                                      (("1"
                                                                                                        (REPLACE
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (HIDE-ALL-BUT
                                                                                                             (-3
                                                                                                              -4
                                                                                                              -5
                                                                                                              1
                                                                                                              2
                                                                                                              3))
                                                                                                            (("1"
                                                                                                              (REVEAL
                                                                                                               "hyp1")
                                                                                                              (("1"
                                                                                                                (INST
                                                                                                                 -
                                                                                                                 "s!1"
                                                                                                                 "yc"
                                                                                                                 "V"
                                                                                                                 "epsil")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (ASSERT)
                                  (("2" (SPLIT)
                                    (("1" (EXPAND "nonempty?" 1)
                                      (("1" (EXPAND "empty?")
                                        (("1" (INST - "-K-1")
                                          (("1" (EXPAND "member")
                                            (("1" (EXPAND "yset" 1)
                                              (("1" (INST + "0")
                                                (("1" (SKEEP)
                                                  (("1" (HIDE -1)
                                                    (("1"
                                                      (HIDE
                                                       (-1 -2 -3 -4 -5 -6))
                                                      (("1" (INST - "xseq(j)")
                                                        (("1"
                                                          (NAME "z"
                                                                "a(xseq(j))")
                                                          (("1" (REPLACES -1)
                                                            (("1"
                                                              (REWRITE
                                                               "abs_def")
                                                              (("1"
                                                                (LEMMA "sq_le")
                                                                (("1" (INST?)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "sq.sq(Im(z))>=sq.sq(K+1)")
                                                                      (("1"
                                                                        (LEMMA
                                                                         "sq_gt")
                                                                        (("1"
                                                                          (INST
                                                                           -
                                                                           "K+1"
                                                                           "K")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE
                                                                         -)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sq_ge")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "real_defs.abs(Im(z))"
                                                                             "K+1")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE (-1 -2 -3 -4 -5 -6))
                                      (("2" (EXPAND "bounded_above?")
                                        (("2" (INST + "K+1")
                                          (("2" (EXPAND "upper_bound?")
                                            (("2" (SKEEP)
                                              (("2" (TYPEPRED "s")
                                                (("2" (EXPAND "yset")
                                                  (("2" (SKOSIMP*)
                                                    (("2" (INST - "N!1")
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (INST - "xseq(N!1)")
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (LEMMA "sq_ge")
                                                              (("2" (INST?)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "sq_gt")
                                                                    (("2"
                                                                      (INST -
                                                                       "s"
                                                                       "1+K")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sq_gt")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "real_defs.abs(Im(a(xseq(N!1))))"
                                                                             "1+K")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (CASE
                                                                                    "abs(a(xseq(N!1))) >= real_defs.abs(Im(a(xseq(N!1))))")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   -)
                                                                                  (("2"
                                                                                    (REWRITE
                                                                                     "abs_def")
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "sq_ge")
                                                                                      (("2"
                                                                                        (INST?)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2"
                            (CASE
                                "FORALL (j:posnat): EXISTS (k:posnat): k>=j AND real_defs.abs(Re(a(k)) - xc) < 1 / (1 + j)")
                            (("1"
                              (NAME "xseq"
                                    "LAMBDA (j:nat): choose[posnat]({k:posnat | k >=j+1 AND real_defs.abs(Re(a(k)) - xc) < 1 / (2 + j)})")
                              (("1" (INST + "xseq")
                                (("1" (SKEEP)
                                  (("1" (TYPEPRED "xseq(j)")
                                    (("1" (ASSERT)
                                      (("1" (CASE "1/(2+j)<1/(1+j)")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (SKEEP)
                                  (("2" (INST - "1+j")
                                    (("2" (SKOSIMP*)
                                      (("2" (ASSERT)
                                        (("2" (EXPAND "nonempty?")
                                          (("2" (EXPAND "empty?" -1)
                                            (("2" (INST - "k!1")
                                              (("2" (EXPAND "member")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 2)
                              (("2" (SKEEP)
                                (("2" (NAME "epsil" "1/(1+j)")
                                  (("2" (REPLACE -1)
                                    (("2" (CASE "NOT epsil>0")
                                      (("1" (EXPAND "epsil" 1)
                                        (("1" (CROSS-MULT 1) NIL NIL)) NIL)
                                       ("2" (TYPEPRED "xc")
                                        (("2" (EXPAND "least_upper_bound?")
                                          (("2" (FLATTEN)
                                            (("2" (INST - "xc-epsil/2")
                                              (("2" (ASSERT)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (EXPAND "upper_bound?" 1)
                                                    (("2" (SKOSIMP*)
                                                      (("2"
                                                        (EXPAND "upper_bound?"
                                                                -1)
                                                        (("2"
                                                          (INST -
                                                           "s!1+epsil/2")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (EXPAND "xset" 1)
                                                            (("2"
                                                              (TYPEPRED "s!1")
                                                              (("2"
                                                                (EXPAND "xset"
                                                                        -1)
                                                                (("2"
                                                                  (SKOSIMP*)
                                                                  (("2"
                                                                    (INST +
                                                                     "max(j+2,N!1+2)")
                                                                    (("2"
                                                                      (SKOLEM 1
                                                                       "q")
                                                                      (("2"
                                                                        (INST +
                                                                         "q")
                                                                        (("1"
                                                                          (INST
                                                                           -
                                                                           "q")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (CASE
                                                                                      "NOT upper_bound?(xc,xset)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (EXPAND
                                                                                     "upper_bound?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -
                                                                                       "s!1")
                                                                                      (("2"
                                                                                        (HIDE-ALL-BUT
                                                                                         (-1
                                                                                          -2
                                                                                          1
                                                                                          2
                                                                                          3))
                                                                                        (("2"
                                                                                          (NAME
                                                                                           "V"
                                                                                           "Re(a(q))")
                                                                                          (("2"
                                                                                            (REPLACE
                                                                                             -1)
                                                                                            (("2"
                                                                                              (HIDE
                                                                                               -1)
                                                                                              (("2"
                                                                                                (REVEAL
                                                                                                 "hyp1")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -
                                                                                                   "s!1"
                                                                                                   "xc"
                                                                                                   "V"
                                                                                                   "epsil")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (SPLIT)
                    (("1" (EXPAND "nonempty?")
                      (("1" (EXPAND "empty?")
                        (("1" (INST - "-K-1")
                          (("1" (HIDE -1)
                            (("1" (EXPAND "member")
                              (("1" (EXPAND "xset")
                                (("1" (INST + "0")
                                  (("1" (SKEEP)
                                    (("1" (HIDE -1)
                                      (("1" (INST - "j")
                                        (("1" (LEMMA "sq_le")
                                          (("1" (INST?)
                                            (("1" (ASSERT)
                                              (("1" (REWRITE "abs_def" -1)
                                                (("1" (ASSERT)
                                                  (("1" (CASE "-Re(a(j))<=K")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (LEMMA "sq_le")
                                                      (("2"
                                                        (INST - "-Re(a(j))"
                                                         "K")
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND "sq" -1 2)
                                                            (("2"
                                                              (EXPAND "sq" 1 1)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE -1)
                      (("2" (EXPAND "bounded_above?")
                        (("2" (INST + "K+1")
                          (("2" (EXPAND "upper_bound?")
                            (("2" (SKOSIMP*)
                              (("2" (TYPEPRED "s!1")
                                (("2" (EXPAND "xset" -1)
                                  (("2" (SKOSIMP*)
                                    (("2" (INST - "N!1")
                                      (("2" (ASSERT)
                                        (("2" (INST - "N!1")
                                          (("2" (ASSERT)
                                            (("2" (NAME "V" "Re(a(N!1))")
                                              (("2" (REWRITE "abs_def")
                                                (("2"
                                                  (REWRITE "sq_le" -3 :DIR RL)
                                                  (("2" (LEMMA "sq_le")
                                                    (("2"
                                                      (INST - "Re(a(N!1))" "K")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|complex_disk_complete-3| |nil| 3709037500
   (""
    (CASE "NOT FORALL (xs, xyc, xv: real,epsil22:posreal):
                      xs <= xyc AND
                       xv >= xs AND xv < epsil22 / 2 + xs AND xs > xyc - epsil22 / 2
                       IMPLIES real_defs.abs(xv - xyc) < epsil22")
    (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (LABEL "hyp1" -1)
      (("2" (HIDE "hyp1")
        (("2" (SKEEP)
          (("2" (LABEL "eppy" -1)
            (("2"
              (NAME "xset"
                    "{r:real | EXISTS (N:nat): FORALL (j:nat): j>=N IMPLIES Re(a(j))>=r}")
              (("2" (CASE "nonempty?[real](xset) AND bounded_above?(xset)")
                (("1" (FLATTEN)
                  (("1" (ASSERT)
                    (("1" (NAME "xc" "lub(xset)")
                      (("1"
                        (CASE
                            "EXISTS (xseq:[nat->nat]): (FORALL (j:posnat): xseq(j)>=j AND real_defs.abs(Re(a(xseq(j)))-xc)<1/(1+j))")
                        (("1" (SKEEP -)
                          (("1"
                            (NAME "yset"
                                  "{r:real | EXISTS (N:nat): FORALL (j:nat): j>=N IMPLIES Im(a(xseq(j)))>=r}")
                            (("1"
                              (CASE
                                  "nonempty?[real](yset) AND bounded_above?(yset)")
                              (("1" (FLATTEN)
                                (("1" (NAME "yc" "lub(yset)")
                                  (("1" (NAME "cc" "xc + yc*complex_i")
                                    (("1"
                                      (CASE
                                          "EXISTS (yseq:[nat->nat]): (FORALL (j:posnat): yseq(j)>=j AND real_defs.abs(Im(a(xseq(yseq(j))))-yc)<1/(1+j))")
                                      (("1" (SKEEP -)
                                        (("1" (ASSERT)
                                          (("1"
                                            (CASE
                                                "FORALL (j:posnat): abs(cc-a(xseq(yseq(j))))<2/(1+j)")
                                            (("1" (INST + "cc")
                                              (("1"
                                                (CASE
                                                    "NOT (FORALL (epsil: posreal, N: nat):
                                                                                                                                EXISTS (j: nat): j > N AND abs(cc - a(j)) < epsil)")
                                                (("1" (HIDE 2)
                                                  (("1" (SKEEP)
                                                    (("1"
                                                      (CASE
                                                          "EXISTS (kk:posnat): 2/(1+kk)<epsil")
                                                      (("1" (SKEEP)
                                                        (("1"
                                                          (INST +
                                                           "xseq(yseq(max(1+kk,1+N)))")
                                                          (("1" (SPLASH +)
                                                            (("1"
                                                              (INVOKE
                                                               (NAME "jj" "%1")
                                                               (! -1 1 1 1))
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (INST - "jj")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "1/(1+jj) <= 1/(1+kk)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (CROSS-MULT
                                                                         1)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (HIDE -2)
                                                              (("2"
                                                                (INST -
                                                                 "max(1+kk,1+N)")
                                                                (("2" (FLATTEN)
                                                                  (("2"
                                                                    (INST -
                                                                     "yseq(max(1+kk,1+N))")
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE-ALL-BUT 1)
                                                        (("2"
                                                          (LEMMA
                                                           "axiom_of_archimedes")
                                                          (("2"
                                                            (INST - "4/epsil")
                                                            (("2" (SKOSIMP*)
                                                              (("2"
                                                                (CASE
                                                                    "i!1 <= 0")
                                                                (("1"
                                                                  (CASE
                                                                      "4/epsil<=0")
                                                                  (("1"
                                                                    (CROSS-MULT
                                                                     -1)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (INST +
                                                                   "i!1")
                                                                  (("1"
                                                                    (CROSS-MULT
                                                                     -1)
                                                                    (("1"
                                                                      (CROSS-MULT
                                                                       2)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACE -1)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (INST - "(abs(cc)-K)/2"
                                                       "1")
                                                      (("2" (SKEEP -1)
                                                        (("2" (INST "eppy" "j")
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (LEMMA
                                                               "abs_triangle")
                                                              (("2"
                                                                (INST -
                                                                 "cc-a(j)"
                                                                 "a(j)")
                                                                (("2" (ASSERT)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE 2)
                                              (("2" (SKEEP)
                                                (("2" (INST - "j")
                                                  (("2" (INST - "yseq(j)")
                                                    (("1"
                                                      (NAME "dd"
                                                            "a(xseq(yseq(j)))")
                                                      (("1" (REPLACE -1)
                                                        (("1" (FLATTEN)
                                                          (("1"
                                                            (LEMMA
                                                             "abs_triangle")
                                                            (("1"
                                                              (REPLACES -1 :DIR
                                                               RL)
                                                              (("1"
                                                                (INST -
                                                                 "real_(xc-Re(dd))"
                                                                 "(yc-Im(dd))*complex_i")
                                                                (("1"
                                                                  (CASE
                                                                      "cc-dd = xc - Re(dd) + (yc - Im(dd)) * complex_i")
                                                                  (("1"
                                                                    (REPLACES
                                                                     -1 :DIR
                                                                     RL)
                                                                    (("1"
                                                                      (CASE
                                                                          "abs(xc-Re(dd))<1/(1+j) AND abs((yc-Im(dd))*complex_i)<1/(1+j)")
                                                                      (("1"
                                                                        (FLATTEN)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -2
                                                                              -3
                                                                              1))
                                                                            (("1"
                                                                              (CASE
                                                                                  "abs(xc - Re(dd))=abs(complex_(xc - Re(dd), 0))")
                                                                              (("1"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (HIDE-ALL-BUT
                                                                                 1)
                                                                                (("2"
                                                                                  (GRIND)
                                                                                  (("1"
                                                                                    (CASE
                                                                                        "Re(dd) * Re(dd) - 2 * (Re(dd) * xc) + xc * xc = sq(xc-Re(dd))")
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "sqrt_sq_neg")
                                                                                        (("1"
                                                                                          (INST?
                                                                                           -)
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (CASE
                                                                                        "Re(dd) * Re(dd) - 2 * (Re(dd) * xc) + xc * xc = sq(xc-Re(dd))")
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       2)
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "sqrt_sq")
                                                                                        (("1"
                                                                                          (INST?
                                                                                           -)
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE
                                                                         (-1
                                                                          2))
                                                                        (("2"
                                                                          (SPLIT
                                                                           +)
                                                                          (("1"
                                                                            (CASE
                                                                                "real_defs.abs(Re(dd)-xc) = real_defs.abs(xc - Re(dd))")
                                                                            (("1"
                                                                              (REPLACE
                                                                               -1
                                                                               :DIR
                                                                               RL)
                                                                              (("1"
                                                                                (CASE
                                                                                    "1/(1+yseq(j))<=1/(1+j)")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (CROSS-MULT
                                                                                   1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE-ALL-BUT
                                                                               1)
                                                                              (("2"
                                                                                (GRIND
                                                                                 :EXCLUDE
                                                                                 "Re")
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (HIDE-ALL-BUT
                                                                             (-3
                                                                              1))
                                                                            (("2"
                                                                              (GRIND)
                                                                              (("1"
                                                                                (CASE
                                                                                    "Im(dd) * Im(dd) - 2 * (Im(dd) * yc) + yc * yc=sq(Im(dd)-yc)")
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -1
                                                                                   1)
                                                                                  (("1"
                                                                                    (HIDE
                                                                                     -1)
                                                                                    (("1"
                                                                                      (LEMMA
                                                                                       "sqrt_sq_neg")
                                                                                      (("1"
                                                                                        (INST?
                                                                                         -)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (LEMMA
                                                                                 "sqrt_sq")
                                                                                (("2"
                                                                                  (CASE
                                                                                      "Im(dd) * Im(dd) - 2 * (Im(dd) * yc) + yc * yc=sq(Im(dd)-yc)")
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1
                                                                                     1)
                                                                                    (("1"
                                                                                      (HIDE
                                                                                       -1)
                                                                                      (("1"
                                                                                        (INST?
                                                                                         -)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (HIDE-ALL-BUT
                                                                     1)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "cc")
                                                                      (("2"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2"
                                          (CASE
                                              "FORALL (j:posnat): EXISTS (k:posnat): k>=j AND real_defs.abs(Im(a(xseq(k))) - yc) < 1 / (1 + j)")
                                          (("1"
                                            (NAME "yseq"
                                                  "LAMBDA (jj:nat): choose[posnat]({k:posnat|k>=jj+1 AND  real_defs.abs(Im(a(xseq(k))) - yc) < 1 / (2 + jj)})")
                                            (("1" (INST + "yseq")
                                              (("1" (SKEEP)
                                                (("1" (ASSERT)
                                                  (("1" (SPLIT)
                                                    (("1" (TYPEPRED "yseq(j)")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (TYPEPRED "yseq(j)")
                                                      (("2"
                                                        (CASE
                                                            "1/(2+j) < 1/(1+j)")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (CROSS-MULT 1)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE 2)
                                              (("2" (SKEEP)
                                                (("2" (EXPAND "nonempty?" 1)
                                                  (("2" (EXPAND "empty?")
                                                    (("2" (EXPAND "member")
                                                      (("2" (INST -2 "jj+1")
                                                        (("2" (SKOSIMP*)
                                                          (("2" (INST - "k!1")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE 2)
                                            (("2" (TYPEPRED "yc")
                                              (("2" (SKEEP)
                                                (("2"
                                                  (EXPAND "least_upper_bound?")
                                                  (("2" (FLATTEN)
                                                    (("2"
                                                      (NAME "epsil" "1/(1+j)")
                                                      (("2" (REPLACE -1)
                                                        (("2"
                                                          (CASE
                                                              "NOT epsil > 0")
                                                          (("1"
                                                            (EXPAND "epsil" 1)
                                                            (("1"
                                                              (CROSS-MULT 1)
                                                              NIL NIL))
                                                            NIL)
                                                           ("2"
                                                            (INST -
                                                             "yc - epsil/2")
                                                            (("2" (ASSERT)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (EXPAND
                                                                   "upper_bound?"
                                                                   1)
                                                                  (("2"
                                                                    (SKOSIMP*)
                                                                    (("2"
                                                                      (TYPEPRED
                                                                       "s!1")
                                                                      (("2"
                                                                        (EXPAND
                                                                         "yset"
                                                                         -1)
                                                                        (("2"
                                                                          (SKOSIMP*)
                                                                          (("2"
                                                                            (COPY
                                                                             -4)
                                                                            (("2"
                                                                              (EXPAND
                                                                               "upper_bound?"
                                                                               -1)
                                                                              (("2"
                                                                                (INST
                                                                                 -
                                                                                 "s!1")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (CASE
                                                                                        "yset(s!1 + epsil/2)")
                                                                                    (("1"
                                                                                      (COPY
                                                                                       -6)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "upper_bound?"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (INST
                                                                                           -
                                                                                           "s!1 + epsil/2")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "yset"
                                                                                         1)
                                                                                        (("2"
                                                                                          (INST
                                                                                           +
                                                                                           "max(j+2,N!1+2)")
                                                                                          (("2"
                                                                                            (SKOLEM
                                                                                             1
                                                                                             "q")
                                                                                            (("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (INST
                                                                                                 +
                                                                                                 "q")
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -
                                                                                                   "q")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (NAME
                                                                                                       "V"
                                                                                                       "Im(a(xseq(q)))")
                                                                                                      (("1"
                                                                                                        (REPLACE
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (HIDE-ALL-BUT
                                                                                                             (-3
                                                                                                              -4
                                                                                                              -5
                                                                                                              1
                                                                                                              2
                                                                                                              3))
                                                                                                            (("1"
                                                                                                              (REVEAL
                                                                                                               "hyp1")
                                                                                                              (("1"
                                                                                                                (INST
                                                                                                                 -
                                                                                                                 "s!1"
                                                                                                                 "yc"
                                                                                                                 "V"
                                                                                                                 "epsil")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (ASSERT)
                                  (("2" (SPLIT)
                                    (("1" (EXPAND "nonempty?" 1)
                                      (("1" (EXPAND "empty?")
                                        (("1" (INST - "-K-1")
                                          (("1" (EXPAND "member")
                                            (("1" (EXPAND "yset" 1)
                                              (("1" (INST + "0")
                                                (("1" (SKEEP)
                                                  (("1" (HIDE -1)
                                                    (("1"
                                                      (HIDE
                                                       (-1 -2 -3 -4 -5 -6))
                                                      (("1" (INST - "xseq(j)")
                                                        (("1"
                                                          (NAME "z"
                                                                "a(xseq(j))")
                                                          (("1" (REPLACES -1)
                                                            (("1"
                                                              (REWRITE
                                                               "abs_def")
                                                              (("1"
                                                                (LEMMA "sq_le")
                                                                (("1" (INST?)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "sq.sq(Im(z))>=sq.sq(K+1)")
                                                                      (("1"
                                                                        (LEMMA
                                                                         "sq_gt")
                                                                        (("1"
                                                                          (INST
                                                                           -
                                                                           "K+1"
                                                                           "K")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE
                                                                         -)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sq_ge")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "real_defs.abs(Im(z))"
                                                                             "K+1")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE (-1 -2 -3 -4 -5 -6))
                                      (("2" (EXPAND "bounded_above?")
                                        (("2" (INST + "K+1")
                                          (("2" (EXPAND "upper_bound?")
                                            (("2" (SKEEP)
                                              (("2" (TYPEPRED "s")
                                                (("2" (EXPAND "yset")
                                                  (("2" (SKOSIMP*)
                                                    (("2" (INST - "N!1")
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (INST - "xseq(N!1)")
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (LEMMA "sq_ge")
                                                              (("2" (INST?)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "sq_gt")
                                                                    (("2"
                                                                      (INST -
                                                                       "s"
                                                                       "1+K")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sq_gt")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "real_defs.abs(Im(a(xseq(N!1))))"
                                                                             "1+K")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (CASE
                                                                                    "abs(a(xseq(N!1))) >= real_defs.abs(Im(a(xseq(N!1))))")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   -)
                                                                                  (("2"
                                                                                    (REWRITE
                                                                                     "abs_def")
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "sq_ge")
                                                                                      (("2"
                                                                                        (INST?)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2"
                            (CASE
                                "FORALL (j:posnat): EXISTS (k:posnat): k>=j AND real_defs.abs(Re(a(k)) - xc) < 1 / (1 + j)")
                            (("1"
                              (NAME "xseq"
                                    "LAMBDA (j:nat): choose[posnat]({k:posnat | k >=j+1 AND real_defs.abs(Re(a(k)) - xc) < 1 / (2 + j)})")
                              (("1" (INST + "xseq")
                                (("1" (SKEEP)
                                  (("1" (TYPEPRED "xseq(j)")
                                    (("1" (ASSERT)
                                      (("1" (CASE "1/(2+j)<1/(1+j)")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (SKEEP)
                                  (("2" (INST - "1+j")
                                    (("2" (SKOSIMP*)
                                      (("2" (ASSERT)
                                        (("2" (EXPAND "nonempty?")
                                          (("2" (EXPAND "empty?" -1)
                                            (("2" (INST - "k!1")
                                              (("2" (EXPAND "member")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 2)
                              (("2" (SKEEP)
                                (("2" (NAME "epsil" "1/(1+j)")
                                  (("2" (REPLACE -1)
                                    (("2" (CASE "NOT epsil>0")
                                      (("1" (EXPAND "epsil" 1)
                                        (("1" (CROSS-MULT 1) NIL NIL)) NIL)
                                       ("2" (TYPEPRED "xc")
                                        (("2" (EXPAND "least_upper_bound?")
                                          (("2" (FLATTEN)
                                            (("2" (INST - "xc-epsil/2")
                                              (("2" (ASSERT)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (EXPAND "upper_bound?" 1)
                                                    (("2" (SKOSIMP*)
                                                      (("2"
                                                        (EXPAND "upper_bound?"
                                                                -1)
                                                        (("2"
                                                          (INST -
                                                           "s!1+epsil/2")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (EXPAND "xset" 1)
                                                            (("2"
                                                              (TYPEPRED "s!1")
                                                              (("2"
                                                                (EXPAND "xset"
                                                                        -1)
                                                                (("2"
                                                                  (SKOSIMP*)
                                                                  (("2"
                                                                    (INST +
                                                                     "max(j+2,N!1+2)")
                                                                    (("2"
                                                                      (SKOLEM 1
                                                                       "q")
                                                                      (("2"
                                                                        (INST +
                                                                         "q")
                                                                        (("1"
                                                                          (INST
                                                                           -
                                                                           "q")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (CASE
                                                                                      "NOT upper_bound?(xc,xset)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (EXPAND
                                                                                     "upper_bound?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -
                                                                                       "s!1")
                                                                                      (("2"
                                                                                        (HIDE-ALL-BUT
                                                                                         (-1
                                                                                          -2
                                                                                          1
                                                                                          2
                                                                                          3))
                                                                                        (("2"
                                                                                          (NAME
                                                                                           "V"
                                                                                           "Re(a(q))")
                                                                                          (("2"
                                                                                            (REPLACE
                                                                                             -1)
                                                                                            (("2"
                                                                                              (HIDE
                                                                                               -1)
                                                                                              (("2"
                                                                                                (REVEAL
                                                                                                 "hyp1")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -
                                                                                                   "s!1"
                                                                                                   "xc"
                                                                                                   "V"
                                                                                                   "epsil")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (SPLIT)
                    (("1" (EXPAND "nonempty?")
                      (("1" (EXPAND "empty?")
                        (("1" (INST - "-K-1")
                          (("1" (HIDE -1)
                            (("1" (EXPAND "member")
                              (("1" (EXPAND "xset")
                                (("1" (INST + "0")
                                  (("1" (SKEEP)
                                    (("1" (HIDE -1)
                                      (("1" (INST - "j")
                                        (("1" (LEMMA "sq_le")
                                          (("1" (INST?)
                                            (("1" (ASSERT)
                                              (("1" (REWRITE "abs_def" -1)
                                                (("1" (ASSERT)
                                                  (("1" (CASE "-Re(a(j))<=K")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (LEMMA "sq_le")
                                                      (("2"
                                                        (INST - "-Re(a(j))"
                                                         "K")
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND "sq" -1 2)
                                                            (("2"
                                                              (EXPAND "sq" 1 1)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE -1)
                      (("2" (EXPAND "bounded_above?")
                        (("2" (INST + "K+1")
                          (("2" (EXPAND "upper_bound?")
                            (("2" (SKOSIMP*)
                              (("2" (TYPEPRED "s!1")
                                (("2" (EXPAND "xset" -1)
                                  (("2" (SKOSIMP*)
                                    (("2" (INST - "N!1")
                                      (("2" (ASSERT)
                                        (("2" (INST - "N!1")
                                          (("2" (ASSERT)
                                            (("2" (NAME "V" "Re(a(N!1))")
                                              (("2" (REWRITE "abs_def")
                                                (("2"
                                                  (REWRITE "sq_le" -3 :DIR RL)
                                                  (("2" (LEMMA "sq_le")
                                                    (("2"
                                                      (INST - "Re(a(N!1))" "K")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL) NIL
    (|lub| CONST-DECL "{x | least_upper_bound?(x, SA)}" |bounded_real_defs|
     NIL)
    NIL NIL NIL
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) NIL NIL
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|abs_mult| FORMULA-DECL NIL |polar| NIL)
    (|abs_i| FORMULA-DECL NIL |polar| NIL)
    (|abs_nzcomplex| APPLICATION-JUDGEMENT "posreal" |polar| NIL) NIL
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|abs_triangle| FORMULA-DECL NIL |polar| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    NIL (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|posrat_max| APPLICATION-JUDGEMENT "{s: posrat | s >= q AND s >= r}"
     |real_defs| NIL)
    (|posint_max| APPLICATION-JUDGEMENT "{k: posint | i <= k AND j <= k}"
     |real_defs| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) NIL NIL
    NIL (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL)
    (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|axiom_of_archimedes| FORMULA-DECL NIL |real_props| NIL) NIL
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nzrat_div_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL)
    (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    NIL (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|nonneg_rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL)
    (|posrat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL)
    (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    NIL NIL NIL NIL
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|abs_def| FORMULA-DECL NIL |polar| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_gt| FORMULA-DECL NIL |sq| |reals|)
    (|sq_ge| FORMULA-DECL NIL |sq| |reals|)
    (|sq_abs| FORMULA-DECL NIL |sq| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq_le| FORMULA-DECL NIL |sq| |reals|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|bounded_above?| CONST-DECL "bool" |bounded_real_defs| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL))
   NIL)
  (|complex_disk_complete-2| |nil| 3596358136
   (""
    (CASE "NOT FORALL (xs, xyc, xv: real,epsil22:posreal):
        xs <= xyc AND
         xv >= xs AND xv < epsil22 / 2 + xs AND xs > xyc - epsil22 / 2
         IMPLIES real_defs.abs(xv - xyc) < epsil22")
    (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (LABEL "hyp1" -1)
      (("2" (HIDE "hyp1")
        (("2" (SKEEP)
          (("2" (LABEL "eppy" -1)
            (("2"
              (NAME "xset"
                    "{r:real | EXISTS (N:nat): FORALL (j:nat): j>=N IMPLIES Re(a(j))>=r}")
              (("2" (CASE "nonempty?[real](xset) AND bounded_above?(xset)")
                (("1" (FLATTEN)
                  (("1" (ASSERT)
                    (("1" (NAME "xc" "lub(xset)")
                      (("1"
                        (CASE
                            "EXISTS (xseq:[nat->nat]): (FORALL (j:posnat): xseq(j)>=j AND real_defs.abs(Re(a(xseq(j)))-xc)<1/(1+j))")
                        (("1" (SKEEP -)
                          (("1"
                            (NAME "yset"
                                  "{r:real | EXISTS (N:nat): FORALL (j:nat): j>=N IMPLIES Im(a(xseq(j)))>=r}")
                            (("1"
                              (CASE
                                  "nonempty?[real](yset) AND bounded_above?(yset)")
                              (("1" (FLATTEN)
                                (("1" (NAME "yc" "lub(yset)")
                                  (("1" (NAME "cc" "xc + yc*i")
                                    (("1"
                                      (CASE
                                          "EXISTS (yseq:[nat->nat]): (FORALL (j:posnat): yseq(j)>=j AND real_defs.abs(Im(a(xseq(yseq(j))))-yc)<1/(1+j))")
                                      (("1" (SKEEP -)
                                        (("1" (ASSERT)
                                          (("1"
                                            (CASE
                                                "FORALL (j:posnat): abs(cc-a(xseq(yseq(j))))<2/(1+j)")
                                            (("1" (INST + "cc")
                                              (("1"
                                                (CASE
                                                    "NOT (FORALL (epsil: posreal, N: nat):
                                                                                      EXISTS (j: nat): j > N AND abs(cc - a(j)) < epsil)")
                                                (("1" (HIDE 2)
                                                  (("1" (SKEEP)
                                                    (("1"
                                                      (CASE
                                                          "EXISTS (kk:posnat): 2/(1+kk)<epsil")
                                                      (("1" (SKEEP)
                                                        (("1"
                                                          (INST +
                                                           "xseq(yseq(max(1+kk,1+N)))")
                                                          (("1" (SPLASH +)
                                                            (("1"
                                                              (INVOKE
                                                               (NAME "jj" "%1")
                                                               (! -1 1 1 1))
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (INST - "jj")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "1/(1+jj) <= 1/(1+kk)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (CROSS-MULT
                                                                         1)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (HIDE -2)
                                                              (("2"
                                                                (INST -
                                                                 "max(1+kk,1+N)")
                                                                (("2" (FLATTEN)
                                                                  (("2"
                                                                    (INST -
                                                                     "yseq(max(1+kk,1+N))")
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE-ALL-BUT 1)
                                                        (("2"
                                                          (LEMMA
                                                           "axiom_of_archimedes")
                                                          (("2"
                                                            (INST - "4/epsil")
                                                            (("2" (SKOSIMP*)
                                                              (("2"
                                                                (CASE
                                                                    "i!1 <= 0")
                                                                (("1"
                                                                  (CASE
                                                                      "4/epsil<=0")
                                                                  (("1"
                                                                    (CROSS-MULT
                                                                     -1)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (INST +
                                                                   "i!1")
                                                                  (("1"
                                                                    (CROSS-MULT
                                                                     -1)
                                                                    (("1"
                                                                      (CROSS-MULT
                                                                       2)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACE -1)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (INST - "(abs(cc)-K)/2"
                                                       "1")
                                                      (("2" (SKEEP -1)
                                                        (("2" (INST "eppy" "j")
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (LEMMA
                                                               "abs_triangle")
                                                              (("2"
                                                                (INST -
                                                                 "cc-a(j)"
                                                                 "a(j)")
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE 2)
                                              (("2" (SKEEP)
                                                (("2" (INST - "j")
                                                  (("2" (INST - "yseq(j)")
                                                    (("1"
                                                      (NAME "dd"
                                                            "a(xseq(yseq(j)))")
                                                      (("1" (REPLACE -1)
                                                        (("1" (FLATTEN)
                                                          (("1"
                                                            (LEMMA
                                                             "abs_triangle")
                                                            (("1"
                                                              (INST -
                                                               "xc-Re(dd)"
                                                               "(yc-Im(dd))*i")
                                                              (("1"
                                                                (CASE
                                                                    "cc-dd = xc - Re(dd) + (yc - Im(dd)) * i")
                                                                (("1"
                                                                  (REPLACES -1
                                                                   :DIR RL)
                                                                  (("1"
                                                                    (CASE
                                                                        "abs(xc-Re(dd))<1/(1+j) AND abs((yc-Im(dd))*i)<1/(1+j)")
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (HIDE
                                                                       (-1 2))
                                                                      (("2"
                                                                        (SPLIT
                                                                         +)
                                                                        (("1"
                                                                          (REWRITE
                                                                           "abs_real_rew"
                                                                           +)
                                                                          (("1"
                                                                            (CASE
                                                                                "real_defs.abs(Re(dd)-xc) = real_defs.abs(xc - Re(dd))")
                                                                            (("1"
                                                                              (REPLACE
                                                                               -1
                                                                               :DIR
                                                                               RL)
                                                                              (("1"
                                                                                (CASE
                                                                                    "1/(1+yseq(j))<=1/(1+j)")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (CROSS-MULT
                                                                                   1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE-ALL-BUT
                                                                               1)
                                                                              (("2"
                                                                                (GRIND
                                                                                 :EXCLUDE
                                                                                 "Re")
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (REWRITE
                                                                           "abs_imag_rew")
                                                                          (("2"
                                                                            (HIDE-ALL-BUT
                                                                             (-3
                                                                              1))
                                                                            (("2"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (HIDE-ALL-BUT
                                                                   1)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "cc")
                                                                    (("2"
                                                                      (GRIND)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "complex_is_0_Re_Im")
                                                                        (("2"
                                                                          (LEMMA
                                                                           "complex_diff_eq_0")
                                                                          (("2"
                                                                            (REWRITE
                                                                             -1
                                                                             1)
                                                                            (("2"
                                                                              (HIDE
                                                                               -1)
                                                                              (("2"
                                                                                (INST?)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (HIDE
                                                                                     2)
                                                                                    (("2"
                                                                                      (SPLIT)
                                                                                      (("1"
                                                                                        (REWRITE
                                                                                         "Re_plus")
                                                                                        (("1"
                                                                                          (REWRITE
                                                                                           "Re_minus")
                                                                                          (("1"
                                                                                            (REWRITE
                                                                                             "Re_minus")
                                                                                            (("1"
                                                                                              (REWRITE
                                                                                               "Re_plus")
                                                                                              (("1"
                                                                                                (REWRITE
                                                                                                 "Re_imag")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (LEMMA
                                                                                                     "Re_real")
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -
                                                                                                       "Re(dd)")
                                                                                                      (("1"
                                                                                                        (REPLACES
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (REWRITE
                                                                                                             "Re_imag")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (REWRITE
                                                                                                                 "complex_commutative_mult")
                                                                                                                (("1"
                                                                                                                  (REWRITE
                                                                                                                   "Re_imag")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (REWRITE
                                                                                         "Im_plus")
                                                                                        (("2"
                                                                                          (REWRITE
                                                                                           "Im_minus")
                                                                                          (("2"
                                                                                            (REWRITE
                                                                                             "Im_minus")
                                                                                            (("2"
                                                                                              (REWRITE
                                                                                               "Im_plus")
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (REWRITE
                                                                                                   "Im_real")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    (("2"
                                                                                                      (REWRITE
                                                                                                       "Im_imag")
                                                                                                      (("2"
                                                                                                        (REWRITE
                                                                                                         "Im_imag")
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (REWRITE
                                                                                                             "complex_commutative_mult")
                                                                                                            (("2"
                                                                                                              (REWRITE
                                                                                                               "Im_imag")
                                                                                                              (("2"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (FLATTEN)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2"
                                          (CASE
                                              "FORALL (j:posnat): EXISTS (k:posnat): k>=j AND real_defs.abs(Im(a(xseq(k))) - yc) < 1 / (1 + j)")
                                          (("1"
                                            (NAME "yseq"
                                                  "LAMBDA (jj:nat): choose({k:posnat|k>=jj+1 AND  real_defs.abs(Im(a(xseq(k))) - yc) < 1 / (2 + jj)})")
                                            (("1" (INST + "yseq")
                                              (("1" (SKEEP)
                                                (("1" (ASSERT)
                                                  (("1" (SPLIT)
                                                    (("1" (TYPEPRED "yseq(j)")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (TYPEPRED "yseq(j)")
                                                      (("2"
                                                        (CASE
                                                            "1/(2+j) < 1/(1+j)")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (CROSS-MULT 1)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE 2)
                                              (("2" (SKEEP)
                                                (("2" (EXPAND "nonempty?" 1)
                                                  (("2" (EXPAND "empty?")
                                                    (("2" (EXPAND "member")
                                                      (("2" (INST -2 "jj+1")
                                                        (("2" (SKOSIMP*)
                                                          (("2" (INST - "k!1")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE 2)
                                            (("2" (TYPEPRED "yc")
                                              (("2" (SKEEP)
                                                (("2"
                                                  (EXPAND "least_upper_bound?")
                                                  (("2" (FLATTEN)
                                                    (("2"
                                                      (NAME "epsil" "1/(1+j)")
                                                      (("2" (REPLACE -1)
                                                        (("2"
                                                          (CASE
                                                              "NOT epsil > 0")
                                                          (("1"
                                                            (EXPAND "epsil" 1)
                                                            (("1"
                                                              (CROSS-MULT 1)
                                                              NIL NIL))
                                                            NIL)
                                                           ("2"
                                                            (INST -
                                                             "yc - epsil/2")
                                                            (("2" (ASSERT)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (EXPAND
                                                                   "upper_bound?"
                                                                   1)
                                                                  (("2"
                                                                    (SKOSIMP*)
                                                                    (("2"
                                                                      (TYPEPRED
                                                                       "s!1")
                                                                      (("2"
                                                                        (EXPAND
                                                                         "yset"
                                                                         -1)
                                                                        (("2"
                                                                          (SKOSIMP*)
                                                                          (("2"
                                                                            (COPY
                                                                             -4)
                                                                            (("2"
                                                                              (EXPAND
                                                                               "upper_bound?"
                                                                               -1)
                                                                              (("2"
                                                                                (INST
                                                                                 -
                                                                                 "s!1")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (CASE
                                                                                        "yset(s!1 + epsil/2)")
                                                                                    (("1"
                                                                                      (COPY
                                                                                       -6)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "upper_bound?"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (INST
                                                                                           -
                                                                                           "s!1 + epsil/2")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "yset"
                                                                                         1)
                                                                                        (("2"
                                                                                          (INST
                                                                                           +
                                                                                           "max(j+2,N!1+2)")
                                                                                          (("2"
                                                                                            (SKOLEM
                                                                                             1
                                                                                             "q")
                                                                                            (("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (INST
                                                                                                 +
                                                                                                 "q")
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -
                                                                                                   "q")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (NAME
                                                                                                       "V"
                                                                                                       "Im(a(xseq(q)))")
                                                                                                      (("1"
                                                                                                        (REPLACE
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (HIDE-ALL-BUT
                                                                                                             (-3
                                                                                                              -4
                                                                                                              -5
                                                                                                              1
                                                                                                              2
                                                                                                              3))
                                                                                                            (("1"
                                                                                                              (REVEAL
                                                                                                               "hyp1")
                                                                                                              (("1"
                                                                                                                (INST
                                                                                                                 -
                                                                                                                 "s!1"
                                                                                                                 "yc"
                                                                                                                 "V"
                                                                                                                 "epsil")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (ASSERT)
                                  (("2" (SPLIT)
                                    (("1" (EXPAND "nonempty?" 1)
                                      (("1" (EXPAND "empty?")
                                        (("1" (INST - "-K-1")
                                          (("1" (EXPAND "member")
                                            (("1" (EXPAND "yset" 1)
                                              (("1" (INST + "0")
                                                (("1" (SKEEP)
                                                  (("1" (HIDE -1)
                                                    (("1"
                                                      (HIDE
                                                       (-1 -2 -3 -4 -5 -6))
                                                      (("1" (INST - "xseq(j)")
                                                        (("1"
                                                          (NAME "z"
                                                                "a(xseq(j))")
                                                          (("1" (REPLACES -1)
                                                            (("1"
                                                              (REWRITE
                                                               "abs_def")
                                                              (("1"
                                                                (LEMMA "sq_le")
                                                                (("1" (INST?)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "sq.sq(Im(z))>=sq.sq(K+1)")
                                                                      (("1"
                                                                        (LEMMA
                                                                         "sq_gt")
                                                                        (("1"
                                                                          (INST
                                                                           -
                                                                           "K+1"
                                                                           "K")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE
                                                                         -)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sq_ge")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "real_defs.abs(Im(z))"
                                                                             "K+1")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE (-1 -2 -3 -4 -5 -6))
                                      (("2" (EXPAND "bounded_above?")
                                        (("2" (INST + "K+1")
                                          (("2" (EXPAND "upper_bound?")
                                            (("2" (SKEEP)
                                              (("2" (TYPEPRED "s")
                                                (("2" (EXPAND "yset")
                                                  (("2" (SKOSIMP*)
                                                    (("2" (INST - "N!1")
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (INST - "xseq(N!1)")
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (LEMMA "sq_ge")
                                                              (("2" (INST?)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "sq_gt")
                                                                    (("2"
                                                                      (INST -
                                                                       "s"
                                                                       "1+K")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sq_gt")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "real_defs.abs(Im(a(xseq(N!1))))"
                                                                             "1+K")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (CASE
                                                                                    "abs(a(xseq(N!1))) >= real_defs.abs(Im(a(xseq(N!1))))")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   -)
                                                                                  (("2"
                                                                                    (REWRITE
                                                                                     "abs_def")
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "sq_ge")
                                                                                      (("2"
                                                                                        (INST?)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2"
                            (CASE
                                "FORALL (j:posnat): EXISTS (k:posnat): k>=j AND real_defs.abs(Re(a(k)) - xc) < 1 / (1 + j)")
                            (("1"
                              (NAME "xseq"
                                    "LAMBDA (j:nat): choose({k:posnat | k >=j+1 AND real_defs.abs(Re(a(k)) - xc) < 1 / (2 + j)})")
                              (("1" (INST + "xseq")
                                (("1" (SKEEP)
                                  (("1" (TYPEPRED "xseq(j)")
                                    (("1" (ASSERT)
                                      (("1" (CASE "1/(2+j)<1/(1+j)")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (CROSS-MULT 1) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (SKEEP)
                                  (("2" (INST - "1+j")
                                    (("2" (SKOSIMP*)
                                      (("2" (ASSERT)
                                        (("2" (EXPAND "nonempty?")
                                          (("2" (EXPAND "empty?" -1)
                                            (("2" (INST - "k!1")
                                              (("2" (EXPAND "member")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 2)
                              (("2" (SKEEP)
                                (("2" (NAME "epsil" "1/(1+j)")
                                  (("2" (REPLACE -1)
                                    (("2" (CASE "NOT epsil>0")
                                      (("1" (EXPAND "epsil" 1)
                                        (("1" (CROSS-MULT 1) NIL NIL)) NIL)
                                       ("2" (TYPEPRED "xc")
                                        (("2" (EXPAND "least_upper_bound?")
                                          (("2" (FLATTEN)
                                            (("2" (INST - "xc-epsil/2")
                                              (("2" (ASSERT)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (EXPAND "upper_bound?" 1)
                                                    (("2" (SKOSIMP*)
                                                      (("2"
                                                        (EXPAND "upper_bound?"
                                                                -1)
                                                        (("2"
                                                          (INST -
                                                           "s!1+epsil/2")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (EXPAND "xset" 1)
                                                            (("2"
                                                              (TYPEPRED "s!1")
                                                              (("2"
                                                                (EXPAND "xset"
                                                                        -1)
                                                                (("2"
                                                                  (SKOSIMP*)
                                                                  (("2"
                                                                    (INST +
                                                                     "max(j+2,N!1+2)")
                                                                    (("2"
                                                                      (SKOLEM 1
                                                                       "q")
                                                                      (("2"
                                                                        (INST +
                                                                         "q")
                                                                        (("1"
                                                                          (INST
                                                                           -
                                                                           "q")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (CASE
                                                                                      "NOT upper_bound?(xc,xset)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (EXPAND
                                                                                     "upper_bound?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -
                                                                                       "s!1")
                                                                                      (("2"
                                                                                        (HIDE-ALL-BUT
                                                                                         (-1
                                                                                          -2
                                                                                          1
                                                                                          2
                                                                                          3))
                                                                                        (("2"
                                                                                          (NAME
                                                                                           "V"
                                                                                           "Re(a(q))")
                                                                                          (("2"
                                                                                            (REPLACE
                                                                                             -1)
                                                                                            (("2"
                                                                                              (HIDE
                                                                                               -1)
                                                                                              (("2"
                                                                                                (REVEAL
                                                                                                 "hyp1")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -
                                                                                                   "s!1"
                                                                                                   "xc"
                                                                                                   "V"
                                                                                                   "epsil")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (SPLIT)
                    (("1" (EXPAND "nonempty?")
                      (("1" (EXPAND "empty?")
                        (("1" (INST - "-K-1")
                          (("1" (HIDE -1)
                            (("1" (EXPAND "member")
                              (("1" (EXPAND "xset")
                                (("1" (INST + "0")
                                  (("1" (SKEEP)
                                    (("1" (HIDE -1)
                                      (("1" (INST - "j")
                                        (("1" (LEMMA "sq_le")
                                          (("1" (INST?)
                                            (("1" (ASSERT)
                                              (("1" (REWRITE "abs_def" -1)
                                                (("1" (ASSERT)
                                                  (("1" (CASE "-Re(a(j))<=K")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (LEMMA "sq_le")
                                                      (("2"
                                                        (INST - "-Re(a(j))"
                                                         "K")
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND "sq" -1 2)
                                                            (("2"
                                                              (EXPAND "sq" 1 1)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE -1)
                      (("2" (EXPAND "bounded_above?")
                        (("2" (INST + "K+1")
                          (("2" (EXPAND "upper_bound?")
                            (("2" (SKOSIMP*)
                              (("2" (TYPEPRED "s!1")
                                (("2" (EXPAND "xset" -1)
                                  (("2" (SKOSIMP*)
                                    (("2" (INST - "N!1")
                                      (("2" (ASSERT)
                                        (("2" (INST - "N!1")
                                          (("2" (ASSERT)
                                            (("2" (NAME "V" "Re(a(N!1))")
                                              (("2" (REWRITE "abs_def")
                                                (("2"
                                                  (REWRITE "sq_le" -3 :DIR RL)
                                                  (("2" (LEMMA "sq_le")
                                                    (("2"
                                                      (INST - "Re(a(N!1))" "K")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs_triangle| FORMULA-DECL NIL |polar| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|abs_def| FORMULA-DECL NIL |polar| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sq_gt| FORMULA-DECL NIL |sq| |reals|)
    (|sq_ge| FORMULA-DECL NIL |sq| |reals|)
    (|sq_abs| FORMULA-DECL NIL |sq| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq_le| FORMULA-DECL NIL |sq| |reals|)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL))
   NIL)
  (|complex_disk_complete-1| |nil| 3596305839
   ("" (SKEEP)
    ((""
      (NAME "xset"
            "{r:real | EXISTS (N:nat): FORALL (j:nat): j>=N IMPLIES Re(a(j))>=r}")
      (("" (CASE "nonempty?[real](xset) AND bounded_below?(xset)")
        (("1" (FLATTEN)
          (("1" (ASSERT)
            (("1" (NAME "xc" "glb(xset)")
              (("1"
                (CASE
                    "EXISTS (xseq:[nat->nat]): (FORALL (j:posnat): xseq(j)>=j AND real_defs.abs(Re(a(xseq(j)))-xc)<1/(1+j))")
                (("1" (SKEEP -)
                  (("1"
                    (NAME "yset"
                          "{r:real | EXISTS (N:nat): FORALL (j:nat): j>=N IMPLIES Im(a(xseq(j)))>=r}")
                    (("1"
                      (CASE "nonempty?[real](yset) AND bounded_below?(yset)")
                      (("1" (FLATTEN)
                        (("1" (NAME "yc" "glb(yset)")
                          (("1" (NAME "cc" "xc + yc*i")
                            (("1"
                              (CASE
                                  "EXISTS (yseq:[nat->nat]): (FORALL (j:posnat): yseq(j)>=j AND real_defs.abs(Im(a(xseq(yseq(j))))-yc)<1/(1+j))")
                              (("1" (SKEEP -)
                                (("1" (ASSERT)
                                  (("1"
                                    (CASE
                                        "FORALL (j:posnat): abs(cc-a(xseq(yseq(j))))<2/(1+j)")
                                    (("1" (INST + "cc")
                                      (("1"
                                        (CASE
                                            "NOT (FORALL (epsil: posreal, N: nat):
                             EXISTS (j: nat): j > N AND abs(cc - a(j)) < epsil)")
                                        (("1" (HIDE 2)
                                          (("1" (SKEEP)
                                            (("1"
                                              (CASE
                                                  "EXISTS (kk:posnat): 2/(1+kk)<epsil")
                                              (("1" (SKEEP)
                                                (("1"
                                                  (INST +
                                                   "xseq(yseq(max(1+kk,1+N)))")
                                                  (("1" (SPLASH +)
                                                    (("1"
                                                      (INVOKE (NAME "jj" "%1")
                                                       (! -1 1 1 1))
                                                      (("1" (REPLACE -1)
                                                        (("1" (INST - "jj")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (CASE
                                                                  "1/(1+jj) <= 1/(1+kk)")
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2"
                                                                (CROSS-MULT 1)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE -2)
                                                      (("2"
                                                        (INST -
                                                         "max(1+kk,1+N)")
                                                        (("2" (FLATTEN)
                                                          (("2"
                                                            (INST -
                                                             "yseq(max(1+kk,1+N))")
                                                            (("1" (FLATTEN)
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL)
                                                             ("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2"
                                                  (LEMMA "axiom_of_archimedes")
                                                  (("2" (INST - "4/epsil")
                                                    (("2" (SKOSIMP*)
                                                      (("2" (CASE "i!1 <= 0")
                                                        (("1"
                                                          (CASE "4/epsil<=0")
                                                          (("1" (CROSS-MULT -1)
                                                            NIL NIL)
                                                           ("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (INST + "i!1")
                                                          (("1" (CROSS-MULT -1)
                                                            (("1"
                                                              (CROSS-MULT 2)
                                                              NIL NIL))
                                                            NIL)
                                                           ("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (REPLACE -1)
                                          (("2" (ASSERT)
                                            (("2" (INST - "(abs(cc)-K)/2" "1")
                                              (("2" (POSTPONE) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (POSTPONE) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (POSTPONE) NIL NIL))
                              NIL))
                            NIL)
                           ("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (POSTPONE) NIL NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (POSTPONE) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (POSTPONE) NIL NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|cpolynomial_attains_minimum| 0
  (|cpolynomial_attains_minimum-2| |nil| 3709037550
   (""
    (CASE "FORALL (a: [nat -> complex], n: nat): n>0 AND a(n)/=real_(0) IMPLIES
                                                         EXISTS (c):
                                                           FORALL (x): abs(cpolynomial(a, n)(c)) <= abs(cpolynomial(a, n)(x))")
    (("1" (INDUCT "n")
      (("1" (HIDE -)
        (("1" (GRIND) (("1" (INST 1 "complex_(1,0)") NIL NIL)) NIL)) NIL)
       ("2" (SKEEP)
        (("2" (ASSERT)
          (("2" (SKEEP)
            (("2" (CASE "a(1+j)=real_(0)")
              (("1" (CASE "cpolynomial(a,1+j) = cpolynomial(a,j)")
                (("1" (INST - "a") (("1" (REPLACES -1) NIL NIL)) NIL)
                 ("2" (DECOMPOSE-EQUALITY 1)
                  (("2" (LEMMA "cpolynomial_rec")
                    (("2" (INST - "a" "x!1" "j")
                      (("2" (REPLACE -2)
                        (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (INST - "a" "1+j") (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2"
        (CASE "FORALL (a: [nat -> complex], n: nat,K:posreal):
                                                                       n > 0 AND a(n) /= real_(0) IMPLIES
                                                                        (EXISTS (c):
                                                                           FORALL (x): abs(x)<=K IMPLIES
                                                                             abs(cpolynomial(a, n)(c)) <= abs(cpolynomial(a, n)(x)))")
        (("1" (SKEEP)
          (("1" (LEMMA "cpolynomial_limit_infinity")
            (("1" (INST - "abs(cpolynomial(a,n)(real_(0)))+1" "a" "n")
              (("1" (ASSERT)
                (("1" (SKOSIMP*)
                  (("1" (INST - "a" "n" "M!1")
                    (("1" (ASSERT)
                      (("1" (SKOSIMP*)
                        (("1" (INST + "c!1")
                          (("1" (SKEEP)
                            (("1" (INST-CP - "x")
                              (("1" (CASE "abs(c!1)<=M!1")
                                (("1" (ASSERT)
                                  (("1" (INST-CP -4 "real_(0)")
                                    (("1" (INST -4 "x")
                                      (("1" (GROUND)
                                        (("1" (LEMMA "abs_is_0")
                                          (("1" (INST - "real_(0)")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (INST-CP - "c!1")
                                  (("2" (ASSERT)
                                    (("2" (HIDE -1)
                                      (("2" (INST - "real_(0)")
                                        (("2" (GROUND)
                                          (("1" (LEMMA "abs_is_0")
                                            (("1" (INST?)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (LEMMA "abs_is_0")
                                            (("2" (INST?)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (SKEEP)
            (("2"
              (NAME "Aset"
                    "{r:real | EXISTS (y): abs(y)<=K AND abs(cpolynomial(a,n)(y)) = r}")
              (("2" (NAME "minval" "glb(Aset)")
                (("1"
                  (CASE
                      "EXISTS (xseq:[nat->complex]): FORALL (j:nat): abs(xseq(j))<=K AND abs(cpolynomial(a,n)(xseq(j)))<minval+1/(1+j)")
                  (("1" (SKEEP)
                    (("1" (LEMMA "complex_disk_complete")
                      (("1" (INST - "K" "xseq")
                        (("1" (ASSERT)
                          (("1" (SPLIT -)
                            (("1" (SKEEP)
                              (("1" (INST + "c")
                                (("1" (SKEEP)
                                  (("1"
                                    (NAME "myep"
                                          "abs(cpolynomial(a, n)(c)) - abs(cpolynomial(a, n)(x))")
                                    (("1"
                                      (LEMMA "complex_continuous_cpolynomial")
                                      (("1" (INST - "a" "n")
                                        (("1" (EXPAND "complex_continuous?")
                                          (("1" (INST - "c" "myep/16")
                                            (("1" (SKEEP)
                                              (("1"
                                                (LEMMA "axiom_of_archimedes")
                                                (("1" (INST - "16/myep")
                                                  (("1" (SKOLEM - "N")
                                                    (("1"
                                                      (INST - "delta/2" "N")
                                                      (("1" (SKEEP -5)
                                                        (("1" (INST -7 "j")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (INST -
                                                               "xseq(j)")
                                                              (("1" (ASSERT)
                                                                (("1" (FLATTEN)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "1/(1+j) < myep/16")
                                                                      (("1"
                                                                        (CASE
                                                                            "minval<=abs(cpolynomial(a, n)(x))")
                                                                        (("1"
                                                                          (NAME
                                                                           "f"
                                                                           "cpolynomial(a,n)")
                                                                          (("1"
                                                                            (REPLACES
                                                                             -1)
                                                                            (("1"
                                                                              (CASE
                                                                                  "NOT abs(f(xseq(j)))>= abs(f(x))-17*myep/16")
                                                                              (("1"
                                                                                (CASE
                                                                                    "abs(f(xseq(j))) >= abs(f(c))-myep/16")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   2)
                                                                                  (("2"
                                                                                    (HIDE-ALL-BUT
                                                                                     (-4
                                                                                      1))
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "abs_triangle")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -
                                                                                         "f(xseq(j))"
                                                                                         "f(c)-f(xseq(j))")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (CASE
                                                                                    "minval<=abs(f(c))")
                                                                                (("1"
                                                                                  (CASE
                                                                                      "abs(f(xseq(j)))>=abs(f(c))-myep/16")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (HIDE-ALL-BUT
                                                                                     (-6
                                                                                      1))
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "abs_triangle")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -
                                                                                         "f(xseq(j))"
                                                                                         "f(c)-f(xseq(j))")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE-ALL-BUT
                                                                                   1)
                                                                                  (("2"
                                                                                    (TYPEPRED
                                                                                     "minval")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "greatest_lower_bound?")
                                                                                      (("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "lower_bound?")
                                                                                          (("2"
                                                                                            (INST
                                                                                             -
                                                                                             "abs(f(c))")
                                                                                            (("2"
                                                                                              (HIDE-ALL-BUT
                                                                                               1)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "Aset")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   +
                                                                                                   "c")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "f")
                                                                                                    (("2"
                                                                                                      (PROPAX)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE-ALL-BUT
                                                                           1)
                                                                          (("2"
                                                                            (TYPEPRED
                                                                             "minval")
                                                                            (("2"
                                                                              (EXPAND
                                                                               "greatest_lower_bound?")
                                                                              (("2"
                                                                                (FLATTEN)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "lower_bound?")
                                                                                  (("2"
                                                                                    (INST
                                                                                     -
                                                                                     "abs(cpolynomial(a,n)(x))")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "Aset"
                                                                                       1)
                                                                                      (("2"
                                                                                        (INST
                                                                                         +
                                                                                         "x")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (CASE
                                                                              "1/N < myep/16")
                                                                          (("1"
                                                                            (CASE
                                                                                "1/(1+j)<=1/N")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (CROSS-MULT
                                                                               1)
                                                                              (("2"
                                                                                (GROUND)
                                                                                (("2"
                                                                                  (CASE
                                                                                      "16/myep>0")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (CROSS-MULT
                                                                                     1)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (CROSS-MULT
                                                                             1)
                                                                            (("2"
                                                                              (GROUND)
                                                                              (("1"
                                                                                (CROSS-MULT
                                                                                 -2)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (CASE
                                                                                    "16/myep>0")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (CROSS-MULT
                                                                                   1)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (CASE
                                                                                "16/myep>0")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (CROSS-MULT
                                                                               1)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (CASE "16/myep>0")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (CROSS-MULT 1)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SPLIT)
                                              (("1" (CROSS-MULT 1)
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (SKEEP)
                                (("2" (INST - "j") (("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 3)
                    (("2"
                      (CASE
                          "FORALL (j:nat): EXISTS (x:complex): abs(x)<=K AND abs(cpolynomial(a,n)(x))<minval+1/(1+j)")
                      (("1"
                        (NAME "xseq"
                              "LaMBDA (j:nat): choose[complex]({x:complex | abs(x) <= K AND abs(cpolynomial(a, n)(x)) < minval + 1 / (1 + j)})")
                        (("1" (INST + "xseq")
                          (("1" (SKEEP)
                            (("1" (ASSERT)
                              (("1" (TYPEPRED "xseq(j)")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (SKEEP)
                            (("2" (EXPAND "nonempty?")
                              (("2" (EXPAND "empty?")
                                (("2" (INST -2 "j")
                                  (("2" (SKOSIMP*)
                                    (("2" (INST - "x!1")
                                      (("2" (EXPAND "member")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (SKEEP)
                          (("2" (TYPEPRED "minval")
                            (("2" (EXPAND "greatest_lower_bound?")
                              (("2" (FLATTEN)
                                (("2" (INST - "minval+1/(1+j)")
                                  (("2" (ASSERT)
                                    (("2" (CASE "1/(1+j)>0")
                                      (("1" (ASSERT)
                                        (("1" (EXPAND "lower_bound?" 1)
                                          (("1" (SKOSIMP*)
                                            (("1" (TYPEPRED "s!1")
                                              (("1" (EXPAND "Aset" -1)
                                                (("1" (SKOSIMP*)
                                                  (("1" (INST + "y!1")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (CROSS-MULT 1) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 3)
                  (("2" (SPLIT)
                    (("1" (EXPAND "nonempty?")
                      (("1" (EXPAND "empty?")
                        (("1" (EXPAND "member")
                          (("1" (INST - "abs(cpolynomial(a,n)(real_(0)))")
                            (("1" (EXPAND "Aset" 1)
                              (("1" (INST + "real_(0)")
                                (("1" (LEMMA "abs_is_0")
                                  (("1" (INST - "real_(0)")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (EXPAND "bounded_below?")
                      (("2" (INST + "-1")
                        (("2" (EXPAND "lower_bound?")
                          (("2" (SKEEP)
                            (("2" (TYPEPRED "s")
                              (("2" (EXPAND "Aset" -1)
                                (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|complex_disk_complete| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|complex_continuous_cpolynomial| FORMULA-DECL NIL |fundamental_algebra|
     NIL)
    (|complex_continuous?| CONST-DECL "bool" |fundamental_algebra| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|div_mult_pos_ge1| FORMULA-DECL NIL |real_props| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    NIL NIL NIL NIL (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|abs_triangle| FORMULA-DECL NIL |polar| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    NIL NIL NIL NIL NIL (TRUE CONST-DECL "bool" |booleans| NIL)
    (|nzrat_div_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL)
    (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|div_mult_pos_neg_le2| FORMULA-DECL NIL |extra_real_props| NIL)
    (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|div_mult_pos_neg_lt1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|axiom_of_archimedes| FORMULA-DECL NIL |real_props| NIL) NIL
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|glb| CONST-DECL "{x | greatest_lower_bound?(x, SB)}" |bounded_real_defs|
     NIL)
    NIL (|bounded_below?| CONST-DECL "bool" |bounded_real_defs| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|abs_is_0| FORMULA-DECL NIL |polar| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|cpolynomial_limit_infinity| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (* CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL))
   NIL)
  (|cpolynomial_attains_minimum-1| |nil| 3596467418
   (""
    (CASE "FORALL (a: [nat -> complex], n: nat): n>0 AND a(n)/=0 IMPLIES
                                           EXISTS (c):
                                             FORALL (x): abs(cpolynomial(a, n)(c)) <= abs(cpolynomial(a, n)(x))")
    (("1" (INDUCT "n")
      (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)
       ("2" (SKEEP)
        (("2" (ASSERT)
          (("2" (SKEEP)
            (("2" (CASE "a(1+j)=0")
              (("1" (CASE "cpolynomial(a,1+j) = cpolynomial(a,j)")
                (("1" (INST - "a") (("1" (REPLACES -1) NIL NIL)) NIL)
                 ("2" (DECOMPOSE-EQUALITY 1)
                  (("2" (LEMMA "cpolynomial_rec")
                    (("2" (INST - "a" "x!1" "j")
                      (("2" (REPLACE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (INST - "a" "1+j") (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2"
        (CASE "FORALL (a: [nat -> complex], n: nat,K:posreal):
                                                     n > 0 AND a(n) /= 0 IMPLIES
                                                      (EXISTS (c):
                                                         FORALL (x): abs(x)<=K IMPLIES
                                                           abs(cpolynomial(a, n)(c)) <= abs(cpolynomial(a, n)(x)))")
        (("1" (SKEEP)
          (("1" (LEMMA "cpolynomial_limit_infinity")
            (("1" (INST - "abs(cpolynomial(a,n)(0))+1" "a" "n")
              (("1" (ASSERT)
                (("1" (SKOSIMP*)
                  (("1" (INST - "a" "n" "M!1")
                    (("1" (ASSERT)
                      (("1" (SKOSIMP*)
                        (("1" (INST + "c!1")
                          (("1" (SKEEP)
                            (("1" (INST-CP - "x")
                              (("1" (CASE "abs(c!1)<=M!1")
                                (("1" (ASSERT)
                                  (("1" (INST-CP -4 "0")
                                    (("1" (INST -4 "x")
                                      (("1" (GROUND)
                                        (("1" (LEMMA "abs_is_0")
                                          (("1" (INST - "0")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (INST-CP - "c!1")
                                  (("2" (ASSERT)
                                    (("2" (HIDE -1)
                                      (("2" (INST - "0")
                                        (("2" (GROUND)
                                          (("1" (LEMMA "abs_is_0")
                                            (("1" (INST?)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (LEMMA "abs_is_0")
                                            (("2" (INST?)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (SKEEP)
            (("2"
              (NAME "Aset"
                    "{r:real | EXISTS (y): abs(y)<=K AND abs(cpolynomial(a,n)(y)) = r}")
              (("2" (NAME "minval" "glb(Aset)")
                (("1"
                  (CASE
                      "EXISTS (xseq:[nat->complex]): FORALL (j:nat): abs(xseq(j))<=K AND abs(cpolynomial(a,n)(xseq(j)))<minval+1/(1+j)")
                  (("1" (SKEEP)
                    (("1" (LEMMA "complex_disk_complete")
                      (("1" (INST - "K" "xseq")
                        (("1" (ASSERT)
                          (("1" (SPLIT -)
                            (("1" (SKEEP)
                              (("1" (INST + "c")
                                (("1" (SKEEP)
                                  (("1"
                                    (NAME "myep"
                                          "abs(cpolynomial(a, n)(c)) - abs(cpolynomial(a, n)(x))")
                                    (("1"
                                      (LEMMA "complex_continuous_cpolynomial")
                                      (("1" (INST - "a" "n")
                                        (("1" (EXPAND "complex_continuous?")
                                          (("1" (INST - "c" "myep/16")
                                            (("1" (SKEEP)
                                              (("1"
                                                (LEMMA "axiom_of_archimedes")
                                                (("1" (INST - "16/myep")
                                                  (("1" (SKOLEM - "N")
                                                    (("1"
                                                      (INST - "delta/2" "N")
                                                      (("1" (SKEEP -5)
                                                        (("1" (INST -7 "j")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (INST -
                                                               "xseq(j)")
                                                              (("1" (ASSERT)
                                                                (("1" (FLATTEN)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "1/(1+j) < myep/16")
                                                                      (("1"
                                                                        (CASE
                                                                            "minval<=abs(cpolynomial(a, n)(x))")
                                                                        (("1"
                                                                          (NAME
                                                                           "f"
                                                                           "cpolynomial(a,n)")
                                                                          (("1"
                                                                            (REPLACES
                                                                             -1)
                                                                            (("1"
                                                                              (CASE
                                                                                  "NOT abs(f(xseq(j)))>= abs(f(x))-17*myep/16")
                                                                              (("1"
                                                                                (CASE
                                                                                    "abs(f(xseq(j))) >= abs(f(c))-myep/16")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   2)
                                                                                  (("2"
                                                                                    (HIDE-ALL-BUT
                                                                                     (-4
                                                                                      1))
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "abs_triangle")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -
                                                                                         "f(xseq(j))"
                                                                                         "f(c)-f(xseq(j))")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (CASE
                                                                                    "minval<=abs(f(c))")
                                                                                (("1"
                                                                                  (CASE
                                                                                      "abs(f(xseq(j)))>=abs(f(c))-myep/16")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (HIDE-ALL-BUT
                                                                                     (-6
                                                                                      1))
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "abs_triangle")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -
                                                                                         "f(xseq(j))"
                                                                                         "f(c)-f(xseq(j))")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE-ALL-BUT
                                                                                   1)
                                                                                  (("2"
                                                                                    (TYPEPRED
                                                                                     "minval")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "greatest_lower_bound?")
                                                                                      (("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "lower_bound?")
                                                                                          (("2"
                                                                                            (INST
                                                                                             -
                                                                                             "abs(f(c))")
                                                                                            (("2"
                                                                                              (HIDE-ALL-BUT
                                                                                               1)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "Aset")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   +
                                                                                                   "c")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "f")
                                                                                                    (("2"
                                                                                                      (PROPAX)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE-ALL-BUT
                                                                           1)
                                                                          (("2"
                                                                            (TYPEPRED
                                                                             "minval")
                                                                            (("2"
                                                                              (EXPAND
                                                                               "greatest_lower_bound?")
                                                                              (("2"
                                                                                (FLATTEN)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "lower_bound?")
                                                                                  (("2"
                                                                                    (INST
                                                                                     -
                                                                                     "abs(cpolynomial(a,n)(x))")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "Aset"
                                                                                       1)
                                                                                      (("2"
                                                                                        (INST
                                                                                         +
                                                                                         "x")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (CASE
                                                                              "1/N < myep/16")
                                                                          (("1"
                                                                            (CASE
                                                                                "1/(1+j)<=1/N")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (CROSS-MULT
                                                                               1)
                                                                              (("2"
                                                                                (GROUND)
                                                                                (("2"
                                                                                  (CASE
                                                                                      "16/myep>0")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (CROSS-MULT
                                                                                     1)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (CROSS-MULT
                                                                             1)
                                                                            (("2"
                                                                              (GROUND)
                                                                              (("1"
                                                                                (CROSS-MULT
                                                                                 -2)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (CASE
                                                                                    "16/myep>0")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (CROSS-MULT
                                                                                   1)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (CASE
                                                                                "16/myep>0")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (CROSS-MULT
                                                                               1)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (CASE "16/myep>0")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (CROSS-MULT 1)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SPLIT)
                                              (("1" (CROSS-MULT 1)
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (SKEEP)
                                (("2" (INST - "j") (("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 3)
                    (("2"
                      (CASE
                          "FORALL (j:nat): EXISTS (x:complex): abs(x)<=K AND abs(cpolynomial(a,n)(x))<minval+1/(1+j)")
                      (("1"
                        (NAME "xseq"
                              "LaMBDA (j:nat): choose({x:complex | abs(x) <= K AND abs(cpolynomial(a, n)(x)) < minval + 1 / (1 + j)})")
                        (("1" (INST + "xseq")
                          (("1" (SKEEP)
                            (("1" (ASSERT)
                              (("1" (TYPEPRED "xseq(j)")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (SKEEP)
                            (("2" (EXPAND "nonempty?")
                              (("2" (EXPAND "empty?")
                                (("2" (INST -2 "j")
                                  (("2" (SKOSIMP*)
                                    (("2" (INST - "x!1")
                                      (("2" (EXPAND "member")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (SKEEP)
                          (("2" (TYPEPRED "minval")
                            (("2" (EXPAND "greatest_lower_bound?")
                              (("2" (FLATTEN)
                                (("2" (INST - "minval+1/(1+j)")
                                  (("2" (ASSERT)
                                    (("2" (CASE "1/(1+j)>0")
                                      (("1" (ASSERT)
                                        (("1" (EXPAND "lower_bound?" 1)
                                          (("1" (SKOSIMP*)
                                            (("1" (TYPEPRED "s!1")
                                              (("1" (EXPAND "Aset" -1)
                                                (("1" (SKOSIMP*)
                                                  (("1" (INST + "y!1")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (CROSS-MULT 1) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 3)
                  (("2" (SPLIT)
                    (("1" (EXPAND "nonempty?")
                      (("1" (EXPAND "empty?")
                        (("1" (EXPAND "member")
                          (("1" (INST - "abs(cpolynomial(a,n)(0))")
                            (("1" (EXPAND "Aset" 1)
                              (("1" (INST + "0")
                                (("1" (LEMMA "abs_is_0")
                                  (("1" (INST - "0") (("1" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (EXPAND "bounded_below?")
                      (("2" (INST + "-1")
                        (("2" (EXPAND "lower_bound?")
                          (("2" (SKEEP)
                            (("2" (TYPEPRED "s")
                              (("2" (EXPAND "Aset" -1)
                                (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs_triangle| FORMULA-DECL NIL |polar| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|abs_is_0| FORMULA-DECL NIL |polar| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL))
   SHOSTAK))
 (|fundamental_algebra| 0
  (|fundamental_algebra-4| "" 3790337374
   ("" (SKEEP)
    (("" (CASE "n = 1")
      (("1" (REPLACES -1)
        (("1" (EXPAND "cpolynomial")
          (("1" (EXPAND "csigma")
            (("1" (EXPAND "*")
              (("1" (EXPAND "csigma")
                (("1" (EXPAND "cpow")
                  (("1" (EXPAND "cpow")
                    (("1" (INST + "-a(0)/a(1)")
                      (("1" (GRIND)
                        (("1"
                          (CASE
                              "Im(a(0)) = Im(a(0)) *(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))/(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND-REALS) NIL NIL))
                            NIL))
                          NIL)
                         ("2"
                          (CASE
                              "Re(a(0)) = Re(a(0))*(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))/(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND-REALS) NIL NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (GRIND) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LABEL "n1" 1)
        (("2" (HIDE "n1")
          (("2" (LEMMA "complex_poly_shift")
            (("2"
              (CASE "FORALL (a: [nat -> complex], c: complex, n: nat):
                          EXISTS (b):
                            (FORALL (i:nat): i>n IMPLIES b(i)=real_(0)) AND
                            b(0) = cpolynomial(a, n)(c) AND
                             (FORALL (x): cpolynomial(a, n)(x) = cpolynomial(b, n)(x - c))")
              (("1" (HIDE -2)
                (("1" (LEMMA "cpolynomial_attains_minimum")
                  (("1" (INST - "a" "n")
                    (("1" (SKEEP -)
                      (("1" (INST + "c")
                        (("1" (ASSERT)
                          (("1" (INST - "a" "c" "n")
                            (("1" (SKEEP -2)
                              (("1" (LABEL "newlem" -2)
                                (("1" (LEMMA "abs_is_0")
                                  (("1" (HIDE "newlem")
                                    (("1" (INST?)
                                      (("1" (ASSERT)
                                        (("1"
                                          (CASE
                                              "NOT EXISTS (k:posnat): k<=n AND b(k)/=real_(0) AND FORALL (i:posnat): i<k IMPLIES b(i)=real_(0)")
                                          (("1"
                                            (CASE
                                                "FORALL (k:posnat): k<=n IMPLIES b(k)=real_(0)")
                                            (("1"
                                              (CASE
                                                  "FORALL (x): cpolynomial(a,n)(x)=cpolynomial(a,n)(c)")
                                              (("1"
                                                (LEMMA
                                                 "cpolynomial_limit_infinity")
                                                (("1"
                                                  (INST -
                                                   "abs(cpolynomial(a,n)(c)) + 2"
                                                   "a" "n")
                                                  (("1" (ASSERT)
                                                    (("1" (SKOSIMP*)
                                                      (("1"
                                                        (INST - "real_(M!1)")
                                                        (("1"
                                                          (CASE
                                                              "NOT abs(complex_(M!1, 0)) >= M!1")
                                                          (("1"
                                                            (HIDE-ALL-BUT 1)
                                                            (("1" (GRIND) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2" (HIDE -1)
                                                              (("2"
                                                                (GRIND :EXCLUDE
                                                                 ("cpolynomial"))
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (CASE
                                                    "FORALL (j:nat,x): j+1<=n IMPLIES cpolynomial(b,j+1)(x-c) = cpolynomial(a,n)(c)")
                                                (("1" (SKEEP)
                                                  (("1" (INST -5 "x")
                                                    (("1" (INST - "n-1" "x")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (INDUCT "j")
                                                  (("1" (ASSERT)
                                                    (("1" (SKEEP)
                                                      (("1" (INST - "1")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (EXPAND
                                                             "cpolynomial" 1 1)
                                                            (("1"
                                                              (EXPAND "csigma")
                                                              (("1"
                                                                (EXPAND
                                                                 "csigma")
                                                                (("1"
                                                                  (EXPAND "*")
                                                                  (("1"
                                                                    (REPLACE
                                                                     -1)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "cpow"
                                                                         1)
                                                                        (("1"
                                                                          (HIDE-ALL-BUT
                                                                           (-3
                                                                            1))
                                                                          (("1"
                                                                            (GRIND
                                                                             :EXCLUDE
                                                                             "cpolynomial")
                                                                            (("1"
                                                                              (DECOMPOSE-EQUALITY
                                                                               1)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKOLEM 1 "jj")
                                                    (("2" (FLATTEN)
                                                      (("2" (ASSERT)
                                                        (("2" (SKEEP)
                                                          (("2" (INST - "x")
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (REWRITE
                                                                 "cpolynomial_rec"
                                                                 1)
                                                                (("2"
                                                                  (INST -
                                                                   "2+jj")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (REPLACE
                                                                       -3)
                                                                      (("2"
                                                                        (HIDE-ALL-BUT
                                                                         (-1
                                                                          1))
                                                                        (("2"
                                                                          (GRIND
                                                                           :EXCLUDE
                                                                           "cpolynomial")
                                                                          (("2"
                                                                            (DECOMPOSE-EQUALITY
                                                                             1)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2"
                                              (CASE
                                                  "FORALL (kk,jj:nat): kk<=jj AND 1+jj <= n IMPLIES b(1+kk) = real_(0)")
                                              (("1" (SKEEP)
                                                (("1" (INST - "k-1" "k-1")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2" (INDUCT "jj")
                                                  (("1" (SKEEP)
                                                    (("1" (INST + "1")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKEEP)
                                                    (("2" (SKEEP)
                                                      (("2"
                                                        (CASE "NOT kk = 1+j")
                                                        (("1" (INST - "kk")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (REPLACES -1)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (INST + "2+j")
                                                              (("2" (ASSERT)
                                                                (("2" (SKEEP)
                                                                  (("2"
                                                                    (INST -
                                                                     "i-1")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LABEL "hyp1" -1)
                                            (("2" (SKEEP -)
                                              (("2" (DELABEL "hyp1")
                                                (("2" (LABEL "hyp1" -2)
                                                  (("2"
                                                    (LEMMA " root_complex_def")
                                                    (("2"
                                                      (CASE "-b(k)=real_(0)")
                                                      (("1"
                                                        (CASE
                                                            "-(-b(k)) = real_(0)")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (HIDE-ALL-BUT
                                                             (-1 1))
                                                            (("1" (GRIND)
                                                              (("1"
                                                                (DECOMPOSE-EQUALITY
                                                                 1)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (REPLACES -1)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (HIDE-ALL-BUT 1)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (INST -
                                                         "cpolynomial(a,n)(c)/(-b(k))"
                                                         "k")
                                                        (("1"
                                                          (NAME "gamma"
                                                                "root_complex(cpolynomial(a, n)(c) / (-b(k)))(k)")
                                                          (("1" (REPLACE -1)
                                                            (("1"
                                                              (NAME "z"
                                                                    "LAMBDA (t:real): c + t*gamma")
                                                              (("1"
                                                                (CASE
                                                                    "EXISTS (t:posreal): t<1 AND sigma(k+1,n,LAMBDA (i:nat): abs(b(i))*t^i*abs(gamma)^i) < t^k * abs(cpolynomial(a,n)(c))")
                                                                (("1" (SKEEP -)
                                                                  (("1"
                                                                    (LABEL
                                                                     "bigsig"
                                                                     -2)
                                                                    (("1"
                                                                      (LABEL
                                                                       "tlt1"
                                                                       -1)
                                                                      (("1"
                                                                        (CASE
                                                                            "0<t^k AND t^k < 1")
                                                                        (("1"
                                                                          (LABEL
                                                                           "ttp"
                                                                           -1)
                                                                          (("1"
                                                                            (HIDE
                                                                             "ttp")
                                                                            (("1"
                                                                              (HIDE
                                                                               "tlt1")
                                                                              (("1"
                                                                                (CASE
                                                                                    "abs(cpolynomial(a,n)(z(t))) < abs(cpolynomial(a,n)(c))")
                                                                                (("1"
                                                                                  (INST
                                                                                   -8
                                                                                   "z(t)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (NAME
                                                                                   "pzo"
                                                                                   "cpolynomial(a, n)(c)")
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     -1)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "csigma_real_triangle")
                                                                                      (("2"
                                                                                        (INST-CP
                                                                                         -11
                                                                                         "z(t)")
                                                                                        (("2"
                                                                                          (REPLACE
                                                                                           -12
                                                                                           +)
                                                                                          (("2"
                                                                                            (CASE
                                                                                                "NOT z(t) - c = t*gamma")
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "z"
                                                                                               1)
                                                                                              (("1"
                                                                                                (HIDE-ALL-BUT
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (GRIND)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (REPLACES
                                                                                               -1)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (NAME
                                                                                                   "FF"
                                                                                                   "LAMBDA (i:nat): IF i<=k OR i>n THEN real_(0) ELSE b(i)*t^i*cpow(gamma)(i) ENDIF")
                                                                                                  (("2"
                                                                                                    (CASE
                                                                                                        "cpolynomial(b,n)(t*gamma) = pzo + b(k)*cpow(t*gamma)(k) + csigma(FF,n)")
                                                                                                    (("1"
                                                                                                      (REPLACES
                                                                                                       -1
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (LEMMA
                                                                                                         "abs_triangle")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -
                                                                                                             "b(k) * cpow(t * gamma)(k) +pzo"
                                                                                                             "csigma(FF,n)")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (INVOKE
                                                                                                                 (CASE
                                                                                                                     "%1 < abs(pzo)")
                                                                                                                 (!
                                                                                                                  -1
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (CASE
                                                                                                                      "pzo + b(k) * cpow(complex_(t, 0) * gamma)(k) + csigma(FF, n) = b(k) * cpow(complex_(t, 0) * gamma)(k) + pzo + csigma(FF, n)")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (HIDE-ALL-BUT
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (GRIND
                                                                                                                       :EXCLUDE
                                                                                                                       ("cpow"
                                                                                                                        "csigma"))
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (HIDE
                                                                                                                   (-1
                                                                                                                    2))
                                                                                                                  (("2"
                                                                                                                    (REWRITE
                                                                                                                     "cpow_mult")
                                                                                                                    (("2"
                                                                                                                      (EXPAND
                                                                                                                       "gamma"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (REWRITE
                                                                                                                         "root_complex_def")
                                                                                                                        (("2"
                                                                                                                          (LEMMA
                                                                                                                           "pzo")
                                                                                                                          (("2"
                                                                                                                            (REPLACE
                                                                                                                             -1
                                                                                                                             +
                                                                                                                             :DIR
                                                                                                                             RL)
                                                                                                                            (("2"
                                                                                                                              (CASE
                                                                                                                                  "NOT b(k) * (cpow(real_(t))(k) * (pzo / (-b(k)))) + pzo = pzo*(1-t^k)")
                                                                                                                              (("1"
                                                                                                                                (HIDE
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (CASE
                                                                                                                                      "NOT pzo/(-b(k)) = (-pzo)/b(k)")
                                                                                                                                  (("1"
                                                                                                                                    (CROSS-MULT
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (HIDE-ALL-BUT
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (GRIND)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (REPLACES
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (CASE
                                                                                                                                          "NOT (-pzo) / b(k) = (-pzo)*(1/b(k))")
                                                                                                                                      (("1"
                                                                                                                                        (HIDE-ALL-BUT
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (GRIND)
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL)
                                                                                                                                       ("2"
                                                                                                                                        (REPLACES
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("2"
                                                                                                                                            (CASE
                                                                                                                                                "cpow(real_(t))(k) = real_(t)^k")
                                                                                                                                            (("1"
                                                                                                                                              (REPLACES
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                   (1
                                                                                                                                                    2
                                                                                                                                                    3))
                                                                                                                                                  (("1"
                                                                                                                                                    (LEMMA
                                                                                                                                                     "complex_commutative_mult")
                                                                                                                                                    (("1"
                                                                                                                                                      (INST
                                                                                                                                                       -
                                                                                                                                                       "(-pzo)"
                                                                                                                                                       _)
                                                                                                                                                      (("1"
                                                                                                                                                        (INST?)
                                                                                                                                                        (("1"
                                                                                                                                                          (REPLACES
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (CASE
                                                                                                                                                                "NOT FORALL (x,y,z:complex): x * (y * z) = (x * y) * z")
                                                                                                                                                            (("1"
                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (GRIND)
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL)
                                                                                                                                                             ("2"
                                                                                                                                                              (LABEL
                                                                                                                                                               "am"
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (COPY
                                                                                                                                                                 "am")
                                                                                                                                                                (("2"
                                                                                                                                                                  (HIDE
                                                                                                                                                                   "am")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (INST
                                                                                                                                                                     -
                                                                                                                                                                     "real_(t)^k"
                                                                                                                                                                     "complex_(1,0)/b(k)"
                                                                                                                                                                     "(-pzo)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (REPLACES
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (LEMMA
                                                                                                                                                                         "complex_commutative_mult")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (INST
                                                                                                                                                                           -
                                                                                                                                                                           "real_(t)^k"
                                                                                                                                                                           _)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (INST?)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (REPLACES
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (REVEAL
                                                                                                                                                                                 "am")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (COPY
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (HIDE
                                                                                                                                                                                     "am")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (INST?)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (REPLACES
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (REVEAL
                                                                                                                                                                                           "am")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (COPY
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (HIDE
                                                                                                                                                                                               "am")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (INST?)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (REPLACES
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (HIDE-ALL-BUT
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (CASE
                                                                                                                                                                                                          "complex_(1-t^k,0) = complex_(1,0) - complex_(t,0)^k")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (REPLACES
                                                                                                                                                                                                         -1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (GROUND)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (CASE
                                                                                                                                                                                                                "(b(k) * (complex_(1, 0) / b(k))) = complex_(1,0)")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (REWRITE
                                                                                                                                                                                                               -1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (GRIND
                                                                                                                                                                                                                 :EXCLUDE
                                                                                                                                                                                                                 "^")
                                                                                                                                                                                                                NIL
                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                              NIL)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (GRIND)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (GRIND-REALS)
                                                                                                                                                                                                                  NIL
                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                        NIL)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (GRIND-REALS)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (HIDE-ALL-BUT
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (GRIND
                                                                                                                                                                                                             :EXCLUDE
                                                                                                                                                                                                             "^")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (GRIND-REALS)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (GRIND
                                                                                                                                                                                                                 :EXCLUDE
                                                                                                                                                                                                                 "^")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (CASE
                                                                                                                                                                                                                      "FORALL(k:posint) : (# Re := t, Im := 0 #) ^ k = (# Re:= t^k, Im := 0 #)")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (INST
                                                                                                                                                                                                                       -1
                                                                                                                                                                                                                       "k")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (REWRITE
                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (ASSERT)
                                                                                                                                                                                                                            NIL
                                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                                    NIL)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (HIDE
                                                                                                                                                                                                                     2)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (INDUCT
                                                                                                                                                                                                                       "k")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                                                        NIL
                                                                                                                                                                                                                        NIL)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                                                        NIL
                                                                                                                                                                                                                        NIL)
                                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                                        (SKEEP*)
                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                          (EXPAND
                                                                                                                                                                                                                           "^"
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                            (GRIND
                                                                                                                                                                                                                             :EXCLUDE
                                                                                                                                                                                                                             "^")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (EXPAND
                                                                                                                                                                                                                               "^"
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (EXPAND
                                                                                                                                                                                                                                 "^"
                                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (EXPAND
                                                                                                                                                                                                                                   "expt"
                                                                                                                                                                                                                                   2
                                                                                                                                                                                                                                   2)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (PROPAX)
                                                                                                                                                                                                                                    NIL
                                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                                              NIL)
                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                              (TYPEPRED
                                                                                                                                                                                                                               "j")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (CASE
                                                                                                                                                                                                                                    "j=0")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (GRIND)
                                                                                                                                                                                                                                    NIL
                                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                                  NIL)
                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                  (GRIND)
                                                                                                                                                                                                                                  NIL
                                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                              NIL)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (CASE
                                                                                                                                                                                                                  "FORALL(k:posint): (# Re := t, Im := 0 #) ^ k = (# Re := t^k, Im := 0 #)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (ASSERT)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (INST
                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                   "k")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (GRIND
                                                                                                                                                                                                                       :EXCLUDE
                                                                                                                                                                                                                       "^")
                                                                                                                                                                                                                      NIL
                                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                NIL)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (HIDE
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (INDUCT
                                                                                                                                                                                                                   "k")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                                    NIL
                                                                                                                                                                                                                    NIL)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                                    NIL
                                                                                                                                                                                                                    NIL)
                                                                                                                                                                                                                   ("3"
                                                                                                                                                                                                                    (SKEEP)
                                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                                      (EXPAND
                                                                                                                                                                                                                       "^"
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                          (GRIND
                                                                                                                                                                                                                           :EXCLUDE
                                                                                                                                                                                                                           "^")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (EXPAND
                                                                                                                                                                                                                             "^"
                                                                                                                                                                                                                             2)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (EXPAND
                                                                                                                                                                                                                               "expt"
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (PROPAX)
                                                                                                                                                                                                                                NIL
                                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                                            NIL)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (TYPEPRED
                                                                                                                                                                                                                             "j")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (CASE
                                                                                                                                                                                                                                  "j=0")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (GRIND)
                                                                                                                                                                                                                                NIL
                                                                                                                                                                                                                                NIL)
                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                (GRIND)
                                                                                                                                                                                                                                NIL
                                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (HIDE
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (REWRITE
                                                                                                                                                 "cpow_real"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (GRIND
                                                                                                                                                     :EXCLUDE
                                                                                                                                                     "^")
                                                                                                                                                    (("2"
                                                                                                                                                      (EXPAND
                                                                                                                                                       "^")
                                                                                                                                                      (("2"
                                                                                                                                                        (CASE
                                                                                                                                                            "k = 1")
                                                                                                                                                        (("1"
                                                                                                                                                          (GRIND)
                                                                                                                                                          NIL
                                                                                                                                                          NIL)
                                                                                                                                                         ("2"
                                                                                                                                                          (REPLACE
                                                                                                                                                           1
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (EXPAND
                                                                                                                                                             "expt")
                                                                                                                                                            (("2"
                                                                                                                                                              (CASE
                                                                                                                                                                  "(# Re := t * expt(t, k - 1), Im := 0 #) = (# Re := t * t^(k-1), Im := 0 #)")
                                                                                                                                                              (("1"
                                                                                                                                                                (REPLACE
                                                                                                                                                                 -1
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (HIDE
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (CASE
                                                                                                                                                                        "FORALL (k: posint | k>1):
        (# Re := t, Im := 0 #) ^ (k - 1) = (# Re := t ^ (k - 1), Im := 0 #)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (INST
                                                                                                                                                                       -1
                                                                                                                                                                       "k")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (GRIND
                                                                                                                                                                           :EXCLUDE
                                                                                                                                                                           "^")
                                                                                                                                                                          NIL
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (HIDE-ALL-BUT
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (INDUCT
                                                                                                                                                                         "k")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          NIL
                                                                                                                                                                          NIL)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          NIL
                                                                                                                                                                          NIL)
                                                                                                                                                                         ("3"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          NIL
                                                                                                                                                                          NIL)
                                                                                                                                                                         ("4"
                                                                                                                                                                          (SKEEP*)
                                                                                                                                                                          (("4"
                                                                                                                                                                            (ASSERT)
                                                                                                                                                                            (("4"
                                                                                                                                                                              (EXPAND
                                                                                                                                                                               "^"
                                                                                                                                                                               1
                                                                                                                                                                               1)
                                                                                                                                                                              (("4"
                                                                                                                                                                                (CASE
                                                                                                                                                                                    "j=1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (GRIND)
                                                                                                                                                                                  NIL
                                                                                                                                                                                  NIL)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (REWRITE
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (GRIND
                                                                                                                                                                                     :EXCLUDE
                                                                                                                                                                                     "^")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (EXPAND
                                                                                                                                                                                       "^"
                                                                                                                                                                                       2
                                                                                                                                                                                       2)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (EXPAND
                                                                                                                                                                                         "^")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (EXPAND
                                                                                                                                                                                           "expt"
                                                                                                                                                                                           2
                                                                                                                                                                                           2)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (PROPAX)
                                                                                                                                                                                            NIL
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL)
                                                                                                                                                                         ("5"
                                                                                                                                                                          (HIDE-ALL-BUT
                                                                                                                                                                           1)
                                                                                                                                                                          (("5"
                                                                                                                                                                            (GRIND)
                                                                                                                                                                            NIL
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL)
                                                                                                                                                               ("2"
                                                                                                                                                                (HIDE-ALL-BUT
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (EXPAND
                                                                                                                                                                   "^")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (PROPAX)
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL)
                                                                                                                               ("2"
                                                                                                                                (REPLACES
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (REWRITE
                                                                                                                                   "abs_mult")
                                                                                                                                  (("2"
                                                                                                                                    (REVEAL
                                                                                                                                     "ttp")
                                                                                                                                    (("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (CASE
                                                                                                                                            "NOT abs(complex_((1 - t ^ k), 0)) = 1-t^k")
                                                                                                                                        (("1"
                                                                                                                                          (HIDE-ALL-BUT
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (CASE
                                                                                                                                                "FORALL(r:real): abs(complex_(r,0)) = abs(r)")
                                                                                                                                            (("1"
                                                                                                                                              (INST
                                                                                                                                               -1
                                                                                                                                               "1 - t ^ k")
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (REVEAL
                                                                                                                                                   "ttp")
                                                                                                                                                  (("1"
                                                                                                                                                    (GRIND
                                                                                                                                                     :EXCLUDE
                                                                                                                                                     "^")
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (HIDE
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (GRIND)
                                                                                                                                                (("2"
                                                                                                                                                  (LEMMA
                                                                                                                                                   "sqrt_sq_neg")
                                                                                                                                                  (("2"
                                                                                                                                                    (INST
                                                                                                                                                     -1
                                                                                                                                                     "r!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (REPLACES
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (CASE
                                                                                                                                                "abs(csigma(FF,n)) < t^k*abs(pzo)")
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              NIL
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (HIDE
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (COPY
                                                                                                                                                 "bigsig")
                                                                                                                                                (("2"
                                                                                                                                                  (INVOKE
                                                                                                                                                   (CASE
                                                                                                                                                       "%1 <= %2")
                                                                                                                                                   (!
                                                                                                                                                    1
                                                                                                                                                    1)
                                                                                                                                                   (!
                                                                                                                                                    -1
                                                                                                                                                    1))
                                                                                                                                                  (("1"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    NIL
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (HIDE
                                                                                                                                                     (-1
                                                                                                                                                      2))
                                                                                                                                                    (("2"
                                                                                                                                                      (LEMMA
                                                                                                                                                       "csigma_real_triangle")
                                                                                                                                                      (("2"
                                                                                                                                                        (INST?)
                                                                                                                                                        (("2"
                                                                                                                                                          (INVOKE
                                                                                                                                                           (CASE
                                                                                                                                                               "%1 <= %2")
                                                                                                                                                           (!
                                                                                                                                                            -1
                                                                                                                                                            2)
                                                                                                                                                           (!
                                                                                                                                                            1
                                                                                                                                                            2))
                                                                                                                                                          (("1"
                                                                                                                                                            (ASSERT)
                                                                                                                                                            NIL
                                                                                                                                                            NIL)
                                                                                                                                                           ("2"
                                                                                                                                                            (HIDE
                                                                                                                                                             (-1
                                                                                                                                                              2))
                                                                                                                                                            (("2"
                                                                                                                                                              (CASE
                                                                                                                                                                  "FORALL (jj:nat): jj<=n IMPLIES sigma(0, jj, LAMBDA (i: nat): abs(FF(i))) <=
                                                                                                                                                                                sigma(1 + k, jj, LAMBDA (i: nat): abs(b(i)) * abs(gamma) ^ i * t ^ i)")
                                                                                                                                                              (("1"
                                                                                                                                                                (INST
                                                                                                                                                                 -
                                                                                                                                                                 "n")
                                                                                                                                                                (("1"
                                                                                                                                                                  (ASSERT)
                                                                                                                                                                  NIL
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL)
                                                                                                                                                               ("2"
                                                                                                                                                                (HIDE
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (INDUCT
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (ASSERT)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (EXPAND
                                                                                                                                                                       "sigma"
                                                                                                                                                                       +
                                                                                                                                                                       2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "sigma"
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (EXPAND
                                                                                                                                                                           "sigma"
                                                                                                                                                                           1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (EXPAND
                                                                                                                                                                             "FF"
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (LEMMA
                                                                                                                                                                               "abs_is_0")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (ASSERT)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (GRIND)
                                                                                                                                                                                    NIL
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (SKEEP)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (ASSERT)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "sigma"
                                                                                                                                                                         +)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (LIFT-IF)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (SPLIT
                                                                                                                                                                               +)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (FLATTEN)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (EXPAND
                                                                                                                                                                                   "FF"
                                                                                                                                                                                   1
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (LEMMA
                                                                                                                                                                                       "abs_is_0")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (REWRITE
                                                                                                                                                                                           "sigma_restrict_eq_0")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (ASSERT)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (GRIND)
                                                                                                                                                                                                NIL
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (SKOSIMP*)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (EXPAND
                                                                                                                                                                                               "FF"
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (LEMMA
                                                                                                                                                                                                 "abs_is_0")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (HIDE-ALL-BUT
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (GRIND)
                                                                                                                                                                                                      NIL
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (FLATTEN)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (CASE
                                                                                                                                                                                        "abs(FF(1+j)) <= (abs(b(1 + j)) * abs(gamma) ^ (1 + j)) * t ^ (1 + j)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ASSERT)
                                                                                                                                                                                      NIL
                                                                                                                                                                                      NIL)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (HIDE
                                                                                                                                                                                       3)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (EXPAND
                                                                                                                                                                                         "FF"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (REWRITE
                                                                                                                                                                                           "abs_mult")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (CASE
                                                                                                                                                                                                "NOT abs(complex_(t ^ (1 + j), 0)) = t^(1+j)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                                                               (1
                                                                                                                                                                                                "ttp"))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (CASE
                                                                                                                                                                                                    "FORALL(r:real) : abs(complex_(r,0)) = abs(r)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (INST
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "t^(1+j)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (GRIND
                                                                                                                                                                                                       :EXCLUDE
                                                                                                                                                                                                       "^")
                                                                                                                                                                                                      NIL
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (GRIND
                                                                                                                                                                                                     :EXCLUDE
                                                                                                                                                                                                     "^")
                                                                                                                                                                                                    NIL
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (REPLACES
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (CASE
                                                                                                                                                                                                    "t^(1+j)>=0")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (REWRITE
                                                                                                                                                                                                     "abs_cpow")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (ASSERT)
                                                                                                                                                                                                      NIL
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (HIDE
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (LEMMA
                                                                                                                                                                                                     "nnreal_expt")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (INST
                                                                                                                                                                                                       -
                                                                                                                                                                                                       "1+j"
                                                                                                                                                                                                       "t")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (EXPAND
                                                                                                                                                                                                         "^"
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (PROPAX)
                                                                                                                                                                                                          NIL
                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (CASE
                                                                                                          "FORALL (jj:nat):  cpolynomial(b, jj+1)(t * gamma) = pzo + (IF jj+1>=k THEN b(k) * cpow(t * gamma)(k) ELSE real_(0) ENDIF) + csigma(FF, jj+1)")
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -
                                                                                                         "n-1")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (INDUCT
                                                                                                         "jj")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (CASE
                                                                                                                "k = 0")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (CASE
                                                                                                                  "k >= 2")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (EXPAND
                                                                                                                   "cpolynomial"
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "csigma"
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (EXPAND
                                                                                                                       "csigma"
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "FF"
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (EXPAND
                                                                                                                           "*"
                                                                                                                           2
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (EXPAND
                                                                                                                             "*"
                                                                                                                             2
                                                                                                                             3)
                                                                                                                            (("1"
                                                                                                                              (COPY
                                                                                                                               "hyp1")
                                                                                                                              (("1"
                                                                                                                                (INST
                                                                                                                                 -
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (REPLACES
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (EXPAND
                                                                                                                                       "cpow"
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (HIDE-ALL-BUT
                                                                                                                                         2)
                                                                                                                                        (("1"
                                                                                                                                          (GRIND
                                                                                                                                           :EXCLUDE
                                                                                                                                           "cpow")
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (ASSERT)
                                                                                                                (("2"
                                                                                                                  (HIDE
                                                                                                                   4)
                                                                                                                  (("2"
                                                                                                                    (EXPAND
                                                                                                                     "cpolynomial"
                                                                                                                     3)
                                                                                                                    (("2"
                                                                                                                      (EXPAND
                                                                                                                       "csigma"
                                                                                                                       +)
                                                                                                                      (("2"
                                                                                                                        (EXPAND
                                                                                                                         "csigma"
                                                                                                                         +)
                                                                                                                        (("2"
                                                                                                                          (EXPAND
                                                                                                                           "*"
                                                                                                                           3
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (EXPAND
                                                                                                                             "*"
                                                                                                                             3
                                                                                                                             3)
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "FF"
                                                                                                                               3)
                                                                                                                              (("2"
                                                                                                                                (CASE
                                                                                                                                    "NOT k = 1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  NIL
                                                                                                                                  NIL)
                                                                                                                                 ("2"
                                                                                                                                  (REPLACES
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (EXPAND
                                                                                                                                       "cpow"
                                                                                                                                       3)
                                                                                                                                      (("2"
                                                                                                                                        (HIDE-ALL-BUT
                                                                                                                                         3)
                                                                                                                                        (("2"
                                                                                                                                          (GRIND
                                                                                                                                           :EXCLUDE
                                                                                                                                           "cpow")
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (SKEEP)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (LIFT-IF
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (SPLIT
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (FLATTEN)
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "cpolynomial"
                                                                                                                         (-2
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (EXPAND
                                                                                                                           "csigma"
                                                                                                                           +)
                                                                                                                          (("1"
                                                                                                                            (HIDE
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "*"
                                                                                                                                   1
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (EXPAND
                                                                                                                                     "FF"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (LIFT-IF
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (SPLIT
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (FLATTEN)
                                                                                                                                          (("1"
                                                                                                                                            (REVEAL
                                                                                                                                             "newlem")
                                                                                                                                            (("1"
                                                                                                                                              (INST
                                                                                                                                               -
                                                                                                                                               "2+j")
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (REPLACES
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (LEMMA
                                                                                                                                                     "complex_commutative_mult")
                                                                                                                                                    (("1"
                                                                                                                                                      (INST
                                                                                                                                                       -
                                                                                                                                                       "real_(0)"
                                                                                                                                                       _)
                                                                                                                                                      (("1"
                                                                                                                                                        (INST?)
                                                                                                                                                        (("1"
                                                                                                                                                          (ASSERT)
                                                                                                                                                          (("1"
                                                                                                                                                            (REPLACE
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (GRIND
                                                                                                                                                                 :EXCLUDE
                                                                                                                                                                 ("cpow"
                                                                                                                                                                  "csigma"
                                                                                                                                                                  "*"))
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (FLATTEN)
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("2"
                                                                                                                                              (REWRITE
                                                                                                                                               "cpow_mult")
                                                                                                                                              (("2"
                                                                                                                                                (REWRITE
                                                                                                                                                 "cpow_real")
                                                                                                                                                (("2"
                                                                                                                                                  (ASSERT)
                                                                                                                                                  (("2"
                                                                                                                                                    (HIDE-ALL-BUT
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (GRIND
                                                                                                                                                       :EXCLUDE
                                                                                                                                                       ("cpow"
                                                                                                                                                        "csigma"
                                                                                                                                                        "*"))
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (FLATTEN)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      (("2"
                                                                                                                        (LIFT-IF
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (SPLIT
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (CASE
                                                                                                                                  "NOT k = 2+j")
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL)
                                                                                                                               ("2"
                                                                                                                                (HIDE
                                                                                                                                 (-2
                                                                                                                                  2))
                                                                                                                                (("2"
                                                                                                                                  (REPLACES
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (EXPAND
                                                                                                                                       "cpolynomial"
                                                                                                                                       (-1
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (EXPAND
                                                                                                                                         "csigma"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (REPLACES
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (CASE
                                                                                                                                                "(b * cpow(complex_(t, 0) * gamma))(2 + j) +
       pzo 
       =
       pzo + b(2 + j) * cpow(complex_(t, 0) * gamma)(2 + j) +
        (FF(2 + j) )")
                                                                                                                                            (("1"
                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                               (-1
                                                                                                                                                1))
                                                                                                                                              (("1"
                                                                                                                                                (GRIND
                                                                                                                                                 :EXCLUDE
                                                                                                                                                 ("cpow"
                                                                                                                                                  "csigma"
                                                                                                                                                  "*"))
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (HIDE
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "FF"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (HIDE-ALL-BUT
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (GRIND
                                                                                                                                                       :EXCLUDE
                                                                                                                                                       "cpow")
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "cpolynomial"
                                                                                                                                 (-1
                                                                                                                                  2))
                                                                                                                                (("2"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("2"
                                                                                                                                    (EXPAND
                                                                                                                                     "csigma"
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (CASE
                                                                                                                                              "(b * cpow(complex_(t, 0) * gamma))(2 + j) +
       (pzo )
       = pzo  + (FF(2 + j) )")
                                                                                                                                          (("1"
                                                                                                                                            (HIDE-ALL-BUT
                                                                                                                                             (-1
                                                                                                                                              2))
                                                                                                                                            (("1"
                                                                                                                                              (GRIND
                                                                                                                                               :EXCLUDE
                                                                                                                                               ("csigma"
                                                                                                                                                "cpow"))
                                                                                                                                              NIL
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (HIDE
                                                                                                                                             3)
                                                                                                                                            (("2"
                                                                                                                                              (EXPAND
                                                                                                                                               "FF"
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (EXPAND
                                                                                                                                                 "*"
                                                                                                                                                 +
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (COPY
                                                                                                                                                   "hyp1")
                                                                                                                                                  (("2"
                                                                                                                                                    (INST
                                                                                                                                                     -
                                                                                                                                                     "2+j")
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (REPLACES
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (LEMMA
                                                                                                                                                           "complex_commutative_mult")
                                                                                                                                                          (("2"
                                                                                                                                                            (INST?)
                                                                                                                                                            (("2"
                                                                                                                                                              (ASSERT)
                                                                                                                                                              (("2"
                                                                                                                                                                (HIDE-ALL-BUT
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (GRIND
                                                                                                                                                                   :EXCLUDE
                                                                                                                                                                   ("csigma"
                                                                                                                                                                    "cpow"))
                                                                                                                                                                  NIL
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (TYPEPRED
                                                                           "t")
                                                                          (("2"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -2
                                                                              -3
                                                                              1))
                                                                            (("2"
                                                                              (GRIND-REALS)
                                                                              (("2"
                                                                                (LEMMA
                                                                                 "expt_lt1_bound2")
                                                                                (("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "t"
                                                                                   "k")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "^")
                                                                                    (("2"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (CASE
                                                                      "EXISTS (t:posreal): t<1 AND t * sigma(k + 1, n,
                                                     LAMBDA (i: nat): abs(b(i)) * abs(gamma) ^ i)
                                                <  abs(cpolynomial(a, n)(c))")
                                                                  (("1"
                                                                    (SKEEP -1)
                                                                    (("1"
                                                                      (INST +
                                                                       "t")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (MULT-BY
                                                                           -2
                                                                           "t^k")
                                                                          (("1"
                                                                            (REWRITE
                                                                             "sigma_scal"
                                                                             :DIR
                                                                             RL)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "sigma_scal_right"
                                                                               :DIR
                                                                               RL)
                                                                              (("1"
                                                                                (INVOKE
                                                                                 (CASE
                                                                                     "%1 <= %2")
                                                                                 (!
                                                                                  1
                                                                                  1)
                                                                                 (!
                                                                                  -2
                                                                                  1))
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   (-2
                                                                                    2))
                                                                                  (("2"
                                                                                    (REWRITE
                                                                                     "sigma_le")
                                                                                    (("2"
                                                                                      (HIDE
                                                                                       2)
                                                                                      (("2"
                                                                                        (SKOSIMP*)
                                                                                        (("2"
                                                                                          (CASE
                                                                                              "t^n!1 <= t^k*t")
                                                                                          (("1"
                                                                                            (MULT-BY
                                                                                             -1
                                                                                             "abs(b(n!1)) * abs(gamma) ^ n!1")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (HIDE
                                                                                             2)
                                                                                            (("2"
                                                                                              (LEMMA
                                                                                               "expt_plus")
                                                                                              (("2"
                                                                                                (INST
                                                                                                 -
                                                                                                 "k"
                                                                                                 "1"
                                                                                                 "t")
                                                                                                (("2"
                                                                                                  (LEMMA
                                                                                                   "expt_x1")
                                                                                                  (("2"
                                                                                                    (INST?)
                                                                                                    (("2"
                                                                                                      (REPLACES
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (REPLACES
                                                                                                         -1
                                                                                                         :DIR
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "^"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (REWRITE
                                                                                                               "both_sides_expt_lt1_le_aux"
                                                                                                               1)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (HIDE 2)
                                                                    (("2"
                                                                      (CASE
                                                                          "FORALL (Y:real,epsil:posreal): EXISTS (t:posreal): t<1 AND t*Y < epsil")
                                                                      (("1"
                                                                        (INST?)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("2"
                                                                          (SKEEP)
                                                                          (("2"
                                                                            (CASE
                                                                                "Y<=0")
                                                                            (("1"
                                                                              (INST
                                                                               +
                                                                               "1/2")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (INST
                                                                               +
                                                                               "min(1/2,epsil/(2*Y))")
                                                                              (("1"
                                                                                (GRIND)
                                                                                (("1"
                                                                                  (CROSS-MULT
                                                                                   2)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (GRIND)
                                                                                  (("1"
                                                                                    (CROSS-MULT
                                                                                     1)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (CROSS-MULT
                                                                                     1)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (HIDE-ALL-BUT (1 2))
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 3)
                (("2" (HIDE -2)
                  (("2" (SKOSIMP*)
                    (("2" (INST - "a!1" "c!1" "n!1")
                      (("2" (SKOSIMP*)
                        (("2"
                          (NAME "bb"
                                "LaMBDA (i:nat): IF i>n!1 THEN real_(0) ELSE b!1(i) ENDIF")
                          (("2" (INST + "bb")
                            (("2" (LEMMA " cpolynomial_eq_le_degree")
                              (("2" (INST - "b!1" "bb" "n!1")
                                (("2" (SPLIT -)
                                  (("1" (REPLACE -1 :DIR RL)
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -4)
                                        (("1" (REPLACE -3 :DIR RL)
                                          (("1" (SPLIT +)
                                            (("1" (HIDE-ALL-BUT 1)
                                              (("1" (EXPAND "bb")
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (EXPAND "bb" 1)
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (SKOSIMP*)
                                      (("2" (EXPAND "bb" 1)
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|fundamental_algebra-3| |nil| 3727102947
   ("" (SKEEP)
    (("" (CASE "n = 1")
      (("1" (REPLACES -1)
        (("1" (EXPAND "cpolynomial")
          (("1" (EXPAND "csigma")
            (("1" (EXPAND "*")
              (("1" (EXPAND "csigma")
                (("1" (EXPAND "cpow")
                  (("1" (EXPAND "cpow")
                    (("1" (INST + "-a(0)/a(1)")
                      (("1" (GRIND)
                        (("1"
                          (CASE
                              "Im(a(0)) = Im(a(0)) *(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))/(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND-REALS) NIL NIL))
                            NIL))
                          NIL)
                         ("2"
                          (CASE
                              "Re(a(0)) = Re(a(0))*(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))/(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND-REALS) NIL NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (GRIND) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LABEL "n1" 1)
        (("2" (HIDE "n1")
          (("2" (LEMMA "complex_poly_shift")
            (("2"
              (CASE "FORALL (a: [nat -> complex], c: complex, n: nat):
                          EXISTS (b):
                            (FORALL (i:nat): i>n IMPLIES b(i)=real_(0)) AND
                            b(0) = cpolynomial(a, n)(c) AND
                             (FORALL (x): cpolynomial(a, n)(x) = cpolynomial(b, n)(x - c))")
              (("1" (HIDE -2)
                (("1" (LEMMA "cpolynomial_attains_minimum")
                  (("1" (INST - "a" "n")
                    (("1" (SKEEP -)
                      (("1" (INST + "c")
                        (("1" (ASSERT)
                          (("1" (INST - "a" "c" "n")
                            (("1" (SKEEP -2)
                              (("1" (LABEL "newlem" -2)
                                (("1" (LEMMA "abs_is_0")
                                  (("1" (HIDE "newlem")
                                    (("1" (INST?)
                                      (("1" (ASSERT)
                                        (("1"
                                          (CASE
                                              "NOT EXISTS (k:posnat): k<=n AND b(k)/=real_(0) AND FORALL (i:posnat): i<k IMPLIES b(i)=real_(0)")
                                          (("1"
                                            (CASE
                                                "FORALL (k:posnat): k<=n IMPLIES b(k)=real_(0)")
                                            (("1"
                                              (CASE
                                                  "FORALL (x): cpolynomial(a,n)(x)=cpolynomial(a,n)(c)")
                                              (("1"
                                                (LEMMA
                                                 "cpolynomial_limit_infinity")
                                                (("1"
                                                  (INST -
                                                   "abs(cpolynomial(a,n)(c)) + 2"
                                                   "a" "n")
                                                  (("1" (ASSERT)
                                                    (("1" (SKOSIMP*)
                                                      (("1"
                                                        (INST - "real_(M!1)")
                                                        (("1"
                                                          (CASE
                                                              "NOT abs(complex_(M!1, 0)) >= M!1")
                                                          (("1"
                                                            (HIDE-ALL-BUT 1)
                                                            (("1" (GRIND) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2" (HIDE -1)
                                                              (("2"
                                                                (GRIND :EXCLUDE
                                                                 ("cpolynomial"))
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (CASE
                                                    "FORALL (j:nat,x): j+1<=n IMPLIES cpolynomial(b,j+1)(x-c) = cpolynomial(a,n)(c)")
                                                (("1" (SKEEP)
                                                  (("1" (INST -5 "x")
                                                    (("1" (INST - "n-1" "x")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (INDUCT "j")
                                                  (("1" (ASSERT)
                                                    (("1" (SKEEP)
                                                      (("1" (INST - "1")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (EXPAND
                                                             "cpolynomial" 1 1)
                                                            (("1"
                                                              (EXPAND "csigma")
                                                              (("1"
                                                                (EXPAND
                                                                 "csigma")
                                                                (("1"
                                                                  (EXPAND "*")
                                                                  (("1"
                                                                    (REPLACE
                                                                     -1)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "cpow"
                                                                         1)
                                                                        (("1"
                                                                          (HIDE-ALL-BUT
                                                                           (-3
                                                                            1))
                                                                          (("1"
                                                                            (GRIND
                                                                             :EXCLUDE
                                                                             "cpolynomial")
                                                                            (("1"
                                                                              (DECOMPOSE-EQUALITY
                                                                               1)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKOLEM 1 "jj")
                                                    (("2" (FLATTEN)
                                                      (("2" (ASSERT)
                                                        (("2" (SKEEP)
                                                          (("2" (INST - "x")
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (REWRITE
                                                                 "cpolynomial_rec"
                                                                 1)
                                                                (("2"
                                                                  (INST -
                                                                   "2+jj")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (REPLACE
                                                                       -3)
                                                                      (("2"
                                                                        (HIDE-ALL-BUT
                                                                         (-1
                                                                          1))
                                                                        (("2"
                                                                          (GRIND
                                                                           :EXCLUDE
                                                                           "cpolynomial")
                                                                          (("2"
                                                                            (DECOMPOSE-EQUALITY
                                                                             1)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2"
                                              (CASE
                                                  "FORALL (kk,jj:nat): kk<=jj AND 1+jj <= n IMPLIES b(1+kk) = real_(0)")
                                              (("1" (SKEEP)
                                                (("1" (INST - "k-1" "k-1")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2" (INDUCT "jj")
                                                  (("1" (SKEEP)
                                                    (("1" (INST + "1")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKEEP)
                                                    (("2" (SKEEP)
                                                      (("2"
                                                        (CASE "NOT kk = 1+j")
                                                        (("1" (INST - "kk")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (REPLACES -1)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (INST + "2+j")
                                                              (("2" (ASSERT)
                                                                (("2" (SKEEP)
                                                                  (("2"
                                                                    (INST -
                                                                     "i-1")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LABEL "hyp1" -1)
                                            (("2" (SKEEP -)
                                              (("2" (DELABEL "hyp1")
                                                (("2" (LABEL "hyp1" -2)
                                                  (("2"
                                                    (LEMMA " root_complex_def")
                                                    (("2"
                                                      (CASE "-b(k)=real_(0)")
                                                      (("1"
                                                        (CASE
                                                            "-(-b(k)) = real_(0)")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (HIDE-ALL-BUT
                                                             (-1 1))
                                                            (("1" (GRIND)
                                                              (("1"
                                                                (DECOMPOSE-EQUALITY
                                                                 1)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (REPLACES -1)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (HIDE-ALL-BUT 1)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (INST -
                                                         "cpolynomial(a,n)(c)/(-b(k))"
                                                         "k")
                                                        (("1"
                                                          (NAME "gamma"
                                                                "root_complex(cpolynomial(a, n)(c) / (-b(k)))(k)")
                                                          (("1" (REPLACE -1)
                                                            (("1"
                                                              (NAME "z"
                                                                    "LAMBDA (t:real): c + t*gamma")
                                                              (("1"
                                                                (CASE
                                                                    "EXISTS (t:posreal): t<1 AND sigma(k+1,n,LAMBDA (i:nat): abs(b(i))*t^i*abs(gamma)^i) < t^k * abs(cpolynomial(a,n)(c))")
                                                                (("1" (SKEEP -)
                                                                  (("1"
                                                                    (LABEL
                                                                     "bigsig"
                                                                     -2)
                                                                    (("1"
                                                                      (LABEL
                                                                       "tlt1"
                                                                       -1)
                                                                      (("1"
                                                                        (CASE
                                                                            "0<t^k AND t^k < 1")
                                                                        (("1"
                                                                          (LABEL
                                                                           "ttp"
                                                                           -1)
                                                                          (("1"
                                                                            (HIDE
                                                                             "ttp")
                                                                            (("1"
                                                                              (HIDE
                                                                               "tlt1")
                                                                              (("1"
                                                                                (CASE
                                                                                    "abs(cpolynomial(a,n)(z(t))) < abs(cpolynomial(a,n)(c))")
                                                                                (("1"
                                                                                  (INST
                                                                                   -8
                                                                                   "z(t)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (NAME
                                                                                   "pzo"
                                                                                   "cpolynomial(a, n)(c)")
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     -1)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "csigma_real_triangle")
                                                                                      (("2"
                                                                                        (INST-CP
                                                                                         -11
                                                                                         "z(t)")
                                                                                        (("2"
                                                                                          (REPLACE
                                                                                           -12
                                                                                           +)
                                                                                          (("2"
                                                                                            (CASE
                                                                                                "NOT z(t) - c = t*gamma")
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "z"
                                                                                               1)
                                                                                              (("1"
                                                                                                (HIDE-ALL-BUT
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (GRIND)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (REPLACES
                                                                                               -1)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (NAME
                                                                                                   "FF"
                                                                                                   "LAMBDA (i:nat): IF i<=k OR i>n THEN real_(0) ELSE b(i)*t^i*cpow(gamma)(i) ENDIF")
                                                                                                  (("2"
                                                                                                    (CASE
                                                                                                        "cpolynomial(b,n)(t*gamma) = pzo + b(k)*cpow(t*gamma)(k) + csigma(FF,n)")
                                                                                                    (("1"
                                                                                                      (REPLACES
                                                                                                       -1
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (LEMMA
                                                                                                         "abs_triangle")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -
                                                                                                             "b(k) * cpow(t * gamma)(k) +pzo"
                                                                                                             "csigma(FF,n)")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (INVOKE
                                                                                                                 (CASE
                                                                                                                     "%1 < abs(pzo)")
                                                                                                                 (!
                                                                                                                  -1
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (CASE
                                                                                                                      "pzo + b(k) * cpow(complex_(t, 0) * gamma)(k) + csigma(FF, n) = b(k) * cpow(complex_(t, 0) * gamma)(k) + pzo + csigma(FF, n)")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (HIDE-ALL-BUT
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (GRIND
                                                                                                                       :EXCLUDE
                                                                                                                       ("cpow"
                                                                                                                        "csigma"))
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (HIDE
                                                                                                                   (-1
                                                                                                                    2))
                                                                                                                  (("2"
                                                                                                                    (REWRITE
                                                                                                                     "cpow_mult")
                                                                                                                    (("2"
                                                                                                                      (EXPAND
                                                                                                                       "gamma"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (REWRITE
                                                                                                                         "root_complex_def")
                                                                                                                        (("2"
                                                                                                                          (LEMMA
                                                                                                                           "pzo")
                                                                                                                          (("2"
                                                                                                                            (REPLACE
                                                                                                                             -1
                                                                                                                             +
                                                                                                                             :DIR
                                                                                                                             RL)
                                                                                                                            (("2"
                                                                                                                              (CASE
                                                                                                                                  "NOT b(k) * (cpow(real_(t))(k) * (pzo / (-b(k)))) + pzo = pzo*(1-t^k)")
                                                                                                                              (("1"
                                                                                                                                (HIDE
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (CASE
                                                                                                                                      "NOT pzo/(-b(k)) = (-pzo)/b(k)")
                                                                                                                                  (("1"
                                                                                                                                    (CROSS-MULT
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (HIDE-ALL-BUT
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (GRIND)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (REPLACES
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (CASE
                                                                                                                                          "NOT (-pzo) / b(k) = (-pzo)*(1/b(k))")
                                                                                                                                      (("1"
                                                                                                                                        (HIDE-ALL-BUT
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (GRIND)
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL)
                                                                                                                                       ("2"
                                                                                                                                        (REPLACES
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("2"
                                                                                                                                            (CASE
                                                                                                                                                "cpow(real_(t))(k) = real_(t)^k")
                                                                                                                                            (("1"
                                                                                                                                              (REPLACES
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                   (1
                                                                                                                                                    2
                                                                                                                                                    3))
                                                                                                                                                  (("1"
                                                                                                                                                    (LEMMA
                                                                                                                                                     "complex_commutative_mult")
                                                                                                                                                    (("1"
                                                                                                                                                      (INST
                                                                                                                                                       -
                                                                                                                                                       "(-pzo)"
                                                                                                                                                       _)
                                                                                                                                                      (("1"
                                                                                                                                                        (INST?)
                                                                                                                                                        (("1"
                                                                                                                                                          (REPLACES
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (CASE
                                                                                                                                                                "NOT FORALL (x,y,z:complex): x * (y * z) = (x * y) * z")
                                                                                                                                                            (("1"
                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (GRIND)
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL)
                                                                                                                                                             ("2"
                                                                                                                                                              (LABEL
                                                                                                                                                               "am"
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (COPY
                                                                                                                                                                 "am")
                                                                                                                                                                (("2"
                                                                                                                                                                  (HIDE
                                                                                                                                                                   "am")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (INST
                                                                                                                                                                     -
                                                                                                                                                                     "real_(t)^k"
                                                                                                                                                                     "complex_(1,0)/b(k)"
                                                                                                                                                                     "(-pzo)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (REPLACES
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (LEMMA
                                                                                                                                                                         "complex_commutative_mult")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (INST
                                                                                                                                                                           -
                                                                                                                                                                           "real_(t)^k"
                                                                                                                                                                           _)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (INST?)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (REPLACES
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (REVEAL
                                                                                                                                                                                 "am")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (COPY
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (HIDE
                                                                                                                                                                                     "am")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (INST?)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (REPLACES
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (REVEAL
                                                                                                                                                                                           "am")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (COPY
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (HIDE
                                                                                                                                                                                               "am")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (INST?)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (REPLACES
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (HIDE-ALL-BUT
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (CASE
                                                                                                                                                                                                          "complex_(1-t^k,0) = complex_(1,0) - complex_(t,0)^k")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (REPLACES
                                                                                                                                                                                                         -1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (GROUND)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (CASE
                                                                                                                                                                                                                "(b(k) * (complex_(1, 0) / b(k))) = complex_(1,0)")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (REWRITE
                                                                                                                                                                                                               -1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (GRIND
                                                                                                                                                                                                                 :EXCLUDE
                                                                                                                                                                                                                 "^")
                                                                                                                                                                                                                NIL
                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                              NIL)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (GRIND)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (GRIND-REALS)
                                                                                                                                                                                                                  NIL
                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                        NIL)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (GRIND-REALS)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (HIDE-ALL-BUT
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (GRIND
                                                                                                                                                                                                             :EXCLUDE
                                                                                                                                                                                                             "^")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (GRIND-REALS)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (GRIND
                                                                                                                                                                                                                 :EXCLUDE
                                                                                                                                                                                                                 "^")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (CASE
                                                                                                                                                                                                                      "FORALL(k:posint) : (# Re := t, Im := 0 #) ^ k = (# Re:= t^k, Im := 0 #)")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (INST
                                                                                                                                                                                                                       -1
                                                                                                                                                                                                                       "k")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (REWRITE
                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (ASSERT)
                                                                                                                                                                                                                            NIL
                                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                                    NIL)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (HIDE
                                                                                                                                                                                                                     2)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (INDUCT
                                                                                                                                                                                                                       "k")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                                                        NIL
                                                                                                                                                                                                                        NIL)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                                                        NIL
                                                                                                                                                                                                                        NIL)
                                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                                        (SKEEP*)
                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                          (EXPAND
                                                                                                                                                                                                                           "^"
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                            (GRIND
                                                                                                                                                                                                                             :EXCLUDE
                                                                                                                                                                                                                             "^")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (EXPAND
                                                                                                                                                                                                                               "^"
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (EXPAND
                                                                                                                                                                                                                                 "^"
                                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (EXPAND
                                                                                                                                                                                                                                   "expt"
                                                                                                                                                                                                                                   2
                                                                                                                                                                                                                                   2)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (PROPAX)
                                                                                                                                                                                                                                    NIL
                                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                                              NIL)
                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                              (TYPEPRED
                                                                                                                                                                                                                               "j")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (CASE
                                                                                                                                                                                                                                    "j=0")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (GRIND)
                                                                                                                                                                                                                                    NIL
                                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                                  NIL)
                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                  (GRIND)
                                                                                                                                                                                                                                  NIL
                                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                              NIL)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (CASE
                                                                                                                                                                                                                  "FORALL(k:posint): (# Re := t, Im := 0 #) ^ k = (# Re := t^k, Im := 0 #)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (ASSERT)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (INST
                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                   "k")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (GRIND
                                                                                                                                                                                                                       :EXCLUDE
                                                                                                                                                                                                                       "^")
                                                                                                                                                                                                                      NIL
                                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                NIL)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (HIDE
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (INDUCT
                                                                                                                                                                                                                   "k")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                                    NIL
                                                                                                                                                                                                                    NIL)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                                    NIL
                                                                                                                                                                                                                    NIL)
                                                                                                                                                                                                                   ("3"
                                                                                                                                                                                                                    (SKEEP)
                                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                                      (EXPAND
                                                                                                                                                                                                                       "^"
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                          (GRIND
                                                                                                                                                                                                                           :EXCLUDE
                                                                                                                                                                                                                           "^")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (EXPAND
                                                                                                                                                                                                                             "^"
                                                                                                                                                                                                                             2)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (EXPAND
                                                                                                                                                                                                                               "expt"
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (PROPAX)
                                                                                                                                                                                                                                NIL
                                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                                            NIL)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (TYPEPRED
                                                                                                                                                                                                                             "j")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (CASE
                                                                                                                                                                                                                                  "j=0")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (GRIND)
                                                                                                                                                                                                                                NIL
                                                                                                                                                                                                                                NIL)
                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                (GRIND)
                                                                                                                                                                                                                                NIL
                                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                                NIL))
                                                                                                                                                                                                              NIL))
                                                                                                                                                                                                            NIL))
                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (HIDE
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (REWRITE
                                                                                                                                                 "cpow_real"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (GRIND
                                                                                                                                                     :EXCLUDE
                                                                                                                                                     "^")
                                                                                                                                                    (("2"
                                                                                                                                                      (EXPAND
                                                                                                                                                       "^")
                                                                                                                                                      (("2"
                                                                                                                                                        (CASE
                                                                                                                                                            "k = 1")
                                                                                                                                                        (("1"
                                                                                                                                                          (GRIND)
                                                                                                                                                          NIL
                                                                                                                                                          NIL)
                                                                                                                                                         ("2"
                                                                                                                                                          (REPLACE
                                                                                                                                                           1
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (EXPAND
                                                                                                                                                             "expt")
                                                                                                                                                            (("2"
                                                                                                                                                              (CASE
                                                                                                                                                                  "(# Re := t * expt(t, k - 1), Im := 0 #) = (# Re := t * t^(k-1), Im := 0 #)")
                                                                                                                                                              (("1"
                                                                                                                                                                (REPLACE
                                                                                                                                                                 -1
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (HIDE
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (CASE
                                                                                                                                                                        "FORALL (k: posint | k>1):
        (# Re := t, Im := 0 #) ^ (k - 1) = (# Re := t ^ (k - 1), Im := 0 #)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (INST
                                                                                                                                                                       -1
                                                                                                                                                                       "k")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (GRIND
                                                                                                                                                                           :EXCLUDE
                                                                                                                                                                           "^")
                                                                                                                                                                          NIL
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (HIDE-ALL-BUT
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (INDUCT
                                                                                                                                                                         "k")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          NIL
                                                                                                                                                                          NIL)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          NIL
                                                                                                                                                                          NIL)
                                                                                                                                                                         ("3"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          NIL
                                                                                                                                                                          NIL)
                                                                                                                                                                         ("4"
                                                                                                                                                                          (SKEEP*)
                                                                                                                                                                          (("4"
                                                                                                                                                                            (ASSERT)
                                                                                                                                                                            (("4"
                                                                                                                                                                              (EXPAND
                                                                                                                                                                               "^"
                                                                                                                                                                               1
                                                                                                                                                                               1)
                                                                                                                                                                              (("4"
                                                                                                                                                                                (CASE
                                                                                                                                                                                    "j=1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (GRIND)
                                                                                                                                                                                  NIL
                                                                                                                                                                                  NIL)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (REWRITE
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (GRIND
                                                                                                                                                                                     :EXCLUDE
                                                                                                                                                                                     "^")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (EXPAND
                                                                                                                                                                                       "^"
                                                                                                                                                                                       2
                                                                                                                                                                                       2)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (EXPAND
                                                                                                                                                                                         "^")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (EXPAND
                                                                                                                                                                                           "expt"
                                                                                                                                                                                           2
                                                                                                                                                                                           2)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (PROPAX)
                                                                                                                                                                                            NIL
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL)
                                                                                                                                                                         ("5"
                                                                                                                                                                          (HIDE-ALL-BUT
                                                                                                                                                                           1)
                                                                                                                                                                          (("5"
                                                                                                                                                                            (GRIND)
                                                                                                                                                                            NIL
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL)
                                                                                                                                                               ("2"
                                                                                                                                                                (HIDE-ALL-BUT
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (EXPAND
                                                                                                                                                                   "^")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (PROPAX)
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL)
                                                                                                                               ("2"
                                                                                                                                (REPLACES
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (REWRITE
                                                                                                                                   "abs_mult")
                                                                                                                                  (("2"
                                                                                                                                    (REVEAL
                                                                                                                                     "ttp")
                                                                                                                                    (("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (CASE
                                                                                                                                            "NOT abs(complex_((1 - t ^ k), 0)) = 1-t^k")
                                                                                                                                        (("1"
                                                                                                                                          (HIDE-ALL-BUT
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (CASE
                                                                                                                                                "FORALL(r:real): abs(complex_(r,0)) = abs(r)")
                                                                                                                                            (("1"
                                                                                                                                              (INST
                                                                                                                                               -1
                                                                                                                                               "1 - t ^ k")
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (REVEAL
                                                                                                                                                   "ttp")
                                                                                                                                                  (("1"
                                                                                                                                                    (GRIND
                                                                                                                                                     :EXCLUDE
                                                                                                                                                     "^")
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (HIDE
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (GRIND)
                                                                                                                                                (("2"
                                                                                                                                                  (LEMMA
                                                                                                                                                   "sqrt_sq_neg")
                                                                                                                                                  (("2"
                                                                                                                                                    (INST
                                                                                                                                                     -1
                                                                                                                                                     "r!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (REPLACES
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (CASE
                                                                                                                                                "abs(csigma(FF,n)) < t^k*abs(pzo)")
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              NIL
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (HIDE
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (COPY
                                                                                                                                                 "bigsig")
                                                                                                                                                (("2"
                                                                                                                                                  (INVOKE
                                                                                                                                                   (CASE
                                                                                                                                                       "%1 <= %2")
                                                                                                                                                   (!
                                                                                                                                                    1
                                                                                                                                                    1)
                                                                                                                                                   (!
                                                                                                                                                    -1
                                                                                                                                                    1))
                                                                                                                                                  (("1"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    NIL
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (HIDE
                                                                                                                                                     (-1
                                                                                                                                                      2))
                                                                                                                                                    (("2"
                                                                                                                                                      (LEMMA
                                                                                                                                                       "csigma_real_triangle")
                                                                                                                                                      (("2"
                                                                                                                                                        (INST?)
                                                                                                                                                        (("2"
                                                                                                                                                          (INVOKE
                                                                                                                                                           (CASE
                                                                                                                                                               "%1 <= %2")
                                                                                                                                                           (!
                                                                                                                                                            -1
                                                                                                                                                            2)
                                                                                                                                                           (!
                                                                                                                                                            1
                                                                                                                                                            2))
                                                                                                                                                          (("1"
                                                                                                                                                            (ASSERT)
                                                                                                                                                            NIL
                                                                                                                                                            NIL)
                                                                                                                                                           ("2"
                                                                                                                                                            (HIDE
                                                                                                                                                             (-1
                                                                                                                                                              2))
                                                                                                                                                            (("2"
                                                                                                                                                              (CASE
                                                                                                                                                                  "FORALL (jj:nat): jj<=n IMPLIES sigma(0, jj, LAMBDA (i: nat): abs(FF(i))) <=
                                                                                                                                                                                sigma(1 + k, jj, LAMBDA (i: nat): abs(b(i)) * abs(gamma) ^ i * t ^ i)")
                                                                                                                                                              (("1"
                                                                                                                                                                (INST
                                                                                                                                                                 -
                                                                                                                                                                 "n")
                                                                                                                                                                (("1"
                                                                                                                                                                  (ASSERT)
                                                                                                                                                                  NIL
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL)
                                                                                                                                                               ("2"
                                                                                                                                                                (HIDE
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (INDUCT
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (ASSERT)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (EXPAND
                                                                                                                                                                       "sigma"
                                                                                                                                                                       +
                                                                                                                                                                       2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "sigma"
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (EXPAND
                                                                                                                                                                           "sigma"
                                                                                                                                                                           1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (EXPAND
                                                                                                                                                                             "FF"
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (LEMMA
                                                                                                                                                                               "abs_is_0")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (ASSERT)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (GRIND)
                                                                                                                                                                                    NIL
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (SKEEP)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (ASSERT)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "sigma"
                                                                                                                                                                         +)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (LIFT-IF)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (SPLIT
                                                                                                                                                                               +)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (FLATTEN)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (EXPAND
                                                                                                                                                                                   "FF"
                                                                                                                                                                                   1
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (LEMMA
                                                                                                                                                                                       "abs_is_0")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (REPLACES
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (REWRITE
                                                                                                                                                                                             "sigma_restrict_eq_0")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (ASSERT)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (HIDE-ALL-BUT
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (GRIND)
                                                                                                                                                                                                  NIL
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (SKOSIMP*)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (EXPAND
                                                                                                                                                                                                 "FF"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (LEMMA
                                                                                                                                                                                                   "abs_is_0")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (HIDE-ALL-BUT
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (GRIND)
                                                                                                                                                                                                        NIL
                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (FLATTEN)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (CASE
                                                                                                                                                                                        "abs(FF(1+j)) <= (abs(b(1 + j)) * abs(gamma) ^ (1 + j)) * t ^ (1 + j)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ASSERT)
                                                                                                                                                                                      NIL
                                                                                                                                                                                      NIL)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (HIDE
                                                                                                                                                                                       3)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (EXPAND
                                                                                                                                                                                         "FF"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (REWRITE
                                                                                                                                                                                           "abs_mult")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (CASE
                                                                                                                                                                                                "NOT abs(complex_(t ^ (1 + j), 0)) = t^(1+j)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                                                               (1
                                                                                                                                                                                                "ttp"))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (CASE
                                                                                                                                                                                                    "FORALL(r:real) : abs(complex_(r,0)) = abs(r)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (INST
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "t^(1+j)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (ASSERT)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (GRIND
                                                                                                                                                                                                       :EXCLUDE
                                                                                                                                                                                                       "^")
                                                                                                                                                                                                      NIL
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (GRIND
                                                                                                                                                                                                     :EXCLUDE
                                                                                                                                                                                                     "^")
                                                                                                                                                                                                    NIL
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (REPLACES
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (CASE
                                                                                                                                                                                                    "t^(1+j)>=0")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (ASSERT)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (REWRITE
                                                                                                                                                                                                     "abs_cpow")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (ASSERT)
                                                                                                                                                                                                      NIL
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (HIDE
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (LEMMA
                                                                                                                                                                                                     "nnreal_expt")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (INST
                                                                                                                                                                                                       -
                                                                                                                                                                                                       "1+j"
                                                                                                                                                                                                       "t")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (EXPAND
                                                                                                                                                                                                         "^"
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (PROPAX)
                                                                                                                                                                                                          NIL
                                                                                                                                                                                                          NIL))
                                                                                                                                                                                                        NIL))
                                                                                                                                                                                                      NIL))
                                                                                                                                                                                                    NIL))
                                                                                                                                                                                                  NIL))
                                                                                                                                                                                                NIL))
                                                                                                                                                                                              NIL))
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (CASE
                                                                                                          "FORALL (jj:nat):  cpolynomial(b, jj+1)(t * gamma) = pzo + (IF jj+1>=k THEN b(k) * cpow(t * gamma)(k) ELSE real_(0) ENDIF) + csigma(FF, jj+1)")
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -
                                                                                                         "n-1")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (INDUCT
                                                                                                         "jj")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (CASE
                                                                                                                "k = 0")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (CASE
                                                                                                                  "k >= 2")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (EXPAND
                                                                                                                   "cpolynomial"
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "csigma"
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (EXPAND
                                                                                                                       "csigma"
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "FF"
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (EXPAND
                                                                                                                           "*"
                                                                                                                           2
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (EXPAND
                                                                                                                             "*"
                                                                                                                             2
                                                                                                                             3)
                                                                                                                            (("1"
                                                                                                                              (COPY
                                                                                                                               "hyp1")
                                                                                                                              (("1"
                                                                                                                                (INST
                                                                                                                                 -
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (REPLACES
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (EXPAND
                                                                                                                                       "cpow"
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (HIDE-ALL-BUT
                                                                                                                                         2)
                                                                                                                                        (("1"
                                                                                                                                          (GRIND
                                                                                                                                           :EXCLUDE
                                                                                                                                           "cpow")
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (ASSERT)
                                                                                                                (("2"
                                                                                                                  (HIDE
                                                                                                                   4)
                                                                                                                  (("2"
                                                                                                                    (EXPAND
                                                                                                                     "cpolynomial"
                                                                                                                     3)
                                                                                                                    (("2"
                                                                                                                      (EXPAND
                                                                                                                       "csigma"
                                                                                                                       +)
                                                                                                                      (("2"
                                                                                                                        (EXPAND
                                                                                                                         "csigma"
                                                                                                                         +)
                                                                                                                        (("2"
                                                                                                                          (EXPAND
                                                                                                                           "*"
                                                                                                                           3
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (EXPAND
                                                                                                                             "*"
                                                                                                                             3
                                                                                                                             3)
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "FF"
                                                                                                                               3)
                                                                                                                              (("2"
                                                                                                                                (CASE
                                                                                                                                    "NOT k = 1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  NIL
                                                                                                                                  NIL)
                                                                                                                                 ("2"
                                                                                                                                  (REPLACES
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (EXPAND
                                                                                                                                       "cpow"
                                                                                                                                       3)
                                                                                                                                      (("2"
                                                                                                                                        (HIDE-ALL-BUT
                                                                                                                                         3)
                                                                                                                                        (("2"
                                                                                                                                          (GRIND
                                                                                                                                           :EXCLUDE
                                                                                                                                           "cpow")
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (SKEEP)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (LIFT-IF
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (SPLIT
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (FLATTEN)
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "cpolynomial"
                                                                                                                         (-2
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (EXPAND
                                                                                                                           "csigma"
                                                                                                                           +)
                                                                                                                          (("1"
                                                                                                                            (HIDE
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "*"
                                                                                                                                   1
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (EXPAND
                                                                                                                                     "FF"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (LIFT-IF
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (SPLIT
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (FLATTEN)
                                                                                                                                          (("1"
                                                                                                                                            (REVEAL
                                                                                                                                             "newlem")
                                                                                                                                            (("1"
                                                                                                                                              (INST
                                                                                                                                               -
                                                                                                                                               "2+j")
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (REPLACES
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (LEMMA
                                                                                                                                                     "complex_commutative_mult")
                                                                                                                                                    (("1"
                                                                                                                                                      (INST
                                                                                                                                                       -
                                                                                                                                                       "real_(0)"
                                                                                                                                                       _)
                                                                                                                                                      (("1"
                                                                                                                                                        (INST?)
                                                                                                                                                        (("1"
                                                                                                                                                          (ASSERT)
                                                                                                                                                          (("1"
                                                                                                                                                            (REPLACE
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (GRIND
                                                                                                                                                                 :EXCLUDE
                                                                                                                                                                 ("cpow"
                                                                                                                                                                  "csigma"
                                                                                                                                                                  "*"))
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (FLATTEN)
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("2"
                                                                                                                                              (REWRITE
                                                                                                                                               "cpow_mult")
                                                                                                                                              (("2"
                                                                                                                                                (REWRITE
                                                                                                                                                 "cpow_real")
                                                                                                                                                (("2"
                                                                                                                                                  (ASSERT)
                                                                                                                                                  (("2"
                                                                                                                                                    (HIDE-ALL-BUT
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (GRIND
                                                                                                                                                       :EXCLUDE
                                                                                                                                                       ("cpow"
                                                                                                                                                        "csigma"
                                                                                                                                                        "*"))
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (FLATTEN)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      (("2"
                                                                                                                        (LIFT-IF
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (SPLIT
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (CASE
                                                                                                                                  "NOT k = 2+j")
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL)
                                                                                                                               ("2"
                                                                                                                                (HIDE
                                                                                                                                 (-2
                                                                                                                                  2))
                                                                                                                                (("2"
                                                                                                                                  (REPLACES
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (EXPAND
                                                                                                                                       "cpolynomial"
                                                                                                                                       (-1
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (EXPAND
                                                                                                                                         "csigma"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (REPLACES
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (CASE
                                                                                                                                                "(b * cpow(complex_(t, 0) * gamma))(2 + j) +
       pzo 
       =
       pzo + b(2 + j) * cpow(complex_(t, 0) * gamma)(2 + j) +
        (FF(2 + j) )")
                                                                                                                                            (("1"
                                                                                                                                              (HIDE-ALL-BUT
                                                                                                                                               (-1
                                                                                                                                                1))
                                                                                                                                              (("1"
                                                                                                                                                (GRIND
                                                                                                                                                 :EXCLUDE
                                                                                                                                                 ("cpow"
                                                                                                                                                  "csigma"
                                                                                                                                                  "*"))
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (HIDE
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "FF"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (HIDE-ALL-BUT
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (GRIND
                                                                                                                                                       :EXCLUDE
                                                                                                                                                       "cpow")
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "cpolynomial"
                                                                                                                                 (-1
                                                                                                                                  2))
                                                                                                                                (("2"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("2"
                                                                                                                                    (EXPAND
                                                                                                                                     "csigma"
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (CASE
                                                                                                                                              "(b * cpow(complex_(t, 0) * gamma))(2 + j) +
       (pzo )
       = pzo  + (FF(2 + j) )")
                                                                                                                                          (("1"
                                                                                                                                            (HIDE-ALL-BUT
                                                                                                                                             (-1
                                                                                                                                              2))
                                                                                                                                            (("1"
                                                                                                                                              (GRIND
                                                                                                                                               :EXCLUDE
                                                                                                                                               ("csigma"
                                                                                                                                                "cpow"))
                                                                                                                                              NIL
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (HIDE
                                                                                                                                             3)
                                                                                                                                            (("2"
                                                                                                                                              (EXPAND
                                                                                                                                               "FF"
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (EXPAND
                                                                                                                                                 "*"
                                                                                                                                                 +
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (COPY
                                                                                                                                                   "hyp1")
                                                                                                                                                  (("2"
                                                                                                                                                    (INST
                                                                                                                                                     -
                                                                                                                                                     "2+j")
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (REPLACES
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (LEMMA
                                                                                                                                                           "complex_commutative_mult")
                                                                                                                                                          (("2"
                                                                                                                                                            (INST?)
                                                                                                                                                            (("2"
                                                                                                                                                              (ASSERT)
                                                                                                                                                              (("2"
                                                                                                                                                                (HIDE-ALL-BUT
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (GRIND
                                                                                                                                                                   :EXCLUDE
                                                                                                                                                                   ("csigma"
                                                                                                                                                                    "cpow"))
                                                                                                                                                                  NIL
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (TYPEPRED
                                                                           "t")
                                                                          (("2"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -2
                                                                              -3
                                                                              1))
                                                                            (("2"
                                                                              (GRIND-REALS)
                                                                              (("2"
                                                                                (LEMMA
                                                                                 "expt_lt1_bound2")
                                                                                (("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "t"
                                                                                   "k")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "^")
                                                                                    (("2"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (CASE
                                                                      "EXISTS (t:posreal): t<1 AND t * sigma(k + 1, n,
                                                     LAMBDA (i: nat): abs(b(i)) * abs(gamma) ^ i)
                                                <  abs(cpolynomial(a, n)(c))")
                                                                  (("1"
                                                                    (SKEEP -1)
                                                                    (("1"
                                                                      (INST +
                                                                       "t")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (MULT-BY
                                                                           -2
                                                                           "t^k")
                                                                          (("1"
                                                                            (REWRITE
                                                                             "sigma_scal"
                                                                             :DIR
                                                                             RL)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "sigma_scal_right"
                                                                               :DIR
                                                                               RL)
                                                                              (("1"
                                                                                (INVOKE
                                                                                 (CASE
                                                                                     "%1 <= %2")
                                                                                 (!
                                                                                  1
                                                                                  1)
                                                                                 (!
                                                                                  -2
                                                                                  1))
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   (-2
                                                                                    2))
                                                                                  (("2"
                                                                                    (REWRITE
                                                                                     "sigma_le")
                                                                                    (("2"
                                                                                      (HIDE
                                                                                       2)
                                                                                      (("2"
                                                                                        (SKOSIMP*)
                                                                                        (("2"
                                                                                          (CASE
                                                                                              "t^n!1 <= t^k*t")
                                                                                          (("1"
                                                                                            (MULT-BY
                                                                                             -1
                                                                                             "abs(b(n!1)) * abs(gamma) ^ n!1")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (HIDE
                                                                                             2)
                                                                                            (("2"
                                                                                              (LEMMA
                                                                                               "expt_plus")
                                                                                              (("2"
                                                                                                (INST
                                                                                                 -
                                                                                                 "k"
                                                                                                 "1"
                                                                                                 "t")
                                                                                                (("2"
                                                                                                  (LEMMA
                                                                                                   "expt_x1")
                                                                                                  (("2"
                                                                                                    (INST?)
                                                                                                    (("2"
                                                                                                      (REPLACES
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (REPLACES
                                                                                                         -1
                                                                                                         :DIR
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "^"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (REWRITE
                                                                                                               "both_sides_expt_lt1_le_aux"
                                                                                                               1)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (HIDE 2)
                                                                    (("2"
                                                                      (CASE
                                                                          "FORALL (Y:real,epsil:posreal): EXISTS (t:posreal): t<1 AND t*Y < epsil")
                                                                      (("1"
                                                                        (INST?)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("2"
                                                                          (SKEEP)
                                                                          (("2"
                                                                            (CASE
                                                                                "Y<=0")
                                                                            (("1"
                                                                              (INST
                                                                               +
                                                                               "1/2")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (INST
                                                                               +
                                                                               "min(1/2,epsil/(2*Y))")
                                                                              (("1"
                                                                                (GRIND)
                                                                                (("1"
                                                                                  (CROSS-MULT
                                                                                   2)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (GRIND)
                                                                                  (("1"
                                                                                    (CROSS-MULT
                                                                                     1)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (CROSS-MULT
                                                                                     1)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (HIDE-ALL-BUT (1 2))
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 3)
                (("2" (HIDE -2)
                  (("2" (SKOSIMP*)
                    (("2" (INST - "a!1" "c!1" "n!1")
                      (("2" (SKOSIMP*)
                        (("2"
                          (NAME "bb"
                                "LaMBDA (i:nat): IF i>n!1 THEN real_(0) ELSE b!1(i) ENDIF")
                          (("2" (INST + "bb")
                            (("2" (LEMMA " cpolynomial_eq_le_degree")
                              (("2" (INST - "b!1" "bb" "n!1")
                                (("2" (SPLIT -)
                                  (("1" (REPLACE -1 :DIR RL)
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -4)
                                        (("1" (REPLACE -3 :DIR RL)
                                          (("1" (SPLIT +)
                                            (("1" (HIDE-ALL-BUT 1)
                                              (("1" (EXPAND "bb")
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (EXPAND "bb" 1)
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (SKOSIMP*)
                                      (("2" (EXPAND "bb" 1)
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL) NIL
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) NIL
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL) NIL
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|div_cancel4| FORMULA-DECL NIL |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) NIL
    (> CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cpolynomial_attains_minimum| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|abs_is_0| FORMULA-DECL NIL |polar| NIL) (< CONST-DECL "bool" |reals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqrt_square| FORMULA-DECL NIL |sqrt| |reals|)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|cpolynomial_limit_infinity| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|even_minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|odd_plus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|root_complex| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|sigma_scal_right| FORMULA-DECL NIL |sigma| |reals|)
    (|subrange| TYPE-EQ-DECL NIL |integers| NIL)
    (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|expt_plus| FORMULA-DECL NIL |exponentiation| NIL)
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|both_sides_expt_lt1_le_aux| FORMULA-DECL NIL |exponentiation| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|sigma_le| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|)
    (|nzreal_min| APPLICATION-JUDGEMENT "{z: nzreal | z <= x AND z <= y}"
     |real_defs| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    NIL (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) NIL
    (|div_mult_pos_gt2| FORMULA-DECL NIL |extra_real_props| NIL)
    (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|div_mult_pos_ge1| FORMULA-DECL NIL |real_props| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|expt_lt1_bound2| FORMULA-DECL NIL |exponentiation| NIL)
    (|csigma_real_triangle| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) NIL
    NIL (|even?| CONST-DECL "bool" |integers| NIL)
    (|even_nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|cpow_real| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|div_distributes_minus| FORMULA-DECL NIL |real_props| NIL)
    (|div_simp| FORMULA-DECL NIL |real_props| NIL)
    (|times_div1| FORMULA-DECL NIL |real_props| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|expt_x0| FORMULA-DECL NIL |exponentiation| NIL)
    (|posreal_expt| APPLICATION-JUDGEMENT "posreal" |exponentiation| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|expt_x1| FORMULA-DECL NIL |exponentiation| NIL)
    (|zero_times1| FORMULA-DECL NIL |real_props| NIL)
    (|both_sides_times2| FORMULA-DECL NIL |real_props| NIL)
    (|mult_commutes| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (^ DEF-DECL "complex" |complex_types| NIL)
    (|abs_mult| FORMULA-DECL NIL |polar| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|) NIL
    (|sigma_restrict_eq_0| FORMULA-DECL NIL |sigma| |reals|)
    (|nnreal_expt| JUDGEMENT-TCC NIL |exponentiation| NIL)
    (|abs_cpow| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|cpow_mult| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|abs_triangle| FORMULA-DECL NIL |polar| NIL) NIL NIL
    (|posreal_exp| APPLICATION-JUDGEMENT "posreal" |exponentiation| NIL)
    (|nnreal_exp| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    NIL NIL (|root_complex_def| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|cpolynomial_eq_le_degree| FORMULA-DECL NIL |fundamental_algebra| NIL) NIL
    (|complex_poly_shift| FORMULA-DECL NIL |fundamental_algebra| NIL))
   NIL)
  (|fundamental_algebra-2| |nil| 3596554667
   ("" (SKEEP)
    (("" (CASE "n = 1")
      (("1" (REPLACES -1)
        (("1" (EXPAND "cpolynomial")
          (("1" (EXPAND "csigma")
            (("1" (EXPAND "*")
              (("1" (EXPAND "csigma")
                (("1" (EXPAND "cpow")
                  (("1" (EXPAND "cpow")
                    (("1" (INST + "-a(0)/a(1)")
                      (("1" (GRIND)
                        (("1"
                          (CASE
                              "Im(a(0)) = Im(a(0))*(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))/(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))")
                          (("1" (GRIND) NIL NIL) ("2" (GRIND-REALS) NIL NIL))
                          NIL)
                         ("2"
                          (CASE
                              "Re(a(0)) = Re(a(0))*(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))/(Im(a(1)) * Im(a(1)) + Re(a(1)) * Re(a(1)))")
                          (("1" (GRIND) NIL NIL) ("2" (GRIND-REALS) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LABEL "n1" 1)
        (("2" (HIDE "n1")
          (("2" (LEMMA "complex_poly_shift")
            (("2"
              (CASE "FORALL (a: [nat -> complex], c: complex, n: nat):
                 EXISTS (b):
                   (FORALL (i:nat): i>n IMPLIES b(i)=real_(0)) AND
                   b(0) = cpolynomial(a, n)(c) AND
                    (FORALL (x): cpolynomial(a, n)(x) = cpolynomial(b, n)(x - c))")
              (("1" (HIDE -2)
                (("1" (LEMMA "cpolynomial_attains_minimum")
                  (("1" (INST - "a" "n")
                    (("1" (SKEEP -)
                      (("1" (INST + "c")
                        (("1" (ASSERT)
                          (("1" (INST - "a" "c" "n")
                            (("1" (SKEEP -2)
                              (("1" (LABEL "newlem" -2)
                                (("1" (LEMMA "abs_is_0")
                                  (("1" (HIDE "newlem")
                                    (("1" (INST?)
                                      (("1" (ASSERT)
                                        (("1"
                                          (CASE
                                              "NOT EXISTS (k:posnat): k<=n AND b(k)/=real_(0) AND FORALL (i:posnat): i<k IMPLIES b(i)=real_(0)")
                                          (("1"
                                            (CASE
                                                "FORALL (k:posnat): k<=n IMPLIES b(k)=real_(0)")
                                            (("1"
                                              (CASE
                                                  "FORALL (x): cpolynomial(a,n)(x)=cpolynomial(a,n)(c)")
                                              (("1"
                                                (LEMMA
                                                 "cpolynomial_limit_infinity")
                                                (("1"
                                                  (INST -
                                                   "abs(cpolynomial(a,n)(c)) + 2"
                                                   "a" "n")
                                                  (("1" (ASSERT)
                                                    (("1" (SKOSIMP*)
                                                      (("1"
                                                        (INST - "real_(M!1)")
                                                        (("1"
                                                          (INST - "real_(M!1)")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (INST - "M!1")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (GRIND
                                                                   :EXCLUDE
                                                                   "cpolynomial")
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (CASE
                                                    "FORALL (j:nat,x): j+1<=n IMPLIES cpolynomial(b,j+1)(x-c) = cpolynomial(a,n)(c)")
                                                (("1" (SKEEP)
                                                  (("1" (INST -5 "x")
                                                    (("1" (INST - "n-1" "x")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (INDUCT "j")
                                                  (("1" (ASSERT)
                                                    (("1" (SKEEP)
                                                      (("1" (INST - "1")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (EXPAND
                                                             "cpolynomial" 1 1)
                                                            (("1"
                                                              (EXPAND "csigma")
                                                              (("1"
                                                                (EXPAND
                                                                 "csigma")
                                                                (("1"
                                                                  (EXPAND "*")
                                                                  (("1"
                                                                    (REPLACE
                                                                     -1)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "cpow"
                                                                         1)
                                                                        (("1"
                                                                          (GRIND
                                                                           :EXCLUDE
                                                                           "cpolynomial")
                                                                          (("1"
                                                                            (DECOMPOSE-EQUALITY
                                                                             1)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKOLEM 1 "jj")
                                                    (("2" (FLATTEN)
                                                      (("2" (ASSERT)
                                                        (("2" (SKEEP)
                                                          (("2" (INST - "x")
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (REWRITE
                                                                 "cpolynomial_rec"
                                                                 1)
                                                                (("2"
                                                                  (INST -
                                                                   "2+jj")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (REPLACE
                                                                       -3)
                                                                      (("2"
                                                                        (GRIND
                                                                         :EXCLUDE
                                                                         "cpolynomial")
                                                                        (("2"
                                                                          (DECOMPOSE-EQUALITY
                                                                           1)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2"
                                              (CASE
                                                  "FORALL (kk,jj:nat): kk<=jj AND 1+jj <= n IMPLIES b(1+kk) = real_(0)")
                                              (("1" (SKEEP)
                                                (("1" (INST - "k-1" "k-1")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2" (INDUCT "jj")
                                                  (("1" (SKEEP)
                                                    (("1" (INST + "1")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKEEP)
                                                    (("2" (SKEEP)
                                                      (("2"
                                                        (CASE "NOT kk = 1+j")
                                                        (("1" (INST - "kk")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (REPLACES -1)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (INST + "2+j")
                                                              (("2" (ASSERT)
                                                                (("2" (SKEEP)
                                                                  (("2"
                                                                    (INST -
                                                                     "i-1")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (LABEL "hyp1" -1)
                                            (("2" (SKEEP -)
                                              (("2" (DELABEL "hyp1")
                                                (("2" (LABEL "hyp1" -2)
                                                  (("2"
                                                    (LEMMA " root_complex_def")
                                                    (("2"
                                                      (CASE "-b(k)=real_(0)")
                                                      (("1"
                                                        (CASE
                                                            "-(-b(k)) = real_(0)")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (HIDE-ALL-BUT
                                                             (-1 1))
                                                            (("1" (GRIND)
                                                              (("1"
                                                                (DECOMPOSE-EQUALITY
                                                                 1)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (REPLACES -1)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (INST -
                                                               "cpolynomial(a,n)(c)/(-b(k))"
                                                               "k")
                                                              (("1"
                                                                (NAME "gamma"
                                                                      "root_complex(cpolynomial(a, n)(c) / (-b(k)))(k)")
                                                                (("1"
                                                                  (REPLACE -1)
                                                                  (("1"
                                                                    (NAME "z"
                                                                          "LAMBDA (t:real): c + t*gamma")
                                                                    (("1"
                                                                      (CASE
                                                                          "EXISTS (t:posreal): t<1 AND sigma(k+1,n,LAMBDA (i:nat): abs(b(i))*t^i*abs(gamma)^i) < t^k * abs(cpolynomial(a,n)(c))")
                                                                      (("1"
                                                                        (SKEEP
                                                                         -)
                                                                        (("1"
                                                                          (LABEL
                                                                           "bigsig"
                                                                           -2)
                                                                          (("1"
                                                                            (LABEL
                                                                             "tlt1"
                                                                             -1)
                                                                            (("1"
                                                                              (CASE
                                                                                  "0<t^k AND t^k < 1")
                                                                              (("1"
                                                                                (LABEL
                                                                                 "ttp"
                                                                                 -1)
                                                                                (("1"
                                                                                  (HIDE
                                                                                   "ttp")
                                                                                  (("1"
                                                                                    (HIDE
                                                                                     "tlt1")
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "abs(cpolynomial(a,n)(z(t))) < abs(cpolynomial(a,n)(c))")
                                                                                      (("1"
                                                                                        (INST
                                                                                         -8
                                                                                         "z(t)")
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (NAME
                                                                                         "pzo"
                                                                                         "cpolynomial(a, n)(c)")
                                                                                        (("2"
                                                                                          (REPLACE
                                                                                           -1)
                                                                                          (("2"
                                                                                            (LEMMA
                                                                                             "csigma_real_triangle")
                                                                                            (("2"
                                                                                              (INST-CP
                                                                                               -11
                                                                                               "z(t)")
                                                                                              (("2"
                                                                                                (REPLACE
                                                                                                 -12
                                                                                                 +)
                                                                                                (("2"
                                                                                                  (CASE
                                                                                                      "NOT z(t) - c = t*gamma")
                                                                                                  (("1"
                                                                                                    (EXPAND
                                                                                                     "z"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (GRIND
                                                                                                       :EXCLUDE
                                                                                                       ("csigma"
                                                                                                        "sigma"
                                                                                                        "cpolynomial"
                                                                                                        "cpow"
                                                                                                        "root_complex"))
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (REPLACES
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      (("2"
                                                                                                        (NAME
                                                                                                         "FF"
                                                                                                         "LAMBDA (i:nat): IF i<=k OR i>n THEN real_(0) ELSE b(i)*t^i*cpow(gamma)(i) ENDIF")
                                                                                                        (("2"
                                                                                                          (CASE
                                                                                                              "cpolynomial(b,n)(t*gamma) = pzo + b(k)*cpow(t*gamma)(k) + csigma(FF,n)")
                                                                                                          (("1"
                                                                                                            (REPLACES
                                                                                                             -1
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (LEMMA
                                                                                                               "abs_triangle")
                                                                                                              (("1"
                                                                                                                (INST
                                                                                                                 -
                                                                                                                 "b(k) * cpow(t * gamma)(k) +pzo"
                                                                                                                 "csigma(FF,n)")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (INVOKE
                                                                                                                     (CASE
                                                                                                                         "%1 < abs(pzo)")
                                                                                                                     (!
                                                                                                                      -1
                                                                                                                      2))
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (GRIND
                                                                                                                         :EXCLUDE
                                                                                                                         ("csigma"
                                                                                                                          "sigma"
                                                                                                                          "cpolynomial"
                                                                                                                          "cpow"
                                                                                                                          "root_complex"))
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (HIDE
                                                                                                                       (-1
                                                                                                                        2))
                                                                                                                      (("2"
                                                                                                                        (REWRITE
                                                                                                                         "cpow_mult")
                                                                                                                        (("2"
                                                                                                                          (EXPAND
                                                                                                                           "gamma"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (REWRITE
                                                                                                                             "root_complex_def")
                                                                                                                            (("2"
                                                                                                                              (LEMMA
                                                                                                                               "pzo")
                                                                                                                              (("2"
                                                                                                                                (REPLACE
                                                                                                                                 -1
                                                                                                                                 +
                                                                                                                                 :DIR
                                                                                                                                 RL)
                                                                                                                                (("2"
                                                                                                                                  (CASE
                                                                                                                                      "NOT b(k) * (cpow(real_(t))(k) * (pzo / (-b(k)))) + pzo = pzo*(1-t^k)")
                                                                                                                                  (("1"
                                                                                                                                    (HIDE
                                                                                                                                     2)
                                                                                                                                    (("1"
                                                                                                                                      (CASE
                                                                                                                                          "NOT pzo/(-b(k)) = (-pzo)/b(k)")
                                                                                                                                      (("1"
                                                                                                                                        (CROSS-MULT
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (GRIND
                                                                                                                                           :EXCLUDE
                                                                                                                                           ("csigma"
                                                                                                                                            "sigma"
                                                                                                                                            "cpolynomial"
                                                                                                                                            "cpow"
                                                                                                                                            "root_complex"))
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL)
                                                                                                                                       ("2"
                                                                                                                                        (REPLACES
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("2"
                                                                                                                                            (CASE
                                                                                                                                                "cpow(real_(t))(k) = real_(t^k)")
                                                                                                                                            (("1"
                                                                                                                                              (REPLACES
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (HIDE-ALL-BUT
                                                                                                                                                   (1
                                                                                                                                                    2
                                                                                                                                                    3))
                                                                                                                                                  (("1"
                                                                                                                                                    (LEMMA
                                                                                                                                                     "complex_commutative_mult")
                                                                                                                                                    (("1"
                                                                                                                                                      (INST
                                                                                                                                                       -
                                                                                                                                                       "(-pzo)"
                                                                                                                                                       _)
                                                                                                                                                      (("1"
                                                                                                                                                        (INST?)
                                                                                                                                                        (("1"
                                                                                                                                                          (REPLACES
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (LEMMA
                                                                                                                                                             "associative_mult")
                                                                                                                                                            (("1"
                                                                                                                                                              (INST?)
                                                                                                                                                              (("1"
                                                                                                                                                                (REPLACES
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (LEMMA
                                                                                                                                                                   "complex_commutative_mult")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (INST?)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (REPLACES
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (LEMMA
                                                                                                                                                                         "associative_mult")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (INST?)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (REPLACES
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (LEMMA
                                                                                                                                                                               "associative_mult")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (INST?)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (REPLACES
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (REPLACES
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ASSERT)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (REPLACES
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (REWRITE
                                                                                                                                                                                           "complex_commutative_mult")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (GRIND
                                                                                                                                                                                             :EXCLUDE
                                                                                                                                                                                             ("csigma"
                                                                                                                                                                                              "sigma"
                                                                                                                                                                                              "cpolynomial"
                                                                                                                                                                                              "cpow"
                                                                                                                                                                                              "root_complex"))
                                                                                                                                                                                            NIL
                                                                                                                                                                                            NIL))
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (CROSS-MULT
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (GRIND
                                                                                                                                                 :EXCLUDE
                                                                                                                                                 ("csigma"
                                                                                                                                                  "sigma"
                                                                                                                                                  "cpolynomial"
                                                                                                                                                  "cpow"
                                                                                                                                                  "root_complex"))
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (REPLACES
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (REWRITE
                                                                                                                                       "abs_mult")
                                                                                                                                      (("2"
                                                                                                                                        (REVEAL
                                                                                                                                         "ttp")
                                                                                                                                        (("2"
                                                                                                                                          (FLATTEN)
                                                                                                                                          (("2"
                                                                                                                                            (GRIND
                                                                                                                                             :EXCLUDE
                                                                                                                                             ("csigma"
                                                                                                                                              "sigma"
                                                                                                                                              "cpolynomial"
                                                                                                                                              "cpow"
                                                                                                                                              "root_complex"))
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (CASE
                                                                                                                "FORALL (jj:nat):  cpolynomial(b, jj+1)(t * gamma) = pzo + (IF jj+1>=k THEN b(k) * cpow(t * gamma)(k) ELSE real_(0) ENDIF) + csigma(FF, jj+1)")
                                                                                                            (("1"
                                                                                                              (INST
                                                                                                               -
                                                                                                               "n-1")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (INDUCT
                                                                                                               "jj")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (CASE
                                                                                                                      "k = 0")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (CASE
                                                                                                                        "k >= 2")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "cpolynomial"
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (EXPAND
                                                                                                                           "csigma"
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (EXPAND
                                                                                                                             "csigma"
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (EXPAND
                                                                                                                               "FF"
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 "*"
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (COPY
                                                                                                                                   "hyp1")
                                                                                                                                  (("1"
                                                                                                                                    (INST
                                                                                                                                     -
                                                                                                                                     "1")
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      (("1"
                                                                                                                                        (REPLACES
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("1"
                                                                                                                                            (EXPAND
                                                                                                                                             "cpow"
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (GRIND
                                                                                                                                               :EXCLUDE
                                                                                                                                               ("csigma"
                                                                                                                                                "sigma"
                                                                                                                                                "cpolynomial"
                                                                                                                                                "cpow"
                                                                                                                                                "root_complex"))
                                                                                                                                              NIL
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (ASSERT)
                                                                                                                      (("2"
                                                                                                                        (HIDE
                                                                                                                         4)
                                                                                                                        (("2"
                                                                                                                          (EXPAND
                                                                                                                           "cpolynomial"
                                                                                                                           3)
                                                                                                                          (("2"
                                                                                                                            (EXPAND
                                                                                                                             "csigma"
                                                                                                                             +)
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "csigma"
                                                                                                                               +)
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "*")
                                                                                                                                (("2"
                                                                                                                                  (EXPAND
                                                                                                                                   "FF"
                                                                                                                                   3)
                                                                                                                                  (("2"
                                                                                                                                    (CASE
                                                                                                                                        "NOT k = 1")
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (REPLACES
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (EXPAND
                                                                                                                                           "cpow"
                                                                                                                                           3)
                                                                                                                                          (("2"
                                                                                                                                            (GRIND
                                                                                                                                             :EXCLUDE
                                                                                                                                             ("csigma"
                                                                                                                                              "sigma"
                                                                                                                                              "cpolynomial"
                                                                                                                                              "cpow"
                                                                                                                                              "root_complex"))
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (ASSERT)
                                                                                                                (("2"
                                                                                                                  (SKEEP)
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (LIFT-IF
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (SPLIT
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (FLATTEN)
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (EXPAND
                                                                                                                               "cpolynomial"
                                                                                                                               (-2
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 "csigma"
                                                                                                                                 +)
                                                                                                                                (("1"
                                                                                                                                  (HIDE
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("1"
                                                                                                                                      (REPLACE
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (EXPAND
                                                                                                                                         "*")
                                                                                                                                        (("1"
                                                                                                                                          (EXPAND
                                                                                                                                           "FF"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("1"
                                                                                                                                              (LIFT-IF
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (SPLIT
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (FLATTEN)
                                                                                                                                                  (("1"
                                                                                                                                                    (REVEAL
                                                                                                                                                     "newlem")
                                                                                                                                                    (("1"
                                                                                                                                                      (INST
                                                                                                                                                       -
                                                                                                                                                       "2+j")
                                                                                                                                                      (("1"
                                                                                                                                                        (ASSERT)
                                                                                                                                                        (("1"
                                                                                                                                                          (REPLACES
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (LEMMA
                                                                                                                                                             "complex_commutative_mult")
                                                                                                                                                            (("1"
                                                                                                                                                              (INST
                                                                                                                                                               -
                                                                                                                                                               "real_(0)"
                                                                                                                                                               _)
                                                                                                                                                              (("1"
                                                                                                                                                                (INST?)
                                                                                                                                                                (("1"
                                                                                                                                                                  (ASSERT)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (GRIND
                                                                                                                                                                     :EXCLUDE
                                                                                                                                                                     ("csigma"
                                                                                                                                                                      "sigma"
                                                                                                                                                                      "cpolynomial"
                                                                                                                                                                      "cpow"
                                                                                                                                                                      "root_complex"))
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL)
                                                                                                                                                 ("2"
                                                                                                                                                  (FLATTEN)
                                                                                                                                                  (("2"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    (("2"
                                                                                                                                                      (GRIND
                                                                                                                                                       :EXCLUDE
                                                                                                                                                       ("csigma"
                                                                                                                                                        "sigma"
                                                                                                                                                        "cpolynomial"
                                                                                                                                                        "cpow"
                                                                                                                                                        "root_complex"))
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (FLATTEN)
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (LIFT-IF
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (SPLIT
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (FLATTEN)
                                                                                                                                  (("1"
                                                                                                                                    (CASE
                                                                                                                                        "NOT k = 2+j")
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (HIDE
                                                                                                                                       (-2
                                                                                                                                        2))
                                                                                                                                      (("2"
                                                                                                                                        (REPLACES
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("2"
                                                                                                                                            (EXPAND
                                                                                                                                             "cpolynomial"
                                                                                                                                             (-1
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (EXPAND
                                                                                                                                               "csigma"
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (REPLACES
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (ASSERT)
                                                                                                                                                  (("2"
                                                                                                                                                    (EXPAND
                                                                                                                                                     "FF"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (EXPAND
                                                                                                                                                         "*")
                                                                                                                                                        (("2"
                                                                                                                                                          (GRIND
                                                                                                                                                           :EXCLUDE
                                                                                                                                                           ("csigma"
                                                                                                                                                            "sigma"
                                                                                                                                                            "cpolynomial"
                                                                                                                                                            "cpow"
                                                                                                                                                            "root_complex"))
                                                                                                                                                          NIL
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL)
                                                                                                                                 ("2"
                                                                                                                                  (FLATTEN)
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (EXPAND
                                                                                                                                       "cpolynomial"
                                                                                                                                       (-1
                                                                                                                                        2))
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (EXPAND
                                                                                                                                           "csigma"
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (REPLACE
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("2"
                                                                                                                                                (EXPAND
                                                                                                                                                 "FF"
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "*"
                                                                                                                                                   2)
                                                                                                                                                  (("2"
                                                                                                                                                    (COPY
                                                                                                                                                     "hyp1")
                                                                                                                                                    (("2"
                                                                                                                                                      (INST
                                                                                                                                                       -
                                                                                                                                                       "2+j")
                                                                                                                                                      (("2"
                                                                                                                                                        (ASSERT)
                                                                                                                                                        (("2"
                                                                                                                                                          (REPLACES
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (LEMMA
                                                                                                                                                             "complex_commutative_mult")
                                                                                                                                                            (("2"
                                                                                                                                                              (INST
                                                                                                                                                               -
                                                                                                                                                               "real_(0)"
                                                                                                                                                               _)
                                                                                                                                                              (("2"
                                                                                                                                                                (INST?)
                                                                                                                                                                (("2"
                                                                                                                                                                  (ASSERT)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (GRIND
                                                                                                                                                                     :EXCLUDE
                                                                                                                                                                     ("csigma"
                                                                                                                                                                      "sigma"
                                                                                                                                                                      "cpolynomial"
                                                                                                                                                                      "cpow"
                                                                                                                                                                      "root_complex"))
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (SPLIT
                                                                                 +)
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "posreal_expt")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "^"
                                                                                     1)
                                                                                    (("1"
                                                                                      (INST?)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (LEMMA
                                                                                   "both_sides_expt_pos_lt_aux")
                                                                                  (("2"
                                                                                    (INST
                                                                                     -
                                                                                     "k-1"
                                                                                     "t"
                                                                                     "1")
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      (("2"
                                                                                        (LEMMA
                                                                                         "expt_1n_aux")
                                                                                        (("2"
                                                                                          (INST?)
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "^"
                                                                                             1)
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (CASE
                                                                            "EXISTS (t:posreal): t<1 AND t * sigma(k + 1, n,
                                  LAMBDA (i: nat): abs(b(i)) * abs(gamma) ^ i)
                             <  abs(cpolynomial(a, n)(c))")
                                                                        (("1"
                                                                          (SKEEP
                                                                           -1)
                                                                          (("1"
                                                                            (INST
                                                                             +
                                                                             "t")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (MULT-BY
                                                                                 -2
                                                                                 "t^k")
                                                                                (("1"
                                                                                  (REWRITE
                                                                                   "sigma_scal"
                                                                                   :DIR
                                                                                   RL)
                                                                                  (("1"
                                                                                    (REWRITE
                                                                                     "sigma_scal_right"
                                                                                     :DIR
                                                                                     RL)
                                                                                    (("1"
                                                                                      (INVOKE
                                                                                       (CASE
                                                                                           "%1 <= %2")
                                                                                       (!
                                                                                        1
                                                                                        1)
                                                                                       (!
                                                                                        -2
                                                                                        1))
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (HIDE
                                                                                         (-2
                                                                                          2))
                                                                                        (("2"
                                                                                          (REWRITE
                                                                                           "sigma_le")
                                                                                          (("2"
                                                                                            (HIDE
                                                                                             2)
                                                                                            (("2"
                                                                                              (SKOSIMP*)
                                                                                              (("2"
                                                                                                (CASE
                                                                                                    "t^n!1 <= t^k*t")
                                                                                                (("1"
                                                                                                  (MULT-BY
                                                                                                   -1
                                                                                                   "abs(b(n!1)) * abs(gamma) ^ n!1")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (HIDE
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (LEMMA
                                                                                                     "expt_plus")
                                                                                                    (("2"
                                                                                                      (INST
                                                                                                       -
                                                                                                       "k"
                                                                                                       "1"
                                                                                                       "t")
                                                                                                      (("2"
                                                                                                        (LEMMA
                                                                                                         "expt_x1")
                                                                                                        (("2"
                                                                                                          (INST?)
                                                                                                          (("2"
                                                                                                            (REPLACES
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (REPLACES
                                                                                                               -1
                                                                                                               :DIR
                                                                                                               RL)
                                                                                                              (("2"
                                                                                                                (ASSERT)
                                                                                                                (("2"
                                                                                                                  (EXPAND
                                                                                                                   "^"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (REWRITE
                                                                                                                     "both_sides_expt_lt1_le_aux"
                                                                                                                     1)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE
                                                                           2)
                                                                          (("2"
                                                                            (CASE
                                                                                "FORALL (Y:real,epsil:posreal): EXISTS (t:posreal): t<1 AND t*Y < epsil")
                                                                            (("1"
                                                                              (INST?)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE-ALL-BUT
                                                                               1)
                                                                              (("2"
                                                                                (SKEEP)
                                                                                (("2"
                                                                                  (CASE
                                                                                      "Y<=0")
                                                                                  (("1"
                                                                                    (INST
                                                                                     +
                                                                                     "1/2")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (INST
                                                                                     +
                                                                                     "min(1/2,epsil/(2*Y))")
                                                                                    (("1"
                                                                                      (GRIND)
                                                                                      (("1"
                                                                                        (CROSS-MULT
                                                                                         2)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      (("2"
                                                                                        (GRIND)
                                                                                        (("1"
                                                                                          (GRIND-REALS)
                                                                                          NIL
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (GRIND-REALS)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("3"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (HIDE-ALL-BUT
                                                                 (1 2))
                                                                (("2" (ASSERT)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE 2)
                                                        (("2" (GROUND)
                                                          (("2" (REVEAL -2)
                                                            (("2" (REVEAL 1)
                                                              (("2"
                                                                (INST -7 "c")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (CASE
                                                                        "c-c=real_(0)")
                                                                    (("1"
                                                                      (REWRITE
                                                                       -1)
                                                                      (("1"
                                                                        (POSTPONE)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (POSTPONE)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 3)
                (("2" (HIDE -2)
                  (("2" (SKOSIMP*)
                    (("2" (INST - "a!1" "c!1" "n!1")
                      (("2" (SKOSIMP*)
                        (("2"
                          (NAME "bb"
                                "LaMBDA (i:nat): IF i>n!1 THEN real_(0) ELSE b!1(i) ENDIF")
                          (("2" (INST + "bb")
                            (("2" (LEMMA " cpolynomial_eq_le_degree")
                              (("2" (INST - "b!1" "bb" "n!1")
                                (("2" (SPLIT -)
                                  (("1" (REPLACE -1 :DIR RL)
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -4)
                                        (("1" (REPLACE -3 :DIR RL)
                                          (("1" (SPLIT +)
                                            (("1" (HIDE-ALL-BUT 1)
                                              (("1" (EXPAND "bb")
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (EXPAND "bb" 1)
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (SKOSIMP*)
                                      (("2" (EXPAND "bb" 1)
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abs_is_0| FORMULA-DECL NIL |polar| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|sigma_scal_right| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_split| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_le| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_restrict_eq_0| FORMULA-DECL NIL |sigma| |reals|)
    (|abs_mult| FORMULA-DECL NIL |polar| NIL)
    (|abs_triangle| FORMULA-DECL NIL |polar| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|))
   NIL)
  (|fundamental_algebra-1| |nil| 3596475975
   ("" (SKEEP)
    (("" (CASE "n = 1")
      (("1" (REPLACES -1)
        (("1" (EXPAND "cpolynomial")
          (("1" (EXPAND "csigma")
            (("1" (EXPAND "*")
              (("1" (EXPAND "csigma")
                (("1" (EXPAND "cpow")
                  (("1" (EXPAND "cpow")
                    (("1" (INST + "-a(0)/a(1)")
                      (("1" (ASSERT)
                        (("1" (LEMMA "div_def")
                          (("1" (INST?)
                            (("1" (REPLACE -1)
                              (("1" (LEMMA "complex_commutative_mult")
                                (("1" (INST - "-a(0)" "1/a(1)")
                                  (("1" (REPLACES -1)
                                    (("1" (LEMMA "associative_mult")
                                      (("1" (INST?)
                                        (("1" (REPLACES -1)
                                          (("1" (REWRITE "inverse_mult")
                                            (("1" (REWRITE "identity_mult")
                                              (("1"
                                                (REWRITE "minus_add" + :DIR RL)
                                                NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LABEL "n1" 1)
        (("2" (HIDE "n1")
          (("2" (LEMMA "complex_poly_shift")
            (("2" (LEMMA "cpolynomial_attains_minimum")
              (("2" (INST - "a" "n")
                (("2" (SKEEP -)
                  (("2" (INST + "c")
                    (("2" (ASSERT)
                      (("2" (INST - "a" "c" "n")
                        (("2" (SKEEP -2)
                          (("2" (LEMMA "abs_is_0")
                            (("2" (INST?)
                              (("2" (ASSERT)
                                (("2"
                                  (CASE
                                      "NOT EXISTS (k:posnat): k<=n AND b(k)/=0 AND FORALL (i:posnat): i<k IMPLIES b(i)=0")
                                  (("1"
                                    (CASE
                                        "FORALL (k:posnat): k<=n IMPLIES b(k)=0")
                                    (("1"
                                      (CASE
                                          "FORALL (x): cpolynomial(a,n)(x)=cpolynomial(a,n)(c)")
                                      (("1"
                                        (LEMMA "cpolynomial_limit_infinity")
                                        (("1"
                                          (INST -
                                           "abs(cpolynomial(a,n)(c)) + 2" "a"
                                           "n")
                                          (("1" (ASSERT)
                                            (("1" (SKOSIMP*)
                                              (("1" (INST - "M!1")
                                                (("1" (LEMMA "abs_real_rew")
                                                  (("1" (INST - "M!1")
                                                    (("1" (ASSERT)
                                                      (("1" (INST - "M!1")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (CASE
                                            "FORALL (j:nat,x): j+1<=n IMPLIES cpolynomial(b,j+1)(x-c) = cpolynomial(a,n)(c)")
                                        (("1" (SKEEP)
                                          (("1" (INST -5 "x")
                                            (("1" (INST - "n-1" "x")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (INDUCT "j")
                                          (("1" (ASSERT)
                                            (("1" (SKEEP)
                                              (("1" (INST - "1")
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (EXPAND "cpolynomial" 1 1)
                                                    (("1" (EXPAND "csigma")
                                                      (("1" (EXPAND "csigma")
                                                        (("1" (EXPAND "*")
                                                          (("1" (REPLACE -1)
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (EXPAND "cpow"
                                                                        1)
                                                                (("1" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKOLEM 1 "jj")
                                            (("2" (FLATTEN)
                                              (("2" (ASSERT)
                                                (("2" (SKEEP)
                                                  (("2" (INST - "x")
                                                    (("2" (ASSERT)
                                                      (("2"
                                                        (REWRITE
                                                         "cpolynomial_rec" 1)
                                                        (("2" (INST - "2+jj")
                                                          (("2" (ASSERT)
                                                            (("2" (REPLACE -3)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2"
                                      (CASE
                                          "FORALL (kk,jj:nat): kk<=jj AND 1+jj <= n IMPLIES b(1+kk) = 0")
                                      (("1" (SKEEP)
                                        (("1" (INST - "k-1" "k-1")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2" (INDUCT "jj")
                                          (("1" (SKEEP)
                                            (("1" (INST + "1")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (SKEEP)
                                            (("2" (SKEEP)
                                              (("2" (CASE "NOT kk = 1+j")
                                                (("1" (INST - "kk")
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (REPLACES -1)
                                                  (("2" (ASSERT)
                                                    (("2" (INST + "2+j")
                                                      (("2" (ASSERT)
                                                        (("2" (SKEEP)
                                                          (("2"
                                                            (INST - "i!1-1")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (LABEL "hyp1" -1)
                                    (("2" (SKEEP -)
                                      (("2" (DELABEL "hyp1")
                                        (("2" (LABEL "hyp1" -2)
                                          (("2" (LEMMA " root_complex_def")
                                            (("2" (CASE "-b(k)=0")
                                              (("1" (CASE "-(-b(k)) = 0")
                                                (("1" (ASSERT)
                                                  (("1" (HIDE-ALL-BUT (-1 1))
                                                    (("1"
                                                      (LEMMA
                                                       "number_fields_neg1_times")
                                                      (("1" (INST - "b(k)")
                                                        (("1"
                                                          (REPLACES -1 :DIR RL)
                                                          (("1"
                                                            (LEMMA
                                                             "number_fields_negative_times")
                                                            (("1" (INST?)
                                                              (("1"
                                                                (REPLACES -1)
                                                                (("1"
                                                                  (REWRITE
                                                                   "number_fields_negate_negate")
                                                                  (("1"
                                                                    (REWRITE
                                                                     "identity_mult")
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACES -1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (INST -
                                                 "cpolynomial(a,n)(c)/(-b(k))"
                                                 "k")
                                                (("1"
                                                  (NAME "gamma"
                                                        "root_complex(cpolynomial(a, n)(c) / (-b(k)))(k)")
                                                  (("1" (REPLACE -1)
                                                    (("1"
                                                      (NAME "z"
                                                            "LAMBDA (t:real): c + t*gamma")
                                                      (("1"
                                                        (CASE
                                                            "EXISTS (t:posreal): t<1 AND sigma(k+1,n,LAMBDA (i:nat): abs(b(i))*t^i*abs(gamma)^i) < t^k * abs(cpolynomial(a,n)(c))")
                                                        (("1" (SKEEP -)
                                                          (("1"
                                                            (LABEL "tlt1" -1)
                                                            (("1"
                                                              (CASE
                                                                  "0<t^k AND t^k < 1")
                                                              (("1"
                                                                (LABEL "ttp"
                                                                       -1)
                                                                (("1"
                                                                  (HIDE "ttp")
                                                                  (("1"
                                                                    (HIDE
                                                                     "tlt1")
                                                                    (("1"
                                                                      (CASE
                                                                          "abs(cpolynomial(a,n)(z(t))) < abs(cpolynomial(a,n)(c))")
                                                                      (("1"
                                                                        (INST
                                                                         -8
                                                                         "z(t)")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (NAME
                                                                         "pzo"
                                                                         "cpolynomial(a, n)(c)")
                                                                        (("2"
                                                                          (REPLACE
                                                                           -1)
                                                                          (("2"
                                                                            (LEMMA
                                                                             "csigma_real_triangle")
                                                                            (("2"
                                                                              (INST-CP
                                                                               -11
                                                                               "z(t)")
                                                                              (("2"
                                                                                (REPLACE
                                                                                 -12
                                                                                 +)
                                                                                (("2"
                                                                                  (CASE
                                                                                      "NOT z(t) - c = t*gamma")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "z"
                                                                                     1)
                                                                                    (("1"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (REPLACES
                                                                                     -1)
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      (("2"
                                                                                        (NAME
                                                                                         "FF"
                                                                                         "LAMBDA (i:nat): IF i<=k OR i>n THEN 0 ELSE b(i) ENDIF")
                                                                                        (("2"
                                                                                          (CASE
                                                                                              "FORALL (x): cpolynomial(b,n)(x) = pzo + b(k)*cpow(x)(k) + csigma(FF,n)")
                                                                                          (("1"
                                                                                            (REWRITE
                                                                                             -1
                                                                                             1)
                                                                                            (("1"
                                                                                              (LEMMA
                                                                                               "abs_triangle")
                                                                                              (("1"
                                                                                                (INST
                                                                                                 -
                                                                                                 "b(k) * cpow(t * gamma)(k) +pzo"
                                                                                                 "csigma(FF,n)")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (INVOKE
                                                                                                     (CASE
                                                                                                         "%1 < abs(pzo)")
                                                                                                     (!
                                                                                                      -1
                                                                                                      2))
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (HIDE
                                                                                                       (-1
                                                                                                        2))
                                                                                                      (("2"
                                                                                                        (REWRITE
                                                                                                         "cpow_mult")
                                                                                                        (("2"
                                                                                                          (EXPAND
                                                                                                           "gamma"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (REWRITE
                                                                                                             "root_complex_def")
                                                                                                            (("2"
                                                                                                              (LEMMA
                                                                                                               "pzo")
                                                                                                              (("2"
                                                                                                                (REPLACE
                                                                                                                 -1
                                                                                                                 +
                                                                                                                 :DIR
                                                                                                                 RL)
                                                                                                                (("2"
                                                                                                                  (CASE
                                                                                                                      "NOT b(k) * (cpow(t)(k) * (pzo / (-b(k)))) + pzo = pzo*(1-t^k)")
                                                                                                                  (("1"
                                                                                                                    (HIDE
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (CASE
                                                                                                                          "NOT pzo/(-b(k)) = (-pzo)/b(k)")
                                                                                                                      (("1"
                                                                                                                        (CROSS-MULT
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (REWRITE
                                                                                                                           "neg_times_neg")
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (REPLACES
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (REWRITE
                                                                                                                           "div_def")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (CASE
                                                                                                                                  "cpow(t)(k) = t^k")
                                                                                                                              (("1"
                                                                                                                                (REPLACES
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (HIDE-ALL-BUT
                                                                                                                                     (1
                                                                                                                                      2
                                                                                                                                      3))
                                                                                                                                    (("1"
                                                                                                                                      (LEMMA
                                                                                                                                       "complex_commutative_mult")
                                                                                                                                      (("1"
                                                                                                                                        (INST
                                                                                                                                         -
                                                                                                                                         "(-pzo)"
                                                                                                                                         _)
                                                                                                                                        (("1"
                                                                                                                                          (INST?)
                                                                                                                                          (("1"
                                                                                                                                            (REPLACES
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (LEMMA
                                                                                                                                               "associative_mult")
                                                                                                                                              (("1"
                                                                                                                                                (INST?)
                                                                                                                                                (("1"
                                                                                                                                                  (REPLACES
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (LEMMA
                                                                                                                                                     "complex_commutative_mult")
                                                                                                                                                    (("1"
                                                                                                                                                      (INST
                                                                                                                                                       -
                                                                                                                                                       "t^k"
                                                                                                                                                       _)
                                                                                                                                                      (("1"
                                                                                                                                                        (INST?)
                                                                                                                                                        (("1"
                                                                                                                                                          (REPLACES
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (LEMMA
                                                                                                                                                             "associative_mult")
                                                                                                                                                            (("1"
                                                                                                                                                              (INST?)
                                                                                                                                                              (("1"
                                                                                                                                                                (REPLACES
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (LEMMA
                                                                                                                                                                   "associative_mult")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (INST?)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (REPLACES
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (REWRITE
                                                                                                                                                                         "div_def"
                                                                                                                                                                         :DIR
                                                                                                                                                                         RL)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (CASE
                                                                                                                                                                              "b(k)/b(k) = 1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (REPLACES
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (ASSERT)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (REWRITE
                                                                                                                                                                                 "number_fields_negative_times")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (LEMMA
                                                                                                                                                                                   "number_fields_negative_times")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (INST
                                                                                                                                                                                     -
                                                                                                                                                                                     "1"
                                                                                                                                                                                     "t^k*pzo")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (REPLACES
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (REWRITE
                                                                                                                                                                                         "identity_mult")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (REWRITE
                                                                                                                                                                                           "complex_commutative_mult")
                                                                                                                                                                                          NIL
                                                                                                                                                                                          NIL))
                                                                                                                                                                                        NIL))
                                                                                                                                                                                      NIL))
                                                                                                                                                                                    NIL))
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (CROSS-MULT
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (REWRITE
                                                                                                                                                                               "identity_mult")
                                                                                                                                                                              NIL
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL)
                                                                                                                               ("2"
                                                                                                                                (HIDE
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (REWRITE
                                                                                                                                   "cpow_real"
                                                                                                                                   1)
                                                                                                                                  NIL
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (REPLACES
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (REWRITE
                                                                                                                       "abs_mult")
                                                                                                                      (("2"
                                                                                                                        (LEMMA
                                                                                                                         "abs_real_rew")
                                                                                                                        (("2"
                                                                                                                          (INST
                                                                                                                           -
                                                                                                                           "1-t^k")
                                                                                                                          (("2"
                                                                                                                            (REVEAL
                                                                                                                             "ttp")
                                                                                                                            (("2"
                                                                                                                              (FLATTEN)
                                                                                                                              (("2"
                                                                                                                                (REPLACES
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (EXPAND
                                                                                                                                   "abs"
                                                                                                                                   1
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (ASSERT)
                                                                                                                                      (("2"
                                                                                                                                        (CASE
                                                                                                                                            "abs(csigma(FF,n)) < t^k*abs(pzo)")
                                                                                                                                        (("1"
                                                                                                                                          (ASSERT)
                                                                                                                                          NIL
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (HIDE
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (POSTPONE)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (POSTPONE)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("3"
                                                                                            (POSTPONE)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (POSTPONE)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (POSTPONE) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (POSTPONE) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|complex_poly_shift_reverse| 0
  (|complex_poly_shift_reverse-1| |nil| 3721649868
   ("" (SKEEP*)
    (("" (LEMMA "complex_poly_shift")
      (("" (INSTEEP -)
        (("" (SKEEP)
          (("" (INSTEEP)
            (("" (SKEEP*)
              (("" (INST - "x+c")
                (("" (ASSERT)
                  (("" (GRIND)
                    (("" (GRIND)
                      (("" (DECOMPOSE-EQUALITY 1)
                        (("1" (GRIND)
                          (("1" (CASE "x=(# Re := Re(x), Im := Im(x) #)")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (HIDE-ALL-BUT 1)
                              (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL))
                            NIL))
                          NIL)
                         ("2" (CASE "x=(# Re := Re(x), Im := Im(x) #)")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_poly_shift| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL) NIL
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|polynomial_zero_factor_TCC1| 0
  (|polynomial_zero_factor_TCC1-1| |nil| 3721649166 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|polynomial_zero_factor| SUBTYPE
    "(number_fields.-)(fundamental_algebra.n, 1)" "nat")))
 (|polynomial_zero_factor| 0
  (|polynomial_zero_factor-2| "" 3790337382
   ("" (SKEEP*)
    (("" (LEMMA "complex_poly_shift")
      (("" (INST - "a" "y" "n")
        (("" (SKEEP -)
          (("" (ASSERT)
            (("" (REPLACE -3)
              (("" (LEMMA "complex_poly_shift_reverse")
                (("" (INST - "LAMBDA (i:nat): b(i+1)" "-y" "n-1")
                  (("" (SKOLEM - "bb")
                    (("" (INST + "bb")
                      (("" (SKEEP)
                        (("" (INST -3 "x")
                          (("" (REPLACES -3)
                            (("" (INST - "x")
                              ((""
                                (CASE
                                    "NOT (x-y)*cpolynomial(LAMBDA (i: nat): b(i + 1), n - 1)(x + -y) =
                       (x-y)*cpolynomial(bb, n - 1)(x)")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (LEMMA "complex_commutative_mult")
                                  (("2"
                                    (INST-CP - "cpolynomial(bb, n - 1)(x)" "x")
                                    (("2"
                                      (INST - "cpolynomial(bb, n - 1)(x)" "y")
                                      (("2" (ASSERT)
                                        (("2" (CASE "NOT -y+x = x-y")
                                          (("1" (HIDE-ALL-BUT 1)
                                            (("1" (GRIND) NIL NIL)) NIL)
                                           ("2" (NAME "d" "x-y")
                                            (("2" (REPLACE -1)
                                              (("2"
                                                (CASE
                                                    "cpolynomial(b,n)(d) = cpolynomial(LAMBDA (i: nat): b(1 + i), n - 1)(d)*d")
                                                (("1" (ASSERT)
                                                  (("1" (REPLACES -2 :DIR RL)
                                                    (("1"
                                                      (GRIND :EXCLUDE
                                                       "cpolynomial")
                                                      NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE 2)
                                                  (("2" (HIDE (-1 -2 -4))
                                                    (("2"
                                                      (CASE
                                                          "FORALL (mm:nat): cpolynomial(b, mm+1)(d) =
                                       cpolynomial(LAMBDA (i: nat): b(1 + i), mm)(d) * d")
                                                      (("1" (INST - "n-1")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE 2)
                                                        (("2" (INDUCT "mm")
                                                          (("1" (GRIND) NIL
                                                            NIL)
                                                           ("2" (SKEEP*)
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (REWRITE
                                                                 "cpolynomial_rec"
                                                                 +)
                                                                (("2"
                                                                  (LEMMA
                                                                   "cpolynomial_rec")
                                                                  (("2"
                                                                    (INST -
                                                                     "LAMBDA (i:nat): b(1+i)"
                                                                     "d" "j")
                                                                    (("2"
                                                                      (REPLACES
                                                                       -1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "complex_commutative_mult")
                                                                          (("2"
                                                                            (INST?)
                                                                            (("2"
                                                                              (GRIND
                                                                               :EXCLUDE
                                                                               ("cpolynomial"
                                                                                "cpow"))
                                                                              (("1"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|polynomial_zero_factor-1| |nil| 3721649167
   ("" (SKEEP*)
    (("" (LEMMA "complex_poly_shift")
      (("" (INST - "a" "y" "n")
        (("" (SKEEP -)
          (("" (ASSERT)
            (("" (REPLACE -3)
              (("" (LEMMA "complex_poly_shift_reverse")
                (("" (INST - "LAMBDA (i:nat): b(i+1)" "-y" "n-1")
                  (("" (SKOLEM - "bb")
                    (("" (INST + "bb")
                      (("" (SKEEP)
                        (("" (INST -3 "x")
                          (("" (REPLACES -3)
                            (("" (INST - "x")
                              ((""
                                (CASE
                                    "NOT (x-y)*cpolynomial(LAMBDA (i: nat): b(i + 1), n - 1)(x + -y) =
                       (x-y)*cpolynomial(bb, n - 1)(x)")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (LEMMA "complex_commutative_mult")
                                  (("2"
                                    (INST-CP - "cpolynomial(bb, n - 1)(x)" "x")
                                    (("2"
                                      (INST - "cpolynomial(bb, n - 1)(x)" "y")
                                      (("2" (ASSERT)
                                        (("2" (REPLACES -1)
                                          (("2" (REPLACES -1)
                                            (("2" (REPLACES -1 :DIR RL)
                                              (("2" (CASE "NOT -y+x = x-y")
                                                (("1" (HIDE-ALL-BUT 1)
                                                  (("1" (GRIND) NIL NIL)) NIL)
                                                 ("2" (REPLACES -1)
                                                  (("2" (NAME "d" "x-y")
                                                    (("2" (REPLACE -1)
                                                      (("2"
                                                        (CASE
                                                            "cpolynomial(b,n)(d) = cpolynomial(LAMBDA (i: nat): b(1 + i), n - 1)(d)*d")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (REPLACES -2 :DIR
                                                             RL)
                                                            (("1"
                                                              (GRIND :EXCLUDE
                                                               "cpolynomial")
                                                              NIL NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE 2)
                                                          (("2"
                                                            (HIDE (-1 -2 -4))
                                                            (("2"
                                                              (CASE
                                                                  "FORALL (mm:nat): cpolynomial(b, mm+1)(d) =
                                       cpolynomial(LAMBDA (i: nat): b(1 + i), mm)(d) * d")
                                                              (("1"
                                                                (INST - "n-1")
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2" (HIDE 2)
                                                                (("2"
                                                                  (INDUCT "mm")
                                                                  (("1" (GRIND)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (SKEEP*)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "cpolynomial_rec"
                                                                         +)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "cpolynomial_rec")
                                                                          (("2"
                                                                            (INST
                                                                             -
                                                                             "LAMBDA (i:nat): b(1+i)"
                                                                             "d"
                                                                             "j")
                                                                            (("2"
                                                                              (REPLACES
                                                                               -1)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (REPLACES
                                                                                   -1
                                                                                   :DIR
                                                                                   RL)
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "complex_commutative_mult")
                                                                                    (("2"
                                                                                      (INST?)
                                                                                      (("2"
                                                                                        (GRIND
                                                                                         :EXCLUDE
                                                                                         ("cpolynomial"
                                                                                          "cpow"))
                                                                                        (("1"
                                                                                          (GRIND)
                                                                                          NIL
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (GRIND)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_poly_shift| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|mult_commutes| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|odd_plus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL) NIL
    (* CONST-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|complex_poly_shift_reverse| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|fundamental_algebra_roots| 0
  (|fundamental_algebra_roots-1| |nil| 3721648397
   ("" (CASE "FORALL (z1,z2:nzcomplex): z1*z2 /= real_(0)")
    (("1" (LABEL "nz" -1)
      (("1" (HIDE "nz")
        (("1"
          (CASE "FORALL (a: [nat -> complex], c: complex, n: nat,
                                   r: [posnat -> complex]):
                             (FORALL (i, j: posnat):
                                i <= n+1 AND j <= n+1 AND i /= j IMPLIES r(i) /= r(j))
                              AND
                              (FORALL (i: posnat): i <= n+1 IMPLIES cpolynomial(a, n+1)(r(i)) = real_(0))
                               AND cpolynomial(a, n+1)(c) = real_(0) AND (EXISTS (xx: complex): cpolynomial(a, n+1)(xx) /= real_(0))
                              IMPLIES (EXISTS (i: posnat): i <= n+1 AND c = r(i))")
          (("1" (SKEEP*)
            (("1" (INST - "a" "c" "n-1" "r")
              (("1" (ASSERT)
                (("1" (REPLACE -2)
                  (("1" (REPLACE 2)
                    (("1" (REPLACE -2) (("1" (INST + "z") NIL NIL)) NIL)) NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (HIDE 2)
              (("2" (INDUCT "n")
                (("1" (ASSERT)
                  (("1" (SKEEP*)
                    (("1"
                      (CASE
                          "NOT cpolynomial(a,1) = LAMBDA (xx:complex): a(1)*xx+a(0)")
                      (("1" (DECOMPOSE-EQUALITY 1)
                        (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL))
                        NIL)
                       ("2" (REPLACES -1)
                        (("2" (ASSERT)
                          (("2" (INST - "1")
                            (("2" (ASSERT)
                              (("2" (INST + "1")
                                (("2" (ASSERT)
                                  (("2" (REVEAL "nz")
                                    (("2" (INST - "r(1)-c" "a(1)")
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (REPLACES -1)
                                          (("2" (ASSERT)
                                            (("2" (HIDE -1)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (ASSERT)
                                        (("3" (FLATTEN)
                                          (("3" (BOTH-SIDES "+" "c" -1)
                                            (("1" (HIDE-ALL-BUT (-1 2))
                                              (("1" (GRIND)
                                                (("1" (DECOMPOSE-EQUALITY 1)
                                                  NIL NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE-ALL-BUT 1)
                                              (("2" (IFF)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKOLEM 1 "n")
                  (("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (SKEEP*)
                        (("2" (LEMMA "polynomial_zero_factor")
                          (("2" (INST - "a" "2+n" "r(2+n)")
                            (("2" (SPLIT -)
                              (("1" (SKEEP)
                                (("1" (INST-CP - "c")
                                  (("1" (INST-CP + "2+n")
                                    (("1" (REPLACE -6)
                                      (("1" (REVEAL "nz")
                                        (("1" (INST?)
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (INST - "b" "c" "r")
                                            (("2" (ASSERT)
                                              (("2" (SPLIT -)
                                                (("1" (SKEEP -)
                                                  (("1" (INST + "i")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKOSIMP*)
                                                  (("2" (INST - "i!1" "j!1")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP*)
                                                  (("3" (INST -6 "i!1")
                                                    (("3" (ASSERT)
                                                      (("3"
                                                        (INST-CP - "r(i!1)")
                                                        (("3" (ASSERT)
                                                          (("3" (REPLACE -7)
                                                            (("3" (REVEAL "nz")
                                                              (("3"
                                                                (INST -
                                                                 "r(i!1)-r(2+n)"
                                                                 "cpolynomial(b, 1 + n)(r(i!1))")
                                                                (("1" (ASSERT)
                                                                  NIL NIL)
                                                                 ("2"
                                                                  (INST - "i!1"
                                                                   "2+n")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (BOTH-SIDES
                                                                         "+"
                                                                         "r(2+n)"
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              2))
                                                                            (("1"
                                                                              (GRIND)
                                                                              (("1"
                                                                                (DECOMPOSE-EQUALITY
                                                                                 1)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE-ALL-BUT
                                                                           1)
                                                                          (("2"
                                                                            (IFF)
                                                                            (("2"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("4" (INST + "xx")
                                                  (("4" (INST - "xx")
                                                    (("4" (ASSERT)
                                                      (("4" (REPLACE -1)
                                                        (("4" (REPLACES -3)
                                                          (("4"
                                                            (HIDE-ALL-BUT 1)
                                                            (("4" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (ASSERT)
                                            (("3" (FLATTEN)
                                              (("3"
                                                (BOTH-SIDES "+" "r(2+n)" -1)
                                                (("1" (ASSERT)
                                                  (("1" (HIDE-ALL-BUT (-1 3))
                                                    (("1" (GRIND)
                                                      (("1"
                                                        (DECOMPOSE-EQUALITY 1)
                                                        NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (IFF)
                                                  (("2" (HIDE-ALL-BUT 1)
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (INST -3 "2+n") (("2" (ASSERT) NIL NIL))
                                NIL)
                               ("3" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (LEMMA "zero_times")
        (("2" (SKEEP*)
          (("2" (GRIND)
            (("1" (TYPEPRED "z1") (("1" (GRIND) NIL NIL)) NIL)
             ("2" (TYPEPRED "z2") (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_times| FORMULA-DECL NIL |complex_types| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|polynomial_zero_factor| FORMULA-DECL NIL |fundamental_algebra| NIL) NIL
    NIL NIL NIL NIL (+ CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL NIL NIL NIL (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|mul_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL))
   SHOSTAK))
 (|root_complex_enum_def| 0
  (|root_complex_enum_def-2| "" 3790337387
   ("" (SKEEP*)
    (("" (EXPAND "root_complex_enum")
      (("" (REWRITE "cpow_mult")
        (("" (REWRITE "root_complex_def")
          ((""
            (CASE "cpow(exp(2 * (complex_i * nn * pi) / pn))(pn) = real_(1)")
            (("1" (ASSERT)
              (("1" (GRIND :EXCLUDE ("cpow" "exp"))
                (("1" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL))
              NIL)
             ("2" (HIDE 2)
              (("2" (REWRITE "cpow_exp")
                (("2" (LEMMA "exp_periodicity")
                  (("2" (INST - "nn" "real_(0)")
                    (("2" (ASSERT)
                      (("2"
                        (CASE
                            "2 * (complex_i * nn * pi) = pn*(2 * (complex_i * nn * pi)/pn)")
                        (("1" (REPLACES -1 :DIR RL)
                          (("1" (ASSERT)
                            (("1" (GRIND)
                              (("1" (LEMMA "sin_0") (("1" (ASSERT) NIL NIL))
                                NIL)
                               ("2" (LEMMA "cos_0") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (HIDE-ALL-BUT 1)
                            (("2" (LEMMA "times_div1") (("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|root_complex_enum_def-1| |nil| 3721662811
   ("" (SKEEP*)
    (("" (EXPAND "root_complex_enum")
      (("" (REWRITE "cpow_mult")
        (("" (REWRITE "root_complex_def")
          ((""
            (CASE "cpow(exp(2 * (complex_i * nn * pi) / pn))(pn) = real_(1)")
            (("1" (REPLACES -1)
              (("1" (ASSERT)
                (("1" (GRIND :EXCLUDE ("cpow" "exp"))
                  (("1" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (HIDE 2)
              (("2" (REWRITE "cpow_exp")
                (("2" (LEMMA "exp_periodicity")
                  (("2" (INST - "nn" "real_(0)")
                    (("2" (ASSERT)
                      (("2"
                        (CASE
                            "2 * (complex_i * nn * pi) = pn*(2 * (complex_i * nn * pi)/pn)")
                        (("1" (REPLACES -1 :DIR RL)
                          (("1" (ASSERT)
                            (("1" (REPLACES -1)
                              (("1" (GRIND)
                                (("1" (LEMMA "sin_0") (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (LEMMA "cos_0") (("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (HIDE-ALL-BUT 1)
                            (("2" (LEMMA "times_div1") (("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|root_complex_enum| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|root_complex_def| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|exp_periodicity| FORMULA-DECL NIL |complex_lnexp| NIL)
    (|times_div1| FORMULA-DECL NIL |real_props| NIL)
    (|nnrat_times_nnrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat"
     |rationals| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|)
    (|cpow_exp| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|even_minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|root_complex| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|cpow_mult| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|root_complex_enum_complete| 0
  (|root_complex_enum_complete-1| |nil| 3721664159
   ("" (SKEEP*)
    ((""
      (NAME "aa"
            "LAMBDA (jj:nat): IF jj=0 THEN -c ELSIF jj=pn THEN real_(1) ELSE real_(0) ENDIF")
      ((""
        (CASE
            "NOT FORALL (xx:complex): cpow(xx)(pn)-c = cpolynomial(aa,pn)(xx)")
        (("1" (HIDE 2)
          (("1" (SKEEP*)
            (("1" (CASE "pn=1")
              (("1" (REPLACE -1)
                (("1" (EXPAND "aa" 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
               ("2" (REWRITE "cpolynomial_rec")
                (("2" (CASE " cpolynomial(aa, pn - 1)(xx) = -c")
                  (("1" (REPLACES -1)
                    (("1" (EXPAND "aa" +)
                      (("1" (ASSERT) (("1" (GRIND :EXCLUDE ("cpow")) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2"
                    (CASE
                        "FORALL (zz:nat): zz<=pn-1 IMPLIES cpolynomial(aa, zz)(xx) = -c")
                    (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (INDUCT "zz")
                      (("1" (ASSERT)
                        (("1" (EXPAND "cpolynomial" 1)
                          (("1" (EXPAND "csigma")
                            (("1" (EXPAND "*" 1)
                              (("1" (EXPAND "aa" 1)
                                (("1" (EXPAND "cpow" 1)
                                  (("1" (GRIND :EXCLUDE ("cpolynomial" "cpow"))
                                    NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SKOLEM 1 "zz")
                        (("2" (FLATTEN)
                          (("2" (ASSERT)
                            (("2" (REWRITE "cpolynomial_rec" 1)
                              (("2" (REPLACE -1)
                                (("2" (EXPAND "aa" 1)
                                  (("2" (GRIND :EXCLUDE ("cpow" "cpolynomial"))
                                    NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SPLIT)
          (("1" (FLATTEN)
            (("1" (CASE "c=real_(0)")
              (("1" (REPLACES -1)
                (("1" (ASSERT)
                  (("1" (LEMMA "abs_cpow")
                    (("1" (INST - "x" "pn")
                      (("1" (REPLACES -2)
                        (("1" (CASE "NOT abs(complex_(0,0))=0")
                          (("1" (EXPAND "abs" 1)
                            (("1"
                              (GRIND :EXCLUDE
                               ("root_complex_enum" "cpolynomial"))
                              NIL NIL))
                            NIL)
                           ("2" (REPLACES -1)
                            (("2" (LEMMA "expt_eq_0")
                              (("2" (INST?)
                                (("2" (ASSERT)
                                  (("2" (EXPAND "abs" -1)
                                    (("2" (LEMMA "nz_sq_abs_pos")
                                      (("2" (INST - "x")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (HIDE 2)
                  (("2" (LEMMA "fundamental_algebra_roots")
                    (("2"
                      (INST - "aa" "x" "pn"
                       "LAMBDA (jj:posnat): root_complex_enum(c)(pn,jj)")
                      (("2" (ASSERT)
                        (("2" (SPLIT -)
                          (("1" (PROPAX) NIL NIL)
                           ("2" (HIDE 3)
                            (("2" (LEMMA "root_complex_enum_unique")
                              (("2" (INST - "c" _ _ _)
                                (("2" (SKEEP*)
                                  (("2" (INST - "pn" "i" "j")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (SKEEP)
                            (("3" (REWRITE -3 + :DIR RL)
                              (("3" (REWRITE "root_complex_enum_def")
                                (("3" (ASSERT)
                                  (("3"
                                    (GRIND :EXCLUDE
                                     ("root_complex_enum" "cpolynomial"
                                      "cpow"))
                                    NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("4" (HIDE 3)
                            (("4" (REWRITE -2 :DIR RL)
                              (("4" (REPLACE -1)
                                (("4" (ASSERT) (("4" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("5" (INST + "real_(0)")
                            (("5" (REWRITE -2 :DIR RL)
                              (("5" (FLATTEN)
                                (("5" (CASE "cpow(real_(0))(pn)=real_(0)")
                                  (("1" (REPLACE -1)
                                    (("1" (ASSERT)
                                      (("1" (BOTH-SIDES "+" "c" -2)
                                        (("1" (ASSERT)
                                          (("1" (HIDE-ALL-BUT (-2 1))
                                            (("1" (GRIND)
                                              (("1" (DECOMPOSE-EQUALITY 1) NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE-ALL-BUT 1)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (SPLIT)
              (("1" (FLATTEN)
                (("1" (REPLACE -1)
                  (("1" (REPLACE -2)
                    (("1" (EXPAND "cpow" 1)
                      (("1" (GRIND :EXCLUDE ("cpolynomial" "cpow")) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKEEP -)
                (("2" (REPLACES -2 +)
                  (("2" (REWRITE "root_complex_enum_def") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_?| CONST-DECL "bool" |complex_types| NIL) NIL
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "nnreal" |polar| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|expt_eq_0| FORMULA-DECL NIL |exponentiation| NIL)
    (|nnreal_exp| APPLICATION-JUDGEMENT "nnreal" |exponentiation| NIL)
    (|nz_sq_abs_pos| JUDGEMENT-TCC NIL |complex_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|abs_cpow| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|root_complex_enum| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|root_complex_enum_unique| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|root_complex_enum_def| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|fundamental_algebra_roots| FORMULA-DECL NIL |fundamental_algebra| NIL)
    NIL (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (* CONST-DECL "complex" |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|cpolynomial_rec| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|cpow| DEF-DECL "complex" |fundamental_algebra| NIL) NIL
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK)))

