top : THEORY
%                                                                     V2.0
%-------------------------------------------------------------------------
%% Welcome to Plaidypvs-v2: 
%__________.__         .__    .___                         
%\______   \  | _____  |__| __| _/__.__._________  ________
% |     ___/  | \__  \ |  |/ __ <   |  |\____ \  \/ /  ___/
% |    |   |  |__/ __ \|  / /_/ |\___  ||  |_> >   /\___ \ 
% |____|   |____(____  /__\____ |/ ____||   __/ \_//____  >
%                    \/        \/\/     |__|            \/
%                        A Properly Assured Implementation of
%                          Differential Dynamic Logic for
%                            Hybrid Program Verification and Specification
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%         ___________________                                                      
%         /   */..../..#%     \      ,&@@@#         ________________.          
%        | #*#/....(#&.(.&,.(   %@@##@&%@##%&&@##  /%,,#&.&*%/(%..%%\             
%        |#.&///PVS(#%%../.%...&%@%################%/,,.%.&(RITH#.,...\           
%       /  (.%&   #,.*% .#..%#________#%@@##@&______|.,&*       &,..*(#|          
%      /       TY          %#|##@@###|@&&####|######| .&.. .,#ME  *%%/            
%     /__________________ %@#|##@@###/@%%%%%&\&&%###|,...%...(/(#%&/              
%                        ..##|_____/%%%%%%%%%%\______#,,  %&TICAE,(&\               
%                      #  ######/%%%%%%%%%%%%\%%%##&*________________\          
%                      ##@. .##%#/%%%%%%%%%%%%%%\%%&    
%                %(&\#%\@,\    ##%%%%%%%%%%%%%%%\%  
%                    \#/\%    %%&@%%%|00|%%|00|%%%     
%                   ##/\##\#/#\&*/@%%|00|%%|00|%%%&    
%                    /##\/@\&,&\,#&*#&%%%%%%%&&(/&&                              
%                     &#/\,.\...|—–|—–|—–|—––|–––-|(*&                             
%                        /##|##%|##|&@|%(|#%(|(@&*|&,&                            
%                          &|---|——|——|—-|——|———-|@&                            
%                        %%#|#%|#@|%&#|(#|/**|,&#|&.(                            
%                       @%%#|——|——|——-|——|——-|———|&(#                             
%                                    |##|###|####(.                                                                 
%-------------------------------------------------------------------------
% Authors: J Tanner Slagel (NASA Langley Research Center), <j.tanner.slagel@nasa.gov>
%          Cesar Munoz (NASA Langley Research Center), 
%          Mariano Moscato (National Institute of Aerospace),
%          Aaron Dutle (NASA Langley Research Center),
%          Lauren White (NASA Langley Research Center), and
%	   Swee Balachandran (National Institute of Aerospace)
%-------------------------------------------------------------------------
                                                                              
%-----     %
  BEGIN
%     -----%

%%--------------------------------------------
IMPORTING % in order of dependancy
%%--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
   hp_def
  %-------------
  %Depends on: structures@more_list_props
  %-------------
  %Description: Preliminary Definitions for
  % hybrid programs
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , HP
  %-------------
  %Depends on: hp_def
  %-------------
  %Description: Defined Hybrid Program Datatype
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , NQBool
  %-------------
  %Depends on: hp_def
  %-------------
  %Description: Defined non-quantified boolean
  % Datatype
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , hp_expr
  %-------------
  %Depends on: HP
  %            analysis@strategies,
  %            analysis@table_of_integrals[real],
  %            analysis@derivatives_subtype,
  %            ODEs@interval_def
  %-------------
  %Description: More basics of hybrid programs
  % including input/output semantics
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , bounded_star_semantics
  %-------------
  %Depends on: hp_expr
  %            orders@orders_nat
  %            orders@lex2_generic[nat,HP]
  %-------------
  %Description: Defines bounded star HP
  % and shows equivalence to star HP
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , bound_variables_def
  %-------------
  %Depends on: bounded_star_semantics
  %-------------
  %Description: Defined bound variables for an
  % HP
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , bool_expr
  %-------------
  %Depends on: hp_expr
  %-------------
  %Description: Defines boolean expressions and
  % normalizeed nonquantifeid boolean expressions
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , hp_props
  %-------------
  %Depends on: bool_expre
  %-------------
  %Description: Example of reasoning about HP
  % at the semantic definition level 
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , substitution
  %-------------
  %Depends on: bool_expr
  %-------------
  %Description: defines subsitution with properties
  % for common real and boolean expressions
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , ODEs_equiv
  %-------------
  %Depends on: hp_expr,
  %            ODEs@ODE_solution_existence_uniqueness,
  %            ODEs@r2v_diff_extension,
  %            analysis@derivatives_subtype
  %-------------
  %Description: Connects ODE library to ODEs in
  % ODen
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , differentiation
  %-------------
  %Depends on: substitution,
  %            analysis@derivatives[real],
  %            structures@for_iterate[RealExpr],
  %            reals@reals_safe_ops,
  %	       lnexp@expt,
  %	       ODEs@exp_analysis,
  %	       analysis@deriv_domain_def,
  %	       analysis@chain_rule,
  %	       ODEs_equiv
  %-------------
  %Description: Establishes rules of differentation
  % in ODen
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , chain_rule_re
  %-------------
  %Depends on: differentiation,
  %            mv_analysis@lift_real_fun_def,
  %            mv_analysis@convergence_vec2vec,
  %            mv_analysis@partial_def
  %-------------
  %Description: proves chain rule for real
  % expressions from chain rule in mv_analysis
  % library
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , diff_re_props
  %-------------
  %Depends on: chain_rule_re,
  %             mv_analysis@cauchy_schwarz
  %-------------
  %Description: Standard properties of
  % differentiable real expressions
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , continuity_re_def
  %-------------
  %Depends on: bool_expr,
  %            differentiation
  %-------------
  %Description: Define continuity of real
  % expressions
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , continuity_props
  %-------------
  %Depends on: continuity_re_def,
  %            analysis@continuity_props,
  %            ODEs_equiv
  %-------------
  %Description: continuity props for real expressions
  % and environments
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , continuity_re_props
  %-------------
  %Depends on: continuity_re_def,

  %-------------
  %Description: standard arithmetic properties
  % of continuous real expressions 
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , fresh_props
  %-------------
  %Depends on: bounded_star_semantics,
  %            differentiation,
  %            lnexp@expt
  %-------------
  %Description: Established properties of fresh
  % variables
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , bound_variables_def
  %-------------
  %Depends on: bounded_star_semantics,
  %-------------
  %Description: Define bound variables
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , dynamic_logic
  %-------------
  %Depends on: substitution,
  %            differentiation,
  %            more_derivative_props,
  %            structures@for_quantifiers,
  %            reals@reals_safe_ops,
  %            chain_rule_re,
  %            ODEs_equiv,
  %            ODEs@linear_ode_1D,
  %            continuity_props,
  %            fresh_props,
  %            bounded_star_semantics,
  %            bound_variables_def

  %-------------
  %Description: Rules and Rewrites of Differential
  % Dynamic Logic
  %--------------------------------------------

  %--------------------------------------------
  %--------------------------------------------
  , dl_solution
  %-------------
  %Depends on: dynamic_logic
  %-------------
  %Description: Dl solve rule with examples
  %--------------------------------------------
 	   
  %--------------------------------------------
  %--------------------------------------------
  , top_dtl
  %-------------
  %Depends on:
%  TraceState,
%  even_more_list_props,
%  ltl_expr,
%  more_derivative_props,
%  solution_odes_props,
%  temporal_logic,
%  tl_star_lems,
%  trace_bounded_star_semantics,
%  trace_semantics
  %-------------
  %Description: Temporal extension of dL
  %--------------------------------------------

  , sem_rel_diff_star

END top
