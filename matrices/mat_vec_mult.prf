(|mat_vec_mult|
 (|MN_full| 0
  (|MN_full-1| |nil| 3797859363
   ("" (SKEEP)
    (("" (TYPEPRED "A")
      (("" (HIDE -1)
        (("" (CASE "m=0")
          (("1" (GRIND) NIL NIL)
           ("2" (SKEEP)
            (("2" (INST-CP -2 "i")
              (("2" (INST-CP -2 "j") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL (|MN_full| SUBTYPE "mat_vec_mult.A" "FullMatrix")))
 (|MN_rc| 0
  (|MN_rc-1| |nil| 3797860368
   ("" (SKEEP)
    (("" (TYPEPRED "A")
      (("" (EXPAND "rows")
        (("" (ASSERT)
          (("" (LEMMA "full_matrix_columns")
            (("" (INST -1 "A")
              (("1" (SPLIT -1)
                (("1" (FLATTEN)
                  (("1" (ASSERT)
                    (("1" (EXPAND "length" 2) (("1" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (INST-CP -4 "0")
                    (("1" (EXPAND "nth" -5 1) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (ASSERT)
                      (("2" (TYPEPRED "A")
                        (("2" (HIDE -1)
                          (("2" (CASE "null?(A)")
                            (("1" (ASSERT)
                              (("1" (WITH-TCCS (TYPEPRED "length(car(A))"))
                                (("1" (WITH-TCCS (TYPEPRED "car(A)"))
                                  (("1" (HIDE -1)
                                    (("1" (WITH-TCCS (TYPEPRED "car(A)"))
                                      (("1" (HIDE -1) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2" (SKEEP)
                    (("2" (INST-CP -3 "i")
                      (("2" (ASSERT)
                        (("2" (INST -3 "j") (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   SHOSTAK))
 (|entry_extensionality| 0
  (|entry_extensionality-1| |nil| 3797795522
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (FLATTEN)
        (("2" (LEMMA "list_extensionality[list[real]]")
          (("2" (INST -1 "A" "B")
            (("2" (ASSERT)
              (("2" (EXPAND "rows" -2)
                (("2" (ASSERT)
                  (("2" (SKEEP)
                    (("2" (LEMMA "list_extensionality[real]")
                      (("2" (INST -1 "nth(A,n)" "nth(B,n)")
                        (("2" (ASSERT)
                          (("2" (SPLIT 1)
                            (("1" (TYPEPRED "A" "B")
                              (("1" (LEMMA "full_matrix_columns")
                                (("1" (INST-CP -1 "A")
                                  (("1" (INST -1 "B")
                                    (("1" (ASSERT)
                                      (("1" (HIDE -3)
                                        (("1" (HIDE -4)
                                          (("1" (CASE "null?(A)")
                                            (("1" (ASSERT)
                                              (("1" (GRIND) NIL NIL)) NIL)
                                             ("2" (CASE "null?(B)")
                                              (("1" (GRIND) NIL NIL)
                                               ("2" (ASSERT)
                                                (("2" (INST-CP -3 "0" "n")
                                                  (("2" (INST-CP -5 "0" "n")
                                                    (("2" (EXPAND "nth" -6 1)
                                                      (("2" (EXPAND "nth" -4 1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2" (EXPAND "entry" -3)
                                (("2" (INST -3 "n" "n_1")
                                  (("1" (EXPAND "row" -3)
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "access" -3)
                                        (("1" (TYPEPRED "n_1")
                                          (("1" (LEMMA "full_matrix_columns")
                                            (("1" (INST-CP -1 "A")
                                              (("1" (INST-CP -1 "B")
                                                (("1" (HIDE -1)
                                                  (("1" (TYPEPRED "A" "B")
                                                    (("1" (CASE "null?(A)")
                                                      (("1" (GRIND) NIL NIL)
                                                       ("2" (CASE "null?(B)")
                                                        (("1" (GRIND) NIL NIL)
                                                         ("2" (ASSERT)
                                                          (("2" (HIDE -1 -3)
                                                            (("2"
                                                              (INST -1 "0" "n")
                                                              (("2"
                                                                (INST -2 "0"
                                                                 "n")
                                                                (("2"
                                                                  (EXPAND "nth"
                                                                          -1 1)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "nth" -2
                                                                     1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (TYPEPRED "n_1")
                                    (("2" (TYPEPRED "A" "B")
                                      (("2" (LEMMA "full_matrix_columns")
                                        (("2" (INST-CP -1 "A")
                                          (("2" (INST-CP -1 "B")
                                            (("2" (HIDE -4 -6)
                                              (("2" (HIDE -1)
                                                (("2" (CASE "null?(B)")
                                                  (("1" (GRIND) NIL NIL)
                                                   ("2" (CASE "null?(A)")
                                                    (("1" (GRIND) NIL NIL)
                                                     ("2" (ASSERT)
                                                      (("2"
                                                        (INST-CP -4 "0" "n")
                                                        (("2"
                                                          (INST-CP -3 "0" "n")
                                                          (("2" (HIDE -3 -5)
                                                            (("2"
                                                              (EXPAND "nth" -3
                                                                      1)
                                                              (("2"
                                                                (EXPAND "nth"
                                                                        -4 1)
                                                                (("2" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("3" (TYPEPRED "n")
                                    (("3" (EXPAND "rows" 1)
                                      (("3" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|row_extensionality| 0
  (|row_extensionality-1| |nil| 3797796244
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (FLATTEN)
        (("2" (ASSERT)
          (("2" (LEMMA "list_extensionality[list[real]]")
            (("2" (INST -1 "A" "B")
              (("2" (ASSERT)
                (("2" (EXPAND "rows")
                  (("2" (ASSERT)
                    (("2" (SKEEP)
                      (("2" (INST -3 "n")
                        (("1" (EXPAND "row") (("1" (PROPAX) NIL NIL)) NIL)
                         ("2" (ASSERT)
                          (("2" (TYPEPRED "n")
                            (("2" (EXPAND "rows") (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|column_extensionality| 0
  (|column_extensionality-1| |nil| 3797796416
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (FLATTEN)
        (("2" (LEMMA "entry_extensionality")
          (("2" (INST -1 "A" "B")
            (("2" (ASSERT)
              (("2" (SKEEP)
                (("2" (EXPAND "entry" 1)
                  (("2" (LEMMA " access_row")
                    (("2" (LEMMA "access_col")
                      (("2" (INST-CP -2 "A" "i" "j")
                        (("2" (INST-CP -2 "B" "i" "j")
                          (("2" (REPLACE -3)
                            (("2" (REPLACE -4)
                              (("2" (INST-CP -1 "A" "i" "j")
                                (("2" (INST-CP -1 "B" "i" "j")
                                  (("2" (ASSERT)
                                    (("2" (REPLACE -2 1 RL)
                                      (("2" (REPLACE -3 1 RL)
                                        (("2" (INST -9 "j")
                                          (("2"
                                            (LEMMA "list_extensionality[real]")
                                            (("2"
                                              (INST -1 "col(A)(j)" "col(B)(j)")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|entry| CONST-DECL "real" |matrices| |matrices|)
    (|access_col| FORMULA-DECL NIL |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|access_row| FORMULA-DECL NIL |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|cdr_columns| 0
  (|cdr_columns-1| |nil| 3797716406
   ("" (SKEEP)
    (("" (LEMMA "full_matrix_columns")
      (("" (INST-CP -1 "A")
        (("" (INST -1 "cdr(A)")
          (("1" (TYPEPRED "A")
            (("1" (ASSERT)
              (("1" (REPLACE -5)
                (("1" (REPLACE -6)
                  (("1" (INST -2 "0" "1")
                    (("1" (EXPAND "nth" -2)
                      (("1" (ASSERT)
                        (("1" (EXPAND "nth" -2) (("1" (PROPAX) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "length" 1)
                        (("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (EXPAND "length" 1)
                      (("3" (EXPAND "length" 1) (("3" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKEEP)
            (("2" (TYPEPRED "A")
              (("2" (TYPEPRED "A")
                (("2" (ASSERT)
                  (("2" (HIDE -1)
                    (("2" (INST -1 "i+1" "j+1")
                      (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL)) NIL)
                       ("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL)) NIL)
                       ("3" (EXPAND "length" 1) (("3" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|cdr_columns_full| 0
  (|cdr_columns_full-1| |nil| 3797717028
   ("" (SKEEP*)
    (("" (TYPEPRED "A")
      (("" (ASSERT)
        (("" (INST -2 "i+1" "j+1")
          (("1" (ASSERT) (("1" (EXPAND "nth" -2) (("1" (PROPAX) NIL NIL)) NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)
           ("3" (EXPAND "length" 1) (("3" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL))
   SHOSTAK))
 (|matvec_TCC1| 0
  (|matvec_TCC1-1| |nil| 3795949763 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL (|matvec| SUBTYPE "list_adt[real].null" "VectorN(mat_vec_mult.m)")))
 (|matvec_TCC2| 0
  (|matvec_TCC2-1| |nil| 3795949763
   ("" (SKEEP) (("" (TYPEPRED "A") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL (|matvec| SUBTYPE "mat_vec_mult.A" "(list_adt[list[real]].cons?)")))
 (|matvec_TCC3| 0
  (|matvec_TCC3-1| |nil| 3795949763 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL (|matvec| SUBTYPE "(number_fields.-)(mat_vec_mult.m, 1)" "nat")))
 (|matvec_TCC4| 0
  (|matvec_TCC4-1| |nil| 3795949763
   ("" (SKEEP*)
    (("" (TYPEPRED "A")
      (("" (SPLIT 2)
        (("1" (EXPAND "length" -2)
          (("1" (ASSERT)
            (("1" (LIFT-IF -2)
              (("1" (SPLIT -2)
                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (INST -3 "i+1")
            (("1" (ASSERT)
              (("1" (EXPAND "nth" -3) (("1" (PROPAX) NIL NIL)) NIL)) NIL)
             ("2" (ASSERT)
              (("2" (TYPEPRED "i")
                (("2" (EXPAND "length" 1 1)
                  (("2" (LIFT-IF 1)
                    (("2" (SPLIT 1)
                      (("1" (EXPAND "length" -3)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                       ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL))
   NIL
   (|matvec| SUBTYPE "list_adt[list[real]].cdr(mat_vec_mult.A)"
    "MatrixMN((number_fields.-)(mat_vec_mult.m, 1), mat_vec_mult.n)")))
 (|matvec_TCC5| 0
  (|matvec_TCC5-1| |nil| 3797714275 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|matvec| TERMINATION
    "mat_vec_mult.matvec((number_fields.-)(mat_vec_mult.m, 1), mat_vec_mult.n, list_adt[list[real]].cdr(mat_vec_mult.A), mat_vec_mult.v)"
    "NIL")))
 (|matvec_TCC6| 0
  (|matvec_TCC6-1| |nil| 3797714275
   ("" (SKEEP) (("" (EXPAND "length" 2 1) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   NIL NIL
   (|matvec| SUBTYPE
    "list_adt[real].cons(matrices.*(list_adt[list[real]].car(mat_vec_mult.A), mat_vec_mult.v), mat_vec_mult.matvec((number_fields.-)(mat_vec_mult.m, 1), mat_vec_mult.n, list_adt[list[real]].cdr(mat_vec_mult.A), mat_vec_mult.v))"
    "VectorN(mat_vec_mult.m)")))
 (|times_TCC1| 0
  (|times_TCC1-1| |nil| 3797714575
   ("" (SKEEP)
    (("" (EXPAND "rows" 1)
      (("" (SKEEP)
        (("" (TYPEPRED "A")
          (("" (TYPEPRED "i")
            (("" (SPLIT -3)
              (("1" (EXPAND "length" -2) (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (LEMMA "full_matrix_columns")
                (("2" (INST -1 "A")
                  (("2" (ASSERT)
                    (("2" (SPLIT -1)
                      (("1" (FLATTEN)
                        (("1" (EXPAND "length" -4) (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (REPLACE -1 1)
                        (("2" (INST -2 "0" "i")
                          (("2" (EXPAND "nth" -2 1) (("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|))
   NIL
   (|times| SUBTYPE "mat_vec_mult.A"
    "MatrixMN(matrices.rows(mat_vec_mult.A), matrices.columns(mat_vec_mult.A))")))
 (|matv_test_TCC1| 0
  (|matv_test_TCC1-1| |nil| 3797845766
   ("" (SPLIT 1)
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (TYPEPRED "i")
        (("2" (CASE "i=0")
          (("1" (GRIND) NIL NIL)
           ("2" (CASE "i=1")
            (("1" (GRIND) NIL NIL)
             ("2" (CASE "i=2") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL))
   NIL
   (|matv_test| SUBTYPE
    "(: list_adt[real].null, list_adt[real].null, list_adt[real].null :)"
    "MatrixMN(3, 0)")))
 (|matv_test| 0
  (|matv_test-1| |nil| 3797846145 ("" (GRIND) NIL NIL)
   ((|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|))
   SHOSTAK))
 (|matv_nth_TCC1| 0
  (|matv_nth_TCC1-1| |nil| 3797714857 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   NIL (|matv_nth| SUBTYPE "mat_vec_mult.i" "below[length[real](A * v)]")))
 (|matv_nth| 0
  (|matv_nth-1| |nil| 3797714956
   (""
    (CASE
        " FORALL (m:nat, A: FullMatrix, v: VectorN(columns(A)), i: below(rows(A))):
       length(A) = m IMPLIES  nth(A * v, i) = row(A)(i) * v")
    (("1" (SKEEP) (("1" (INST -1 "length(A)" "A" "v" "i") NIL NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "m")
        (("1" (SKEEP)
          (("1" (TYPEPRED "i")
            (("1" (EXPAND "rows" -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (CASE "i=0")
              (("1" (EXPAND "row" 1)
                (("1" (ASSERT)
                  (("1" (EXPAND "*" 1 1)
                    (("1" (EXPAND "matvec" 1 1)
                      (("1" (EXPAND "nth" 1 1)
                        (("1" (ASSERT)
                          (("1" (EXPAND "nth" 1) (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (EXPAND "nth" 2)
                (("2" (EXPAND "row" 2)
                  (("2" (ASSERT)
                    (("2" (TYPEPRED "i")
                      (("2" (EXPAND "rows" -1)
                        (("2" (ASSERT)
                          (("2" (EXPAND "nth" 2 2)
                            (("2" (INST -2 "cdr(A)" "v" "i-1")
                              (("1" (ASSERT)
                                (("1" (EXPAND "length" -3)
                                  (("1" (LIFT-IF -3)
                                    (("1" (SPLIT -3)
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (EXPAND "row" -3)
                                            (("2" (ASSERT)
                                              (("2" (EXPAND "*" 3)
                                                (("2" (EXPAND "matvec" 3 1)
                                                  (("2" (EXPAND "*" -3)
                                                    (("2" (ASSERT)
                                                      (("2" (EXPAND "rows" 3 1)
                                                        (("2"
                                                          (EXPAND "rows" -3 1)
                                                          (("2"
                                                            (EXPAND "length" 3
                                                                    1)
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (LEMMA
                                                                 "full_matrix_columns")
                                                                (("2"
                                                                  (INST-CP -1
                                                                   "A")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (REPLACE
                                                                       -2 3)
                                                                      (("2"
                                                                        (INST
                                                                         -1
                                                                         "cdr(A)")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (SPLIT
                                                                             -1)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "length"
                                                                                 -5)
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "length"
                                                                                   -5)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (TYPEPRED
                                                                                 "A")
                                                                                (("2"
                                                                                  (SPLIT
                                                                                   -2)
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (INST
                                                                                     -1
                                                                                     "0"
                                                                                     "1")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "nth"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "nth"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (FLATTEN)
                                                                          (("2"
                                                                            (SKEEP)
                                                                            (("2"
                                                                              (TYPEPRED
                                                                               "A")
                                                                              (("2"
                                                                                (SPLIT
                                                                                 -2)
                                                                                (("1"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "i!1+1"
                                                                                   "j!1+1")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "nth"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (TYPEPRED "i")
                                (("2" (EXPAND "rows")
                                  (("2" (EXPAND "length " -1)
                                    (("2" (ASSERT)
                                      (("2" (LIFT-IF -1)
                                        (("2" (SPLIT -1)
                                          (("1" (FLATTEN)
                                            (("1" (EXPAND "length" -3)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (FLATTEN)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (TYPEPRED "i")
                                (("3" (EXPAND "rows" -1)
                                  (("3" (ASSERT)
                                    (("3" (TYPEPRED "v")
                                      (("3" (LEMMA "full_matrix_columns")
                                        (("3" (INST-CP -1 "A")
                                          (("3" (INST-CP -1 "cdr(A)")
                                            (("1" (HIDE -1)
                                              (("1" (SPLIT -2)
                                                (("1" (FLATTEN)
                                                  (("1" (EXPAND "length")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SPLIT -2)
                                                  (("1" (EXPAND "length" -5)
                                                    (("1" (LIFT-IF)
                                                      (("1" (FLATTEN)
                                                        (("1" (SPLIT -6)
                                                          (("1" (FLATTEN)
                                                            (("1"
                                                              (EXPAND "length"
                                                                      -8)
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (FLATTEN)
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (EXPAND
                                                                 "length" -1)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (TYPEPRED "A")
                                                    (("2" (SPLIT -2)
                                                      (("1" (GRIND) NIL NIL)
                                                       ("2" (INST -1 "0" "1")
                                                        (("2" (EXPAND "nth" -1)
                                                          (("2"
                                                            (EXPAND "nth" -1)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (FLATTEN)
                                              (("2" (SKEEP)
                                                (("2" (TYPEPRED "A")
                                                  (("2" (SPLIT -2)
                                                    (("1" (EXPAND "length" -6)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2"
                                                      (INST -1 "i!1+1" "j!1+1")
                                                      (("1" (ASSERT)
                                                        (("1" (EXPAND "nth" -1)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (EXPAND "length" 1 1)
                                                        (("2" (ASSERT)
                                                          (("2" (LIFT-IF 1)
                                                            (("2" (SPLIT 1)
                                                              (("1" (FLATTEN)
                                                                (("1"
                                                                  (EXPAND
                                                                   "length" -)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (TYPEPRED "i!1")
                                                        (("3"
                                                          (EXPAND "length" 1)
                                                          (("3" (LIFT-IF 1)
                                                            (("3" (SPLIT 1)
                                                              (("1" (FLATTEN)
                                                                (("1"
                                                                  (EXPAND
                                                                   "length" -7)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("4" (FLATTEN)
                                (("4" (SKEEP)
                                  (("4" (TYPEPRED "A")
                                    (("4" (CASE "null?(A)")
                                      (("1" (ASSERT)
                                        (("1" (EXPAND "length" -5)
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (INST -2 "i!1+1" "j!1+1")
                                          (("1" (EXPAND "nth" -2)
                                            (("1" (PROPAX) NIL NIL)) NIL)
                                           ("2" (EXPAND "length" 1)
                                            (("2" (ASSERT) NIL NIL)) NIL)
                                           ("3" (EXPAND "length" 1)
                                            (("3" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (SKEEP) (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL)
     ("3" (SKEEP) (("3" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|))
   SHOSTAK))
 (|max_a_TCC1| 0
  (|max_a_TCC1-1| |nil| 3796040809
   ("" (SKEEP) (("" (TYPEPRED "A") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   NIL (|max_a| SUBTYPE "mat_vec_mult.A" "(list_adt[list[real]].cons?)")))
 (|max_a_TCC2| 0
  (|max_a_TCC2-1| |nil| 3796040809
   ("" (SKEEP)
    (("" (GRIND)
      (("" (TYPEPRED "A")
        (("" (ASSERT)
          (("" (SPLIT -2)
            (("1" (EXPAND "length" 1) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (LEMMA "full_matrix_columns")
              (("2" (INST -1 "A") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL
   (|max_a| SUBTYPE "list_adt[list[real]].car(mat_vec_mult.A)"
    "(list_adt[real].cons?)")))
 (|max_a_TCC3| 0
  (|max_a_TCC3-1| |nil| 3796040809
   ("" (SKEEP)
    (("" (TYPEPRED "A")
      (("" (TYPEPRED "abs(car[list[real]](A))")
        (("" (HIDE -1)
          (("" (LEMMA "full_matrix_columns")
            (("" (INST -1 "A") (("" (ASSERT) (("" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|abs| DEF-DECL "{l: list | length(l) = length(ll)}" |norms| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL))
   NIL
   (|max_a| SUBTYPE "norms.abs(list_adt[list[real]].car(mat_vec_mult.A))"
    "(list_adt[real].cons?)")))
 (|max_a_TCC4| 0
  (|max_a_TCC9-1| |nil| 3796040809
   ("" (SKEEP) (("" (LEMMA "cdr_columns_full") (("" (INST?) NIL NIL)) NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|max_a| SUBTYPE "list_adt[list[real]].cdr(mat_vec_mult.A)" "FullMatrix")))
 (|max_a_TCC5| 0
  (|max_a_TCC9-1| |nil| 3797716360
   ("" (SKEEP)
    (("" (EXPAND "rows")
      (("" (GRIND)
        (("" (EXPAND "length" 3 2)
          (("" (LIFT-IF 3)
            (("" (SPLIT 3)
              (("1" (FLATTEN)
                (("1" (EXPAND "length" 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
               ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|))
   NIL
   (|max_a| TERMINATION
    "mat_vec_mult.max_a(list_adt[list[real]].cdr(mat_vec_mult.A))" "NIL")))
 (|max_a_TCC6| 0
  (|max_a_TCC10-1| |nil| 3797716360 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   NIL
   (|max_a| SUBTYPE
    "real_defs.max(norms.max(norms.abs(list_adt[list[real]].car(mat_vec_mult.A))), mat_vec_mult.max_a(list_adt[list[real]].cdr(mat_vec_mult.A)))"
    "nnreal")))
 (|max_a_max_TCC1| 0
  (|max_a_max_TCC2-1| |nil| 3796040809 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   NIL (|max_a_max| SUBTYPE "mat_vec_mult.i" "below[length[list[real]](A)]")))
 (|max_a_max_TCC2| 0
  (|max_a_max_TCC2-1| |nil| 3796041285
   ("" (SKEEP)
    (("" (TYPEPRED "j")
      (("" (LEMMA "full_matrix_columns")
        (("" (INST -1 "A")
          (("" (ASSERT)
            (("" (TYPEPRED "A")
              (("" (SPLIT -2)
                (("1" (ASSERT)
                  (("1" (TYPEPRED "i")
                    (("1" (EXPAND "rows" -1)
                      (("1" (EXPAND "length" -1) (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (INST -1 "0" "i")
                  (("1" (EXPAND "nth" -1 1) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (TYPEPRED "i")
                    (("2" (HIDE -2 -3 -4) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|))
   NIL
   (|max_a_max| SUBTYPE "mat_vec_mult.j"
    "below[length[real](nth[list[real]](A, i))]")))
 (|max_a_max| 0
  (|max_a_max-1| |nil| 3796041036
   (""
    (CASE
        "FORALL (m:nat, A: FullMatrix, j: below(columns(A)), i: below(rows(A))):
        length(A) = m IMPLIES  abs(nth(nth(A, i), j)) <= max_a(A)")
    (("1" (SKEEP) (("1" (INST -1 "length(A)" "A" "j" "i") NIL NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "m")
        (("1" (SKEEP)
          (("1" (TYPEPRED "i" "j")
            (("1" (ASSERT)
              (("1" (EXPAND "rows" -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (CASE "i=0")
              (("1" (TYPEPRED "A")
                (("1" (SPLIT -2)
                  (("1" (TYPEPRED "i")
                    (("1" (EXPAND "rows" -1)
                      (("1" (ASSERT)
                        (("1" (EXPAND "length" -1) (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "nth" 1 2)
                    (("2" (ASSERT)
                      (("2" (LEMMA "norm_inf_nth_ineq")
                        (("2" (INST -1 "car(A)" "j")
                          (("1" (EXPAND "norm_inf" -1)
                            (("1" (EXPAND "max_a" 1) (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "j")
                            (("2" (LEMMA "norm_inf_nth_ineq")
                              (("2" (LEMMA "full_matrix_columns")
                                (("2" (INST -1 "A")
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "length" -1)
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (EXPAND "max_a" 2 1)
                (("2" (ASSERT)
                  (("2" (EXPAND "nth" 2 2)
                    (("2" (INST -1 "cdr(A)" "j" "i-1")
                      (("1" (TYPEPRED "j")
                        (("1" (TYPEPRED "j_1")
                          (("1" (ASSERT)
                            (("1" (EXPAND "length" -3)
                              (("1" (LIFT-IF -3)
                                (("1" (SPLIT -3)
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "i")
                        (("2" (EXPAND "rows")
                          (("2" (EXPAND "length" -1)
                            (("2" (LIFT-IF -1)
                              (("2" (SPLIT -1)
                                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "j")
                        (("3" (LEMMA "full_matrix_columns")
                          (("3" (INST-CP -1 "A")
                            (("3" (INST-CP -1 "cdr(A)")
                              (("3" (ASSERT)
                                (("3" (HIDE -1)
                                  (("3" (SPLIT -1)
                                    (("1" (FLATTEN)
                                      (("1" (ASSERT)
                                        (("1" (TYPEPRED "i")
                                          (("1" (TYPEPRED "A")
                                            (("1" (EXPAND "columns" -5)
                                              (("1" (EXPAND "length" -8)
                                                (("1" (ASSERT)
                                                  (("1" (TYPEPRED "j_1")
                                                    (("1" (TYPEPRED "i")
                                                      (("1" (EXPAND "rows" -1)
                                                        (("1"
                                                          (EXPAND "length" -1)
                                                          (("1"
                                                            (EXPAND "length"
                                                                    -1)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (REPLACE -1)
                                        (("2" (REPLACE -2)
                                          (("2" (TYPEPRED "A")
                                            (("2" (SPLIT -2)
                                              (("1" (ASSERT)
                                                (("1" (GRIND) NIL NIL)) NIL)
                                               ("2" (INST -1 "0" "1")
                                                (("1" (EXPAND "nth" -1)
                                                  (("1" (EXPAND "nth" -1)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (EXPAND "length" 1)
                                                  (("2" (ASSERT)
                                                    (("2" (LIFT-IF 1)
                                                      (("2" (SPLIT 1)
                                                        (("1" (FLATTEN)
                                                          (("1" (ASSERT)
                                                            (("1" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (EXPAND "length"
                                                                      2)
                                                              (("2" (LIFT-IF 2)
                                                                (("2" (SPLIT 2)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (TYPEPRED
                                                                         "i")
                                                                        (("1"
                                                                          (EXPAND
                                                                           "rows"
                                                                           -1)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "length"
                                                                             -1)
                                                                            (("1"
                                                                              (EXPAND
                                                                               "length"
                                                                               -1)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (SKEEP)
          (("3" (TYPEPRED "j")
            (("3" (LEMMA "full_matrix_columns")
              (("3" (INST -1 "A")
                (("3" (TYPEPRED "A")
                  (("3" (SPLIT -2)
                    (("1" (GRIND) NIL NIL)
                     ("2" (INST -1 "i" "0")
                      (("1" (EXPAND "nth" -1 2) (("1" (ASSERT) NIL NIL)) NIL)
                       ("2" (EXPAND "length" 1 1)
                        (("2" (LIFT-IF 1)
                          (("2" (SPLIT 1)
                            (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
                             ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("4" (SKEEP)
          (("4" (TYPEPRED "i")
            (("4" (EXPAND "rows" -1) (("4" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKEEP)
      (("3" (ASSERT)
        (("3" (TYPEPRED "j")
          (("3" (LEMMA "full_matrix_columns")
            (("3" (INST -1 "A")
              (("3" (ASSERT)
                (("3" (TYPEPRED "A")
                  (("3" (ASSERT)
                    (("3" (SPLIT -2)
                      (("1" (GRIND) NIL NIL)
                       ("2" (INST -1 "0" "i")
                        (("1" (EXPAND "nth" -1 1) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (EXPAND "length" 1)
                          (("2" (LIFT-IF 1)
                            (("2" (SPLIT 1)
                              (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
                               ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (TYPEPRED "i") (("4" (EXPAND "rows") (("4" (PROPAX) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|norm_inf| CONST-DECL "[(cons?) -> nonneg_real]" |norms| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|norm_inf_nth_ineq| FORMULA-DECL NIL |norms| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   SHOSTAK))
 (|max_a_row_TCC1| 0
  (|max_a_row_TCC2-1| |nil| 3796041285
   ("" (SKEEP)
    (("" (TYPEPRED "A") (("" (TYPEPRED "v") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL (|max_a_row| SUBTYPE "mat_vec_mult.v" "(list_adt[real].cons?)")))
 (|max_a_row_TCC2| 0
  (|max_a_row_TCC1-1| |nil| 3796041285 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|max_a_row| SUBTYPE "matrices.columns(mat_vec_mult.A)" "posnat")))
 (|max_a_row| 0
  (|max_a_row-1| |nil| 3796048002
   ("" (SKEEP)
    (("" (LEMMA "dot_max_ineq")
      (("" (INST -1 "v" "row(A)(i)")
        (("1" (SPLIT -1)
          (("1" (TYPEPRED "A")
            (("1" (SPLIT -2)
              (("1" (TYPEPRED "i")
                (("1" (EXPAND "rows" -1)
                  (("1" (EXPAND "length" -1) (("1" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("2" (CASE "null?(A)")
                (("1" (TYPEPRED "i")
                  (("1" (EXPAND "rows" -1)
                    (("1" (EXPAND "length" -1) (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (LEMMA "full_matrix_columns")
                  (("2" (INST -1 "A")
                    (("2" (ASSERT)
                      (("2" (EXPAND "row" -5 2)
                        (("2" (TYPEPRED "i")
                          (("2" (ASSERT)
                            (("2" (EXPAND "rows" -1)
                              (("2" (ASSERT)
                                (("2" (EXPAND "row" -6)
                                  (("2" (EXPAND "row" 2)
                                    (("2" (HIDE -4)
                                      (("2" (EXPAND "norm_inf" 2)
                                        (("2" (LEMMA "norm_inf_nth")
                                          (("2" (INST -1 "nth(A,i)")
                                            (("2" (SKEEP)
                                              (("2" (LEMMA "max_a_max")
                                                (("2" (INST -1 "A" "i_1" "i")
                                                  (("1" (ASSERT)
                                                    (("1" (REPLACE -2 -1 RL)
                                                      (("1" (INST -5 "i" "0")
                                                        (("1"
                                                          (EXPAND "nth" -5 2)
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (REPLACE -5 -7)
                                                              (("1"
                                                                (REPLACE -4 -7
                                                                         RL)
                                                                (("1"
                                                                  (MULT-BY -1
                                                                   "norm_inf(v)")
                                                                  (("1"
                                                                    (MULT-BY -1
                                                                     "columns(A)")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (TYPEPRED "i_1")
                                                    (("2" (INST -5 "0" "i")
                                                      (("2" (EXPAND "nth" -5 1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (TYPEPRED "v")
            (("2" (EXPAND "row" 1)
              (("2" (TYPEPRED "i")
                (("2" (ASSERT)
                  (("2" (EXPAND "rows" -1)
                    (("2" (ASSERT)
                      (("2" (LEMMA "full_matrix_columns")
                        (("2" (INST -1 "A")
                          (("2" (TYPEPRED "A")
                            (("2" (SPLIT -2)
                              (("1" (TYPEPRED "i")
                                (("1" (EXPAND "rows" -1)
                                  (("1" (EXPAND "length" -1)
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (INST -1 "0" "i")
                                (("2" (EXPAND "nth" -1 1)
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (TYPEPRED "A")
          (("2" (EXPAND "row" 1 1)
            (("2" (TYPEPRED "i")
              (("2" (ASSERT)
                (("2" (EXPAND "rows" -1)
                  (("2" (ASSERT)
                    (("2" (SPLIT -3)
                      (("1" (TYPEPRED "i")
                        (("1" (EXPAND "rows" -1)
                          (("1" (EXPAND "length" -1) (("1" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (INST -1 "0" "i")
                        (("2" (EXPAND "nth" -1 1)
                          (("2" (ASSERT)
                            (("2" (EXPAND "length" -1)
                              (("2" (LEMMA "full_matrix_columns")
                                (("2" (INST -1 "A") (("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|dot_max_ineq| FORMULA-DECL NIL |norms| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|norm_inf_nth| FORMULA-DECL NIL |norms| NIL)
    (|norm_inf| CONST-DECL "[(cons?) -> nonneg_real]" |norms| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   SHOSTAK))
 (|matv_norm_inf_TCC1| 0
  (|matv_norm_inf_TCC1-1| |nil| 3797763155
   ("" (SKEEP)
    (("" (TYPEPRED "A")
      (("" (EXPAND "columns" -3)
        (("" (LIFT-IF -3)
          (("" (SPLIT -3)
            (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (FLATTEN)
              (("2" (ASSERT)
                (("2" (TYPEPRED "A*v") (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|))
   NIL
   (|matv_norm_inf| SUBTYPE "mat_vec_mult.*(mat_vec_mult.A, mat_vec_mult.v)"
    "(list_adt[real].cons?)")))
 (|matv_norm_inf_TCC2| 0
  (|matv_norm_inf_TCC2-2| |nil| 3797763343
   ("" (SKEEP)
    (("" (TYPEPRED "A")
      (("" (EXPAND "columns" -3)
        (("" (EXPAND "rows" 1)
          (("" (LIFT-IF -3)
            (("" (SPLIT -3)
              (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2" (EXPAND "length" 2) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   NIL (|matv_norm_inf| SUBTYPE "matrices.rows(mat_vec_mult.A)" "posnat"))
  (|matv_norm_inf_TCC2-1| |nil| 3797763155 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|matv_norm_inf| SUBTYPE "matrices.rows(mat_vec_mult.A)" "posnat")))
 (|matv_norm_inf_TCC3| 0
  (|matv_norm_inf_TCC3-1| |nil| 3797763155 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL (|matv_norm_inf| SUBTYPE "mat_vec_mult.v" "(list_adt[real].cons?)")))
 (|matv_norm_inf_TCC4| 0
  (|matv_norm_inf_TCC4-1| |nil| 3797763155 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|matv_norm_inf| SUBTYPE "matrices.columns(mat_vec_mult.A)" "posnat")))
 (|matv_norm_inf| 0
  (|matv_norm_inf-1| |nil| 3797763112
   ("" (SKEEP)
    (("" (LEMMA "norm_inf_nth")
      (("" (INST -1 "A*v")
        (("" (SKEEP)
          (("" (EXPAND "norm_inf" 1 1)
            (("" (REPLACE -1 1)
              (("" (LEMMA "matv_nth")
                (("" (INST -1 "A" "v" "i")
                  (("1" (REPLACE -1 1)
                    (("1" (LEMMA "max_a_row")
                      (("1" (INST?)
                        (("1" (ASSERT) NIL NIL)
                         ("2" (TYPEPRED "i") (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "i") (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm_inf_nth| FORMULA-DECL NIL |norms| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL))
 (|vec2mat_TCC1| 0
  (|vec2mat_TCC1-1| |nil| 3797769949 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL))
   NIL
   (|vec2mat| SUBTYPE "list_adt[list[real]].null"
    "MatrixMN(list_props[real].length(mat_vec_mult.v), real_defs.min(list_props[real].length(mat_vec_mult.v), 1))")))
 (|vec2mat_TCC2| 0
  (|vec2mat_TCC2-1| |nil| 3797769949 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL (|vec2mat| SUBTYPE "mat_vec_mult.v" "(list_adt[real].cons?)")))
 (|vec2mat_TCC3| 0
  (|vec2mat_TCC3-1| |nil| 3797769949 ("" (TERMINATION-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL
   (|vec2mat| TERMINATION
    "mat_vec_mult.vec2mat(list_adt[real].cdr(mat_vec_mult.v))" "NIL")))
 (|vec2mat_TCC4| 0
  (|vec2mat_TCC4-1| |nil| 3797769949
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (SPLIT 2)
        (("1" (EXPAND "length" 1) (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (SKEEP)
          (("2" (CASE "i=0")
            (("1" (EXPAND "nth" 1)
              (("1" (ASSERT)
                (("1" (EXPAND "min" 1) (("1" (GRIND) NIL NIL)) NIL)) NIL))
              NIL)
             ("2" (TYPEPRED "v1(cdr[real](v))")
              (("2" (INST -3 "i-1")
                (("1" (EXPAND "nth" 2)
                  (("1" (ASSERT)
                    (("1" (REPLACE -3 2)
                      (("1" (TYPEPRED "v")
                        (("1" (HIDE -1)
                          (("1" (TYPEPRED "i")
                            (("1" (EXPAND "length" -1)
                              (("1" (ASSERT)
                                (("1" (REPLACE -3 -1)
                                  (("1" (EXPAND "min" 2 1)
                                    (("1" (LIFT-IF 2)
                                      (("1" (SPLIT 2)
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT)
                                            (("1" (EXPAND "min" 1)
                                              (("1" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (ASSERT)
                                            (("2"
                                              (CASE "length(cdr[real](v)) =1")
                                              (("1" (GRIND) NIL NIL)
                                               ("2"
                                                (CASE "length(cdr[real](v))=0")
                                                (("1" (GRIND) NIL NIL)
                                                 ("2" (GRIND) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (TYPEPRED "i")
                    (("2" (EXPAND "length" -1) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL))
   NIL
   (|vec2mat| SUBTYPE
    "list_adt[list[real]].cons((: list_adt[real].car(mat_vec_mult.v) :), mat_vec_mult.vec2mat(list_adt[real].cdr(mat_vec_mult.v)))"
    "MatrixMN(list_props[real].length(mat_vec_mult.v), real_defs.min(list_props[real].length(mat_vec_mult.v), 1))")))
 (|vec2mat_id| 0
  (|vec2mat_id-1| |nil| 3797775529
   ("" (INDUCT "v")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (EXPAND "vec2mat" 1 1)
        (("2" (EXPAND "col" 1 1)
          (("2" (EXPAND "access")
            (("2" (DECOMPOSE-EQUALITY 1) (("2" (GRIND) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|matv_matmat| 0
  (|matv_matmat-1| |nil| 3797774601
   ("" (SKEEP)
    (("" (CASE "columns(A)=0")
      (("1" (TYPEPRED "v")
        (("1" (REPLACE -3 -2)
          (("1" (EXPAND "length" -2)
            (("1" (LIFT-IF -2)
              (("1" (SPLIT -2)
                (("1" (EXPAND "*" 1 1)
                  (("1" (EXPAND "vec2mat" 1 1)
                    (("1" (ASSERT)
                      (("1" (LEMMA "mult_null_right")
                        (("1" (INST -1 "A")
                          (("1" (ASSERT)
                            (("1" (FLATTEN)
                              (("1" (LEMMA "access_col")
                                (("1" (LEMMA "list_extensionality[real]")
                                  (("1"
                                    (INST -1
                                     "  matvec(rows(A), columns(A), A, v)"
                                     "col(A * null[list[real]])(0)")
                                    (("1" (ASSERT)
                                      (("1" (HIDE 2)
                                        (("1" (SPLIT 1)
                                          (("1"
                                            (TYPEPRED
                                             "(matvec(rows(A), columns(A), A, v))"
                                             "col(A * null[list[real]])(0)")
                                            (("1" (HIDE -1 -3)
                                              (("1" (GRIND) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (SKEEP)
                                            (("2"
                                              (INST -1 "A * null[list[real]]"
                                               "n" "0")
                                              (("2" (EXPAND "access" -1)
                                                (("2" (TYPEPRED "n")
                                                  (("2" (LIFT-IF -2)
                                                    (("2" (SPLIT -2)
                                                      (("1" (FLATTEN)
                                                        (("1" (REPLACE -2 1)
                                                          (("1"
                                                            (LEMMA "matv_nth")
                                                            (("1"
                                                              (INST -1 "A" "v"
                                                               "n")
                                                              (("1"
                                                                (EXPAND "*" -1
                                                                        1)
                                                                (("1"
                                                                  (REPLACE -1
                                                                           1)
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (FLATTEN)
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (TYPEPRED
                                                             "col(A * null[list[real]])(0)"
                                                             "matvec(rows(A), columns(A), A, v)")
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (HIDE -1 -3)
                                                                (("2"
                                                                  (EXPAND
                                                                   "rows" -)
                                                                  (("2"
                                                                    (EXPAND "*"
                                                                            -1
                                                                            2)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LABEL "cA" 1)
        (("2" (HIDE "cA")
          (("2" (EXPAND "*" 1)
            (("2" (LEMMA "list_extensionality[real]")
              (("2"
                (INST -1 "matvec(rows(A), columns(A), A, v)"
                 "col(mult(A, vec2mat(v)))(0)")
                (("2" (ASSERT)
                  (("2" (SPLIT 1)
                    (("1" (ASSERT)
                      (("1"
                        (TYPEPRED "matvec(rows(A), columns(A), A, v)"
                         "(col(mult(A, vec2mat(v)))(0))")
                        (("1" (HIDE -1 -3)
                          (("1" (EXPAND "rows")
                            (("1" (TYPEPRED "(mult(A, vec2mat(v)))")
                              (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (SKEEP)
                      (("2" (LEMMA "matv_nth")
                        (("2" (INST -1 "A" "v" "n")
                          (("2" (EXPAND "*" -1 1)
                            (("2" (REPLACE -1 1)
                              (("2" (LEMMA "access_col")
                                (("2" (INST -1 "(mult(A, vec2mat(v)))" "n" "0")
                                  (("2" (EXPAND "access" -1)
                                    (("2" (TYPEPRED "n")
                                      (("2" (ASSERT)
                                        (("2" (LIFT-IF -2)
                                          (("2" (SPLIT -2)
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT)
                                                (("1" (REPLACE -2 1)
                                                  (("1" (LEMMA "entry_mult")
                                                    (("1"
                                                      (INST -1 "A" "vec2mat(v)"
                                                       "n" "0")
                                                      (("1" (LIFT-IF -1)
                                                        (("1" (SPLIT -1)
                                                          (("1" (FLATTEN)
                                                            (("1"
                                                              (EXPAND "*" -3 1)
                                                              (("1"
                                                                (REPLACE -3 1)
                                                                (("1"
                                                                  (LEMMA
                                                                   "vec2mat_id")
                                                                  (("1"
                                                                    (INST -1
                                                                     "v")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (FLATTEN)
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (TYPEPRED "v")
                                                                (("2" (HIDE -1)
                                                                  (("2"
                                                                    (TYPEPRED
                                                                     "A")
                                                                    (("2"
                                                                      (HIDE -1)
                                                                      (("2"
                                                                        (SPLIT
                                                                         -1)
                                                                        (("1"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (LEMMA
                                                                           "full_matrix_columns")
                                                                          (("2"
                                                                            (REVEAL
                                                                             "cA")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (INST
                                                                                 -1
                                                                                 "vec2mat(v)")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (TYPEPRED
                                                                                     "vec2mat(v)")
                                                                                    (("2"
                                                                                      (TYPEPRED
                                                                                       "v")
                                                                                      (("2"
                                                                                        (HIDE
                                                                                         -1)
                                                                                        (("2"
                                                                                          (HIDE
                                                                                           -2)
                                                                                          (("2"
                                                                                            (HIDE-ALL-BUT
                                                                                             2)
                                                                                            (("2"
                                                                                              (GRIND)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (FLATTEN)
                                              (("2" (ASSERT)
                                                (("2"
                                                  (TYPEPRED
                                                   "col((mult(A, vec2mat(v))))(0)"
                                                   "matvec(rows(A), columns(A), A, v)")
                                                  (("2" (HIDE -1 -3)
                                                    (("2" (EXPAND "rows")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (|entry_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|vec2mat_id| FORMULA-DECL NIL |mat_vec_mult| NIL)
    (|nat_min| APPLICATION-JUDGEMENT "{k: nat | k <= i AND k <= j}" |real_defs|
     NIL)
    (|MN_full| EXPR-JUDGEMENT "FullMatrix" |mat_vec_mult| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|vec2mat| DEF-DECL "MatrixMN(length(v), min(length(v), 1))" |mat_vec_mult|
     NIL)
    (|mult_null_right| FORMULA-DECL NIL |matrices| |matrices|)
    (|access_col| FORMULA-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|matvec| DEF-DECL "VectorN(m)" |mat_vec_mult| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
       |matrices| |matrices|)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|matv_nth| FORMULA-DECL NIL |mat_vec_mult| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|mult| CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i, j): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
     |matrices| |matrices|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (* CONST-DECL "VectorN(rows(A))" |mat_vec_mult| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|vec2mat_mult| 0
  (|vec2mat_mult-1| |nil| 3797846472
   ("" (SKEEP)
    (("" (LEMMA "column_extensionality")
      (("" (INST -1 "vec2mat(A * v)" " A * vec2mat(v)")
        (("" (ASSERT)
          (("" (SPLIT 1)
            (("1" (CASE "v=null")
              (("1" (TYPEPRED "v") (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (LEMMA "full_matrix_columns")
                (("2" (INST-CP -1 "vec2mat(A * v)")
                  (("2" (INST-CP -1 "A * vec2mat(v)")
                    (("2" (ASSERT)
                      (("2" (HIDE -1)
                        (("2" (TYPEPRED "A * vec2mat(v)")
                          (("2" (ASSERT)
                            (("2" (HIDE -1)
                              (("2" (EXPAND "rows" -1)
                                (("2" (CASE "A=null")
                                  (("1" (GRIND) NIL NIL)
                                   ("2" (ASSERT)
                                    (("2" (CASE "A * vec2mat(v)=null")
                                      (("1" (EXPAND "length" -2)
                                        (("1" (ASSERT) NIL NIL)) NIL)
                                       ("2" (ASSERT)
                                        (("2" (TYPEPRED "vec2mat(A * v)")
                                          (("2" (HIDE -4)
                                            (("2" (TYPEPRED "A*v")
                                              (("2" (HIDE -3 -1)
                                                (("2" (EXPAND "rows" -1)
                                                  (("2"
                                                    (CASE
                                                        "vec2mat(A * v)=null")
                                                    (("1" (EXPAND "length" -3)
                                                      (("1"
                                                        (EXPAND "length" -2)
                                                        (("1" (ASSERT)
                                                          (("1" (LIFT-IF -3)
                                                            (("1" (SPLIT -3)
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT)
                                                      (("2" (REPLACE -8)
                                                        (("2" (REPLACE -9)
                                                          (("2"
                                                            (INST-CP -3 "0")
                                                            (("1"
                                                              (EXPAND "nth" -4
                                                                      1)
                                                              (("1"
                                                                (TYPEPRED
                                                                 "A*v")
                                                                (("1" (HIDE -1)
                                                                  (("1"
                                                                    (CASE
                                                                        "length(A*v)=0")
                                                                    (("1"
                                                                      (HIDE -5
                                                                       -6 -7 -8
                                                                       -9 -10
                                                                       -11 -12
                                                                       -13)
                                                                      (("1"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "min"
                                                                         -5 1)
                                                                        (("2"
                                                                          (LIFT-IF
                                                                           -5)
                                                                          (("2"
                                                                            (SPLIT
                                                                             -5)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -2)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -8
                                                                                     "0")
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "nth"
                                                                                       -8)
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "full_matrix_columns")
                                                                                        (("1"
                                                                                          (INST
                                                                                           -1
                                                                                           "vec2mat(v)")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            (("1"
                                                                                              (TYPEPRED
                                                                                               "vec2mat(v)")
                                                                                              (("1"
                                                                                                (HIDE
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (HIDE
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (TYPEPRED
                                                                                                     "v")
                                                                                                    (("1"
                                                                                                      (HIDE
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (SPLIT
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "length"
                                                                                                               -3
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (EXPAND
                                                                                                                   "length"
                                                                                                                   -4)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (INST
                                                                                                           -4
                                                                                                           "0")
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "nth"
                                                                                                             -4)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (EXPAND
                                                                                                                 "min"
                                                                                                                 -4)
                                                                                                                (("2"
                                                                                                                  (LIFT-IF
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (SPLIT
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (FLATTEN)
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (FLATTEN)
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (CASE
                                                                                      "NOT length(A*v)=1")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (REPLACE
                                                                                     -1)
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       -2)
                                                                                      (("2"
                                                                                        (INST
                                                                                         -6
                                                                                         "0")
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "nth"
                                                                                           -6)
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "min"
                                                                                             -6)
                                                                                            (("2"
                                                                                              (TYPEPRED
                                                                                               "(A * vec2mat(v))")
                                                                                              (("2"
                                                                                                (INST
                                                                                                 -3
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "nth"
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    (("2"
                                                                                                      (HIDE
                                                                                                       -13)
                                                                                                      (("2"
                                                                                                        (HIDE
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (LEMMA
                                                                                                           "full_matrix_columns")
                                                                                                          (("2"
                                                                                                            (INST
                                                                                                             -1
                                                                                                             "vec2mat(v)")
                                                                                                            (("2"
                                                                                                              (SPLIT
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (FLATTEN)
                                                                                                                (("1"
                                                                                                                  (TYPEPRED
                                                                                                                   "vec2mat(v)")
                                                                                                                  (("1"
                                                                                                                    (HIDE
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (GRIND)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (ASSERT)
                                                                                                                (("2"
                                                                                                                  (TYPEPRED
                                                                                                                   "vec2mat(v)")
                                                                                                                  (("2"
                                                                                                                    (HIDE
                                                                                                                     -4)
                                                                                                                    (("2"
                                                                                                                      (INST
                                                                                                                       -3
                                                                                                                       "0")
                                                                                                                      (("2"
                                                                                                                        (EXPAND
                                                                                                                         "nth"
                                                                                                                         -3)
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (REPLACE
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (REPLACE
                                                                                                                               -6)
                                                                                                                              (("2"
                                                                                                                                (REPLACE
                                                                                                                                 -4)
                                                                                                                                (("2"
                                                                                                                                  (EXPAND
                                                                                                                                   "min"
                                                                                                                                   7)
                                                                                                                                  (("2"
                                                                                                                                    (PROPAX)
                                                                                                                                    NIL
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (EXPAND "length"
                                                                      1)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "rows" 1) (("2" (ASSERT) NIL NIL)) NIL)
             ("3" (SKEEP)
              (("3" (TYPEPRED "i")
                (("3" (LEMMA "full_matrix_columns")
                  (("3" (INST-CP -1 "vec2mat(A * v)")
                    (("3" (INST -1 "A * vec2mat(v)")
                      (("3" (ASSERT)
                        (("3"
                          (TYPEPRED "A * vec2mat(v)" "vec2mat(A * v)" "A*v" "A"
                           "v")
                          (("3" (HIDE -9)
                            (("3" (HIDE -11 -6 -1)
                              (("3" (EXPAND "row" -)
                                (("3" (CASE "A=null")
                                  (("1" (GRIND) NIL NIL)
                                   ("2" (EXPAND "rows")
                                    (("2" (SPLIT -12)
                                      (("1" (FLATTEN)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "length" -3)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SPLIT -10)
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (SPLIT -13)
                                          (("1" (FLATTEN)
                                            (("1" (REPLACE -12 -9)
                                              (("1" (EXPAND "length" -9)
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (EXPAND "vec2mat" -1 2)
                                              (("2" (LIFT-IF -1)
                                                (("2" (ASSERT)
                                                  (("2" (CASE "A*v=null")
                                                    (("1" (EXPAND "length" -12)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (ASSERT)
                                                      (("2" (TYPEPRED "i")
                                                        (("2" (REPLACE -2)
                                                          (("2" (HIDE -3)
                                                            (("2" (INST -5 "0")
                                                              (("1"
                                                                (EXPAND "nth"
                                                                        -5)
                                                                (("1"
                                                                  (REPLACE -5
                                                                           -3)
                                                                  (("1"
                                                                    (REPLACE -3
                                                                             -1)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -5 -1
                                                                       RL)
                                                                      (("1"
                                                                        (LEMMA
                                                                         "columns_mult")
                                                                        (("1"
                                                                          (INST
                                                                           -1
                                                                           "A"
                                                                           "vec2mat(v)")
                                                                          (("1"
                                                                            (SPLIT
                                                                             -1)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "full_matrix_columns")
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "vec2mat(v)")
                                                                                  (("1"
                                                                                    (SPLIT
                                                                                     -1)
                                                                                    (("1"
                                                                                      (FLATTEN)
                                                                                      (("1"
                                                                                        (TYPEPRED
                                                                                         "vec2mat(v)")
                                                                                        (("1"
                                                                                          (HIDE
                                                                                           -4)
                                                                                          (("1"
                                                                                            (TYPEPRED
                                                                                             "v")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "length"
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "length"
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (EXPAND
                                                                                       "vec2mat"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "length"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "length"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -7
                                                                                               -3)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "vec2mat"
                                                                                                 -3)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  (("2"
                                                                                                    (REPLACE
                                                                                                     -1
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (EXPAND
                                                                                                       "max"
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (CASE
                                                                                                              "NOT i=0")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (REPLACE
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (LEMMA
                                                                                                               "vec2mat_id")
                                                                                                              (("2"
                                                                                                                (INST
                                                                                                                 -1
                                                                                                                 "A*v")
                                                                                                                (("2"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   3)
                                                                                                                  (("2"
                                                                                                                    (LEMMA
                                                                                                                     "matv_matmat")
                                                                                                                    (("2"
                                                                                                                      (INST
                                                                                                                       -1
                                                                                                                       "A"
                                                                                                                       "v")
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (LEMMA
                                                                 "rows_mult")
                                                                (("2"
                                                                  (INST -1 "A"
                                                                   "vec2mat(v)")
                                                                  (("2"
                                                                    (EXPAND
                                                                     "rows" -1)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "length"
                                                                       -1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (LIFT-IF
                                                                           -1)
                                                                          (("2"
                                                                            (SPLIT
                                                                             -1)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "length"
                                                                                 2)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|column_extensionality| FORMULA-DECL NIL |mat_vec_mult| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|vec2mat_id| FORMULA-DECL NIL |mat_vec_mult| NIL)
    (|matv_matmat| FORMULA-DECL NIL |mat_vec_mult| NIL)
    (|columns_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|rows_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|matvec| DEF-DECL "VectorN(m)" |mat_vec_mult| NIL)
    (|mult| CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i, j): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
     |matrices| |matrices|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (A SKOLEM-CONST-DECL "FullMatrix" |mat_vec_mult| NIL)
    (|v| SKOLEM-CONST-DECL "VectorN(columns(A))" |mat_vec_mult| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|MN_full| EXPR-JUDGEMENT "FullMatrix" |mat_vec_mult| NIL)
    (|nat_min| APPLICATION-JUDGEMENT "{k: nat | k <= i AND k <= j}" |real_defs|
     NIL)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
       |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "VectorN(rows(A))" |mat_vec_mult| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|vec2mat| DEF-DECL "MatrixMN(length(v), min(length(v), 1))" |mat_vec_mult|
     NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|matv_dist_sum_TCC1| 0
  (|matv_dist_sum_TCC1-1| |nil| 3797763934
   ("" (SKEEP)
    (("" (TYPEPRED "v1+v2" "v1" "v2")
      (("" (REPLACE -4)
        (("" (REPLACE -6) (("" (EXPAND "max" -2) (("" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|matv_dist_sum| SUBTYPE "((matrices.+)(mat_vec_mult.v1, mat_vec_mult.v2))"
    "VectorN(matrices.columns(mat_vec_mult.A))")))
 (|matv_dist_sum| 0
  (|matv_dist_sum-1| |nil| 3797763993
   (""
    (CASE "FORALL (m:nat, A: FullMatrix, v1, v2: VectorN(columns(A))):
        length(A) = m IMPLIES A * (v1 + v2) = A * v1 + A * v2")
    (("1" (SKEEP) (("1" (INST -1 "length(A)" "A" "v1" "v2") NIL NIL)) NIL)
     ("2" (ASSERT)
      (("2" (HIDE 2)
        (("2" (INDUCT "m")
          (("1" (SKEEP)
            (("1" (ASSERT)
              (("1" (EXPAND "length" -1)
                (("1" (LIFT-IF -1)
                  (("1" (SPLIT -1)
                    (("1" (EXPAND "*" 1 1)
                      (("1" (EXPAND "matvec" 1)
                        (("1" (ASSERT)
                          (("1" (EXPAND "rows" 1)
                            (("1" (EXPAND "*" 1)
                              (("1" (EXPAND "matvec" 1)
                                (("1" (EXPAND "rows")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "+" 1)
                                      (("1" (EXPAND "add" 1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKEEP)
            (("2" (SKEEP)
              (("2" (EXPAND "*" 1)
                (("2" (EXPAND "rows" 1)
                  (("2" (EXPAND "matvec" 1)
                    (("2" (ASSERT)
                      (("2" (EXPAND "+" 1)
                        (("2" (EXPAND "add" 1)
                          (("2" (DECOMPOSE-EQUALITY 1)
                            (("1" (TYPEPRED "v1" "v2")
                              (("1" (HIDE -1 -3)
                                (("1" (LIFT-IF 1)
                                  (("1" (SPLIT 1)
                                    (("1" (FLATTEN)
                                      (("1" (EXPAND "length" -2)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "length" -3)
                                            (("1" (LIFT-IF -3)
                                              (("1" (SPLIT -3)
                                                (("1" (FLATTEN)
                                                  (("1" (GRIND) NIL NIL)) NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (SPLIT 2)
                                        (("1" (FLATTEN)
                                          (("1" (EXPAND "length" -)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (ASSERT)
                                            (("2" (LEMMA "dot_dist")
                                              (("2"
                                                (INST -1 "car(A)" "v1" "v2")
                                                (("1" (REPLACE -1 2 RL)
                                                  (("1" (EXPAND "+" 2 2)
                                                    (("1" (EXPAND "add" 2 2)
                                                      (("1" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (TYPEPRED "car(A)")
                                                  (("2" (HIDE -1)
                                                    (("2" (TYPEPRED "A")
                                                      (("2" (ASSERT)
                                                        (("2" (SPLIT -2)
                                                          (("1"
                                                            (EXPAND "length"
                                                                    -6)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2" (HIDE -2)
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (LEMMA
                                                                 "full_matrix_columns")
                                                                (("2"
                                                                  (INST -1 "A")
                                                                  (("2"
                                                                    (SPLIT -1)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "length"
                                                                           -7)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "length"
                                                                         -3)
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (EXPAND
                                                                             "length"
                                                                             -1)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (INST -1 "cdr(A)" "v1" "v2")
                              (("1" (ASSERT)
                                (("1" (EXPAND "length" -2)
                                  (("1" (LIFT-IF -2)
                                    (("1" (SPLIT -2)
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (EXPAND "*" -2)
                                            (("2" (EXPAND "+" -2 2)
                                              (("2" (ASSERT)
                                                (("2" (EXPAND "rows" -2 1)
                                                  (("2" (EXPAND "length" 2 1)
                                                    (("2" (CASE "j=0")
                                                      (("1" (GRIND) NIL NIL)
                                                       ("2"
                                                        (LEMMA "cdr_columns")
                                                        (("2" (INST -1 "A")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (REPLACE -1 3)
                                                              (("1"
                                                                (EXPAND "+" -3
                                                                        1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "add" -3
                                                                     1)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -3 3 LR)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "rows"
                                                                         3)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "length"
                                                                           3 3)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "length"
                                                                             3
                                                                             4)
                                                                            (("1"
                                                                              (PROPAX)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (HIDE -2 3 4)
                                                            (("2" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (TYPEPRED "v2")
                                  (("2" (HIDE -1)
                                    (("2" (CASE "j=0")
                                      (("1" (REVEAL +) (("1" (GRIND) NIL NIL))
                                        NIL)
                                       ("2" (LEMMA "cdr_columns")
                                        (("2" (INST -1 "A")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (EXPAND "length" -2)
                                            (("2" (ASSERT)
                                              (("2" (LIFT-IF -2)
                                                (("2" (SPLIT -2)
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (ASSERT)
                                                      (("2"
                                                        (EXPAND "length" -1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (CASE "j=0")
                                (("1" (GRIND) NIL NIL)
                                 ("2" (LEMMA "cdr_columns")
                                  (("2" (INST -1 "A")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (EXPAND "length" -1)
                                      (("2" (LIFT-IF -1)
                                        (("2" (SPLIT -1)
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (FLATTEN)
                                            (("2" (ASSERT)
                                              (("2" (EXPAND "length" -1)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("4" (FLATTEN)
                                (("4" (ASSERT)
                                  (("4" (CASE "j=0")
                                    (("1" (GRIND) NIL NIL)
                                     ("2" (SKEEP)
                                      (("2" (LEMMA "cdr_columns_full")
                                        (("2" (ASSERT)
                                          (("2" (INST -1 "A" "_" "_")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (FLATTEN)
                              (("3" (ASSERT)
                                (("3" (EXPAND "length" 3)
                                  (("3" (ASSERT)
                                    (("3" (TYPEPRED "A" "v1" "v2")
                                      (("3" (HIDE -1)
                                        (("3"
                                          (TYPEPRED
                                           "add(cdr[real](v1), cdr[real](v2))")
                                          (("3" (HIDE -1)
                                            (("3" (EXPAND "length" -4)
                                              (("3" (EXPAND "length" -6)
                                                (("3" (ASSERT)
                                                  (("3" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("4" (FLATTEN) (("4" (ASSERT) NIL NIL)) NIL)
                             ("5" (FLATTEN) (("5" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (HIDE 2)
            (("3" (SKEEP)
              (("3" (TYPEPRED "v1+v2" "v1" "v2")
                (("3" (ASSERT) (("3" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP)
        (("3" (TYPEPRED "v1+v2" "v1" "v2") (("3" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|matv_dist_scal_TCC1| 0
  (|matv_dist_scal_TCC1-1| |nil| 3797763934 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|matv_dist_scal| SUBTYPE "(matrices.*(mat_vec_mult.c, mat_vec_mult.v))"
    "VectorN(matrices.columns(mat_vec_mult.A))")))
 (|matv_dist_scal| 0
  (|matv_dist_scal-1| |nil| 3797766117
   (""
    (CASE "FORALL (m:nat, A: FullMatrix, v: VectorN(columns(A)), c: real):
       length(A)=m IMPLIES  A * (c * v) = c * (A * v)")
    (("1" (SKEEP)
      (("1" (ASSERT) (("1" (INST -1 "length(A)" "A" "v" "c") NIL NIL)) NIL))
      NIL)
     ("2" (ASSERT)
      (("2" (HIDE 2)
        (("2" (INDUCT "m")
          (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
           ("2" (SKEEP)
            (("2" (SKEEP)
              (("2" (CASE "j=0")
                (("1" (CASE "null?(A)")
                  (("1" (EXPAND "length" -4) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (EXPAND "*" 2)
                    (("2" (GRIND)
                      (("2" (DECOMPOSE-EQUALITY 2)
                        (("2" (LEMMA "dot_scalar1")
                          (("2" (CASE "columns(A)=0")
                            (("1" (LEMMA "full_matrix_columns")
                              (("1" (INST -1 "A")
                                (("1" (SPLIT -1)
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (REPLACE -2 -1)
                                    (("2" (TYPEPRED "v")
                                      (("2" (REPLACE -4)
                                        (("2" (EXPAND "length" -2)
                                          (("2" (LIFT-IF -2)
                                            (("2" (SPLIT -2)
                                              (("1" (EXPAND "length" -3)
                                                (("1" (LIFT-IF -3)
                                                  (("1" (SPLIT -3)
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (FLATTEN)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (INST -1 "car(A)" "v" "c")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (TYPEPRED "v") (("2" (GRIND) NIL NIL)) NIL)
                               ("3" (LEMMA "full_matrix_columns")
                                (("3" (INST -1 "A") (("3" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "*" 2)
                    (("2" (EXPAND "matvec" 2)
                      (("2" (EXPAND "rows" 2)
                        (("2" (ASSERT)
                          (("2" (EXPAND "scal" 2 3)
                            (("2" (DECOMPOSE-EQUALITY 2)
                              (("1" (LEMMA "dot_scalar1")
                                (("1" (INST -1 "car(A)" "v" "c")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "*" -1)
                                      (("1" (EXPAND "*" 1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (TYPEPRED "v") (("2" (GRIND) NIL NIL))
                                    NIL)
                                   ("3" (GRIND) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (INST -1 "cdr(A)" "v" "c")
                                (("1" (ASSERT)
                                  (("1" (EXPAND "length" -2)
                                    (("1" (LIFT-IF -2)
                                      (("1" (CASE "null?(A)")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (ASSERT)
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "*" -1)
                                              (("2" (EXPAND "rows" -1)
                                                (("2" (EXPAND "length" 2 1)
                                                  (("2" (LEMMA "cdr_columns")
                                                    (("2" (INST -1 "A")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (TYPEPRED "v")
                                    (("2" (LEMMA "cdr_columns")
                                      (("2" (INST -1 "A")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (ASSERT)
                                          (("2" (EXPAND "length" -3)
                                            (("2" (LIFT-IF -3)
                                              (("2" (SPLIT -3)
                                                (("1" (FLATTEN)
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (ASSERT)
                                                    (("2" (EXPAND "length" -1)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (FLATTEN)
                                  (("3" (ASSERT)
                                    (("3" (EXPAND "length" -1)
                                      (("3" (LIFT-IF -1)
                                        (("3" (SPLIT -1)
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (FLATTEN)
                                            (("2" (EXPAND "length" -1)
                                              (("2" (ASSERT)
                                                (("2" (TYPEPRED "A")
                                                  (("2"
                                                    (LEMMA "cdr_columns_full")
                                                    (("2" (INST -1 "A" "_" "_")
                                                      NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (HIDE 2)
            (("3" (SKEEP)
              (("3" (TYPEPRED "c*v")
                (("3" (TYPEPRED "v") (("3" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP) (("3" (TYPEPRED "c*v" "v") (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|dot_scalar1| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK))
 (|matv_dist_sub_TCC1| 0
  (|matv_dist_sub_TCC1-1| |nil| 3797763934
   ("" (SKEEP) (("" (TYPEPRED "v1-v2" "v1" "v2") (("" (GRIND) NIL NIL)) NIL))
    NIL)
   ((|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|))
   NIL
   (|matv_dist_sub| SUBTYPE "((matrices.-)(mat_vec_mult.v1, mat_vec_mult.v2))"
    "VectorN(matrices.columns(mat_vec_mult.A))")))
 (|matv_dist_sub| 0
  (|matv_dist_sub-1| |nil| 3797765974
   ("" (SKEEP)
    (("" (EXPAND "-" 1)
      (("" (EXPAND "sub" 1)
        (("" (LEMMA "matv_dist_sum")
          (("" (LEMMA "matv_dist_scal")
            (("" (INST -1 "A" "v2" "-1")
              (("" (INST -2 "A" "v1" "scal(-1,v2)")
                (("1" (EXPAND "+" -2)
                  (("1" (ASSERT)
                    (("1" (REPLACE -2 1)
                      (("1" (EXPAND "*" -1 2)
                        (("1" (EXPAND "*" -1 2) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (TYPEPRED "scal(-1,v2)" "v2" "columns(A)")
                  (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|))
   SHOSTAK))
 (|matv_asso_TCC1| 0
  (|matv_asso_TCC1-1| |nil| 3797763934 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|))
   NIL
   (|matv_asso| SUBTYPE "(mat_vec_mult.*(mat_vec_mult.B, mat_vec_mult.v))"
    "VectorN(matrices.columns(mat_vec_mult.A))")))
 (|matv_asso_TCC2| 0
  (|matv_asso_TCC2-1| |nil| 3797763934
   ("" (SKEEP)
    (("" (TYPEPRED "B")
      (("" (TYPEPRED "v")
        (("" (LEMMA "columns_mult")
          (("" (INST -1 "A" "B")
            (("" (ASSERT)
              (("" (TYPEPRED "v")
                (("" (EXPAND "*" 1)
                  (("" (EXPAND "columns" -8)
                    (("" (ASSERT)
                      (("" (EXPAND "rows" -8)
                        (("" (ASSERT)
                          (("" (EXPAND "length" -8)
                            (("" (LIFT-IF -8)
                              (("" (SPLIT -8)
                                (("1" (SPLIT -8)
                                  (("1" (EXPAND "columns" -7)
                                    (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|columns_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL
   (|matv_asso| SUBTYPE "mat_vec_mult.v"
    "VectorN(matrices.columns((matrices.*(mat_vec_mult.A, mat_vec_mult.B))))")))
 (|matv_asso| 0
  (|matv_asso-1| |nil| 3797768780
   ("" (LEMMA "matv_matmat")
    (("" (SKEEP)
      (("" (INST-CP -1 "A" "B*v")
        (("" (INST -1 "A*B" "v")
          (("" (REPLACE -1 1)
            (("" (LEMMA "matv_matmat")
              (("" (INST -1 "B" "v")
                (("" (REPLACE -1 1)
                  (("" (LEMMA "vec2mat_mult")
                    (("" (LEMMA "vec2mat_mult")
                      (("" (INST-CP -1 "B" "v")
                        (("" (SPLIT -2)
                          (("1" (REPLACE -1)
                            (("1" (ASSERT)
                              (("1" (LEMMA "matrix_mult_assoc")
                                (("1" (INST -1 "vec2mat(v)" "A" "B")
                                  (("1" (ASSERT)
                                    (("1" (TYPEPRED "B")
                                      (("1" (EXPAND "rows" -3)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "length" -3)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "B") (("2" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|matrix_mult_assoc| FORMULA-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|matv_add_zero_TCC1| 0
  (|matv_add_zero_TCC1-1| |nil| 3798068688
   ("" (SKEEP)
    (("" (TYPEPRED "B")
      (("" (TYPEPRED "y3 - B * y2")
        (("" (TYPEPRED "y2" "B*y2")
          (("" (EXPAND "rows")
            (("" (ASSERT)
              (("" (HIDE -1 -3 -5 -7)
                (("" (HIDE -1)
                  (("" (TYPEPRED "y3")
                    (("" (ASSERT)
                      (("" (HIDE -1)
                        (("" (REPLACE -1)
                          (("" (REPLACE -5)
                            (("" (REPLACE -2)
                              (("" (EXPAND "max" -3) (("" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   NIL
   (|matv_add_zero| SUBTYPE
    "((matrices.-)(mat_vec_mult.y3, mat_vec_mult.*(mat_vec_mult.B, mat_vec_mult.y2)))"
    "VectorN(matrices.columns(mat_vec_mult.A))")))
 (|matv_add_zero| 0
  (|matv_add_zero-1| |nil| 3798068792
   ("" (SKEEP)
    (("" (CASE " (A * B * y2) = (A * y3) - A * (y3 - B * y2)")
      (("1" (ASSERT)
        (("1" (REPLACE -1 1)
          (("1" (LEMMA "neg_1")
            (("1" (INST -1 "(A * y3)" " A * (y3 - B * y2)")
              (("1" (EXPAND "-" 1 1)
                (("1" (EXPAND "sub" 1 1)
                  (("1" (EXPAND "*" -1 1)
                    (("1" (REPLACE -1 1)
                      (("1" (EXPAND "-" 1 3)
                        (("1" (EXPAND "sub" 1 1)
                          (("1" (EXPAND "-" 1 2)
                            (("1" (EXPAND "sub" 1 1)
                              (("1" (EXPAND "+" 1)
                                (("1" (LEMMA "add_commute")
                                  (("1"
                                    (INST -1 "A * (y3 - B * y2)"
                                     "scal(-1, (A * y3))")
                                    (("1" (EXPAND "+" -1 1)
                                      (("1" (REPLACE -1 1)
                                        (("1" (LEMMA "asso_add")
                                          (("1"
                                            (INST -1 "y1" "scal(-1, (A * y3))"
                                             "A * (y3 - B * y2)")
                                            (("1" (ASSERT)
                                              (("1" (EXPAND "+" -1 1)
                                                (("1" (EXPAND "+" -1 2)
                                                  (("1" (EXPAND "+" -1 2)
                                                    (("1" (ASSERT)
                                                      (("1" (EXPAND "+" -1)
                                                        (("1" (ASSERT)
                                                          (("1" (REPLACE -1 1)
                                                            (("1"
                                                              (HIDE -2 -3 -4)
                                                              (("1"
                                                                (EXPAND "+" 1)
                                                                (("1" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2"
                                              (TYPEPRED "A * (y3 - B * y2)")
                                              (("2" (HIDE -1)
                                                (("2" (EXPAND "rows" -1)
                                                  (("2" (TYPEPRED "A")
                                                    (("2" (ASSERT)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (ASSERT)
          (("2" (LEMMA "matv_dist_sub")
            (("2" (INST -1 "A" "y3" "B*y2")
              (("2" (REPLACE -1 1)
                (("2" (ASSERT)
                  (("2" (LEMMA "sub_idx")
                    (("2" (INST -1 "A*y3" "A*(B*y2)")
                      (("2" (REPLACE -1 1)
                        (("2" (EXPAND "-" 1 1)
                          (("2" (EXPAND "sub" 1 1)
                            (("2" (LEMMA "dist")
                              (("2"
                                (INST -1 "-1" " A * y3"
                                 "(-1 * (A * (B * y2)))")
                                (("1" (EXPAND "*" -1 1)
                                  (("1" (REPLACE -1 1)
                                    (("1" (LEMMA "asso_v")
                                      (("1" (INST -1 "-1" "-1" "A*(B*y2)")
                                        (("1" (REPLACE -1 1)
                                          (("1" (ASSERT)
                                            (("1" (CASE "NOT -1 * -1 = 1")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (REPLACE -1 1)
                                                (("2" (LEMMA "one_idx")
                                                  (("2" (INST -1 "A*(B*y2)")
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (EXPAND "+" 1)
                                                        (("2"
                                                          (LEMMA "asso_add")
                                                          (("2"
                                                            (INST -1 "A * y3"
                                                             "-1 * (A * y3)"
                                                             " A * (B * y2)")
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (EXPAND "+" -1
                                                                        3)
                                                                (("2"
                                                                  (EXPAND "+"
                                                                          -1 3)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (REPLACE
                                                                       -1 1 RL)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "+" 1)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sub_self")
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "A*y3")
                                                                            (("2"
                                                                              (EXPAND
                                                                               "-"
                                                                               -1)
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "sub"
                                                                                 -1)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "*"
                                                                                   1
                                                                                   4)
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     -1
                                                                                     1)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "zero_id")
                                                                                      (("2"
                                                                                        (LEMMA
                                                                                         "add_commute")
                                                                                        (("2"
                                                                                          (INST
                                                                                           -1
                                                                                           "zero_vec(length(A * y3))"
                                                                                           "A * (B * y2)")
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "+"
                                                                                             -1
                                                                                             1)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -1
                                                                                               1)
                                                                                              (("1"
                                                                                                (INST
                                                                                                 -2
                                                                                                 "A*(B*y2)")
                                                                                                (("1"
                                                                                                  (CASE
                                                                                                      "length(A * (B * y2)) = (length(A * y3))")
                                                                                                  (("1"
                                                                                                    (REPLACE
                                                                                                     -1
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -3
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (LEMMA
                                                                                                           "matv_asso")
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -1
                                                                                                             "A"
                                                                                                             "B"
                                                                                                             "y2")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (HIDE 2)
                                    (("2" (TYPEPRED "(-1 * (A * (B * y2)))")
                                      (("2" (HIDE -1) (("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|add_commute| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|asso_add| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|neg_1| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|dist| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|one_idx| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|sub_self| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|sub_idx| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|matv_zerovec| 0
  (|matv_zerovec-1| |nil| 3798132882
   (""
    (CASE
        "FORALL (m:nat,A: FullMatrix): length(A)=m IMPLIES A * zero_vec(columns(A)) = zero_vec(rows(A))")
    (("1" (SKEEP) (("1" (INST -1 "length(A)" "A") NIL NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "m")
        (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (ASSERT)
              (("2" (EXPAND "*" 1 1)
                (("2" (EXPAND "matvec" 1 1)
                  (("2" (ASSERT)
                    (("2" (LIFT-IF 1)
                      (("2" (SPLIT 1)
                        (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
                         ("2" (FLATTEN)
                          (("2" (INST -1 "cdr(A)")
                            (("1" (ASSERT)
                              (("1" (EXPAND "length" -2)
                                (("1" (EXPAND "rows" 1)
                                  (("1" (EXPAND "length" 1)
                                    (("1" (LIFT-IF 1)
                                      (("1" (SPLIT 1)
                                        (("1" (PROPAX) NIL NIL)
                                         ("2" (FLATTEN)
                                          (("2" (ASSERT)
                                            (("2" (ASSERT)
                                              (("2" (EXPAND "zero_vec" 3 3)
                                                (("2" (DECOMPOSE-EQUALITY 3)
                                                  (("1" (LEMMA "dot_zero")
                                                    (("1" (ASSERT)
                                                      (("1"
                                                        (INST -1 "car(A)"
                                                         "columns(A)")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (LEMMA
                                                             "cdr_columns")
                                                            (("1" (INST -1 "A")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (REPLACE -1)
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (EXPAND "*" -1 1)
                                                    (("2" (EXPAND "rows" 1)
                                                      (("2"
                                                        (EXPAND "length" 1 1)
                                                        (("2"
                                                          (EXPAND "rows" -1)
                                                          (("2"
                                                            (LEMMA
                                                             "cdr_columns")
                                                            (("2" (INST -1 "A")
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (LEMMA "cdr_columns_full")
                              (("2" (ASSERT)
                                (("2" (FLATTEN)
                                  (("2" (SKEEP)
                                    (("2" (INST -1 "A" "i" "j!1") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL)))

