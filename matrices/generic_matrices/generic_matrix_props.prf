(|generic_matrix_props|
 (|length_v_default| 0
  (|length_v_default-1| |nil| 3906458424
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "v_default")
          (("1" (EXPAND "minimal_default_vector")
            (("1" (DECOMPOSE-EQUALITY)
              (("1" (TYPEPRED "length(u)")
                (("1" (DECOMPOSE-EQUALITY) (("1" (INST?) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (GRIND) NIL NIL))
      NIL))
    NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minimal_default_vector| CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|v_default| CONST-DECL "gvec" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|dimension_M_default| 0
  (|dimension_M_default-1| |nil| 3906458508
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "M_default")
          (("1" (EXPAND "minimal_default_matrix")
            (("1" (DECOMPOSE-EQUALITY 1)
              (("1" (DECOMPOSE-EQUALITY 1)
                (("1" (TYPEPRED "dimension(M)")
                  (("1" (INSTANTIATE -3 "x!1")
                    (("1" (ASSERT)
                      (("1" (INSTANTIATE -3 "x!2") (("1" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (GRIND) NIL NIL))
      NIL))
    NIL)
   ((|minimal_default_matrix| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|M_default| CONST-DECL "gmat" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|dimension_M_default_too| 0
  (|dimension_M_default_too-1| |nil| 3906458889
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "M_default")
          (("1" (EXPAND "minimal_default_matrix")
            (("1" (DECOMPOSE-EQUALITY)
              (("1" (DECOMPOSE-EQUALITY)
                (("1" (EXPAND "height")
                  (("1" (TYPEPRED "dimension(M)")
                    (("1" (INSTANTIATE -3 "x!1")
                      (("1" (ASSERT)
                        (("1" (INSTANTIATE -3 "x!2") (("1" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (EXPAND "height")
                (("2" (TYPEPRED "dimension(M)")
                  (("2" (HIDE-ALL-BUT (-1 -5 1))
                    (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (GRIND) NIL NIL)
       ("3" (FLATTEN)
        (("3" (EXPAND "M_default")
          (("3" (EXPAND "minimal_default_matrix")
            (("3" (DECOMPOSE-EQUALITY)
              (("1" (DECOMPOSE-EQUALITY)
                (("1" (EXPAND "width")
                  (("1" (TYPEPRED "dimension(M)")
                    (("1" (INSTANTIATE -4 "x!2")
                      (("1" (ASSERT)
                        (("1" (INSTANTIATE -4 "x!1") (("1" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (EXPAND "width")
                (("2" (TYPEPRED "dimension(M)")
                  (("2" (HIDE-ALL-BUT (-2 -5 1))
                    (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("4" (GRIND) NIL NIL))
      NIL))
    NIL)
   ((|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|minimal_default_matrix| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|M_default| CONST-DECL "gmat" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|matrix_height_width| 0
  (|matrix_height_width-1| |nil| 3906540882
   ("" (SKEEP)
    (("" (EXPAND "height")
      (("" (EXPAND "width")
        (("" (TYPEPRED "dimension(M)")
          (("" (ASSERT)
            (("" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|row_length| 0
  (|row_length-1| |nil| 3906480609
   ("" (SKEEP) (("" (EXPAND "row") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|row| CONST-DECL "gvec" |generic_matrix_defs| NIL)) SHOSTAK))
 (|column_length| 0
  (|column_length-1| |nil| 3906480625
   ("" (SKEEP) (("" (EXPAND "column") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|column| CONST-DECL "gvec" |generic_matrix_defs| NIL)) SHOSTAK))
 (|same_length_TCC1| 0
  (|same_length_TCC1-1| |nil| 3906461271
   ("" (SKEEP)
    (("" (TYPEPRED "length(u)")
      (("" (SKEEP)
        (("" (DECOMPOSE-EQUALITY)
          (("" (REPLACES -1)
            (("" (REPLACES -1)
              (("" (INSTANTIATE -1 "k") (("" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL (|same_length| SUBTYPE "generic_matrix_props.v" "gvec[T, default]")))
 (|same_length| 0
  (|same_length-1| |nil| 3906468633
   ("" (SKEEP)
    (("" (ASSERT) (("" (EXPAND "same?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL))
   SHOSTAK))
 (|same_dimension_0_TCC1| 0
  (|same_dimension_0_TCC1-1| |nil| 3906461271 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|minimal_default_matrix| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (|M_default| CONST-DECL "gmat" |generic_matrix_defs| NIL))
   NIL
   (|same_dimension_0| SUBTYPE "generic_matrix_props.N" "gmat[T, default]")))
 (|same_dimension_0| 0
  (|same_dimension_0-1| |nil| 3906468662
   ("" (SKEEP)
    (("" (ASSERT) (("" (EXPAND "same?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|same_dimension_TCC1| 0
  (|same_dimension_TCC1-1| |nil| 3906461271
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (SPLIT)
        (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)
         ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL)
         ("7" (GRIND) NIL NIL)
         ("8" (DECOMPOSE-EQUALITY -1)
          (("8" (EXPAND "height")
            (("8" (EXPAND "width")
              (("8" (TYPEPRED "dimension(M)")
                (("8" (HIDE (-3 -4))
                  (("8" (DECOMPOSE-EQUALITY -3)
                    (("8" (TYPEPRED "dimension(M)`1") (("8" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("9" (FLATTEN)
          (("9" (DECOMPOSE-EQUALITY -2)
            (("9" (DECOMPOSE-EQUALITY)
              (("9" (EXPAND "height")
                (("9" (EXPAND "width")
                  (("9" (TYPEPRED "n")
                    (("9" (DECOMPOSE-EQUALITY 2)
                      (("9" (TYPEPRED "m")
                        (("9" (TYPEPRED "dimension(M)")
                          (("9" (HIDE (-3 -4)) (("9" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("10" (FLATTEN)
          (("10" (DECOMPOSE-EQUALITY -2)
            (("10" (DECOMPOSE-EQUALITY)
              (("10" (EXPAND "width")
                (("10" (TYPEPRED "m")
                  (("10" (TYPEPRED "dimension(M)")
                    (("10" (HIDE (-3 -4))
                      (("10" (DECOMPOSE-EQUALITY 2) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("11" (SKEEP)
          (("11" (SKEEP)
            (("11" (DECOMPOSE-EQUALITY -2)
              (("11" (REPLACES -2)
                (("11" (REPLACES -1)
                  (("11" (ASSERT)
                    (("11" (EXPAND "height")
                      (("11" (TYPEPRED "dimension(M)")
                        (("11" (INSTANTIATE -3 "k")
                          (("11" (ASSERT)
                            (("11" (INSTANTIATE -3 "j1")
                              (("11" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("12" (SKEEP)
          (("12" (SKEEP)
            (("12" (DECOMPOSE-EQUALITY -2)
              (("12" (REPLACES -1)
                (("12" (REPLACES -1)
                  (("12" (ASSERT)
                    (("12" (EXPAND "width")
                      (("12" (TYPEPRED "dimension(M)")
                        (("12" (INSTANTIATE -4 "k")
                          (("12" (ASSERT)
                            (("12" (INSTANTIATE -4 "i1")
                              (("12" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((TRUE CONST-DECL "bool" |booleans| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL))
   NIL (|same_dimension| SUBTYPE "generic_matrix_props.N" "gmat[T, default]")))
 (|same_dimension| 0
  (|same_dimension-1| |nil| 3906468675
   ("" (SKEEP)
    (("" (ASSERT) (("" (EXPAND "same?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL))
   SHOSTAK))
 (|cdr_length| 0
  (|cdr_length-1| |nil| 3906470817
   ("" (SKEEP) (("" (EXPAND "cdr") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|cdr| CONST-DECL "gvec" |generic_matrix_defs| NIL)) SHOSTAK))
 (|eval_length| 0
  (|eval_length-1| |nil| 3906470553
   ("" (SKEEP) (("" (TYPEPRED "eval_vec(v)") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|eval_vec| DEF-DECL "{l: list[T] |
   length(v) = length(l) AND
    FORALL (i: below(length(l))): nth(v)(i) = nth(l, i)}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|row_cdr_height| 0
  (|row_cdr_height-1| |nil| 3906475516
   ("" (SKEEP)
    (("" (EXPAND "height")
      (("" (EXPAND "row_cdr")
        (("" (LIFT-IF)
          (("" (SPLIT)
            (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|M_default| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (|minimal_default_matrix| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|row_cdr| CONST-DECL "gmat" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|eval_height| 0
  (|eval_height-1| |nil| 3906477461
   ("" (SKEEP) (("" (TYPEPRED "eval_mat(M)") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|eval_width_rows| 0
  (|eval_width_rows-1| |nil| 3906478511 ("" (GRIND) NIL NIL)
   ((|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|row| CONST-DECL "gvec" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|eval_width_TCC1| 0
  (|eval_width_TCC1-1| |nil| 3906540881
   ("" (SKEEP)
    (("" (TYPEPRED "n")
      (("" (LEMMA "eval_height") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|eval_height| FORMULA-DECL NIL |generic_matrix_props| NIL))
   NIL
   (|eval_width| SUBTYPE "generic_matrix_props.n"
    "below[length[list[T]](eval_mat[T, default](M))]")))
 (|eval_width| 0
  (|eval_width-1| |nil| 3906478409
   ("" (SKEEP)
    (("" (TYPEPRED "eval_mat(M)")
      (("" (INST -2 "n") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|abstract_eval_vector| 0
  (|abstract_eval_vector-1| |nil| 3906547631
   ("" (SKEEP :PREDS? T)
    (("" (TYPEPRED "eval_vec(v)")
      (("" (DECOMPOSE-EQUALITY 1)
        (("1" (DECOMPOSE-EQUALITY 1)
          (("1" (CASE "x!1 >= length(eval_vec(v))")
            (("1" (EXPAND "abstract_vec")
              (("1" (ASSERT)
                (("1" (HIDE -3)
                  (("1" (REPLACES -2 :DIR RL)
                    (("1" (TYPEPRED "length(v)")
                      (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (INST -2 "x!1")
              (("1" (EXPAND "abstract_vec") (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "abstract_vec") (("2" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|eval_vec| DEF-DECL "{l: list[T] |
   length(v) = length(l) AND
    FORALL (i: below(length(l))): nth(v)(i) = nth(l, i)}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|abstract_vec| CONST-DECL "gvec" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|eval_abstract_vector| 0
  (|eval_abstract_vector-2| |nil| 3906565077
   ("" (SKEEP)
    (("" (LEMMA "list_extensionality[T]")
      (("" (INST?)
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (TYPEPRED "eval_vec(abstract_vec(l))")
              ((""
                (CASE-REPLACE "length(eval_vec(abstract_vec(l))) = length(l)")
                (("1" (SKEEP :PREDS? T)
                  (("1" (INST -4 "n")
                    (("1" (REPLACES -4 :DIR RL)
                      (("1" (EXPAND "abstract_vec") (("1" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE (-2 2))
                  (("2" (REPLACES -1 :DIR RL)
                    (("2" (EXPAND "abstract_vec") (("2" (PROPAX) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|eval_vec| DEF-DECL "{l: list[T] |
   length(v) = length(l) AND
    FORALL (i: below(length(l))): nth(v)(i) = nth(l, i)}"
     |generic_matrix_defs| NIL)
    (|abstract_vec| CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL))
   NIL)
  (|eval_abstract_vector-1| |nil| 3906559472
   (""
    (CASE
        "FORALL (n:nat): FORALL (l:list[T]): length(l)=n IMPLIES (length(l)>0 IMPLIES eval_vec(abstract_vec(l)) = l)")
    (("1" (SKEEP)
      (("1" (INSTANTIATE -1 "length(l)")
        (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "n")
        (("1" (GRIND) NIL NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (EXPAND "eval_vec" 1)
              (("2" (ASSERT)
                (("2" (LIFT-IF)
                  (("2" (SPLIT)
                    (("1" (FLATTEN)
                      (("1" (EXPAND "abstract_vec" -1) (("1" (ASSERT) NIL NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (INSTANTIATE -1 "cdr(l)")
                        (("1" (EXPAND "length" -2)
                          (("1" (ASSERT)
                            (("1" (LIFT-IF)
                              (("1" (SPLIT -2)
                                (("1" (GRIND) NIL NIL)
                                 ("2" (FLATTEN)
                                  (("2" (ASSERT)
                                    (("2" (SPLIT)
                                      (("1" (POSTPONE) NIL NIL)
                                       ("2" (CASE "length(cdr(l))=0")
                                        (("1" (CASE "cdr(l)=(::)")
                                          (("1" (POSTPONE) NIL NIL)
                                           ("2" (POSTPONE) NIL NIL))
                                          NIL)
                                         ("2" (POSTPONE) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|eval_vec_equality| 0
  (|eval_vec_equality-1| |nil| 3906565960
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (CASE "abstract_vec(eval_vec(v)) = abstract_vec(eval_vec(u))")
          (("1" (LEMMA "abstract_eval_vector")
            (("1" (INST-CP -1 "v")
              (("1" (INSTANTIATE -1 "u") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL))
        NIL)
       ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|eval_vec| DEF-DECL "{l: list[T] |
   length(v) = length(l) AND
    FORALL (i: below(length(l))): nth(v)(i) = nth(l, i)}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|abstract_vec| CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|abstract_eval_vector| FORMULA-DECL NIL |generic_matrix_props| NIL))
   SHOSTAK))
 (|nth_eval_TCC1| 0
  (|nth_eval_TCC1-1| |nil| 3906721366
   ("" (SKEEP)
    (("" (TYPEPRED "i")
      (("" (LEMMA "eval_length") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|eval_length| FORMULA-DECL NIL |generic_matrix_props| NIL))
   NIL
   (|nth_eval| SUBTYPE "generic_matrix_props.i"
    "below[length[T](eval_vec[T, default](v))]")))
 (|nth_eval| 0
  (|nth_eval-1| |nil| 3906721367
   ("" (SKEEP)
    (("" (TYPEPRED "eval_vec(v)")
      (("" (INSTEEP)
        (("" (REPLACES -2 :DIR RL) (("" (HIDE -1) (("" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|eval_vec| DEF-DECL "{l: list[T] |
   length(v) = length(l) AND
    FORALL (i: below(length(l))): nth(v)(i) = nth(l, i)}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|nth| CONST-DECL "T" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|nth_eval_row| 0
  (|nth_eval_row-1| |nil| 3906722880
   ("" (SKEEP :PREDS? T)
    (("" (LEMMA "list_extensionality[T]")
      (("" (INST?)
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (TYPEPRED "eval_mat(M)")
              (("" (TYPEPRED "eval_vec(row(M,i))")
                ((""
                  (CASE-REPLACE
                   "length(nth(eval_mat(M),i)) = length(eval_vec(row(M,i)))")
                  (("1" (SKEEP :PREDS? T)
                    (("1" (INST -7 "i" "n")
                      (("1" (REPLACES -7)
                        (("1" (INST -4 "n")
                          (("1" (REPLACES -4 :DIR RL)
                            (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 2)
                    (("2" (INST -4 "i")
                      (("2" (REPLACES -4)
                        (("2" (REPLACES -1 :DIR RL)
                          (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|row| CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (|eval_vec| DEF-DECL "{l: list[T] |
   length(v) = length(l) AND
    FORALL (i: below(length(l))): nth(v)(i) = nth(l, i)}"
     |generic_matrix_defs| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|nth_nth_eval_TCC1| 0
  (|nth_nth_eval_TCC1-1| |nil| 3906652371
   ("" (SKEEP)
    (("" (LEMMA "eval_width")
      (("" (TYPEPRED "j")
        (("" (INSTANTIATE -2 ("M" "i")) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|eval_width| FORMULA-DECL NIL |generic_matrix_props| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|nth_nth_eval| SUBTYPE "generic_matrix_props.j"
    "below[length[T](nth[list[T]](eval_mat[T, default](M), i))]")))
 (|nth_nth_eval| 0
  (|nth_nth_eval-1| |nil| 3906654033
   ("" (SKEEP* :PREDS? T)
    (("" (TYPEPRED "eval_mat(M)")
      (("" (INST -3 "i" "j") (("" (EXPAND "ijth") (("" (PROPAX) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|abstract_eval_matrix| 0
  (|abstract_eval_matrix-1| |nil| 3906642843
   ("" (SKEEP)
    (("" (TYPEPRED "eval_mat(M)")
      (("" (TYPEPRED "abstract_mat(eval_mat(M))")
        (("" (TYPEPRED "M`dimension")
          (("" (DECOMPOSE-EQUALITY)
            (("1" (DECOMPOSE-EQUALITY)
              (("1" (INST -7 "x!1" "x!2")
                (("1" (LIFT-IF -7)
                  (("1" (SPLIT -7)
                    (("1" (FLATTEN)
                      (("1" (REPLACES -3)
                        (("1" (INST -11 "x!1" "x!2") NIL NIL)) NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (REPLACES -1)
                        (("2" (CASE "x!1 < length(eval_mat(M))")
                          (("1" (ASSERT)
                            (("1" (INST -5 "x!2")
                              (("1" (SPLIT -5)
                                (("1" (INST -1 "x!1") (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (INST -8 "x!1")
                                  (("2" (REPLACES -8)
                                    (("2" (HIDE-ALL-BUT (1 2))
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE 2)
                            (("2" (INST -3 "x!1")
                              (("2" (SPLIT -3)
                                (("1" (INST -1 "x!2") (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (REPLACE -6)
                                  (("2" (HIDE-ALL-BUT (1 2))
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (TYPEPRED "width(eval_mat(M))")
              (("2" (CASE-REPLACE "null?(eval_mat(M))")
                (("1" (ASSERT)
                  (("1" (CASE "length(eval_mat(M)) = 0")
                    (("1" (REPLACE -1)
                      (("1" (REPLACE -3)
                        (("1" (EXPAND "height" -9)
                          (("1" (EXPAND "width" -10)
                            (("1" (DECOMPOSE-EQUALITY 1)
                              (("1" (REPLACES -8)
                                (("1" (EXPAND "height")
                                  (("1" (PROPAX) NIL NIL)) NIL))
                                NIL)
                               ("2" (REPLACES -9)
                                (("2" (EXPAND "height")
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT (-1 1))
                      (("2" (GRIND :EXCLUDE "eval_mat") NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (HIDE -1)
                    (("2" (DECOMPOSE-EQUALITY 2)
                      (("1" (EXPAND "height" -7)
                        (("1" (REPLACES -7)
                          (("1" (REPLACES -9)
                            (("1" (EXPAND "height" 1)
                              (("1" (LIFT-IF 1)
                                (("1" (SPLIT 1)
                                  (("1" (FLATTEN)
                                    (("1" (REPLACE -1)
                                      (("1" (ASSERT)
                                        (("1" (HIDE -4)
                                          (("1" (SKEEP -2 :PREDS? T)
                                            (("1" (INSTEEP -9)
                                              (("1" (REPLACES -3 :DIR RL)
                                                (("1" (EXPAND "width" -8)
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (EXPAND "width" -8 1)
                        (("2" (REPLACES -8)
                          (("2" (SKEEP -1)
                            (("2" (INSTEEP -10)
                              (("2" (REPLACES -10)
                                (("2" (REPLACE -1)
                                  (("2" (EXPAND "width" 1)
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abstract_mat| CONST-DECL "{g: gmat |
   height(g) = IF width(l) = 0 THEN 0 ELSE length(l) ENDIF AND
    width(g) = width(l) AND
     FORALL (i, j: nat):
       ijth(g)(i, j) =
        IF i < length(l) AND j < length(nth(l, i)) THEN nth(nth(l, i), j)
        ELSE default
        ENDIF}"
     |generic_matrix_defs| NIL)
    (|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL))
   SHOSTAK))
 (|eval_rectangular?_TCC1| 0
  (|eval_rectangular?_TCC1-1| |nil| 3908015262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL (|eval_rectangular?| SUBTYPE "0" "below[length[list[T]](l)]")))
 (|eval_rectangular?_TCC2| 0
  (|eval_rectangular?_TCC2-1| |nil| 3908017747 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL (|eval_rectangular?| SUBTYPE "0" "below[length[list[T]](l)]")))
 (|eval_rectangular?_TCC3| 0
  (|eval_rectangular?_TCC2-1| |nil| 3908015262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL (|eval_rectangular?| SUBTYPE "1" "below[length[list[T]](l)]")))
 (|eval_rectangular?_TCC4| 0
  (|eval_rectangular?_TCC3-1| |nil| 3908015262
   ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   ((|nth| DEF-DECL "T" |list_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL))
   NIL
   (|eval_rectangular?| SUBTYPE "generic_matrix_props.l"
    "(list_adt[list_adt[generic_matrix_props.T].list].cons?)")))
 (|eval_rectangular?_TCC5| 0
  (|eval_rectangular?_TCC4-1| |nil| 3908015262
   ("" (SKEEP)
    (("" (EXPAND "length" 3 2)
      (("" (ASSERT)
        (("" (LIFT-IF)
          (("" (SPLIT)
            (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
             ("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|eval_rectangular?| TERMINATION
    "generic_matrix_props.eval_rectangular?(list_adt[list_adt[generic_matrix_props.T].list].cdr(generic_matrix_props.l))"
    "NIL")))
 (|eval_rectangular?_TCC6| 0
  (|eval_rectangular?_TCC6-1| |nil| 3908017747 ("" (COND-DISJOINT-TCC) NIL NIL)
   NIL NIL
   (|eval_rectangular?| DISJOINTNESS
    "COND list_props[list_adt[generic_matrix_props.T].list].length(generic_matrix_props.l) = 0 -> booleans.TRUE, list_props[list_adt[generic_matrix_props.T].list].length(generic_matrix_props.l) = 1 -> IF list_props[generic_matrix_props.T].length(list_props[list_adt[generic_matrix_props.T].list].nth(generic_matrix_props.l, 0)) = 0 THEN booleans.FALSE ELSE booleans.TRUE ENDIF, ELSE -> IF list_props[generic_matrix_props.T].length(list_props[list_adt[generic_matrix_props.T].list].nth(generic_matrix_props.l, 0)) = list_props[generic_matrix_props.T].length(list_props[list_adt[generic_matrix_props.T].list].nth(generic_matrix_props.l, 1)) THEN generic_matrix_props.eval_rectangular?(list_adt[list_adt[generic_matrix_props.T].list].cdr(generic_matrix_props.l)) ELSE booleans.FALSE ENDIF ENDCOND"
    "NIL")))
 (|iff_rectangular| 0
  (|iff_rectangular-1| |nil| 3908015341
   ("" (INDUCT "l")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
     ("3" (SKOLEM 1 ("head" "tail"))
      (("3" (FLATTEN)
        (("3" (SPLIT 1)
          (("1" (FLATTEN)
            (("1" (EXPAND "eval_rectangular?" 1)
              (("1" (SPLIT)
                (("1" (PROPAX) NIL NIL)
                 ("2" (FLATTEN)
                  (("2" (SPLIT)
                    (("1" (FLATTEN)
                      (("1" (EXPAND "length" -1)
                        (("1" (SPLIT)
                          (("1" (EXPAND "rectangular?" -3)
                            (("1" (FLATTEN)
                              (("1" (INSTANTIATE -4 "0")
                                (("1" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (SPLIT)
                        (("1" (FLATTEN)
                          (("1" (ASSERT)
                            (("1" (HIDE -3)
                              (("1" (EXPAND "rectangular?")
                                (("1" (FLATTEN)
                                  (("1" (SPLIT)
                                    (("1" (SKEEP)
                                      (("1" (TYPEPRED ("n" "m"))
                                        (("1" (INSTANTIATE -4 ("n+1" "m+1"))
                                          (("1" (EXPAND "nth" -4)
                                            (("1" (PROPAX) NIL NIL)) NIL)
                                           ("2" (EXPAND "length" 1)
                                            (("2" (ASSERT) NIL NIL)) NIL)
                                           ("3" (EXPAND "length" 1)
                                            (("3" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (SKEEP)
                                      (("2" (TYPEPRED "n")
                                        (("2" (INSTANTIATE -5 "n+1")
                                          (("1" (EXPAND "nth" 4)
                                            (("1" (PROPAX) NIL NIL)) NIL)
                                           ("2" (EXPAND "length" 1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "rectangular?" -1)
                          (("2" (FLATTEN)
                            (("2" (INSTANTIATE -1 ("0" "1"))
                              (("2" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (EXPAND "eval_rectangular?" -1)
              (("2" (EXPAND "length" -1 (1 2))
                (("2" (SPLIT)
                  (("1" (ASSERT) NIL NIL)
                   ("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (SPLIT)
                        (("1" (FLATTEN)
                          (("1" (ASSERT)
                            (("1" (SPLIT)
                              (("1" (PROPAX) NIL NIL)
                               ("2" (EXPAND "nth" 1)
                                (("2" (EXPAND "rectangular?" 3)
                                  (("2" (SPLIT)
                                    (("1" (SKEEP)
                                      (("1" (TYPEPRED ("n" "m"))
                                        (("1" (CASE "n=0 AND m=0")
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (ASSERT)
                                            (("2" (SPLIT)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "length" (-1 -2))
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "length" (-1 -2))
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (SKEEP)
                                      (("2" (TYPEPRED "n")
                                        (("2" (EXPAND "length" -1)
                                          (("2" (CASE "n=0")
                                            (("1" (ASSERT)
                                              (("1" (REPLACES -1)
                                                (("1" (EXPAND "nth" -2)
                                                  (("1" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (SPLIT -1)
                            (("1" (FLATTEN)
                              (("1" (ASSERT)
                                (("1" (HIDE -3)
                                  (("1" (EXPAND "rectangular?")
                                    (("1" (FLATTEN)
                                      (("1" (SPLIT)
                                        (("1" (SKEEP)
                                          (("1" (TYPEPRED ("n" "m"))
                                            (("1" (CASE "n=0")
                                              (("1" (REPLACES -1)
                                                (("1" (CASE "m=0")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (EXPAND "nth" 2)
                                                    (("2" (ASSERT)
                                                      (("2" (EXPAND "nth" -3)
                                                        (("2" (REPLACES -3)
                                                          (("2"
                                                            (INSTANTIATE -4
                                                             ("0" "m-1"))
                                                            (("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (CASE "m=0")
                                                (("1" (REPLACES -1)
                                                  (("1" (EXPAND "nth" -3)
                                                    (("1" (EXPAND "nth" 2)
                                                      (("1" (ASSERT)
                                                        (("1" (REPLACES -3)
                                                          (("1"
                                                            (INSTANTIATE -4
                                                             ("n-1" "0"))
                                                            (("1" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (EXPAND "nth" 3)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (INSTANTIATE -5
                                                       ("n-1" "m-1"))
                                                      (("2" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (SKEEP)
                                          (("2" (TYPEPRED "n")
                                            (("2" (CASE "n=0")
                                              (("1" (REPLACES -1)
                                                (("1" (EXPAND "nth" -2)
                                                  (("1" (EXPAND "nth" -3)
                                                    (("1" (REPLACES -2)
                                                      (("1"
                                                        (INSTANTIATE -5 "0")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (INSTANTIATE -6 "n-1")
                                                (("1" (EXPAND "nth" -2)
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (EXPAND "length" -1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|eval_rectangular?| DEF-DECL "bool" |generic_matrix_props| NIL)
    (|rectangular?| CONST-DECL "bool" |generic_matrix_props| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|rectangular_width_null| 0
  (|rectangular_width_null-1| NIL 3920534756
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "rectangular?")
      (("" (FLATTEN)
        (("" (TYPEPRED "width(l)")
          (("" (SPLIT 1)
            (("1" (PROPAX) NIL NIL)
             ("2" (FLATTEN)
              (("2" (ASSERT)
                (("2" (HIDE -2)
                  (("2" (SKEEP -2)
                    (("2" (INST -5 "i") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|rectangular?| CONST-DECL "bool" |generic_matrix_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL))
   SHOSTAK))
 (|rectangular_abstract_mat_TCC1| 0
  (|rectangular_abstract_mat_TCC1-1| NIL 3920535100
   ("" (SKEEP :PREDS? T) (("" (HIDE-ALL-BUT +) (("" (GRIND) NIL NIL)) NIL))
    NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL (|rectangular_abstract_mat| SUBTYPE "0" "below[length[list[T]](l)]")))
 (|rectangular_abstract_mat| 0
  (|rectangular_abstract_mat-1| NIL 3920535219
   ("" (SKEEP :PREDS? T)
    (("" (SKOLETIN)
      (("" (TYPEPRED "g")
        (("" (HIDE -3)
          (("" (EXPAND "rectangular?")
            (("" (FLATTEN)
              (("" (LEMMA "rectangular_width_null")
                (("" (INSTEEP)
                  (("" (CASE-REPLACE "null?(l)")
                    (("1" (ASSERT)
                      (("1" (REPLACES -3)
                        (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (TYPEPRED "width(l)")
                        (("2" (ASSERT)
                          (("2" (HIDE -1)
                            (("2" (SKEEP -1)
                              (("2" (INST -6 "i" "0") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL)
    (|rectangular?| CONST-DECL "bool" |generic_matrix_props| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|abstract_mat| CONST-DECL "{g: gmat |
   height(g) = IF width(l) = 0 THEN 0 ELSE length(l) ENDIF AND
    width(g) = width(l) AND
     FORALL (i, j: nat):
       ijth(g)(i, j) =
        IF i < length(l) AND j < length(nth(l, i)) THEN nth(nth(l, i), j)
        ELSE default
        ENDIF}"
     |generic_matrix_defs| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|rectangular_width_null| FORMULA-DECL NIL |generic_matrix_props| NIL))
   SHOSTAK))
 (|abstract_rectangular_injective| 0
  (|abstract_rectangular_injective-1| |nil| 3907238364
   ("" (SKEEP :PREDS? T)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (LEMMA "list_extensionality[list[T]]")
          (("1" (INST?)
            (("1" (ASSERT)
              (("1" (HIDE 2)
                (("1" (TYPEPRED "abstract_mat(l1)")
                  (("1" (TYPEPRED "abstract_mat(l2)")
                    (("1" (HIDE -1 -4)
                      (("1" (LEMMA "rectangular_abstract_mat")
                        (("1" (INST-CP -1 "l1")
                          (("1" (INST -1 "l2")
                            (("1" (BETA)
                              (("1" (FLATTEN)
                                (("1" (ASSERT)
                                  (("1" (SKEEP :PREDS? T)
                                    (("1" (LEMMA "list_extensionality[T]")
                                      (("1" (INST?)
                                        (("1" (ASSERT)
                                          (("1" (HIDE 2)
                                            (("1" (CASE-REPLACE "null?(l1)")
                                              (("1" (ASSERT)
                                                (("1" (HIDE-ALL-BUT (-1 -2))
                                                  (("1" (GRIND) NIL NIL)) NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2"
                                                  (CASE-REPLACE "null?(l2)")
                                                  (("1"
                                                    (CASE-REPLACE
                                                     "length(l2)=0")
                                                    (("1"
                                                      (CASE-REPLACE
                                                       "length(l1)=0")
                                                      (("1"
                                                        (HIDE-ALL-BUT (-1 1))
                                                        (("1" (GRIND) NIL NIL))
                                                        NIL)
                                                       ("2" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT (-1 1))
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT)
                                                    (("2"
                                                      (EXPAND "rectangular?")
                                                      (("2" (FLATTEN)
                                                        (("2"
                                                          (INST -11 "0" "n")
                                                          (("2"
                                                            (INST -13 "0" "n")
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (SKEEP :PREDS?
                                                                 T)
                                                                (("2"
                                                                  (INST -8 "n"
                                                                   "n_1")
                                                                  (("2"
                                                                    (INST -10
                                                                     "n" "n_1")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|rectangular?| CONST-DECL "bool" |generic_matrix_props| NIL)
    (|rectangular_abstract_mat| FORMULA-DECL NIL |generic_matrix_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|abstract_mat| CONST-DECL "{g: gmat |
   height(g) = IF width(l) = 0 THEN 0 ELSE length(l) ENDIF AND
    width(g) = width(l) AND
     FORALL (i, j: nat):
       ijth(g)(i, j) =
        IF i < length(l) AND j < length(nth(l, i)) THEN nth(nth(l, i), j)
        ELSE default
        ENDIF}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|rectangular_eval_mat| 0
  (|rectangular_eval_mat-1| NIL 3920537881
   ("" (SKEEP)
    (("" (TYPEPRED "eval_mat(M)")
      (("" (EXPAND "rectangular?")
        ((""
          (CASE-REPLACE "(FORALL (n, m: below(length(eval_mat(M)))):
         length(nth(eval_mat(M), n)) = length(nth(eval_mat(M), m)))")
          (("1" (CASE "null?(eval_mat(M))")
            (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL)
             ("2" (SKEEP)
              (("2" (INST -3 "n")
                (("2" (REPLACES -5)
                  (("2" (TYPEPRED "M`dimension")
                    (("2" (EXPAND "width" -7)
                      (("2" (ASSERT)
                        (("2" (HIDE -1)
                          (("2" (EXPAND "height" -5)
                            (("2" (REPLACES -1)
                              (("2" (HIDE-ALL-BUT (-4 1))
                                (("2" (GRIND :EXCLUDE "eval_mat") NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2)
            (("2" (SKEEP)
              (("2" (INST-CP -2 "n")
                (("2" (INST -2 "m") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rectangular?| CONST-DECL "bool" |generic_matrix_props| NIL))
   SHOSTAK))
 (|rectangular_eval_mat_j| 0
  (|rectangular_eval_mat_j-1| NIL 3920541607
   ("" (SKEEP) (("" (LEMMA "rectangular_eval_mat") (("" (INST?) NIL NIL)) NIL))
    NIL)
   ((|rectangular_eval_mat| FORMULA-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL))
   NIL
   (|rectangular_eval_mat_j| SUBTYPE
    "generic_matrix_defs[generic_matrix_props.T, generic_matrix_props.default].eval_mat(generic_matrix_props.M)"
    "(generic_matrix_props.rectangular?)")))
 (|eval_abstract_matrix| 0
  (|eval_abstract_matrix-1| |nil| 3906626553
   ("" (SKEEP)
    (("" (LEMMA "abstract_eval_matrix")
      (("" (INSTANTIATE -1 "abstract_mat(l)")
        (("" (LEMMA "abstract_rectangular_injective")
          (("" (INST?)
            (("1" (ASSERT) NIL NIL)
             ("2" (LEMMA "rectangular_eval_mat") (("2" (INST?) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abstract_eval_matrix| FORMULA-DECL NIL |generic_matrix_props| NIL)
    (|abstract_rectangular_injective| FORMULA-DECL NIL |generic_matrix_props|
     NIL)
    (|rectangular?| CONST-DECL "bool" |generic_matrix_props| NIL)
    (|abstract_mat| CONST-DECL "{g: gmat |
   height(g) = IF width(l) = 0 THEN 0 ELSE length(l) ENDIF AND
    width(g) = width(l) AND
     FORALL (i, j: nat):
       ijth(g)(i, j) =
        IF i < length(l) AND j < length(nth(l, i)) THEN nth(nth(l, i), j)
        ELSE default
        ENDIF}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|rectangular_eval_mat| FORMULA-DECL NIL |generic_matrix_props| NIL)
    (|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL)
    NIL)
   SHOSTAK))
 (|eval_mat_equality| 0
  (|eval_mat_equality-1| |nil| 3907244984
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (CASE "abstract_mat(eval_mat(M)) = abstract_mat(eval_mat(N))")
          (("1" (LEMMA "abstract_eval_matrix")
            (("1" (INSTANTIATE -1 "M" 'COPY)
              (("1" (INSTANTIATE -1 "N") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL))
        NIL)
       ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL)
    (|abstract_mat| CONST-DECL "{g: gmat |
   height(g) = IF width(l) = 0 THEN 0 ELSE length(l) ENDIF AND
    width(g) = width(l) AND
     FORALL (i, j: nat):
       ijth(g)(i, j) =
        IF i < length(l) AND j < length(nth(l, i)) THEN nth(nth(l, i), j)
        ELSE default
        ENDIF}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|abstract_eval_matrix| FORMULA-DECL NIL |generic_matrix_props| NIL))
   SHOSTAK))
 (|eval_vec_lemma| 0
  (|eval_vec_lemma-1| |nil| 3907246445
   ("" (SKEEP)
    (("" (CASE "abstract_vec(eval_vec(v)) = abstract_vec(l)")
      (("1" (LEMMA "abstract_eval_vector")
        (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (ASSERT) NIL NIL))
      NIL))
    NIL)
   ((|eval_vec| DEF-DECL "{l: list[T] |
   length(v) = length(l) AND
    FORALL (i: below(length(l))): nth(v)(i) = nth(l, i)}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|abstract_vec| CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|abstract_eval_vector| FORMULA-DECL NIL |generic_matrix_props| NIL))
   SHOSTAK))
 (|eval_mat_lemma| 0
  (|eval_mat_lemma-1| |nil| 3907246647
   ("" (SKEEP)
    (("" (CASE "abstract_mat(eval_mat(M)) = abstract_mat(l)")
      (("1" (LEMMA "abstract_eval_matrix")
        (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (ASSERT) NIL NIL))
      NIL))
    NIL)
   ((|rectangular?| CONST-DECL "bool" |generic_matrix_props| NIL)
    (|eval_mat| DEF-DECL "{l: list[list[T]] |
   length(l) = height(M) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(M)) AND
     (FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
        nth(nth(l, i), j) = ijth(M)(i, j))}"
     |generic_matrix_defs| NIL)
    (|abstract_mat| CONST-DECL "{g: gmat |
   height(g) = IF width(l) = 0 THEN 0 ELSE length(l) ENDIF AND
    width(g) = width(l) AND
     FORALL (i, j: nat):
       ijth(g)(i, j) =
        IF i < length(l) AND j < length(nth(l, i)) THEN nth(nth(l, i), j)
        ELSE default
        ENDIF}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|abstract_eval_matrix| FORMULA-DECL NIL |generic_matrix_props| NIL))
   SHOSTAK))
 (|vector_evaluation| 0
  (|vector_evaluation-1| |nil| 3908029715
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (EXPAND "abstract")
        (("1" (LEMMA "eval_vec_lemma") (("1" (INST?) NIL NIL)) NIL)) NIL)
       ("2" (FLATTEN)
        (("2" (REPLACES -1)
          (("2" (EXPAND "abstract")
            (("2" (LEMMA "eval_abstract_vector") (("2" (INST?) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|eval_vec_lemma| FORMULA-DECL NIL |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|abstract| CONST-DECL "gvec" |generic_matrix_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|eval_abstract_vector| FORMULA-DECL NIL |generic_matrix_props| NIL))
   SHOSTAK))
 (|matrix_evaluation| 0
  (|matrix_evaluation-1| |nil| 3908029885
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (LEMMA "eval_mat_lemma")
        (("1" (EXPAND "abstract") (("1" (INST?) NIL NIL)) NIL)) NIL)
       ("2" (FLATTEN)
        (("2" (REPLACES -1)
          (("2" (TYPEPRED "l")
            (("2" (LEMMA "eval_abstract_matrix")
              (("2" (EXPAND "abstract") (("2" (INST?) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|abstract| CONST-DECL "gmat" |generic_matrix_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_props| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|rectangular?| CONST-DECL "bool" |generic_matrix_props| NIL)
    (|eval_mat_lemma| FORMULA-DECL NIL |generic_matrix_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|eval_abstract_matrix| FORMULA-DECL NIL |generic_matrix_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   SHOSTAK)))

