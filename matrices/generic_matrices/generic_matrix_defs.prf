(|generic_matrix_defs|
 (|cdr_TCC1| 0
  (|cdr_TCC1-1| |nil| 3906118744
   ("" (SKEEP)
    (("" (TYPEPRED "v")
      (("" (ASSERT)
        (("" (SKEEP)
          (("" (TYPEPRED "length(v)")
            (("" (INSTANTIATE -1 "1+k")
              (("" (ASSERT) (("" (EXPAND "nth") (("" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|cdr| SUBTYPE "(number_fields.-)(length(generic_matrix_defs.v), 1)"
    "{i_1 | FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), generic_matrix_defs.nth(generic_matrix_defs.v, (number_fields.+)(1, generic_matrix_defs.k)) = generic_matrix_defs.default)}")))
 (|cons_TCC1| 0
  (|cons_TCC1-1| |nil| 3906118744 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   NIL (|cons| SUBTYPE "(number_fields.-)(generic_matrix_defs.i, 1)" "nat")))
 (|cons_TCC2| 0
  (|cons_TCC2-1| |nil| 3906118744
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (ASSERT)
        (("" (TYPEPRED "length(tail)")
          (("" (INSTANTIATE -1 "k-1")
            (("" (ASSERT) (("" (EXPAND "nth") (("" (PROPAX) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   NIL
   (|cons| SUBTYPE "(number_fields.+)(length(generic_matrix_defs.tail), 1)"
    "{i_1 | FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), COND generic_matrix_defs.k = 0 -> generic_matrix_defs.head, ELSE -> generic_matrix_defs.nth(generic_matrix_defs.tail, (number_fields.-)(generic_matrix_defs.k, 1)) ENDCOND = generic_matrix_defs.default)}")))
 (|height_eq_width_zero| 0
  (|height_eq_width_zero-1| NIL 3920404064
   ("" (SKEEP)
    (("" (TYPEPRED "dimension(M)")
      (("" (HIDE-ALL-BUT (-1 -2 1)) (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL))
   SHOSTAK))
 (|height_width_pos| 0
  (|height_width_pos-1| NIL 3920404129
   ("" (SKEEP)
    (("" (LEMMA "height_eq_width_zero")
      (("" (INSTEEP) (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|height_eq_width_zero| FORMULA-DECL NIL |generic_matrix_defs| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK))
 (|minimal_default_matrix_TCC1| 0
  (|minimal_default_matrix_TCC1-1| |nil| 3906131891 ("" (SUBTYPE-TCC) NIL NIL)
   NIL NIL
   (|minimal_default_matrix| SUBTYPE "(0, 0)"
    "{(i_1, j_1) | (booleans.IFF(i_1 = 0, j_1 = 0))}")))
 (|row_TCC1| 0
  (|row_TCC1-1| |nil| 3906120781
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (EXPAND "width")
        (("" (TYPEPRED "dimension(M)")
          (("" (INST? -4)
            (("" (ASSERT)
              (("" (INSTANTIATE -4 "i")
                (("" (EXPAND "ijth") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL))
   NIL
   (|row| SUBTYPE "generic_matrix_defs.width(generic_matrix_defs.M)"
    "{i_1 | FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), generic_matrix_defs.ijth(generic_matrix_defs.M, generic_matrix_defs.i, generic_matrix_defs.k) = generic_matrix_defs.default)}")))
 (|column_TCC1| 0
  (|column_TCC1-1| |nil| 3906120781
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (EXPAND "height")
        (("" (TYPEPRED "dimension(M)")
          (("" (INST? -3)
            (("" (ASSERT)
              (("" (INSTANTIATE -3 "j")
                (("" (EXPAND "ijth") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL))
   NIL
   (|column| SUBTYPE "generic_matrix_defs.height(generic_matrix_defs.M)"
    "{i_1 | FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), generic_matrix_defs.ijth(generic_matrix_defs.M, generic_matrix_defs.k, generic_matrix_defs.j) = generic_matrix_defs.default)}")))
 (|row_cdr_TCC1| 0
  (|row_cdr_TCC1-1| |nil| 3906126404
   ("" (SKEEP)
    (("" (TYPEPRED "M")
      (("" (ASSERT)
        (("" (SKEEP)
          (("" (TYPEPRED "height(M)")
            (("" (INSTANTIATE -1 "k+1")
              (("" (ASSERT)
                (("" (SKEEP)
                  (("" (INSTANTIATE -1 "j_1")
                    (("" (EXPAND "ijth") (("" (PROPAX) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   NIL
   (|row_cdr| SUBTYPE
    "(number_fields.-)(generic_matrix_defs.height(generic_matrix_defs.M), 1)"
    "nat")))
 (|row_cdr_TCC2| 0
  (|row_cdr_TCC2-1| |nil| 3906126404
   ("" (SKEEP :PREDS? T)
    (("" (LEMMA "height_width_pos")
      (("" (INSTEEP)
        (("" (ASSERT)
          (("" (SPLIT)
            (("1" (SKEEP*)
              (("1" (EXPAND "height")
                (("1" (TYPEPRED "dimension(M)")
                  (("1" (INSTANTIATE -3 "k+1")
                    (("1" (ASSERT)
                      (("1" (INSTANTIATE -2 "j1")
                        (("1" (EXPAND "ijth") (("1" (PROPAX) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKEEP*)
              (("2" (EXPAND "width")
                (("2" (TYPEPRED "dimension(M)")
                  (("2" (INST? -4)
                    (("2" (ASSERT)
                      (("2" (INSTANTIATE -3 "1+i1")
                        (("2" (EXPAND "ijth") (("2" (PROPAX) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|height_width_pos| FORMULA-DECL NIL |generic_matrix_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   NIL
   (|row_cdr| SUBTYPE
    "((number_fields.-)(generic_matrix_defs.height(generic_matrix_defs.M), 1), generic_matrix_defs.width(generic_matrix_defs.M))"
    "{(i_1, j_1) | booleans.AND((booleans.IFF(i_1 = 0, j_1 = 0)), booleans.AND(FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), FORALL (j1: naturalnumbers.nat): generic_matrix_defs.ijth(generic_matrix_defs.M, (number_fields.+)(1, generic_matrix_defs.k), j1) = generic_matrix_defs.default), FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, j_1), FORALL (i1: naturalnumbers.nat): generic_matrix_defs.ijth(generic_matrix_defs.M, (number_fields.+)(1, i1), generic_matrix_defs.k) = generic_matrix_defs.default)))}")))
 (|row_cons_TCC1| 0
  (|row_cons_TCC1-1| |nil| 3906127798 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   NIL
   (|row_cons| SUBTYPE "(number_fields.-)(generic_matrix_defs.i, 1)" "nat")))
 (|row_cons_TCC2| 0
  (|row_cons_TCC2-1| |nil| 3906127798
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN) (("1" (TYPEPRED "tail") (("1" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("2" (FLATTEN) (("2" (TYPEPRED "tail") (("2" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (LIFT-IF)
            (("3" (SPLIT)
              (("1" (FLATTEN)
                (("1" (TYPEPRED "length(head)")
                  (("1" (TYPEPRED "tail") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (TYPEPRED "tail")
                  (("2" (EXPAND "height")
                    (("2" (TYPEPRED "dimension(tail)")
                      (("2" (INSTANTIATE -3 "k-1")
                        (("1" (ASSERT)
                          (("1" (INSTANTIATE -3 "j1")
                            (("1" (EXPAND "ijth") (("1" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("4" (SKEEP)
        (("4" (SKEEP)
          (("4" (LIFT-IF)
            (("4" (SPLIT)
              (("1" (FLATTEN)
                (("1" (TYPEPRED "tail")
                  (("1" (TYPEPRED "length(head)")
                    (("1" (INSTANTIATE -1 "k")
                      (("1" (ASSERT)
                        (("1" (EXPAND "nth") (("1" (PROPAX) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (EXPAND "width")
                  (("2" (TYPEPRED "dimension(tail)")
                    (("2" (INSTANTIATE -4 "k")
                      (("2" (ASSERT)
                        (("2" (INSTANTIATE -4 "i1-1")
                          (("2" (EXPAND "ijth") (("2" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|k| SKOLEM-CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|nth| CONST-DECL "T" |generic_matrix_defs| NIL))
   NIL
   (|row_cons| SUBTYPE
    "((number_fields.+)(generic_matrix_defs.height(generic_matrix_defs.tail), 1), generic_matrix_defs.width(generic_matrix_defs.tail))"
    "{(i_1, j_1) | booleans.AND((booleans.IFF(i_1 = 0, j_1 = 0)), booleans.AND(FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), FORALL (j1: naturalnumbers.nat): COND generic_matrix_defs.k = 0 -> generic_matrix_defs.nth(generic_matrix_defs.head, j1), ELSE -> generic_matrix_defs.ijth(generic_matrix_defs.tail, (number_fields.-)(generic_matrix_defs.k, 1), j1) ENDCOND = generic_matrix_defs.default), FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, j_1), FORALL (i1: naturalnumbers.nat): COND i1 = 0 -> generic_matrix_defs.nth(generic_matrix_defs.head, generic_matrix_defs.k), ELSE -> generic_matrix_defs.ijth(generic_matrix_defs.tail, (number_fields.-)(i1, 1), generic_matrix_defs.k) ENDCOND = generic_matrix_defs.default)))}")))
 (|col_cdr_TCC1| 0
  (|col_cdr_TCC1-1| |nil| 3906126404
   ("" (SKEEP :PREDS? T)
    (("" (LEMMA "height_width_pos")
      (("" (INSTEEP) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|height_width_pos| FORMULA-DECL NIL |generic_matrix_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   NIL
   (|col_cdr| SUBTYPE
    "(number_fields.-)(generic_matrix_defs.width(generic_matrix_defs.M), 1)"
    "nat")))
 (|col_cdr_TCC2| 0
  (|col_cdr_TCC2-1| |nil| 3906126404
   ("" (SKEEP)
    (("" (TYPEPRED "M")
      (("" (LEMMA "height_width_pos")
        (("" (INSTEEP)
          (("" (ASSERT)
            (("" (SPLIT)
              (("1" (SKEEP)
                (("1" (EXPAND "height")
                  (("1" (TYPEPRED "dimension(M)")
                    (("1" (INSTANTIATE -3 "k")
                      (("1" (ASSERT)
                        (("1" (SKEEP)
                          (("1" (INSTANTIATE -2 "j1+1")
                            (("1" (EXPAND "ijth") (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (SKEEP)
                  (("2" (EXPAND "width")
                    (("2" (TYPEPRED "dimension(M)")
                      (("2" (INSTANTIATE -4 "k+1")
                        (("2" (ASSERT)
                          (("2" (INSTANTIATE -3 "i1")
                            (("2" (EXPAND "ijth") (("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|height_width_pos| FORMULA-DECL NIL |generic_matrix_defs| NIL))
   NIL
   (|col_cdr| SUBTYPE
    "(generic_matrix_defs.height(generic_matrix_defs.M), (number_fields.-)(generic_matrix_defs.width(generic_matrix_defs.M), 1))"
    "{(i_1, j_1) | booleans.AND((booleans.IFF(i_1 = 0, j_1 = 0)), booleans.AND(FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), FORALL (j1: naturalnumbers.nat): generic_matrix_defs.ijth(generic_matrix_defs.M, generic_matrix_defs.k, (number_fields.+)(1, j1)) = generic_matrix_defs.default), FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, j_1), FORALL (i1: naturalnumbers.nat): generic_matrix_defs.ijth(generic_matrix_defs.M, i1, (number_fields.+)(1, generic_matrix_defs.k)) = generic_matrix_defs.default)))}")))
 (|col_cons_TCC1| 0
  (|col_cons_TCC1-1| |nil| 3906127798 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   NIL
   (|col_cons| SUBTYPE "(number_fields.-)(generic_matrix_defs.j, 1)" "nat")))
 (|col_cons_TCC2| 0
  (|col_cons_TCC2-1| |nil| 3906127798
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN) (("1" (TYPEPRED "tail") (("1" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (TYPEPRED "dimension(tail)")
          (("2" (EXPAND "width")
            (("2" (EXPAND "height") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (LIFT-IF)
            (("3" (SPLIT)
              (("1" (FLATTEN)
                (("1" (EXPAND "height")
                  (("1" (TYPEPRED "tail")
                    (("1" (TYPEPRED "length(head)")
                      (("1" (INSTANTIATE -1 "k")
                        (("1" (ASSERT)
                          (("1" (EXPAND "nth")
                            (("1" (EXPAND "height") (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (EXPAND "height")
                  (("2" (TYPEPRED "dimension(tail)")
                    (("2" (INSTANTIATE -3 "k")
                      (("2" (ASSERT)
                        (("2" (INSTANTIATE -3 "j1-1")
                          (("2" (EXPAND "ijth") (("2" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("4" (SKEEP)
        (("4" (SKEEP)
          (("4" (LIFT-IF)
            (("4" (SPLIT)
              (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (FLATTEN)
                (("2" (EXPAND "width")
                  (("2" (TYPEPRED "dimension(tail)")
                    (("2" (INSTANTIATE -4 "k-1")
                      (("1" (ASSERT)
                        (("1" (INSTANTIATE -4 "i1")
                          (("1" (EXPAND "ijth") (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|k| SKOLEM-CONST-DECL "nat" |generic_matrix_defs| NIL))
   NIL
   (|col_cons| SUBTYPE
    "(generic_matrix_defs.height(generic_matrix_defs.tail), (number_fields.+)(generic_matrix_defs.width(generic_matrix_defs.tail), 1))"
    "{(i_1, j_1) | booleans.AND((booleans.IFF(i_1 = 0, j_1 = 0)), booleans.AND(FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), FORALL (j1: naturalnumbers.nat): COND j1 = 0 -> generic_matrix_defs.nth(generic_matrix_defs.head, generic_matrix_defs.k), ELSE -> generic_matrix_defs.ijth(generic_matrix_defs.tail, generic_matrix_defs.k, (number_fields.-)(j1, 1)) ENDCOND = generic_matrix_defs.default), FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, j_1), FORALL (i1: naturalnumbers.nat): COND generic_matrix_defs.k = 0 -> generic_matrix_defs.nth(generic_matrix_defs.head, i1), ELSE -> generic_matrix_defs.ijth(generic_matrix_defs.tail, i1, (number_fields.-)(generic_matrix_defs.k, 1)) ENDCOND = generic_matrix_defs.default)))}")))
 (|eval_vec_TCC1| 0
  (|eval_vec_TCC1-1| NIL 3920402187 ("" (GRIND) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL))
   NIL
   (|eval_vec| SUBTYPE "(: :)"
    "{l: list_adt[generic_matrix_defs.T].list | booleans.AND(length(generic_matrix_defs.v) = list_props[generic_matrix_defs.T].length(l), FORALL (i: naturalnumbers.below(list_props[generic_matrix_defs.T].length(l))): nth(generic_matrix_defs.v)(i) = list_props[generic_matrix_defs.T].nth(l, i))}")))
 (|eval_vec_TCC2| 0
  (|eval_vec_TCC1-1| |nil| 3906126404 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|eval_vec| SUBTYPE "generic_matrix_defs.v"
    "{v | reals.>(length(generic_matrix_defs.v), 0)}")))
 (|eval_vec_TCC3| 0
  (|eval_vec_TCC2-1| |nil| 3906126404 ("" (TERMINATION-TCC) NIL NIL)
   ((|nth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|cdr| CONST-DECL "gvec" |generic_matrix_defs| NIL))
   NIL
   (|eval_vec| TERMINATION
    "generic_matrix_defs.eval_vec(generic_matrix_defs.cdr(generic_matrix_defs.v))"
    "NIL")))
 (|eval_vec_TCC4| 0
  (|eval_vec_TCC4-1| NIL 3920402187
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (NAME-REPLACE "HI" "v1(cdr(v))")
        (("1" (TYPEPRED "HI")
          (("1" (EXPAND "length" 1)
            (("1" (EXPAND "cdr" -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("2" (SKEEP :PREDS? T)
        (("2" (TYPEPRED "v1(cdr(v))")
          (("2" (CASE-REPLACE "i=0")
            (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)
             ("2" (EXPAND "length" -3)
              (("2" (INST -2 "i-1")
                (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|cdr| CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (> CONST-DECL "bool" |reals| NIL) (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|v| SKOLEM-CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (|v1| SKOLEM-CONST-DECL "[v1: {z: gvec | length(z) < length(v)} ->
   {l: list[T] |
      length(v1) = length(l) AND
       FORALL (i: below(length(l))): nth(v1)(i) = nth(l, i)}]"
     |generic_matrix_defs| NIL)
    (|i| SKOLEM-CONST-DECL "below(length(cons(car(v), v1(cdr(v)))))"
     |generic_matrix_defs| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|car| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|eval_vec| SUBTYPE
    "list_adt[generic_matrix_defs.T].cons(generic_matrix_defs.car(generic_matrix_defs.v), generic_matrix_defs.eval_vec(generic_matrix_defs.cdr(generic_matrix_defs.v)))"
    "{l: list_adt[generic_matrix_defs.T].list | booleans.AND(length(generic_matrix_defs.v) = list_props[generic_matrix_defs.T].length(l), FORALL (i: naturalnumbers.below(list_props[generic_matrix_defs.T].length(l))): nth(generic_matrix_defs.v)(i) = list_props[generic_matrix_defs.T].nth(l, i))}")))
 (|eval_mat_TCC1| 0
  (|eval_mat_TCC1-1| NIL 3920393330 ("" (GRIND) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL))
   NIL
   (|eval_mat| SUBTYPE "(: :)"
    "{l: list_adt[list_adt[generic_matrix_defs.T].list].list | booleans.AND(list_props[list_adt[generic_matrix_defs.T].list].length(l) = generic_matrix_defs.height(generic_matrix_defs.M), booleans.AND(FORALL (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(l))): list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i)) = generic_matrix_defs.width(generic_matrix_defs.M), FORALL (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(l)), j: naturalnumbers.below(list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i)))): list_props[generic_matrix_defs.T].nth(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i), j) = ijth(generic_matrix_defs.M)(i, j)))}")))
 (|eval_mat_TCC2| 0
  (|eval_mat_TCC1-1| |nil| 3906126404
   ("" (SKEEP)
    (("" (LEMMA "height_width_pos")
      (("" (INSTEEP) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|height_width_pos| FORMULA-DECL NIL |generic_matrix_defs| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   NIL
   (|eval_mat| SUBTYPE "generic_matrix_defs.M"
    "{M | reals.>(generic_matrix_defs.height(generic_matrix_defs.M), 0)}")))
 (|eval_mat_TCC3| 0
  (|eval_mat_TCC2-1| |nil| 3906126404 ("" (TERMINATION-TCC) NIL NIL)
   ((|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|minimal_default_matrix| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (|M_default| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|row_cdr| CONST-DECL "gmat" |generic_matrix_defs| NIL))
   NIL
   (|eval_mat| TERMINATION
    "generic_matrix_defs.eval_mat(generic_matrix_defs.row_cdr(generic_matrix_defs.M))"
    "NIL")))
 (|eval_mat_TCC4| 0
  (|old| "" 3920405462
   ("" (SKEEP)
    (("" (LEMMA "height_eq_width_zero")
      (("" (INSTEEP)
        (("" (ASSERT)
          (("" (NAME-REPLACE "HI" "v(row_cdr(M))")
            (("1" (TYPEPRED "HI")
              (("1" (SPLIT)
                (("1" (EXPAND "length" 1)
                  (("1" (HIDE -2)
                    (("1" (REPLACES -1)
                      (("1" (EXPAND "row_cdr")
                        (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKEEP :PREDS? T)
                  (("2" (EXPAND "length" -1)
                    (("2" (REWRITE "HI" :DIR RL)
                      (("2" (CASE-REPLACE "i=0")
                        (("1" (EXPAND "nth" 1)
                          (("1" (TYPEPRED "eval_vec(row_car(M))")
                            (("1" (REPLACES -1 :DIR RL)
                              (("1" (HIDE (-1 -5 -6)) (("1" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "nth" 2)
                          (("2" (ASSERT)
                            (("2" (INST -3 "i-1")
                              (("2" (REPLACES -3)
                                (("2" (HIDE -3)
                                  (("2" (EXPAND "row_cdr")
                                    (("2" (CASE-REPLACE "height(M)=1")
                                      (("1" (GRIND) NIL NIL)
                                       ("2" (ASSERT)
                                        (("2" (HIDE -2) (("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (SKEEP :PREDS? T)
                  (("3" (REWRITE "HI" :DIR RL)
                    (("3" (EXPAND "length" -1)
                      (("3" (CASE-REPLACE "i=0")
                        (("1" (EXPAND "nth" -3)
                          (("1" (EXPAND "nth" 1 2)
                            (("1" (TYPEPRED "eval_vec(row_car(M))")
                              (("1" (INST -2 "j")
                                (("1" (REPLACES (-1 -2) :DIR RL)
                                  (("1" (HIDE -5 -6) (("1" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "nth" 2 2)
                          (("2" (ASSERT)
                            (("2" (INST -5 "i-1" "j")
                              (("2" (REPLACES -5)
                                (("2" (EXPAND "nth" -2)
                                  (("2" (INST -4 "i-1")
                                    (("2" (EXPAND "row_cdr")
                                      (("2" (CASE-REPLACE "height(M)=1")
                                        (("1" (GRIND) NIL NIL)
                                         ("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE 4)
              (("2" (EXPAND "row_cdr")
                (("2" (LIFT-IF 1)
                  (("2" (SPLIT 1)
                    (("1" (FLATTEN)
                      (("1" (EXPAND "M_default")
                        (("1" (EXPAND "minimal_default_matrix")
                          (("1" (EXPAND "height") (("1" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (EXPAND "height") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|height_eq_width_zero| FORMULA-DECL NIL |generic_matrix_defs| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (HI SKOLEM-CONST-DECL "{l: list[list[T]] |
   length(l) = height(row_cdr(M)) AND
    (FORALL (i: below(length(l))): length(nth(l, i)) = width(row_cdr(M)))
     AND
     FORALL (i: below(length(l)), j: below(length(nth(l, i)))):
       nth(nth(l, i), j) = ijth(row_cdr(M))(i, j)}"
     |generic_matrix_defs| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|row| CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (|row_car| CONST-DECL "gvec" |generic_matrix_defs| NIL)
    (|eval_vec| DEF-DECL "{l: list[T] |
   length(v) = length(l) AND
    FORALL (i: below(length(l))): nth(v)(i) = nth(l, i)}"
     |generic_matrix_defs| NIL)
    (|gvec| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|plus_u8_u8| APPLICATION-JUDGEMENT "uint16" |integertypes| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minimal_default_matrix| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (|M_default| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (|ijth| CONST-DECL "T" |generic_matrix_defs| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|row_cdr| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|gmat| TYPE-EQ-DECL NIL |generic_matrix_defs| NIL)
    (|default| FORMAL-CONST-DECL "T" |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK
   (|eval_mat| SUBTYPE
    "list_adt[list_adt[generic_matrix_defs.T].list].cons(generic_matrix_defs.eval_vec(generic_matrix_defs.row_car(generic_matrix_defs.M)), generic_matrix_defs.eval_mat(generic_matrix_defs.row_cdr(generic_matrix_defs.M)))"
    "{l: list_adt[list_adt[generic_matrix_defs.T].list].list | booleans.AND(list_props[list_adt[generic_matrix_defs.T].list].length(l) = generic_matrix_defs.height(generic_matrix_defs.M), booleans.AND(FORALL (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(l))): list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i)) = generic_matrix_defs.width(generic_matrix_defs.M), FORALL (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(l)), j: naturalnumbers.below(list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i)))): list_props[generic_matrix_defs.T].nth(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i), j) = ijth(generic_matrix_defs.M)(i, j)))}"))
  (|eval_mat_TCC4-1| NIL 3920393330
   ("" (SKEEP* :PREDS? T)
    (("" (NAME-REPLACE "H0" "v(row_cdr(M))")
      (("" (NAME-REPLACE "H1" "v_1(row_cdr(M))")
        (("" (NAME-REPLACE "R0" "eval_vec(row_car(M))")
          (("" (EXPAND "length" -)
            (("" (TYPEPRED "R0")
              (("" (TYPEPRED "H0")
                (("" (TYPEPRED "H1")
                  (("" (CASE-REPLACE "i=0")
                    (("1" (EXPAND "nth" 3 1)
                      (("1" (CASE-REPLACE "j=0")
                        (("1" (EXPAND "nth" 3 1) (("1" (PROPAX) NIL NIL)) NIL)
                         ("2" (EXPAND "nth" 4)
                          (("2" (ASSERT)
                            (("2" (REPLACES -4 :DIR RL)
                              (("2" (POSTPONE) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (CASE-REPLACE "j=0")
                      (("1" (EXPAND "nth" 4)
                        (("1" (ASSERT)
                          (("1" (REPLACES -4 :DIR RL)
                            (("1" (POSTPONE) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (EXPAND "nth" 5)
                        (("2" (ASSERT) (("2" (INST -1 "i-1" "j-1") NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|eval_mat| SUBTYPE
    "list_adt[list_adt[generic_matrix_defs.T].list].cons(generic_matrix_defs.eval_vec(generic_matrix_defs.row_car(generic_matrix_defs.M)), generic_matrix_defs.eval_mat(generic_matrix_defs.row_cdr(generic_matrix_defs.M)))"
    "{l: list_adt[list_adt[generic_matrix_defs.T].list].list | booleans.AND(list_props[list_adt[generic_matrix_defs.T].list].length(l) = generic_matrix_defs.height(generic_matrix_defs.M), booleans.AND(FORALL (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(l))): list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i)) = generic_matrix_defs.width(generic_matrix_defs.M), FORALL (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(l)), j: naturalnumbers.below(list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i)))): list_props[generic_matrix_defs.T].nth(list_props[list_adt[generic_matrix_defs.T].list].nth(l, i), j) = ijth(generic_matrix_defs.M)(i, j)))}")))
 (|abstract_vec_TCC1| 0
  (|abstract_vec_TCC1-1| |nil| 3906131891 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   NIL
   (|abstract_vec| SUBTYPE
    "list_props[generic_matrix_defs.T].length(generic_matrix_defs.l)"
    "{i_1 | FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), COND reals.<(generic_matrix_defs.k, list_props[generic_matrix_defs.T].length(generic_matrix_defs.l)) -> list_props[generic_matrix_defs.T].nth(generic_matrix_defs.l, generic_matrix_defs.k), ELSE -> generic_matrix_defs.default ENDCOND = generic_matrix_defs.default)}")))
 (|width_TCC1| 0
  (|width_TCC1-1| NIL 3920448637 ("" (GRIND) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|width| SUBTYPE "0"
    "{w: naturalnumbers.nat | booleans.AND(IF list_adt[list_adt[generic_matrix_defs.T].list].null?(generic_matrix_defs.l) THEN w = 0 ELSE EXISTS (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l))): w = list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i)) ENDIF, FORALL (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l))): reals.>=(w, list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i))))}")))
 (|width_TCC2| 0
  (|width_TCC2-1| NIL 3920448637 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|width| SUBTYPE "generic_matrix_defs.l"
    "(list_adt[list_adt[generic_matrix_defs.T].list].cons?)")))
 (|width_TCC3| 0
  (|width_TCC3-1| NIL 3920448637 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL
   (|width| TERMINATION
    "generic_matrix_defs.width(list_adt[list_adt[generic_matrix_defs.T].list].cdr(generic_matrix_defs.l))"
    "NIL")))
 (|width_TCC4| 0
  (|width_TCC4-1| NIL 3920448637
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (NAME-REPLACE "HI" "v(cdr[list[T]](l))")
        (("1" (TYPEPRED "HI")
          (("1" (CASE-REPLACE "null?(cdr[list[T]](l))")
            (("1" (SPLIT 2)
              (("1" (INST 1 "0")
                (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (HIDE -) (("2" (GRIND) NIL NIL)) NIL))
                NIL)
               ("2" (HIDE -3) (("2" (GRIND) NIL NIL)) NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (HIDE -1)
                (("2" (EXPAND "max")
                  (("2" (CASE-REPLACE "length[T](car[list[T]](l)) < HI")
                    (("1" (SPLIT)
                      (("1" (HIDE -3)
                        (("1" (SKEEP -2 :PREDS? T)
                          (("1" (INST 1 "i+1")
                            (("1" (EXPAND "nth" 1) (("1" (PROPAX) NIL NIL))
                              NIL)
                             ("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE -2)
                        (("2" (SKEEP 1 :PREDS? T)
                          (("2" (CASE-REPLACE "i=0")
                            (("1" (HIDE -4) (("1" (GRIND) NIL NIL)) NIL)
                             ("2" (INST -3 "i-1")
                              (("1" (EXPAND "nth" 2) (("1" (ASSERT) NIL NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (EXPAND "length" -1)
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (SPLIT)
                        (("1" (INST 1 "0")
                          (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)
                           ("2" (HIDE -) (("2" (GRIND) NIL NIL)) NIL))
                          NIL)
                         ("2" (HIDE -1)
                          (("2" (SKEEP :PREDS? T)
                            (("2" (CASE-REPLACE "i=0")
                              (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)
                               ("2" (INST -2 "i-1")
                                (("1" (EXPAND "nth" 2) (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (EXPAND "length" -1)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|i| SKOLEM-CONST-DECL "below(length(l))" |generic_matrix_defs| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|i| SKOLEM-CONST-DECL "below(length(cdr[list[T]](l)))"
     |generic_matrix_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|i| SKOLEM-CONST-DECL "below(length(l))" |generic_matrix_defs| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|l| SKOLEM-CONST-DECL "list[list[T]]" |generic_matrix_defs| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|strict_well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|width| SUBTYPE
    "real_defs.max(list_props[generic_matrix_defs.T].length(list_adt[list_adt[generic_matrix_defs.T].list].car(generic_matrix_defs.l)), generic_matrix_defs.width(list_adt[list_adt[generic_matrix_defs.T].list].cdr(generic_matrix_defs.l)))"
    "{w: naturalnumbers.nat | booleans.AND(IF list_adt[list_adt[generic_matrix_defs.T].list].null?(generic_matrix_defs.l) THEN w = 0 ELSE EXISTS (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l))): w = list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i)) ENDIF, FORALL (i: naturalnumbers.below(list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l))): reals.>=(w, list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i))))}")))
 (|abstract_mat_TCC1| 0
  (|abstract_mat_TCC3-1| |nil| 3906131891
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (SPLIT)
        (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
         ("3" (SKEEP) (("3" (TYPEPRED "width(l)") (("3" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|i| SKOLEM-CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|l| SKOLEM-CONST-DECL "list[list[T]]" |generic_matrix_defs| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|M_default| CONST-DECL "gmat" |generic_matrix_defs| NIL)
    (|minimal_default_matrix| CONST-DECL "gmat" |generic_matrix_defs| NIL))
   NIL
   (|abstract_mat| SUBTYPE "generic_matrix_defs.M_default"
    "{g: generic_matrix_defs.gmat | booleans.AND(generic_matrix_defs.height(g) = IF generic_matrix_defs.width(generic_matrix_defs.l) = 0 THEN 0 ELSE list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l) ENDIF, booleans.AND(generic_matrix_defs.width(g) = generic_matrix_defs.width(generic_matrix_defs.l), FORALL (i, j: naturalnumbers.nat): ijth(g)(i, j) = IF booleans.AND(reals.<(i, list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l)), reals.<(j, list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i)))) THEN list_props[generic_matrix_defs.T].nth(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i), j) ELSE generic_matrix_defs.default ENDIF))}")))
 (|abstract_mat_TCC2| 0
  (|abstract_mat_TCC4-1| NIL 3920465989
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (TYPEPRED "width(l)")
        (("" (CASE "null?(l)")
          (("1" (ASSERT) NIL NIL)
           ("2" (ASSERT)
            (("2" (HIDE -1)
              (("2" (CASE-REPLACE "length[list[T]](l) = 0")
                (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (ASSERT)
                  (("2" (SPLIT)
                    (("1" (SKEEP*) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (SKEEP*)
                      (("2" (CASE-REPLACE "i1 < length[list[T]](l)")
                        (("1" (INST -4 "i1") (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|width| DEF-DECL "{w: nat |
   IF null?(l) THEN w = 0
   ELSE EXISTS (i: below(length(l))): w = length(nth(l, i))
   ENDIF
    AND (FORALL (i: below(length(l))): w >= length(nth(l, i)))}"
     |generic_matrix_defs| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |generic_matrix_defs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|i1| SKOLEM-CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|l| SKOLEM-CONST-DECL "list[list[T]]" |generic_matrix_defs| NIL))
   NIL
   (|abstract_mat| SUBTYPE
    "(list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l), generic_matrix_defs.width(generic_matrix_defs.l))"
    "{(i_1, j_1) | booleans.AND((booleans.IFF(i_1 = 0, j_1 = 0)), booleans.AND(FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, i_1), FORALL (j1: naturalnumbers.nat): IF booleans.AND(reals.<(generic_matrix_defs.k, list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l)), reals.<(j1, list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, generic_matrix_defs.k)))) THEN list_props[generic_matrix_defs.T].nth(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, generic_matrix_defs.k), j1) ELSE generic_matrix_defs.default ENDIF = generic_matrix_defs.default), FORALL (k): booleans.IMPLIES(reals.>=(generic_matrix_defs.k, j_1), FORALL (i1: naturalnumbers.nat): IF booleans.AND(reals.<(i1, list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l)), reals.<(generic_matrix_defs.k, list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i1)))) THEN list_props[generic_matrix_defs.T].nth(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i1), generic_matrix_defs.k) ELSE generic_matrix_defs.default ENDIF = generic_matrix_defs.default)))}")))
 (|abstract_mat_TCC3| 0
  (|abstract_mat_TCC5-1| NIL 3920465989 ("" (SUBTYPE-TCC) NIL NIL)
   ((|height| CONST-DECL "nat" |generic_matrix_defs| NIL)
    (|width| CONST-DECL "nat" |generic_matrix_defs| NIL))
   NIL
   (|abstract_mat| SUBTYPE
    "(# ijth := LAMBDA (i, j): IF booleans.AND(reals.<(generic_matrix_defs.i, list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l)), reals.<(generic_matrix_defs.j, list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, generic_matrix_defs.i)))) THEN list_props[generic_matrix_defs.T].nth(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, generic_matrix_defs.i), generic_matrix_defs.j) ELSE generic_matrix_defs.default ENDIF, dimension := (list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l), generic_matrix_defs.width(generic_matrix_defs.l)) #)"
    "{g: generic_matrix_defs.gmat | booleans.AND(generic_matrix_defs.height(g) = IF generic_matrix_defs.width(generic_matrix_defs.l) = 0 THEN 0 ELSE list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l) ENDIF, booleans.AND(generic_matrix_defs.width(g) = generic_matrix_defs.width(generic_matrix_defs.l), FORALL (i, j: naturalnumbers.nat): ijth(g)(i, j) = IF booleans.AND(reals.<(i, list_props[list_adt[generic_matrix_defs.T].list].length(generic_matrix_defs.l)), reals.<(j, list_props[generic_matrix_defs.T].length(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i)))) THEN list_props[generic_matrix_defs.T].nth(list_props[list_adt[generic_matrix_defs.T].list].nth(generic_matrix_defs.l, i), j) ELSE generic_matrix_defs.default ENDIF))}"))))

