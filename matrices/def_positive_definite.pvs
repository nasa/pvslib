def_positive_definite : THEORY

  BEGIN

IMPORTING def_symmetric_matrix
IMPORTING vector_arithmetic
IMPORTING matrix_vector_multiplication

nzVecN(n:nat): TYPE = {x:VectorN(n) | x /= zero_vec(n)}

pos_defn?(n:posnat)(A:SquareMatrix(n)): bool =
sym?(A) AND
FORALL(x:nzVecN(n)):
x*(A*x) > 0

spos_defn?(n:posnat)(A:SquareMatrix(n)): bool =
sym?(A) AND
FORALL(x:VectorN(n)):
x*(A*x) >= 0

pos_def?(A:Square): bool =
pos_defn?(length(A))(A)

spos_def?(A:Square): bool =
spos_defn?(length(A))(A)


pd_spd: LEMMA
 FORALL (n: posnat, A: (pos_defn?(n))):
        spos_defn?(n)(A)

  END def_positive_definite
