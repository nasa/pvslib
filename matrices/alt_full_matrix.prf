(|alt_full_matrix|
 (|full_mat_alt?_TCC1| 2
  (|full_mat_alt?_TCC1-3| "" 3930401031 ("" (SUBTYPE-TCC) NIL NIL) NIL SHOSTAK
   (|full_mat_alt?| SUBTYPE "alt_full_matrix.A"
    "(list_adt[list[real]].cons?)"))
  (|full_mat_alt?_TCC1-2| "" 3927968635 ("" (SUBTYPE-TCC) NIL NIL) NIL SHOSTAK
   (|full_mat_alt?| SUBTYPE "alt_full_matrix.A"
    "(list_adt[list[real]].cons?)"))
  (|full_mat_alt?_TCC1-0| "" 3927968628 ("" (SUBTYPE-TCC) NIL NIL)
   ((|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK
   (|full_mat_alt?| SUBTYPE "alt_full_matrix.A"
    "(list_adt[list[real]].cons?)"))
  (|full_mat_alt?_TCC1-1| |nil| 3836812806 ("" (SUBTYPE-TCC) NIL NIL)
   ((|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|full_mat_alt?| SUBTYPE "alt_full_matrix.A"
    "(list_adt[list[real]].cons?)")))
 (|full_mat_alt?_TCC2| 0
  (|full_mat_alt?_TCC2-2| "" 3930401031 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   NIL SHOSTAK
   (|full_mat_alt?| SUBTYPE "list_adt[list[real]].cdr(alt_full_matrix.A)"
    "(list_adt[list[real]].cons?)"))
  (|full_mat_alt?_TCC2-0| "" 3927968651 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   SHOSTAK
   (|full_mat_alt?| SUBTYPE "list_adt[list[real]].cdr(alt_full_matrix.A)"
    "(list_adt[list[real]].cons?)"))
  (|full_mat_alt?_TCC2-1| |nil| 3836812806
   ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   NIL
   (|full_mat_alt?| SUBTYPE "list_adt[list[real]].cdr(alt_full_matrix.A)"
    "(list_adt[list[real]].cons?)")))
 (|full_mat_alt?_TCC3| 1
  (|full_mat_alt?_TCC3-2| "" 3930401032 ("" (TERMINATION-TCC) NIL NIL) NIL
   SHOSTAK
   (|full_mat_alt?| TERMINATION
    "alt_full_matrix.full_mat_alt?(list_adt[list[real]].cdr(alt_full_matrix.A))"
    "NIL"))
  (|full_mat_alt?_TCC3-0| "" 3927968644 ("" (TERMINATION-TCC) NIL NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK
   (|full_mat_alt?| TERMINATION
    "alt_full_matrix.full_mat_alt?(list_adt[list[real]].cdr(alt_full_matrix.A))"
    "NIL"))
  (|full_mat_alt?_TCC3-1| |nil| 3836812806 ("" (TERMINATION-TCC) NIL NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|full_mat_alt?| TERMINATION
    "alt_full_matrix.full_mat_alt?(list_adt[list[real]].cdr(alt_full_matrix.A))"
    "NIL")))
 (|full_mat_def_forward| 0
  (|full_mat_def_forward-5| "" 3930401045
   ("" (INDUCT "A")
    (("1" (FLATTEN)
      (("1" (SKEEP)
        (("1" (GRIND)
          (("1" (TYPEPRED "i" "j") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "i=0")
          (("1" (CASE "j=0")
            (("1" (EXPAND "nth" 1) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (EXPAND "nth" 2)
              (("2" (ASSERT)
                (("2" (EXPAND "full_mat_alt?" -3)
                  (("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (EXPAND "full_mat_alt?" -4)
                        (("2" (CASE "cons2_var=null")
                          (("1" (ASSERT)
                            (("1" (TYPEPRED "j") (("1" (GRIND) NIL NIL)) NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (SPLIT -4)
                              (("1" (CASE "j=1")
                                (("1" (REPLACE -1)
                                  (("1" (EXPAND "nth" 3)
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (ASSERT)
                                  (("2" (INST -4 "0" "j-1")
                                    (("1" (EXPAND "nth" -4 1)
                                      (("1" (ASSERT) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "j=0")
              (("1" (EXPAND "full_mat_alt?" -3)
                (("1" (FLATTEN)
                  (("1" (CASE "i=1")
                    (("1" (EXPAND "nth" 2)
                      (("1" (ASSERT)
                        (("1" (EXPAND "nth" 2) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "nth" 3)
                        (("2" (INST -2 "i-1" "0")
                          (("1" (EXPAND "nth" -2 2) (("1" (ASSERT) NIL NIL))
                            NIL)
                           ("2" (GRIND)
                            (("2" (TYPEPRED "i") (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (EXPAND "nth" 3)
                  (("2" (EXPAND "full_mat_alt?" -2)
                    (("2" (FLATTEN)
                      (("2" (ASSERT) (("2" (INST -1 "i-1" "j-1") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|full_mat_def_forward-4| "" 3930401029
   ("" (INDUCT "A")
    (("1" (FLATTEN)
      (("1" (SKEEP)
        (("1" (GRIND)
          (("1" (TYPEPRED "i" "j") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "i=0")
          (("1" (CASE "j=0")
            (("1" (EXPAND "nth" 1) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (EXPAND "nth" 2)
              (("2" (ASSERT)
                (("2" (EXPAND "full_mat_alt?" -3)
                  (("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (EXPAND "full_mat_alt?" -4)
                        (("2" (CASE "cons2_var=null")
                          (("1" (ASSERT)
                            (("1" (TYPEPRED "j") (("1" (GRIND) NIL NIL)) NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (SPLIT -4)
                              (("1" (CASE "j=1")
                                (("1" (REPLACE -1)
                                  (("1" (EXPAND "nth" 3)
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (ASSERT)
                                  (("2" (INST -4 "0" "j-1")
                                    (("1" (EXPAND "nth" -4 1)
                                      (("1" (ASSERT) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "j=0")
              (("1" (EXPAND "full_mat_alt?" -3)
                (("1" (FLATTEN)
                  (("1" (CASE "i=1")
                    (("1" (EXPAND "nth" 2)
                      (("1" (ASSERT)
                        (("1" (EXPAND "nth" 2) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "nth" 3)
                        (("2" (INST -2 "i-1" "0")
                          (("1" (EXPAND "nth" -2 2) (("1" (ASSERT) NIL NIL))
                            NIL)
                           ("2" (GRIND)
                            (("2" (TYPEPRED "i") (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (EXPAND "nth" 3)
                  (("2" (EXPAND "full_mat_alt?" -2)
                    (("2" (FLATTEN)
                      (("2" (ASSERT) (("2" (INST -1 "i-1" "j-1") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cons2_var| SKOLEM-CONST-DECL "list[list[real]]" |alt_full_matrix| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|full_mat_alt?| DEF-DECL "bool" |alt_full_matrix| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK)
  (|full_mat_def_forward-3| "" 3930401022
   ("" (INDUCT "A")
    (("1" (FLATTEN)
      (("1" (SKEEP)
        (("1" (GRIND)
          (("1" (TYPEPRED "i" "j") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "i=0")
          (("1" (CASE "j=0")
            (("1" (EXPAND "nth" 1) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (EXPAND "nth" 2)
              (("2" (ASSERT)
                (("2" (EXPAND "full_mat_alt?" -3)
                  (("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (EXPAND "full_mat_alt?" -4)
                        (("2" (CASE "cons2_var=null")
                          (("1" (ASSERT)
                            (("1" (TYPEPRED "j") (("1" (GRIND) NIL NIL)) NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (SPLIT -4)
                              (("1" (CASE "j=1")
                                (("1" (REPLACE -1)
                                  (("1" (EXPAND "nth" 3)
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (ASSERT)
                                  (("2" (INST -4 "0" "j-1")
                                    (("1" (EXPAND "nth" -4 1)
                                      (("1" (ASSERT) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "j=0")
              (("1" (EXPAND "full_mat_alt?" -3)
                (("1" (FLATTEN)
                  (("1" (CASE "i=1")
                    (("1" (EXPAND "nth" 2)
                      (("1" (ASSERT)
                        (("1" (EXPAND "nth" 2) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "nth" 3)
                        (("2" (INST -2 "i-1" "0")
                          (("1" (EXPAND "nth" -2 2) (("1" (ASSERT) NIL NIL))
                            NIL)
                           ("2" (GRIND)
                            (("2" (TYPEPRED "i") (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (EXPAND "nth" 3)
                  (("2" (EXPAND "full_mat_alt?" -2)
                    (("2" (FLATTEN)
                      (("2" (ASSERT) (("2" (INST -1 "i-1" "j-1") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cons2_var| SKOLEM-CONST-DECL "list[list[real]]" |alt_full_matrix| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|full_mat_alt?| DEF-DECL "bool" |alt_full_matrix| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK)
  (|full_mat_def_forward-2| "" 3927968592
   ("" (INDUCT "A")
    (("1" (FLATTEN)
      (("1" (SKEEP)
        (("1" (GRIND)
          (("1" (TYPEPRED "i" "j") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "i=0")
          (("1" (CASE "j=0")
            (("1" (EXPAND "nth" 1) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (EXPAND "nth" 2)
              (("2" (ASSERT)
                (("2" (EXPAND "full_mat_alt?" -3)
                  (("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (EXPAND "full_mat_alt?" -4)
                        (("2" (CASE "cons2_var=null")
                          (("1" (ASSERT)
                            (("1" (TYPEPRED "j") (("1" (GRIND) NIL NIL)) NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (SPLIT -4)
                              (("1" (CASE "j=1")
                                (("1" (REPLACE -1)
                                  (("1" (EXPAND "nth" 3)
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (ASSERT)
                                  (("2" (INST -4 "0" "j-1")
                                    (("1" (EXPAND "nth" -4 1)
                                      (("1" (ASSERT) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "j=0")
              (("1" (EXPAND "full_mat_alt?" -3)
                (("1" (FLATTEN)
                  (("1" (CASE "i=1")
                    (("1" (EXPAND "nth" 2)
                      (("1" (ASSERT)
                        (("1" (EXPAND "nth" 2) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "nth" 3)
                        (("2" (INST -2 "i-1" "0")
                          (("1" (EXPAND "nth" -2 2) (("1" (ASSERT) NIL NIL))
                            NIL)
                           ("2" (GRIND)
                            (("2" (TYPEPRED "i") (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (EXPAND "nth" 3)
                  (("2" (EXPAND "full_mat_alt?" -2)
                    (("2" (FLATTEN)
                      (("2" (ASSERT) (("2" (INST -1 "i-1" "j-1") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cons2_var| SKOLEM-CONST-DECL "list[list[real]]" |alt_full_matrix| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|full_mat_alt?| DEF-DECL "bool" |alt_full_matrix| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK)
  (|full_mat_def_forward-0| "" 3927968572
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (GRIND)
        (("" (GRIND-REALS)
          (("" (EXPAND "full_mat_alt?") (("" (POSTPONE) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|full_mat_def_forward-1| |nil| 3836813022
   ("" (INDUCT "A")
    (("1" (FLATTEN)
      (("1" (SKEEP)
        (("1" (GRIND)
          (("1" (TYPEPRED "i" "j") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "i=0")
          (("1" (CASE "j=0")
            (("1" (EXPAND "nth" 1) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (EXPAND "nth" 2)
              (("2" (ASSERT)
                (("2" (EXPAND "full_mat_alt?" -3)
                  (("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (EXPAND "full_mat_alt?" -4)
                        (("2" (CASE "cons2_var=null")
                          (("1" (ASSERT)
                            (("1" (TYPEPRED "j") (("1" (GRIND) NIL NIL)) NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (SPLIT -4)
                              (("1" (CASE "j=1")
                                (("1" (REPLACE -1)
                                  (("1" (EXPAND "nth" 3)
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (ASSERT)
                                  (("2" (INST -4 "0" "j-1")
                                    (("1" (EXPAND "nth" -4 1)
                                      (("1" (ASSERT) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "j=0")
              (("1" (EXPAND "full_mat_alt?" -3)
                (("1" (FLATTEN)
                  (("1" (CASE "i=1")
                    (("1" (EXPAND "nth" 2)
                      (("1" (ASSERT)
                        (("1" (EXPAND "nth" 2) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "nth" 3)
                        (("2" (INST -2 "i-1" "0")
                          (("1" (EXPAND "nth" -2 2) (("1" (ASSERT) NIL NIL))
                            NIL)
                           ("2" (GRIND)
                            (("2" (TYPEPRED "i") (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (EXPAND "nth" 3)
                  (("2" (EXPAND "full_mat_alt?" -2)
                    (("2" (FLATTEN)
                      (("2" (ASSERT) (("2" (INST -1 "i-1" "j-1") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) NIL
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|full_mat_alt?| DEF-DECL "bool" |alt_full_matrix| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|full_mat_def_backward| 0
  (|full_mat_def_backward-3| "" 3930401046
   ("" (INDUCT "A")
    (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (EXPAND "full_mat_alt?" 1)
        (("2" (SPLIT 1)
          (("1" (PROPAX) NIL NIL)
           ("2" (FLATTEN)
            (("2" (INST -2 "0" "1")
              (("1" (EXPAND "nth" -2)
                (("1" (ASSERT)
                  (("1" (EXPAND "nth" -2)
                    (("1" (ASSERT)
                      (("1" (REVEAL -)
                        (("1" (SKEEP)
                          (("1" (INST -1 "i+1" "j+1")
                            (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (HIDE-ALL-BUT 1)
                                (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (HIDE-ALL-BUT 1)
                              (("3" (TYPEPRED "i") (("3" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)
               ("3" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|full_mat_def_backward-2| "" 3930401030
   ("" (INDUCT "A")
    (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (EXPAND "full_mat_alt?" 1)
        (("2" (SPLIT 1)
          (("1" (PROPAX) NIL NIL)
           ("2" (FLATTEN)
            (("2" (INST -2 "0" "1")
              (("1" (EXPAND "nth" -2)
                (("1" (ASSERT)
                  (("1" (EXPAND "nth" -2)
                    (("1" (ASSERT)
                      (("1" (REVEAL -)
                        (("1" (SKEEP)
                          (("1" (INST -1 "i+1" "j+1")
                            (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (HIDE-ALL-BUT 1)
                                (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (HIDE-ALL-BUT 1)
                              (("3" (TYPEPRED "i") (("3" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)
               ("3" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|cons2_var| SKOLEM-CONST-DECL "list[list[real]]" |alt_full_matrix| NIL)
    (|cons1_var| SKOLEM-CONST-DECL "list[real]" |alt_full_matrix| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|j| SKOLEM-CONST-DECL "below(length[list[real]](cons2_var))"
     |alt_full_matrix| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|i| SKOLEM-CONST-DECL "below(length[list[real]](cons2_var))"
     |alt_full_matrix| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|full_mat_alt?| DEF-DECL "bool" |alt_full_matrix| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK)
  (|full_mat_def_backward-0| "" 3927968610
   ("" (INDUCT "A")
    (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (EXPAND "full_mat_alt?" 1)
        (("2" (SPLIT 1)
          (("1" (PROPAX) NIL NIL)
           ("2" (FLATTEN)
            (("2" (INST -2 "0" "1")
              (("1" (EXPAND "nth" -2)
                (("1" (ASSERT)
                  (("1" (EXPAND "nth" -2)
                    (("1" (ASSERT)
                      (("1" (REVEAL -)
                        (("1" (SKEEP)
                          (("1" (INST -1 "i+1" "j+1")
                            (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (HIDE-ALL-BUT 1)
                                (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (HIDE-ALL-BUT 1)
                              (("3" (TYPEPRED "i") (("3" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)
               ("3" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|cons2_var| SKOLEM-CONST-DECL "list[list[real]]" |alt_full_matrix| NIL)
    (|cons1_var| SKOLEM-CONST-DECL "list[real]" |alt_full_matrix| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|j| SKOLEM-CONST-DECL "below(length[list[real]](cons2_var))"
     |alt_full_matrix| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|i| SKOLEM-CONST-DECL "below(length[list[real]](cons2_var))"
     |alt_full_matrix| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|full_mat_alt?| DEF-DECL "bool" |alt_full_matrix| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK)
  (|full_mat_def_backward-1| |nil| 3836813342
   ("" (INDUCT "A")
    (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (EXPAND "full_mat_alt?" 1)
        (("2" (SPLIT 1)
          (("1" (PROPAX) NIL NIL)
           ("2" (FLATTEN)
            (("2" (INST -2 "0" "1")
              (("1" (EXPAND "nth" -2)
                (("1" (ASSERT)
                  (("1" (EXPAND "nth" -2)
                    (("1" (ASSERT)
                      (("1" (REVEAL -)
                        (("1" (SKEEP)
                          (("1" (INST -1 "i+1" "j+1")
                            (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (HIDE-ALL-BUT 1)
                                (("2" (TYPEPRED "j") (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (HIDE-ALL-BUT 1)
                              (("3" (TYPEPRED "i") (("3" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)
               ("3" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) NIL
    NIL (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) NIL
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|full_mat_alt?| DEF-DECL "bool" |alt_full_matrix| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|full_mat_def| 0
  (|full_mat_def-3| "" 3930401047
   ("" (LEMMA "full_mat_def_forward")
    (("" (LEMMA "full_mat_def_backward")
      (("" (SKEEP)
        (("" (INST?)
          (("" (INST?)
            (("" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|full_mat_def-2| "" 3930401030
   ("" (LEMMA "full_mat_def_forward")
    (("" (LEMMA "full_mat_def_backward")
      (("" (SKEEP)
        (("" (INST?)
          (("" (INST?)
            (("" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|full_mat_def_backward| FORMULA-DECL NIL |alt_full_matrix| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|full_mat_def_forward| FORMULA-DECL NIL |alt_full_matrix| NIL))
   SHOSTAK)
  (|full_mat_def-0| "" 3927968617
   ("" (LEMMA "full_mat_def_forward")
    (("" (LEMMA "full_mat_def_backward")
      (("" (SKEEP)
        (("" (INST?)
          (("" (INST?)
            (("" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|full_mat_def_backward| FORMULA-DECL NIL |alt_full_matrix| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|full_mat_def_forward| FORMULA-DECL NIL |alt_full_matrix| NIL))
   SHOSTAK)
  (|full_mat_def-1| |nil| 3836813583
   ("" (LEMMA "full_mat_def_forward")
    (("" (LEMMA "full_mat_def_backward")
      (("" (SKEEP)
        (("" (INST?)
          (("" (INST?)
            (("" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|full_mat_def_backward| FORMULA-DECL NIL |alt_full_matrix| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|full_mat_def_forward| FORMULA-DECL NIL |alt_full_matrix| NIL))
   SHOSTAK)))

