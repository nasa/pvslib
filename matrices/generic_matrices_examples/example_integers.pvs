example_integers: THEORY
BEGIN

  IMPORTING generic_matrices@ops_derived[int,0],
            generic_matrices@ops_scalar[int,0,int]

  u,v:VAR gvec
  lu,lv:VAR list[int]
  M,N:VAR gmat
  lM,lN:VAR (rectangular?)
  n:VAR int

% Since operations involving lists of numbers are defined elsewhere in PVS we need to make extra
% definitions here to shadow those.
; +(u,v): gvec = pointwise(+)(u,v)
; +(lu,lv): gvec = abstract(lu) + abstract(lv)

; +(M,N): gmat = pointwise(+)(M,N)
; +(lM,lN): gmat = abstract(lM) + abstract(lN)

; *(u,v): int = gvec_product(+,*)(u,v)
; *(lu,lv): int = abstract(lu) * abstract(lv)

; *(M,N): gmat = gmat_product(+,*)(M,N)
; *(lM,lN): gmat = abstract(lM) * abstract(lN)

; *(n,v): gvec = scalar(*)(n,v)
; *(n,lv): gvec = n * abstract(lv)

; *(n,M): gmat = scalar(*)(n,M)
; *(n,lM): gmat = n * abstract(lM)

END example_integers
