example_strings: THEORY
BEGIN

  IMPORTING generic_matrices@ops_derived[string,""],
            generic_matrices@ops_scalar[string,"",nat]

  concat_exception(s1,s2:string): string =
    IF s1="" OR s2="" THEN ""
    ELSE s1+s2
    ENDIF

  duplicate(n:nat,s:string): RECURSIVE string =
    IF n = 0 THEN ""
    ELSE s + duplicate(n-1,s)
    ENDIF
  MEASURE n

  u,v:VAR gvec
  M,N:VAR gmat
  n:VAR nat

% Since lists of strings are less common in PVS than lists of numbers, we needn't define operators
% to shadow definitions elsewhere in the libraries.
; +(u,v): gvec = pointwise(+)(u,v)
; +(M,N): gmat = pointwise(+)(M,N)

; *(u,v): string = gvec_product(+,concat_exception)(u,v)
; *(M,N): gmat = gmat_product(+,concat_exception)(M,N)

; *(n,v): gvec = scalar(duplicate)(n,v)
; *(n,M): gmat = scalar(duplicate)(n,M)

END example_strings
