(|props_mat_vec_multiplication|
 (|mult_scal| 0
  (|mult_scal-4| "" 3930401194
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (LEMMA "mult_length")
        (("1" (INST-CP -1 "A" "c * v" "m")
          (("1" (INST -1 "c * A" "v" "m")
            (("1" (ASSERT)
              (("1" (TYPEPRED "c * A")
                (("1" (TYPEPRED "A")
                  (("1" (HIDE -1 -4)
                    (("1" (EXPAND ROWS)
                      (("1" (REPLACE -1 -3)
                        (("1" (REPLACE -3 -6)
                          (("1" (HIDE -2 -4 -5)
                            (("1" (LEMMA "vect2matrix_eq")
                              (("1" (INST?)
                                (("1" (ASSERT)
                                  (("1" (ASSERT)
                                    (("1" (EXPAND VECT2MATRIX)
                                      (("1" (EXPAND MULT)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "mult_length")
        (("2" (INST-CP -1 "A" "c * v" "m")
          (("2" (INST -1 "c * A" "v" "m")
            (("2" (ASSERT)
              (("2" (TYPEPRED "c * A")
                (("2" (TYPEPRED "A")
                  (("2" (HIDE -1 -4)
                    (("2" (EXPAND ROWS)
                      (("2" (REPLACE -1 -3)
                        (("2" (REPLACE -3 -6)
                          (("2" (HIDE -2 -4 -5)
                            (("2" (LEMMA "vect2matrix_eq")
                              (("2" (INST?)
                                (("2" (ASSERT)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "vect2matrix")
                                      (("2" (EXPAND * 1)
                                        (("2" (ASSERT)
                                          (("2" (EXPAND * -3)
                                            (("2" (EXPAND * -4)
                                              (("2" (REPLACE -3 1)
                                                (("2" (REPLACE -4 1)
                                                  (("2"
                                                    (LEMMA "form_matrix_eq")
                                                    (("2" (INST?)
                                                      (("2" (ASSERT)
                                                        (("2" (HIDE 2 4)
                                                          (("2" (SKEEP)
                                                            (("2"
                                                              (CASE "i_1 = 0")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (EXPAND
                                                                   ACCESS)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "mmult_nth")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (TYPEPRED
                                                                         "m"
                                                                         "n")
                                                                        (("1"
                                                                          (INST
                                                                           -3
                                                                           "m"
                                                                           "n"
                                                                           "A"
                                                                           "scal(c, v)"
                                                                           "j_1")
                                                                          (("1"
                                                                            (EXPAND
                                                                             MULT
                                                                             -3)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -3
                                                                               1)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "mmult_nth")
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "m"
                                                                                   "n"
                                                                                   "scal(c, A)"
                                                                                   "v"
                                                                                   "j_1")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     MULT
                                                                                     -1)
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         *
                                                                                         1)
                                                                                        (("1"
                                                                                          (LEMMA
                                                                                           "scal_mat_row")
                                                                                          (("1"
                                                                                            (INST?)
                                                                                            (("1"
                                                                                              (INST
                                                                                               -1
                                                                                               "j_1")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 *
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -1
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (LEMMA
                                                                                                     "asso_dot")
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "c"
                                                                                                       "row(A)(j_1)"
                                                                                                       "v")
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         *
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -1
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (LEMMA
                                                                                                             DOT_COMMUTES)
                                                                                                            (("1"
                                                                                                              (INST
                                                                                                               -1
                                                                                                               "row(A)(j_1)"
                                                                                                               "scal(c, v)")
                                                                                                              (("1"
                                                                                                                (EXPAND
                                                                                                                 *
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (LEMMA
                                                                                                                     "asso_dot")
                                                                                                                    (("1"
                                                                                                                      (INST
                                                                                                                       -1
                                                                                                                       "c"
                                                                                                                       "v"
                                                                                                                       "row(A)(j_1)")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         *
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (REPLACE
                                                                                                                           -1
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (LEMMA
                                                                                                                             "dot_commutes")
                                                                                                                            (("1"
                                                                                                                              (INST
                                                                                                                               -1
                                                                                                                               "v"
                                                                                                                               "row(A)(j_1)")
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 *
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (REPLACE
                                                                                                                                   -1
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (PROPAX)
                                                                                                                                    NIL
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (GRIND)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (GRIND)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (SKEEP)
                                                                                    (("2"
                                                                                      (TYPEPRED
                                                                                       "scal(c, A)")
                                                                                      (("2"
                                                                                        (HIDE
                                                                                         -1
                                                                                         -2)
                                                                                        (("2"
                                                                                          (INST?)
                                                                                          (("2"
                                                                                            (REPLACE
                                                                                             -1
                                                                                             1)
                                                                                            (("2"
                                                                                              (HIDE
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               -5
                                                                                               -6
                                                                                               -7
                                                                                               -8
                                                                                               -9
                                                                                               -10
                                                                                               -11
                                                                                               -12)
                                                                                              (("2"
                                                                                                (HIDE
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (TYPEPRED
                                                                                                   "A")
                                                                                                  (("2"
                                                                                                    (HIDE
                                                                                                     -1
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (LEMMA
                                                                                                       "full_matrix_columns")
                                                                                                      (("2"
                                                                                                        (INST?)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -2
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               NTH)
                                                                                                              (("1"
                                                                                                                (REPLACE
                                                                                                                 -2
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (PROPAX)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (SKEEP)
                                                                                                          (("2"
                                                                                                            (INST-CP
                                                                                                             -1
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (INST
                                                                                                               -1
                                                                                                               "j")
                                                                                                              (("2"
                                                                                                                (REPLACE
                                                                                                                 -1
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (PROPAX)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mult_scal-3| "" 3928999753
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (LEMMA "mult_length")
        (("1" (INST-CP -1 "A" "c * v" "m")
          (("1" (INST -1 "c * A" "v" "m")
            (("1" (ASSERT)
              (("1" (TYPEPRED "c * A")
                (("1" (TYPEPRED "A")
                  (("1" (HIDE -1 -4)
                    (("1" (EXPAND ROWS)
                      (("1" (REPLACE -1 -3)
                        (("1" (REPLACE -3 -6)
                          (("1" (HIDE -2 -4 -5)
                            (("1" (LEMMA "vect2matrix_eq")
                              (("1" (INST?)
                                (("1" (ASSERT)
                                  (("1" (ASSERT)
                                    (("1" (EXPAND VECT2MATRIX)
                                      (("1" (EXPAND MULT)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "mult_length")
        (("2" (INST-CP -1 "A" "c * v" "m")
          (("2" (INST -1 "c * A" "v" "m")
            (("2" (ASSERT)
              (("2" (TYPEPRED "c * A")
                (("2" (TYPEPRED "A")
                  (("2" (HIDE -1 -4)
                    (("2" (EXPAND ROWS)
                      (("2" (REPLACE -1 -3)
                        (("2" (REPLACE -3 -6)
                          (("2" (HIDE -2 -4 -5)
                            (("2" (LEMMA "vect2matrix_eq")
                              (("2" (INST?)
                                (("2" (ASSERT)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "vect2matrix")
                                      (("2" (EXPAND * 1)
                                        (("2" (ASSERT)
                                          (("2" (EXPAND * -3)
                                            (("2" (EXPAND * -4)
                                              (("2" (REPLACE -3 1)
                                                (("2" (REPLACE -4 1)
                                                  (("2"
                                                    (LEMMA "form_matrix_eq")
                                                    (("2" (INST?)
                                                      (("2" (ASSERT)
                                                        (("2" (HIDE 2 4)
                                                          (("2" (SKEEP)
                                                            (("2"
                                                              (CASE "i_1 = 0")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (EXPAND
                                                                   ACCESS)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "mmult_nth")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (TYPEPRED
                                                                         "m"
                                                                         "n")
                                                                        (("1"
                                                                          (INST
                                                                           -3
                                                                           "m"
                                                                           "n"
                                                                           "A"
                                                                           "scal(c, v)"
                                                                           "j_1")
                                                                          (("1"
                                                                            (EXPAND
                                                                             MULT
                                                                             -3)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -3
                                                                               1)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "mmult_nth")
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "m"
                                                                                   "n"
                                                                                   "scal(c, A)"
                                                                                   "v"
                                                                                   "j_1")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     MULT
                                                                                     -1)
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         *
                                                                                         1)
                                                                                        (("1"
                                                                                          (LEMMA
                                                                                           "scal_mat_row")
                                                                                          (("1"
                                                                                            (INST?)
                                                                                            (("1"
                                                                                              (INST
                                                                                               -1
                                                                                               "j_1")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 *
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -1
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (LEMMA
                                                                                                     "asso_dot")
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "c"
                                                                                                       "row(A)(j_1)"
                                                                                                       "v")
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         *
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -1
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (LEMMA
                                                                                                             DOT_COMMUTES)
                                                                                                            (("1"
                                                                                                              (INST
                                                                                                               -1
                                                                                                               "row(A)(j_1)"
                                                                                                               "scal(c, v)")
                                                                                                              (("1"
                                                                                                                (EXPAND
                                                                                                                 *
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (LEMMA
                                                                                                                     "asso_dot")
                                                                                                                    (("1"
                                                                                                                      (INST
                                                                                                                       -1
                                                                                                                       "c"
                                                                                                                       "v"
                                                                                                                       "row(A)(j_1)")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         *
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (REPLACE
                                                                                                                           -1
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (LEMMA
                                                                                                                             "dot_commutes")
                                                                                                                            (("1"
                                                                                                                              (INST
                                                                                                                               -1
                                                                                                                               "v"
                                                                                                                               "row(A)(j_1)")
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 *
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (REPLACE
                                                                                                                                   -1
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (PROPAX)
                                                                                                                                    NIL
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (GRIND)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (GRIND)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (SKEEP)
                                                                                    (("2"
                                                                                      (TYPEPRED
                                                                                       "scal(c, A)")
                                                                                      (("2"
                                                                                        (HIDE
                                                                                         -1
                                                                                         -2)
                                                                                        (("2"
                                                                                          (INST?)
                                                                                          (("2"
                                                                                            (REPLACE
                                                                                             -1
                                                                                             1)
                                                                                            (("2"
                                                                                              (HIDE
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               -5
                                                                                               -6
                                                                                               -7
                                                                                               -8
                                                                                               -9
                                                                                               -10
                                                                                               -11
                                                                                               -12)
                                                                                              (("2"
                                                                                                (HIDE
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (TYPEPRED
                                                                                                   "A")
                                                                                                  (("2"
                                                                                                    (HIDE
                                                                                                     -1
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (LEMMA
                                                                                                       "full_matrix_columns")
                                                                                                      (("2"
                                                                                                        (INST?)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -2
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               NTH)
                                                                                                              (("1"
                                                                                                                (REPLACE
                                                                                                                 -2
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (PROPAX)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (SKEEP)
                                                                                                          (("2"
                                                                                                            (INST-CP
                                                                                                             -1
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (INST
                                                                                                               -1
                                                                                                               "j")
                                                                                                              (("2"
                                                                                                                (REPLACE
                                                                                                                 -1
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (PROPAX)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|vect2matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = r * entry(M)(i, j)}"
       |matrices| |matrices|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|scal| CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = r * entry(M)(i, j)}"
     |matrices| |matrices|)
    (A SKOLEM-CONST-DECL "MatrixMN(m, n)" |props_mat_vec_multiplication| NIL)
    (|n| SKOLEM-CONST-DECL "posnat" |props_mat_vec_multiplication| NIL)
    (|m| SKOLEM-CONST-DECL "posnat" |props_mat_vec_multiplication| NIL)
    (|c| SKOLEM-CONST-DECL "real" |props_mat_vec_multiplication| NIL)
    (|scal_mat_row| FORMULA-DECL NIL |matrix_props| NIL)
    (|j_1| SKOLEM-CONST-DECL "nat" |props_mat_vec_multiplication| NIL)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|mmult_nth| FORMULA-DECL NIL |matrix_vector_multiplication| |mv_analysis|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|form_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|mult_scal-2| "" 3928940027
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (LEMMA "mult_length")
        (("1" (INST-CP -1 "A" "c * v" "m")
          (("1" (INST -1 "c * A" "v" "m")
            (("1" (ASSERT)
              (("1" (TYPEPRED "c * A")
                (("1" (TYPEPRED "A")
                  (("1" (HIDE -1 -4)
                    (("1" (EXPAND ROWS)
                      (("1" (REPLACE -1 -3)
                        (("1" (REPLACE -3 -6)
                          (("1" (HIDE -2 -4 -5)
                            (("1" (LEMMA "vect2matrix_eq")
                              (("1" (INST?)
                                (("1" (ASSERT)
                                  (("1" (ASSERT)
                                    (("1" (EXPAND VECT2MATRIX)
                                      (("1" (EXPAND MULT)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "mult_length")
        (("2" (INST-CP -1 "A" "c * v" "m")
          (("2" (INST -1 "c * A" "v" "m")
            (("2" (ASSERT)
              (("2" (TYPEPRED "c * A")
                (("2" (TYPEPRED "A")
                  (("2" (HIDE -1 -4)
                    (("2" (EXPAND ROWS)
                      (("2" (REPLACE -1 -3)
                        (("2" (REPLACE -3 -6)
                          (("2" (HIDE -2 -4 -5)
                            (("2" (LEMMA "vect2matrix_eq")
                              (("2" (INST?)
                                (("2" (ASSERT)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "vect2matrix")
                                      (("2" (EXPAND * 1)
                                        (("2" (ASSERT)
                                          (("2" (EXPAND * -3)
                                            (("2" (EXPAND * -4)
                                              (("2" (REPLACE -3 1)
                                                (("2" (REPLACE -4 1)
                                                  (("2"
                                                    (LEMMA "form_matrix_eq")
                                                    (("2" (INST?)
                                                      (("2" (ASSERT)
                                                        (("2" (HIDE 2 4)
                                                          (("2" (SKEEP)
                                                            (("2"
                                                              (CASE "i_1 = 0")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (EXPAND
                                                                   ACCESS)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "mmult_nth")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (TYPEPRED
                                                                         "m"
                                                                         "n")
                                                                        (("1"
                                                                          (INST
                                                                           -3
                                                                           "m"
                                                                           "n"
                                                                           "A"
                                                                           "scal(c, v)"
                                                                           "j_1")
                                                                          (("1"
                                                                            (EXPAND
                                                                             MULT
                                                                             -3)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -3
                                                                               1)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "mmult_nth")
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "m"
                                                                                   "n"
                                                                                   "scal(c, A)"
                                                                                   "v"
                                                                                   "j_1")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     MULT
                                                                                     -1)
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (POSTPONE)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (POSTPONE)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (POSTPONE)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|vect2matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = r * entry(M)(i, j)}"
       |matrices| |matrices|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|scal| CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = r * entry(M)(i, j)}"
     |matrices| |matrices|)
    NIL NIL NIL NIL (|scal_mat_row| FORMULA-DECL NIL |matrix_props| NIL) NIL
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|mmult_nth| FORMULA-DECL NIL |matrix_vector_multiplication| |mv_analysis|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|form_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|) NIL)
   SHOSTAK)
  (|mult_scal-0| "" 3928939498
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (GRIND) NIL NIL)
       ("2" (LEMMA "mult_length")
        (("2" (INST-CP -1 "A" "c * v" "m")
          (("2" (INST -1 "c * A" "v" "m")
            (("2" (ASSERT)
              (("2" (TYPEPRED "c * A")
                (("2" (TYPEPRED "A")
                  (("2" (REPLACE -5 -8)
                    (("2" (EXPAND ROWS)
                      (("2" (HIDE -1 -4)
                        (("2" (HIDE -2 -4 -5)
                          (("2" (LEMMA "vect2matrix_eq")
                            (("2" (INST?)
                              (("2" (ASSERT)
                                (("2" (ASSERT)
                                  (("2" (EXPAND VECT2MATRIX)
                                    (("2" (LEMMA "form_matrix_eq")
                                      (("2"
                                        (INST -1
                                         "LAMBDA (i : nat, j : nat): IF i = 0 THEN access(A * (c * v))(j) ELSE 0 ENDIF"
                                         "LAMBDA (i : nat, j : nat): IF i = 0 THEN access((c * A) * v
)(j
 ) ELSE 0 ENDIF"
                                         "m" "n")
                                        (("2"
                                          (CASE "FORALL (i_1: nat, j_1: nat):
         i_1 < m AND j_1 < n IMPLIES
          IF i_1 = 0 THEN access(A * (c * v))(j_1) ELSE 0
 ENDIF =
           IF i_1 = 0 THEN access((c * A) * v)(j_1) ELSE 0 ENDIF")
                                          (("1" (REPLACE -1 -2)
                                            (("1" (HIDE -1)
                                              (("1" (EXPAND *)
                                                (("1" (ASSERT)
                                                  (("1" (REPLACE -4 1)
                                                    (("1" (REPLACE -5 1)
                                                      (("1" (POSTPONE) NIL
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (POSTPONE) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mult_scal-1| |nil| 3837207107
   ("" (INDUCT "A")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "v= null")
          (("1" (REPLACE -1) (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)
           ("2" (EXPAND "*" 2 1)
            (("2" (EXPAND "mult" 2 1)
              (("2" (LIFT-IF 2)
                (("2" (SPLIT 2)
                  (("1" (FLATTEN)
                    (("1" (TYPEPRED "c*v")
                      (("1" (HIDE -1)
                        (("1" (EXPAND "length" -) (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (LEMMA "dot_scalar1")
                      (("2" (LEMMA "dot_commutes")
                        (("2" (INST -1 "cons1_var" "c*v")
                          (("2" (EXPAND "*" -1)
                            (("2" (EXPAND "*" 2 1)
                              (("2" (REPLACE -1)
                                (("2" (REPLACE -1 2 RL)
                                  (("2" (EXPAND "*" -2)
                                    (("2" (INST -2 "cons1_var" "v" "c")
                                      (("1" (REPLACE -2 2)
                                        (("1" (EXPAND "*" 2 4)
                                          (("1" (EXPAND "mult" 2 2)
                                            (("1" (LIFT-IF 2)
                                              (("1" (SPLIT 2)
                                                (("1" (FLATTEN)
                                                  (("1" (ASSERT)
                                                    (("1" (HIDE-ALL-BUT -1)
                                                      (("1" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (DECOMPOSE-EQUALITY 3)
                                                      (("1"
                                                        (TYPEPRED
                                                         "c * cons(cons1_var, cons2_var)")
                                                        (("1" (HIDE -1)
                                                          (("1" (POSTPONE) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (POSTPONE) NIL
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (POSTPONE) NIL NIL)
                                       ("3" (POSTPONE) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|mult_mat_zero_vec| 0
  (|mult_mat_zero_vec-2| "" 3930401195
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (EXPAND *)
        (("1" (EXPAND MULT)
          (("1" (ASSERT)
            (("1" (TYPEPRED "A") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "mult_length")
        (("2" (INST -1 "A" "zero_vec(n)" "m")
          (("2" (ASSERT)
            (("2" (EXPAND *)
              (("2" (TYPEPRED "zero_vec(m)")
                (("2" (HIDE -1)
                  (("2" (LEMMA "vect2matrix_eq")
                    (("2" (INST?)
                      (("2" (ASSERT)
                        (("2" (HIDE 3)
                          (("2" (EXPAND VECT2MATRIX)
                            (("2" (LEMMA "form_matrix_eq")
                              (("2" (ASSERT)
                                (("2" (INST?)
                                  (("2" (ASSERT)
                                    (("2" (SKEEP)
                                      (("2" (CASE "i_1 = 0")
                                        (("1" (REPLACE -1 1)
                                          (("1" (HIDE 2 3)
                                            (("1" (EXPAND ACCESS)
                                              (("1" (ASSERT)
                                                (("1" (LEMMA "nth_zero")
                                                  (("1" (INST -1 "m" "j_1")
                                                    (("1" (REPLACE -1 1)
                                                      (("1" (LEMMA "mmult_nth")
                                                        (("1"
                                                          (INST -1 "m" "n" "A"
                                                           "zero_vec(n)" "j_1")
                                                          (("1"
                                                            (EXPAND MULT -1)
                                                            (("1"
                                                              (REPLACE -1 1)
                                                              (("1" (EXPAND *)
                                                                (("1"
                                                                  (LEMMA
                                                                   "dot_prod_zero")
                                                                  (("1"
                                                                    (INST -1
                                                                     "n"
                                                                     "row(A)(j_1)")
                                                                    (("1"
                                                                      (EXPAND
                                                                       *)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mult_mat_zero_vec-0| "" 3928999767
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (EXPAND *)
        (("1" (EXPAND MULT)
          (("1" (ASSERT)
            (("1" (TYPEPRED "A") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "mult_length")
        (("2" (INST -1 "A" "zero_vec(n)" "m")
          (("2" (ASSERT)
            (("2" (EXPAND *)
              (("2" (TYPEPRED "zero_vec(m)")
                (("2" (HIDE -1)
                  (("2" (LEMMA "vect2matrix_eq")
                    (("2" (INST?)
                      (("2" (ASSERT)
                        (("2" (HIDE 3)
                          (("2" (EXPAND VECT2MATRIX)
                            (("2" (LEMMA "form_matrix_eq")
                              (("2" (ASSERT)
                                (("2" (INST?)
                                  (("2" (ASSERT)
                                    (("2" (SKEEP)
                                      (("2" (CASE "i_1 = 0")
                                        (("1" (REPLACE -1 1)
                                          (("1" (HIDE 2 3)
                                            (("1" (EXPAND ACCESS)
                                              (("1" (ASSERT)
                                                (("1" (LEMMA "nth_zero")
                                                  (("1" (INST -1 "m" "j_1")
                                                    (("1" (REPLACE -1 1)
                                                      (("1" (LEMMA "mmult_nth")
                                                        (("1"
                                                          (INST -1 "m" "n" "A"
                                                           "zero_vec(n)" "j_1")
                                                          (("1"
                                                            (EXPAND MULT -1)
                                                            (("1"
                                                              (REPLACE -1 1)
                                                              (("1" (EXPAND *)
                                                                (("1"
                                                                  (LEMMA
                                                                   "dot_prod_zero")
                                                                  (("1"
                                                                    (INST -1
                                                                     "n"
                                                                     "row(A)(j_1)")
                                                                    (("1"
                                                                      (EXPAND
                                                                       *)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|form_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|nth_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_prod_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|mmult_nth| FORMULA-DECL NIL |matrix_vector_multiplication| |mv_analysis|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|vect2matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|))
   SHOSTAK)
  (|mult_mat_zero_vec-10| "" 3928937316
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (EXPAND *)
        (("1" (EXPAND MULT)
          (("1" (ASSERT)
            (("1" (TYPEPRED "A") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "mult_length")
        (("2" (INST -1 "A" "zero_vec(n)" "m")
          (("2" (ASSERT)
            (("2" (EXPAND *)
              (("2" (TYPEPRED "zero_vec(m)")
                (("2" (HIDE -1)
                  (("2" (LEMMA "vect2matrix_eq")
                    (("2" (INST?)
                      (("2" (ASSERT)
                        (("2" (HIDE 3)
                          (("2" (EXPAND VECT2MATRIX)
                            (("2" (LEMMA "form_matrix_eq")
                              (("2" (ASSERT)
                                (("2" (INST?)
                                  (("2" (ASSERT)
                                    (("2" (SKEEP)
                                      (("2" (CASE "i_1 = 0")
                                        (("1" (REPLACE -1 1)
                                          (("1" (HIDE 2 3)
                                            (("1" (EXPAND ACCESS)
                                              (("1" (ASSERT)
                                                (("1" (LEMMA "nth_zero")
                                                  (("1" (INST -1 "m" "j_1")
                                                    (("1" (REPLACE -1 1)
                                                      (("1" (LEMMA "mmult_nth")
                                                        (("1"
                                                          (INST -1 "m" "n" "A"
                                                           "zero_vec(n)" "j_1")
                                                          (("1"
                                                            (EXPAND MULT -1)
                                                            (("1"
                                                              (REPLACE -1 1)
                                                              (("1" (EXPAND *)
                                                                (("1"
                                                                  (LEMMA
                                                                   "dot_prod_zero")
                                                                  (("1"
                                                                    (INST -1
                                                                     "n"
                                                                     "row(A)(j_1)")
                                                                    (("1"
                                                                      (EXPAND
                                                                       *)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) NIL
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|form_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|nth_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_prod_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|mmult_nth| FORMULA-DECL NIL |matrix_vector_multiplication| |mv_analysis|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|vect2matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|))
   SHOSTAK)
  (|mult_mat_zero_vec-8| "" 3928936861
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (EXPAND *)
        (("1" (EXPAND MULT)
          (("1" (ASSERT)
            (("1" (TYPEPRED "A") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (POSTPONE) NIL NIL))
      NIL))
    NIL)
   ((|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|form_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|nth_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_prod_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|mmult_nth| FORMULA-DECL NIL |matrix_vector_multiplication| |mv_analysis|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|vect2matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|))
   SHOSTAK)
  (|mult_mat_zero_vec-7| "" 3928936780
   ("" (SKEEP)
    (("" (LEMMA "mult_length")
      (("" (INST -1 "A" "zero_vec(n)" "m")
        (("" (ASSERT)
          (("" (TYPEPRED "zero_vec(m)")
            (("" (HIDE -1)
              (("" (EXPAND *)
                (("" (LEMMA "vect2matrix_eq")
                  (("" (INST?)
                    (("" (ASSERT)
                      (("" (EXPAND VECT2MATRIX)
                        (("" (LEMMA "form_matrix_eq")
                          (("" (INST?)
                            (("" (ASSERT)
                              (("" (SKEEP)
                                (("" (ASSERT)
                                  (("" (CASE "i_1 = 0")
                                    (("1" (POSTPONE) NIL NIL)
                                     ("2" (POSTPONE) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mult_mat_zero_vec-1| |nil| 3837250231
   ("" (INDUCT "m")
    (("1" (SKEEP)
      (("1" (EXPAND "*" 1 1)
        (("1" (EXPAND "mult" 1 1)
          (("1" (TYPEPRED "A")
            (("1" (CASE "A = null")
              (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (EXPAND "length" -2) (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "*" 1)
          (("2" (EXPAND "mult" 1 1)
            (("2" (LIFT-IF 1)
              (("2" (SPLIT 1)
                (("1" (FLATTEN)
                  (("1" (TYPEPRED "A")
                    (("1" (HIDE -1)
                      (("1" (SPLIT -3)
                        (("1" (EXPAND "*" -4 1)
                          (("1" (EXPAND "mult" -4 1)
                            (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL))
                            NIL))
                          NIL)
                         ("2" (POSTPONE) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (POSTPONE) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|mult_mat_zero_vec_both| 0
  (|mult_mat_zero_vec_both-2| "" 3928934628
   ("" (LEMMA "dot_prod_zero")
    (("" (SKEEP)
      (("" (LEMMA "dot_commutes")
        (("" (INST?) (("" (REPLACE -1 1) (("" (INST?) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mult_mat_zero_vec_both-1| NIL 3928934592 ("" (POSTPONE) NIL NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|dot_prod_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|))
   SHOSTAK)))

