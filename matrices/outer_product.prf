(|outer_product|
 (|rl_TCC1| 0
  (|rl_TCC1-2| "" 3930401182
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (EXPAND "length")
        (("1" (EXPAND "length") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
       ("2" (SKEEP)
        (("2" (TYPEPRED "i")
          (("2" (EXPAND "length" -1)
            (("2" (EXPAND "length" -1)
              (("2" (CASE "NOT i=0")
                (("1" (ASSERT) NIL NIL)
                 ("2" (REPLACE -1)
                  (("2" (EXPAND "nth" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|rl| SUBTYPE "(: outer_product.v :)"
    "MatrixMN(1, list_props[real].length(outer_product.v))"))
  (|rl_TCC1-0| "" 3928417871
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (EXPAND "length")
        (("1" (EXPAND "length") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
       ("2" (SKEEP)
        (("2" (TYPEPRED "i")
          (("2" (EXPAND "length" -1)
            (("2" (EXPAND "length" -1)
              (("2" (CASE "NOT i=0")
                (("1" (ASSERT) NIL NIL)
                 ("2" (REPLACE -1)
                  (("2" (EXPAND "nth" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   SHOSTAK
   (|rl| SUBTYPE "(: outer_product.v :)"
    "MatrixMN(1, list_props[real].length(outer_product.v))"))
  (|rl_TCC1-1| |nil| 3835096582
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (EXPAND "length")
        (("1" (EXPAND "length") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
       ("2" (SKEEP)
        (("2" (TYPEPRED "i")
          (("2" (EXPAND "length" -1)
            (("2" (EXPAND "length" -1)
              (("2" (CASE "NOT i=0")
                (("1" (ASSERT) NIL NIL)
                 ("2" (REPLACE -1)
                  (("2" (EXPAND "nth" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   NIL
   (|rl| SUBTYPE "(: outer_product.v :)"
    "MatrixMN(1, list_props[real].length(outer_product.v))")))
 (|cl_TCC1| 0
  (|cl_TCC1-2| "" 3928417887
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (EXPAND "length")
        (("1" (LIFT-IF 1) (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (SKEEP)
        (("2" (TYPEPRED "i")
          (("2" (ASSERT)
            (("2" (EXPAND "length" -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|cl| SUBTYPE "list_adt[list[real]].null"
    "MatrixMN(list_props[real].length(outer_product.v), 1)"))
  (|cl_TCC1-1| |nil| 3835096582
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (EXPAND "length")
        (("1" (LIFT-IF 1) (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (SKEEP)
        (("2" (TYPEPRED "i")
          (("2" (ASSERT)
            (("2" (EXPAND "length" -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|cl| SUBTYPE "list_adt[list[real]].null"
    "MatrixMN(list_props[real].length(outer_product.v), 1)")))
 (|cl_TCC2| 0
  (|cl_TCC2-0| "" 3928417894
   ("" (SKEEP) (("" (TYPEPRED "v") (("" (ASSERT) NIL NIL)) NIL)) NIL) NIL
   SHOSTAK (|cl| SUBTYPE "outer_product.v" "(list_adt[real].cons?)"))
  (|cl_TCC2-1| |nil| 3835096582
   ("" (SKEEP) (("" (TYPEPRED "v") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL (|cl| SUBTYPE "outer_product.v" "(list_adt[real].cons?)")))
 (|cl_TCC3| 0
  (|cl_TCC3-0| "" 3928417898
   ("" (SKEEP)
    (("" (TYPEPRED "v") (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
   NIL SHOSTAK
   (|cl| TERMINATION "outer_product.cl(list_adt[real].cdr(outer_product.v))"
    "NIL"))
  (|cl_TCC3-1| |nil| 3835096582
   ("" (SKEEP)
    (("" (TYPEPRED "v") (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
   ((|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|cl| TERMINATION "outer_product.cl(list_adt[real].cdr(outer_product.v))"
    "NIL")))
 (|cl_TCC4| 0
  (|cl_TCC4-0| "" 3928417902
   ("" (SKEEP)
    (("" (SPLIT 2)
      (("1" (EXPAND "length") (("1" (LIFT-IF 1) (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (SKEEP)
        (("2" (EXPAND NTH 1)
          (("2" (TYPEPRED "v1(cdr[real](v))")
            (("1" (LIFT-IF 1)
              (("1" (SPLIT 1)
                (("1" (FLATTEN)
                  (("1" (EXPAND LENGTH -4) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("2" (EXPAND LENGTH -3)
                  (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL)
             ("2" (EXPAND LENGTH 1)
              (("2" (LIFT-IF 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)
             ("3" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|cl| SUBTYPE
    "list_adt[list[real]].cons((: list_adt[real].car(outer_product.v) :), outer_product.cl(list_adt[real].cdr(outer_product.v)))"
    "MatrixMN(list_props[real].length(outer_product.v), 1)"))
  (|cl_TCC4-1| |nil| 3835096582
   ("" (SKEEP)
    (("" (SPLIT 2)
      (("1" (EXPAND "length") (("1" (LIFT-IF 1) (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (SKEEP)
        (("2" (EXPAND NTH 1)
          (("2" (TYPEPRED "v1(cdr[real](v))")
            (("1" (LIFT-IF 1)
              (("1" (SPLIT 1)
                (("1" (FLATTEN)
                  (("1" (EXPAND LENGTH -4) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("2" (EXPAND LENGTH -3)
                  (("2" (TYPEPRED I)
                    (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND LENGTH 1)
              (("2" (LIFT-IF 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)
             ("3" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|cl| SUBTYPE
    "list_adt[list[real]].cons((: list_adt[real].car(outer_product.v) :), outer_product.cl(list_adt[real].cdr(outer_product.v)))"
    "MatrixMN(list_props[real].length(outer_product.v), 1)")))
 (|cl_example| 2
  (|cl_example-4| "" 3930401181
   ("" (EXPAND "cl")
    (("" (DECOMPOSE-EQUALITY 1)
      (("1" (EXPAND "cl")
        (("1" (DECOMPOSE-EQUALITY 1)
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (GRIND) NIL NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|cl_example-3| "" 3928417849
   ("" (EXPAND "cl")
    (("" (DECOMPOSE-EQUALITY 1)
      (("1" (EXPAND "cl")
        (("1" (DECOMPOSE-EQUALITY 1)
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (GRIND) NIL NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|cl_example-2| "" 3928417649
   ("" (EXPAND "cl")
    (("" (DECOMPOSE-EQUALITY 1)
      (("1" (EXPAND "cl")
        (("1" (DECOMPOSE-EQUALITY 1)
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (GRIND) NIL NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cl| DEF-DECL "MatrixMN(length(v), 1)" |outer_product| NIL))
   SHOSTAK)
  (|cl_example-0| "" 3928417645 ("" (POSTPONE) NIL NIL) NIL SHOSTAK)
  (|cl_example-1| |nil| 3835096606
   ("" (EXPAND "cl")
    (("" (DECOMPOSE-EQUALITY 1)
      (("1" (EXPAND "cl")
        (("1" (DECOMPOSE-EQUALITY 1)
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (GRIND) NIL NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cl| DEF-DECL "MatrixMN(length(v), 1)" |outer_product| NIL))
   SHOSTAK))
 (|out_prod_TCC1| 0
  (|out_prod_TCC1-0| "" 3928417906
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (TYPEPRED " cl(u)") (("1" (GRIND) NIL NIL)) NIL)
       ("2" (TYPEPRED "cl(u)*rl(v)")
        (("2" (HIDE -1 -4)
          (("2" (SKEEP 1)
            (("2" (INST -2 "i")
              (("2" (REPLACE -2 1)
                (("2" (TYPEPRED "rl(v)")
                  (("2" (EXPAND "columns" 1) (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|out_prod| SUBTYPE
    "matrices.*(outer_product.cl(outer_product.u), outer_product.rl(outer_product.v))"
    "MatrixMN(list_props[real].length(outer_product.u), list_props[real].length(outer_product.v))"))
  (|out_prod_TCC1-1| |nil| 3835261146
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (TYPEPRED " cl(u)") (("1" (GRIND) NIL NIL)) NIL)
       ("2" (TYPEPRED "cl(u)*rl(v)")
        (("2" (HIDE -1 -4)
          (("2" (SKEEP 1)
            (("2" (INST -2 "i")
              (("2" (REPLACE -2 1)
                (("2" (TYPEPRED "rl(v)")
                  (("2" (EXPAND "columns" 1) (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
       |matrices| |matrices|)
    (|mult| CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
     |matrices| |matrices|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (|rl| CONST-DECL "MatrixMN(1, length(v))" |outer_product| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cl| DEF-DECL "MatrixMN(length(v), 1)" |outer_product| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL))
   NIL
   (|out_prod| SUBTYPE
    "matrices.*(outer_product.cl(outer_product.u), outer_product.rl(outer_product.v))"
    "MatrixMN(list_props[real].length(outer_product.u), list_props[real].length(outer_product.v))"))))

