(|def_matrix_weighted_inner_prod|
 (|smat_ip_scal_left_TCC1| 1
  (|smat_ip_scal_left_TCC1-2| "" 3930401075 ("" (SUBTYPE-TCC) NIL NIL) NIL
   SHOSTAK
   (|smat_ip_scal_left| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.x)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_scal_left_TCC1-0| "" 3929516363 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK
   (|smat_ip_scal_left| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.x)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_scal_left_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|smat_ip_scal_left| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.x)"
    "VectorN(def_matrix_weighted_inner_prod.n)")))
 (|smat_ip_scal_left| 4
  (|smat_ip_scal_left-5| "" 3930401475
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (ASSERT)
        (("" (LEMMA "dot_scalar1")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "c*x" "A*y")
              (("" (REPLACE -1)
                (("" (INST?)
                  (("1" (ASSERT)
                    (("1" (REPLACE -2 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "A*y" "x") (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "A*y")
                    (("2" (HIDE -1)
                      (("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "y")
                          (("2" (HIDE -3)
                            (("2" (HIDE -1)
                              (("2" (ASSERT)
                                (("2" (LEMMA "suare_mult")
                                  (("2" (INST?)
                                    (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_scal_left-4| "" 3930401055
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (ASSERT)
        (("" (LEMMA "dot_scalar1")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "c*x" "A*y")
              (("" (REPLACE -1)
                (("" (INST?)
                  (("1" (ASSERT)
                    (("1" (REPLACE -2 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "A*y" "x") (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "A*y")
                    (("2" (HIDE -1)
                      (("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "y")
                          (("2" (HIDE -3)
                            (("2" (HIDE -1)
                              (("2" (ASSERT)
                                (("2" (LEMMA "suare_mult")
                                  (("2" (INST?)
                                    (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_scal_left-3| "" 3930140407
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (ASSERT)
        (("" (LEMMA "dot_scalar1")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "c*x" "A*y")
              (("" (REPLACE -1)
                (("" (INST?)
                  (("1" (ASSERT)
                    (("1" (REPLACE -2 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "A*y" "x") (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "A*y")
                    (("2" (HIDE -1)
                      (("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "y")
                          (("2" (HIDE -3)
                            (("2" (HIDE -1)
                              (("2" (ASSERT)
                                (("2" (LEMMA "suare_mult")
                                  (("2" (INST?)
                                    (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_scal_left-2| "" 3929440633 ("" (POSTPONE) NIL NIL) NIL SHOSTAK)
  (|smat_ip_scal_left-0| "" 3928417703
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (ASSERT)
        (("" (LEMMA "dot_scalar1")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "c*x" "A*y")
              (("" (REPLACE -1)
                (("" (INST?)
                  (("1" (ASSERT)
                    (("1" (REPLACE -2 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "A*y" "x") (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "A*y")
                    (("2" (HIDE -1)
                      (("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "y")
                          (("2" (HIDE -3)
                            (("2" (HIDE -1)
                              (("2" (ASSERT)
                                (("2" (LEMMA "suare_mult")
                                  (("2" (INST?)
                                    (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|dot_scalar1| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (A SKOLEM-CONST-DECL "(spos_defn?(n))" |def_matrix_weighted_inner_prod|
     NIL)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|suare_mult| JUDGEMENT-TCC NIL |props_square_matrix| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|smat_ip_scal_left-1| |nil| 3837203302
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (ASSERT)
        (("" (LEMMA "dot_scalar1")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "c*x" "A*y")
              (("" (REPLACE -1)
                (("" (INST?)
                  (("1" (ASSERT)
                    (("1" (REPLACE -2 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "A*y" "x") (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "A*y")
                    (("2" (HIDE -1)
                      (("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "y")
                          (("2" (HIDE -3)
                            (("2" (HIDE -1)
                              (("2" (ASSERT)
                                (("2" (LEMMA "suare_mult")
                                  (("2" (INST?)
                                    (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|dot_scalar1| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|suare_mult| JUDGEMENT-TCC NIL |props_square_matrix| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|smat_ip_scal_right_TCC1| 1
  (|smat_ip_scal_right_TCC1-2| "" 3930401075 ("" (SUBTYPE-TCC) NIL NIL) NIL
   SHOSTAK
   (|smat_ip_scal_right| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.y)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_scal_right_TCC1-0| "" 3929516363 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK
   (|smat_ip_scal_right| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.y)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_scal_right_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|smat_ip_scal_right| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.y)"
    "VectorN(def_matrix_weighted_inner_prod.n)")))
 (|smat_ip_scal_right| 0
  (|smat_ip_scal_right-8| "" 3930401477
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (EXPAND *)
        (("" (LEMMA "mmult_scal")
          (("" (INST -1 "n" "n" "A" "y" "c")
            (("1" (EXPAND *)
              (("1" (EXPAND MULT -1)
                (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                  (("1" (REPLACE -1 1)
                    (("1" (HIDE -2)
                      (("1" (CASE "c = 0")
                        (("1" (ASSERT)
                          (("1" (REPLACE -1 1)
                            (("1" (CASE "0 * dot(x, mult(A, y)) = 0")
                              (("1" (REPLACE -1 1)
                                (("1" (HIDE -1)
                                  (("1" (LEMMA "mult_zero")
                                    (("1" (INST -1 "mult(A, y)")
                                      (("1" (EXPAND *)
                                        (("1" (REPLACE -1 1)
                                          (("1" (HIDE -1)
                                            (("1" (LEMMA "dot_zero")
                                              (("1"
                                                (TYPEPRED "length(mult(A, y))")
                                                (("1" (LEMMA "mult_length")
                                                  (("1" (INST -1 "A" "y" "n")
                                                    (("1" (INST?)
                                                      (("1" (ASSERT)
                                                        (("1" (TYPEPRED A)
                                                          (("1" (ASSERT)
                                                            (("1" (HIDE -1)
                                                              (("1"
                                                                (EXPAND ROWS)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (REPLACE -7
                                                                             1)
                                                                    (("1"
                                                                      (HIDE -1
                                                                       -2 -3 -4
                                                                       -5 -6 -7
                                                                       -8)
                                                                      (("1"
                                                                        (HIDE
                                                                         -2 -3)
                                                                        (("1"
                                                                          (HIDE
                                                                           -1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "dot_zero")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "x")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   *)
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "asso_dot")
                          (("2" (LEMMA "dot_commutes")
                            (("2" (INST -1 "x" "scal(c, mult(A, y))")
                              (("2" (EXPAND *)
                                (("2" (REPLACE -1 2)
                                  (("2" (HIDE -1 -2 -3)
                                    (("2" (LEMMA "asso_dot")
                                      (("2" (INST -1 "c" "mult(A, y)" "x")
                                        (("1" (EXPAND *)
                                          (("1" (REPLACE -1 2)
                                            (("1" (LEMMA "dot_commutes")
                                              (("1" (INST -1 "mult(A, y)" "x")
                                                (("1" (EXPAND *)
                                                  (("1" (REPLACE -1 2)
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED A) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED A)
                  (("2" (HIDE -1)
                    (("2" (ASSERT)
                      (("2" (CASE "null?(A)")
                        (("1" (GRIND) NIL NIL)
                         ("2" (ASSERT)
                          (("2" (EXPAND "spos_defn?")
                            (("2" (ASSERT)
                              (("2" (TYPEPRED "n")
                                (("2" (LEMMA "full_matrix_columns")
                                  (("2" (INST?)
                                    (("2" (ASSERT)
                                      (("2" (INST -3 "0" "i")
                                        (("2" (EXPAND NTH)
                                          (("2" (ASSERT)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_scal_right-7| "" 3930401057
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (EXPAND *)
        (("" (LEMMA "mmult_scal")
          (("" (INST -1 "n" "n" "A" "y" "c")
            (("1" (EXPAND *)
              (("1" (EXPAND MULT -1)
                (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                  (("1" (REPLACE -1 1)
                    (("1" (HIDE -2)
                      (("1" (CASE "c = 0")
                        (("1" (ASSERT)
                          (("1" (REPLACE -1 1)
                            (("1" (CASE "0 * dot(x, mult(A, y)) = 0")
                              (("1" (REPLACE -1 1)
                                (("1" (HIDE -1)
                                  (("1" (LEMMA "mult_zero")
                                    (("1" (INST -1 "mult(A, y)")
                                      (("1" (EXPAND *)
                                        (("1" (REPLACE -1 1)
                                          (("1" (HIDE -1)
                                            (("1" (LEMMA "dot_zero")
                                              (("1"
                                                (TYPEPRED "length(mult(A, y))")
                                                (("1" (LEMMA "mult_length")
                                                  (("1" (INST -1 "A" "y" "n")
                                                    (("1" (INST?)
                                                      (("1" (ASSERT)
                                                        (("1" (TYPEPRED A)
                                                          (("1" (ASSERT)
                                                            (("1" (HIDE -1)
                                                              (("1"
                                                                (EXPAND ROWS)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (REPLACE -7
                                                                             1)
                                                                    (("1"
                                                                      (HIDE -1
                                                                       -2 -3 -4
                                                                       -5 -6 -7
                                                                       -8)
                                                                      (("1"
                                                                        (HIDE
                                                                         -2 -3)
                                                                        (("1"
                                                                          (HIDE
                                                                           -1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "dot_zero")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "x")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   *)
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "asso_dot")
                          (("2" (LEMMA "dot_commutes")
                            (("2" (INST -1 "x" "scal(c, mult(A, y))")
                              (("2" (EXPAND *)
                                (("2" (REPLACE -1 2)
                                  (("2" (HIDE -1 -2 -3)
                                    (("2" (LEMMA "asso_dot")
                                      (("2" (INST -1 "c" "mult(A, y)" "x")
                                        (("1" (EXPAND *)
                                          (("1" (REPLACE -1 2)
                                            (("1" (LEMMA "dot_commutes")
                                              (("1" (INST -1 "mult(A, y)" "x")
                                                (("1" (EXPAND *)
                                                  (("1" (REPLACE -1 2)
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED A) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED A)
                  (("2" (HIDE -1)
                    (("2" (ASSERT)
                      (("2" (CASE "null?(A)")
                        (("1" (GRIND) NIL NIL)
                         ("2" (ASSERT)
                          (("2" (EXPAND "spos_defn?")
                            (("2" (ASSERT)
                              (("2" (TYPEPRED "n")
                                (("2" (LEMMA "full_matrix_columns")
                                  (("2" (INST?)
                                    (("2" (ASSERT)
                                      (("2" (INST -3 "0" "i")
                                        (("2" (EXPAND NTH)
                                          (("2" (ASSERT)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_scal| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (A SKOLEM-CONST-DECL "(spos_defn?(n))" |def_matrix_weighted_inner_prod|
     NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|smat_ip_scal_right-6| "" 3930140418
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (EXPAND *)
        (("" (LEMMA "mmult_scal")
          (("" (INST -1 "n" "n" "A" "y" "c")
            (("1" (EXPAND *)
              (("1" (EXPAND MULT -1)
                (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                  (("1" (REPLACE -1 1)
                    (("1" (HIDE -2)
                      (("1" (CASE "c = 0")
                        (("1" (ASSERT)
                          (("1" (REPLACE -1 1)
                            (("1" (CASE "0 * dot(x, mult(A, y)) = 0")
                              (("1" (REPLACE -1 1)
                                (("1" (HIDE -1)
                                  (("1" (LEMMA "mult_zero")
                                    (("1" (INST -1 "mult(A, y)")
                                      (("1" (EXPAND *)
                                        (("1" (REPLACE -1 1)
                                          (("1" (HIDE -1)
                                            (("1" (LEMMA "dot_zero")
                                              (("1"
                                                (TYPEPRED "length(mult(A, y))")
                                                (("1" (LEMMA "mult_length")
                                                  (("1" (INST -1 "A" "y" "n")
                                                    (("1" (INST?)
                                                      (("1" (ASSERT)
                                                        (("1" (TYPEPRED A)
                                                          (("1" (ASSERT)
                                                            (("1" (HIDE -1)
                                                              (("1"
                                                                (EXPAND ROWS)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (REPLACE -7
                                                                             1)
                                                                    (("1"
                                                                      (HIDE -1
                                                                       -2 -3 -4
                                                                       -5 -6 -7
                                                                       -8)
                                                                      (("1"
                                                                        (HIDE
                                                                         -2 -3)
                                                                        (("1"
                                                                          (HIDE
                                                                           -1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "dot_zero")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "x")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   *)
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "asso_dot")
                          (("2" (LEMMA "dot_commutes")
                            (("2" (INST -1 "x" "scal(c, mult(A, y))")
                              (("2" (EXPAND *)
                                (("2" (REPLACE -1 2)
                                  (("2" (HIDE -1 -2 -3)
                                    (("2" (LEMMA "asso_dot")
                                      (("2" (INST -1 "c" "mult(A, y)" "x")
                                        (("1" (EXPAND *)
                                          (("1" (REPLACE -1 2)
                                            (("1" (LEMMA "dot_commutes")
                                              (("1" (INST -1 "mult(A, y)" "x")
                                                (("1" (EXPAND *)
                                                  (("1" (REPLACE -1 2)
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED A) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED A)
                  (("2" (HIDE -1)
                    (("2" (ASSERT)
                      (("2" (CASE "null?(A)")
                        (("1" (GRIND) NIL NIL)
                         ("2" (ASSERT)
                          (("2" (EXPAND "spos_defn?")
                            (("2" (ASSERT)
                              (("2" (TYPEPRED "n")
                                (("2" (LEMMA "full_matrix_columns")
                                  (("2" (INST?)
                                    (("2" (ASSERT)
                                      (("2" (INST -3 "0" "i")
                                        (("2" (EXPAND NTH)
                                          (("2" (ASSERT)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_scal| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) NIL
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL) NIL
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|) NIL)
   SHOSTAK)
  (|smat_ip_scal_right-5| "" 3930140411 ("" (POSTPONE) NIL NIL) NIL SHOSTAK)
  (|smat_ip_scal_right-4| "" 3929443694
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (EXPAND *)
        (("" (LEMMA "mmult_scal")
          (("" (INST -1 "n" "n" "A" "y" "c")
            (("1" (EXPAND MULT -1)
              (("1" (EXPAND *)
                (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                  (("1" (REPLACE -1 1)
                    (("1" (LEMMA "asso_dot")
                      (("1" (INST -1 "c" "mult(A, y)" "x")
                        (("1" (EXPAND *)
                          (("1" (LEMMA "dot_commutes")
                            (("1" (INST -1 "scal(c, mult(A, y))" "x")
                              (("1" (EXPAND *)
                                (("1" (REPLACE -1 -2)
                                  (("1" (REPLACE -2 1)
                                    (("1" (ASSERT)
                                      (("1" (LEMMA "dot_commutes")
                                        (("1" (INST -1 "mult(A, y)" "x")
                                          (("1" (EXPAND *)
                                            (("1" (REPLACE -1 1)
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (TYPEPRED A)
              (("2" (EXPAND "rows")
                (("2" (SPLIT)
                  (("1" (SPLIT)
                    (("1" (PROPAX) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)
                   ("2" (POSTPONE) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_scal_right-3| "" 3929442317
   ("" (SKEEP)
    (("" (EXPAND "smat_ip" 1)
      (("" (EXPAND *)
        (("" (LEMMA "mmult_scal")
          (("" (INST -1 "n" "n" "A" "y" "c")
            (("1" (EXPAND *)
              (("1" (EXPAND MULT -1)
                (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                  (("1" (REPLACE -1 1)
                    (("1" (HIDE -2)
                      (("1" (CASE "c = 0")
                        (("1" (ASSERT)
                          (("1" (REPLACE -1 1)
                            (("1" (CASE "0 * dot(x, mult(A, y)) = 0")
                              (("1" (REPLACE -1 1)
                                (("1" (HIDE -1)
                                  (("1" (LEMMA "mult_zero")
                                    (("1" (INST -1 "mult(A, y)")
                                      (("1" (EXPAND *)
                                        (("1" (REPLACE -1 1)
                                          (("1" (HIDE -1)
                                            (("1" (LEMMA "dot_zero")
                                              (("1"
                                                (TYPEPRED "length(mult(A, y))")
                                                (("1" (LEMMA "mult_length")
                                                  (("1" (INST -1 "A" "y" "n")
                                                    (("1" (INST?)
                                                      (("1" (ASSERT)
                                                        (("1" (TYPEPRED A)
                                                          (("1" (ASSERT)
                                                            (("1" (HIDE -1)
                                                              (("1"
                                                                (EXPAND ROWS)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (REPLACE -7
                                                                             1)
                                                                    (("1"
                                                                      (HIDE -1
                                                                       -2 -3 -4
                                                                       -5 -6 -7
                                                                       -8)
                                                                      (("1"
                                                                        (HIDE
                                                                         -2 -3)
                                                                        (("1"
                                                                          (HIDE
                                                                           -1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "dot_zero")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "x")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   *)
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "asso_dot")
                          (("2" (LEMMA "dot_commutes")
                            (("2" (INST -1 "x" "scal(c, mult(A, y))")
                              (("2" (EXPAND *)
                                (("2" (REPLACE -1 2)
                                  (("2" (HIDE -1 -2 -3)
                                    (("2" (LEMMA "asso_dot")
                                      (("2" (INST -1 "c" "mult(A, y)" "x")
                                        (("1" (EXPAND *)
                                          (("1" (REPLACE -1 2)
                                            (("1" (LEMMA "dot_commutes")
                                              (("1" (INST -1 "mult(A, y)" "x")
                                                (("1" (EXPAND *)
                                                  (("1" (REPLACE -1 2)
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED A) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED A)
                  (("2" (HIDE -1)
                    (("2" (ASSERT)
                      (("2" (CASE "null?(A)")
                        (("1" (GRIND) NIL NIL)
                         ("2" (ASSERT)
                          (("2" (EXPAND "spos_defn?")
                            (("2" (ASSERT)
                              (("2" (TYPEPRED "n")
                                (("2" (LEMMA "full_matrix_columns")
                                  (("2" (INST?)
                                    (("2" (ASSERT)
                                      (("2" (INST -3 "0" "i")
                                        (("2" (EXPAND NTH)
                                          (("2" (ASSERT)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_scal| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK)
  (|smat_ip_scal_right-2| "" 3929440628 ("" (POSTPONE) NIL NIL) NIL SHOSTAK)
  (|smat_ip_scal_right-0| "" 3929440625
   ("" (SKEEP) (("" (EXPAND "smat_ip" 1) (("" (POSTPONE) NIL NIL)) NIL)) NIL)
   NIL SHOSTAK)
  (|smat_ip_scal_right-1| |nil| 3837206926
   ("" (SKEEP) (("" (EXPAND "smat_ip" 1) (("" (POSTPONE) NIL NIL)) NIL)) NIL)
   ((|mmult_scal| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK))
 (|smat_ip_sum_left_TCC1| 0
  (|smat_ip_sum_left_TCC1-3| "" 3930401076
   ("" (SKEEP)
    (("" (TYPEPRED "x + z")
      (("" (HIDE -1)
        (("" (TYPEPRED "x" "z")
          (("" (HIDE -1 -3)
            (("" (REPLACE -1 -3)
              (("" (REPLACE -2 -3)
                (("" (EXPAND "max") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|smat_ip_sum_left| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_sum_left_TCC1-2| "" 3929518217
   ("" (SKEEP)
    (("" (TYPEPRED "x + z")
      (("" (HIDE -1)
        (("" (TYPEPRED "x" "z")
          (("" (HIDE -1 -3)
            (("" (REPLACE -1 -3)
              (("" (REPLACE -2 -3)
                (("" (EXPAND "max") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL)
   SHOSTAK
   (|smat_ip_sum_left| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_sum_left_TCC1-0| "" 3929516364
   ("" (SUBTYPE-TCC) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)
   NIL SHOSTAK
   (|smat_ip_sum_left| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_sum_left_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL))
   NIL
   (|smat_ip_sum_left| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)")))
 (|smat_ip_sum_left| 0
  (|smat_ip_sum_left-4| "" 3930401478
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (LEMMA "dot_dist")
        (("" (INST -1 "(A * y)" "x" "z")
          (("1" (LEMMA "dot_commutes")
            (("1" (INST -1 "(x + z)" "(A * y)")
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "dot_commutes")
                  (("1" (INST -1 "x" "(A * y)")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "z" "(A * y)")
                          (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_sum_left-3| "" 3930401058
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (LEMMA "dot_dist")
        (("" (INST -1 "(A * y)" "x" "z")
          (("1" (LEMMA "dot_commutes")
            (("1" (INST -1 "(x + z)" "(A * y)")
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "dot_commutes")
                  (("1" (INST -1 "x" "(A * y)")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "z" "(A * y)")
                          (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (A SKOLEM-CONST-DECL "(spos_defn?(n))" |def_matrix_weighted_inner_prod|
     NIL)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|smat_ip_sum_left-2| "" 3930140424
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (LEMMA "dot_dist")
        (("" (INST -1 "(A * y)" "x" "z")
          (("1" (LEMMA "dot_commutes")
            (("1" (INST -1 "(x + z)" "(A * y)")
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "dot_commutes")
                  (("1" (INST -1 "x" "(A * y)")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "z" "(A * y)")
                          (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL) NIL
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|) NIL)
   SHOSTAK)
  (|smat_ip_sum_left-0| "" 3929443028
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (LEMMA "dot_dist")
        (("" (INST -1 "(A * y)" "x" "z")
          (("1" (LEMMA "dot_commutes")
            (("1" (INST -1 "(x + z)" "(A * y)")
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "dot_commutes")
                  (("1" (INST -1 "x" "(A * y)")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "z" "(A * y)")
                          (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|))
   SHOSTAK)
  (|smat_ip_sum_left-1| NIL 3929442843 ("" (POSTPONE) NIL NIL)
   ((|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|))
   SHOSTAK))
 (|smat_ip_sum_right_TCC1| 0
  (|smat_ip_sum_right_TCC1-3| "" 3930401076
   ("" (SKEEP)
    (("" (TYPEPRED "y + z")
      (("" (HIDE -1)
        (("" (TYPEPRED "y" "z")
          (("" (HIDE -1 -3)
            (("" (REPLACE -1 -3)
              (("" (REPLACE -2 -3)
                (("" (EXPAND "max") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|smat_ip_sum_right| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.y, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_sum_right_TCC1-2| "" 3929518246
   ("" (SKEEP)
    (("" (TYPEPRED "y + z")
      (("" (HIDE -1)
        (("" (TYPEPRED "y" "z")
          (("" (HIDE -1 -3)
            (("" (REPLACE -1 -3)
              (("" (REPLACE -2 -3)
                (("" (EXPAND "max") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL)
   SHOSTAK
   (|smat_ip_sum_right| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.y, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_sum_right_TCC1-0| "" 3929516365
   ("" (SUBTYPE-TCC) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)
   NIL SHOSTAK
   (|smat_ip_sum_right| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.y, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|smat_ip_sum_right_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL))
   NIL
   (|smat_ip_sum_right| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.y, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)")))
 (|smat_ip_sum_right| 0
  (|smat_ip_sum_right-4| "" 3930401480
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (EXPAND *)
        (("" (LEMMA "mmult_dist")
          (("" (INST -1 "n" "n" "A" "y" "z")
            (("1" (EXPAND MULT -1)
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "dot_dist")
                  (("1" (INST -1 "x" "mult(A, y)" "mult(A, z)")
                    (("1" (EXPAND *) (("1" (PROPAX) NIL NIL)) NIL)
                     ("2" (TYPEPRED A)
                      (("2" (HIDE -1)
                        (("2" (CASE "null?(A)")
                          (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED A) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED A)
                  (("2" (HIDE -1)
                    (("2" (CASE "null?(A)")
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (ASSERT)
                        (("2" (LEMMA "full_matrix_columns")
                          (("2" (INST -1 "A")
                            (("2" (ASSERT)
                              (("2" (INST -2 "0" "i")
                                (("2" (EXPAND NTH) (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_sum_right-3| "" 3930401059
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (EXPAND *)
        (("" (LEMMA "mmult_dist")
          (("" (INST -1 "n" "n" "A" "y" "z")
            (("1" (EXPAND MULT -1)
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "dot_dist")
                  (("1" (INST -1 "x" "mult(A, y)" "mult(A, z)")
                    (("1" (EXPAND *) (("1" (PROPAX) NIL NIL)) NIL)
                     ("2" (TYPEPRED A)
                      (("2" (HIDE -1)
                        (("2" (CASE "null?(A)")
                          (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED A) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED A)
                  (("2" (HIDE -1)
                    (("2" (CASE "null?(A)")
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (ASSERT)
                        (("2" (LEMMA "full_matrix_columns")
                          (("2" (INST -1 "A")
                            (("2" (ASSERT)
                              (("2" (INST -2 "0" "i")
                                (("2" (EXPAND NTH) (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|z| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (A SKOLEM-CONST-DECL "(spos_defn?(n))" |def_matrix_weighted_inner_prod|
     NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|smat_ip_sum_right-2| "" 3930140430
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (EXPAND *)
        (("" (LEMMA "mmult_dist")
          (("" (INST -1 "n" "n" "A" "y" "z")
            (("1" (EXPAND MULT -1)
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "dot_dist")
                  (("1" (INST -1 "x" "mult(A, y)" "mult(A, z)")
                    (("1" (EXPAND *) (("1" (PROPAX) NIL NIL)) NIL)
                     ("2" (TYPEPRED A)
                      (("2" (HIDE -1)
                        (("2" (CASE "null?(A)")
                          (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED A) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED A)
                  (("2" (HIDE -1)
                    (("2" (CASE "null?(A)")
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (ASSERT)
                        (("2" (LEMMA "full_matrix_columns")
                          (("2" (INST -1 "A")
                            (("2" (ASSERT)
                              (("2" (INST -2 "0" "i")
                                (("2" (EXPAND NTH) (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) NIL
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|) NIL
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL) NIL
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|) NIL)
   SHOSTAK)
  (|smat_ip_sum_right-0| "" 3929443961
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (EXPAND *)
        (("" (LEMMA "mmult_dist")
          (("" (INST -1 "n" "n" "A" "y" "z")
            (("1" (EXPAND MULT -1)
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "dot_dist")
                  (("1" (INST -1 "x" "mult(A, y)" "mult(A, z)")
                    (("1" (EXPAND *) (("1" (PROPAX) NIL NIL)) NIL)
                     ("2" (TYPEPRED A)
                      (("2" (HIDE -1)
                        (("2" (CASE "null?(A)")
                          (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED A) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED A)
                  (("2" (HIDE -1)
                    (("2" (CASE "null?(A)")
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (ASSERT)
                        (("2" (LEMMA "full_matrix_columns")
                          (("2" (INST -1 "A")
                            (("2" (ASSERT)
                              (("2" (INST -2 "0" "i")
                                (("2" (EXPAND NTH) (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|))
   SHOSTAK)
  (|smat_ip_sum_right-1| NIL 3929443696 ("" (POSTPONE) NIL NIL)
   ((|mmult_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|))
   SHOSTAK))
 (|smat_ip_sym| 0
  (|smat_ip_sym-6| "" 3930401486
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (TYPEPRED "A") (("1" (TYPEPRED "n") (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (EXPAND "smat_ip")
        (("2" (LEMMA "dot_to_matrix_mult")
          (("2" (INST?)
            (("1" (REPLACE -1 2)
              (("1" (LEMMA "matrix_vector_to_matrix_mult")
                (("1" (INST -1 "n" "n" "A" "y")
                  (("1" (REPLACE -1 2)
                    (("1" (LEMMA "transpose_transpose")
                      (("1" (INST?)
                        (("1" (REPLACE -1 2)
                          (("1" (LEMMA "transpose_scalar_matrix")
                            (("1"
                              (INST -1
                               "vect2matrix(x) * (A * transpose(vect2matrix(y)))")
                              (("1" (REPLACE -1 2)
                                (("1" (LEMMA "transpose_mult")
                                  (("1" (INST?)
                                    (("1" (SPLIT)
                                      (("1" (REPLACE -1 2)
                                        (("1" (LEMMA "transpose_mult")
                                          (("1"
                                            (INST -1 "A"
                                             "transpose(vect2matrix(y))")
                                            (("1" (SPLIT)
                                              (("1" (REPLACE -1 2)
                                                (("1"
                                                  (LEMMA "transpose_transpose")
                                                  (("1"
                                                    (INST -1 "vect2matrix(y)")
                                                    (("1" (REPLACE -1 2)
                                                      (("1"
                                                        (LEMMA
                                                         "dot_to_matrix_mult")
                                                        (("1"
                                                          (INST -1 "n" "y"
                                                           "A * x")
                                                          (("1" (REPLACE -1 2)
                                                            (("1"
                                                              (LEMMA
                                                               "matrix_vector_to_matrix_mult")
                                                              (("1"
                                                                (INST -1 "n"
                                                                 "n" "A" "x")
                                                                (("1"
                                                                  (REPLACE -1
                                                                           2)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "transpose_transpose")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A * transpose(vect2matrix(x))")
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1 2)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("1"
                                                                            (LEMMA
                                                                             "matrix_mult_assoc")
                                                                            (("1"
                                                                              (HIDE
                                                                               -2
                                                                               -3
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "transpose(vect2matrix(x))"
                                                                                 "vect2matrix(y)"
                                                                                 "A")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "*")
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "mult(vect2matrix(y), mult(A, transpose(vect2matrix(x)))) = mult(mult(vect2matrix(y), A), transpose(vect2matrix(x)))")
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -2)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           2)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (TYPEPRED
                                                                                               "A")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "spos_defn?")
                                                                                                (("1"
                                                                                                  (FLATTEN)
                                                                                                  (("1"
                                                                                                    (CASE
                                                                                                        "transpose(A) = A")
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (HIDE
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3
                                                                                                       -4
                                                                                                       -5
                                                                                                       -6
                                                                                                       -7
                                                                                                       -8
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (LEMMA
                                                                                                         "full_matrix_eq")
                                                                                                        (("2"
                                                                                                          (INST?)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (LEMMA
                                                                                                               "rows_transpose")
                                                                                                              (("2"
                                                                                                                (INST?)
                                                                                                                (("2"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (LEMMA
                                                                                                                     "columns_transpose")
                                                                                                                    (("2"
                                                                                                                      (INST?)
                                                                                                                      (("2"
                                                                                                                        (REPLACE
                                                                                                                         -1
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (TYPEPRED
                                                                                                                           "A")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (SKEEP)
                                                                                                                              (("2"
                                                                                                                                (LEMMA
                                                                                                                                 "entry_transpose")
                                                                                                                                (("2"
                                                                                                                                  (INST?)
                                                                                                                                  (("2"
                                                                                                                                    (REPLACE
                                                                                                                                     -1
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (LEMMA
                                                                                                                                       "sym_entry_def_forward")
                                                                                                                                      (("2"
                                                                                                                                        (INST
                                                                                                                                         -1
                                                                                                                                         "A")
                                                                                                                                        (("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("2"
                                                                                                                                            (EXPAND
                                                                                                                                             "spos_defn?")
                                                                                                                                            (("2"
                                                                                                                                              (FLATTEN)
                                                                                                                                              (("2"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("2"
                                                                                                                                                  (INST
                                                                                                                                                   -1
                                                                                                                                                   "j"
                                                                                                                                                   "i")
                                                                                                                                                  NIL
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (HIDE -1 -2
                                                                   -3 -4 -5 -6
                                                                   -7 -8 3)
                                                                  (("2" (SPLIT)
                                                                    (("1"
                                                                      (TYPEPRED
                                                                       "A")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "rows")
                                                                        (("1"
                                                                          (PROPAX)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKEEP)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "length_row")
                                                                        (("2"
                                                                          (INST?)
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "i")
                                                                            (("2"
                                                                              (TYPEPRED
                                                                               "i")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "row")
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     -2
                                                                                     1)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "full_matrix_columns")
                                                                                      (("2"
                                                                                        (INST?)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (HIDE -1 -2 -3 -4
                                                             -5 -6 -7 3)
                                                            (("2"
                                                              (LEMMA
                                                               "mult_length")
                                                              (("2"
                                                                (INST -1 "A"
                                                                 "x" "n")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (TYPEPRED
                                                                     "A")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "rows")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("2"
                                                                            (PROPAX)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -2 -3 -4 -5 3)
                                                (("2" (LEMMA "rows_transpose")
                                                  (("2" (INST?)
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (HIDE -1)
                                                        (("2"
                                                          (LEMMA
                                                           "full_matrix_columns")
                                                          (("2" (INST -1 "A")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE -1 -2 -3 -4 3)
                                        (("2" (EXPAND "*")
                                          (("2" (LEMMA "rows_mult")
                                            (("2"
                                              (INST -1 "A"
                                               "transpose(vect2matrix(y))")
                                              (("2" (EXPAND "*")
                                                (("2" (REPLACE -1 1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (SKEEP)
                                  (("2" (ASSERT)
                                    (("2" (HIDE -1 -2 -3 3)
                                      (("2" (LEMMA "length_row")
                                        (("2"
                                          (INST -1
                                           "vect2matrix(x) * (A * transpose(vect2matrix(y)))"
                                           "i")
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "row")
                                              (("2" (REPLACE -1 1)
                                                (("2" (HIDE -1)
                                                  (("2" (EXPAND "*")
                                                    (("2"
                                                      (LEMMA "columns_mult")
                                                      (("2"
                                                        (INST -1
                                                         "vect2matrix(x)"
                                                         "mult(A, transpose(vect2matrix(y)))")
                                                        (("2" (ASSERT)
                                                          (("2" (SPLIT)
                                                            (("1" (EXPAND "*")
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1"
                                                                  (LEMMA
                                                                   "columns_mult")
                                                                  (("1"
                                                                    (EXPAND
                                                                     "*")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A"
                                                                       "transpose(vect2matrix(y))")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "columns_transpose")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (TYPEPRED
                                                                                   "vect2matrix(y)")
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (SPLIT)
                      (("1" (TYPEPRED "A")
                        (("1" (ASSERT)
                          (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2" (LEMMA "length_row")
                          (("2" (INST -1 "A" "i")
                            (("2" (ASSERT)
                              (("2" (EXPAND "row")
                                (("2" (REPLACE -1 1)
                                  (("2" (TYPEPRED "A")
                                    (("2" (REPLACE -5 -6)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "mult_length")
              (("2" (INST -1 "A" "y" "n")
                (("2" (ASSERT)
                  (("2" (TYPEPRED "A")
                    (("2" (EXPAND "rows")
                      (("2" (ASSERT)
                        (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_sym-5| "" 3930401065
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (TYPEPRED "A") (("1" (TYPEPRED "n") (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (EXPAND "smat_ip")
        (("2" (LEMMA "dot_to_matrix_mult")
          (("2" (INST?)
            (("1" (REPLACE -1 2)
              (("1" (LEMMA "matrix_vector_to_matrix_mult")
                (("1" (INST -1 "n" "n" "A" "y")
                  (("1" (REPLACE -1 2)
                    (("1" (LEMMA "transpose_transpose")
                      (("1" (INST?)
                        (("1" (REPLACE -1 2)
                          (("1" (LEMMA "transpose_scalar_matrix")
                            (("1"
                              (INST -1
                               "vect2matrix(x) * (A * transpose(vect2matrix(y)))")
                              (("1" (REPLACE -1 2)
                                (("1" (LEMMA "transpose_mult")
                                  (("1" (INST?)
                                    (("1" (SPLIT)
                                      (("1" (REPLACE -1 2)
                                        (("1" (LEMMA "transpose_mult")
                                          (("1"
                                            (INST -1 "A"
                                             "transpose(vect2matrix(y))")
                                            (("1" (SPLIT)
                                              (("1" (REPLACE -1 2)
                                                (("1"
                                                  (LEMMA "transpose_transpose")
                                                  (("1"
                                                    (INST -1 "vect2matrix(y)")
                                                    (("1" (REPLACE -1 2)
                                                      (("1"
                                                        (LEMMA
                                                         "dot_to_matrix_mult")
                                                        (("1"
                                                          (INST -1 "n" "y"
                                                           "A * x")
                                                          (("1" (REPLACE -1 2)
                                                            (("1"
                                                              (LEMMA
                                                               "matrix_vector_to_matrix_mult")
                                                              (("1"
                                                                (INST -1 "n"
                                                                 "n" "A" "x")
                                                                (("1"
                                                                  (REPLACE -1
                                                                           2)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "transpose_transpose")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A * transpose(vect2matrix(x))")
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1 2)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("1"
                                                                            (LEMMA
                                                                             "matrix_mult_assoc")
                                                                            (("1"
                                                                              (HIDE
                                                                               -2
                                                                               -3
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "transpose(vect2matrix(x))"
                                                                                 "vect2matrix(y)"
                                                                                 "A")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "*")
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "mult(vect2matrix(y), mult(A, transpose(vect2matrix(x)))) = mult(mult(vect2matrix(y), A), transpose(vect2matrix(x)))")
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -2)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           2)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (TYPEPRED
                                                                                               "A")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "spos_defn?")
                                                                                                (("1"
                                                                                                  (FLATTEN)
                                                                                                  (("1"
                                                                                                    (CASE
                                                                                                        "transpose(A) = A")
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (HIDE
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3
                                                                                                       -4
                                                                                                       -5
                                                                                                       -6
                                                                                                       -7
                                                                                                       -8
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (LEMMA
                                                                                                         "full_matrix_eq")
                                                                                                        (("2"
                                                                                                          (INST?)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (LEMMA
                                                                                                               "rows_transpose")
                                                                                                              (("2"
                                                                                                                (INST?)
                                                                                                                (("2"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (LEMMA
                                                                                                                     "columns_transpose")
                                                                                                                    (("2"
                                                                                                                      (INST?)
                                                                                                                      (("2"
                                                                                                                        (REPLACE
                                                                                                                         -1
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (TYPEPRED
                                                                                                                           "A")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (SKEEP)
                                                                                                                              (("2"
                                                                                                                                (LEMMA
                                                                                                                                 "entry_transpose")
                                                                                                                                (("2"
                                                                                                                                  (INST?)
                                                                                                                                  (("2"
                                                                                                                                    (REPLACE
                                                                                                                                     -1
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (LEMMA
                                                                                                                                       "sym_entry_def_forward")
                                                                                                                                      (("2"
                                                                                                                                        (INST
                                                                                                                                         -1
                                                                                                                                         "A")
                                                                                                                                        (("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("2"
                                                                                                                                            (EXPAND
                                                                                                                                             "spos_defn?")
                                                                                                                                            (("2"
                                                                                                                                              (FLATTEN)
                                                                                                                                              (("2"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("2"
                                                                                                                                                  (INST
                                                                                                                                                   -1
                                                                                                                                                   "j"
                                                                                                                                                   "i")
                                                                                                                                                  NIL
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (HIDE -1 -2
                                                                   -3 -4 -5 -6
                                                                   -7 -8 3)
                                                                  (("2" (SPLIT)
                                                                    (("1"
                                                                      (TYPEPRED
                                                                       "A")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "rows")
                                                                        (("1"
                                                                          (PROPAX)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKEEP)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "length_row")
                                                                        (("2"
                                                                          (INST?)
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "i")
                                                                            (("2"
                                                                              (TYPEPRED
                                                                               "i")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "row")
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     -2
                                                                                     1)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "full_matrix_columns")
                                                                                      (("2"
                                                                                        (INST?)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (HIDE -1 -2 -3 -4
                                                             -5 -6 -7 3)
                                                            (("2"
                                                              (LEMMA
                                                               "mult_length")
                                                              (("2"
                                                                (INST -1 "A"
                                                                 "x" "n")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (TYPEPRED
                                                                     "A")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "rows")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("2"
                                                                            (PROPAX)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -2 -3 -4 -5 3)
                                                (("2" (LEMMA "rows_transpose")
                                                  (("2" (INST?)
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (HIDE -1)
                                                        (("2"
                                                          (LEMMA
                                                           "full_matrix_columns")
                                                          (("2" (INST -1 "A")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE -1 -2 -3 -4 3)
                                        (("2" (EXPAND "*")
                                          (("2" (LEMMA "rows_mult")
                                            (("2"
                                              (INST -1 "A"
                                               "transpose(vect2matrix(y))")
                                              (("2" (EXPAND "*")
                                                (("2" (REPLACE -1 1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (SKEEP)
                                  (("2" (ASSERT)
                                    (("2" (HIDE -1 -2 -3 3)
                                      (("2" (LEMMA "length_row")
                                        (("2"
                                          (INST -1
                                           "vect2matrix(x) * (A * transpose(vect2matrix(y)))"
                                           "i")
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "row")
                                              (("2" (REPLACE -1 1)
                                                (("2" (HIDE -1)
                                                  (("2" (EXPAND "*")
                                                    (("2"
                                                      (LEMMA "columns_mult")
                                                      (("2"
                                                        (INST -1
                                                         "vect2matrix(x)"
                                                         "mult(A, transpose(vect2matrix(y)))")
                                                        (("2" (ASSERT)
                                                          (("2" (SPLIT)
                                                            (("1" (EXPAND "*")
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1"
                                                                  (LEMMA
                                                                   "columns_mult")
                                                                  (("1"
                                                                    (EXPAND
                                                                     "*")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A"
                                                                       "transpose(vect2matrix(y))")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "columns_transpose")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (TYPEPRED
                                                                                   "vect2matrix(y)")
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (SPLIT)
                      (("1" (TYPEPRED "A")
                        (("1" (ASSERT)
                          (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2" (LEMMA "length_row")
                          (("2" (INST -1 "A" "i")
                            (("2" (ASSERT)
                              (("2" (EXPAND "row")
                                (("2" (REPLACE -1 1)
                                  (("2" (TYPEPRED "A")
                                    (("2" (REPLACE -5 -6)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "mult_length")
              (("2" (INST -1 "A" "y" "n")
                (("2" (ASSERT)
                  (("2" (TYPEPRED "A")
                    (("2" (EXPAND "rows")
                      (("2" (ASSERT)
                        (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_to_matrix_mult| FORMULA-DECL NIL |matrix_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|transpose_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|x| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|transpose_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_row| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
     |matrices| |matrices|)
    (|rows_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|sym_entry_def_forward| FORMULA-DECL NIL |def_symmetric_matrix| NIL)
    (|entry_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|full_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|matrix_mult_assoc| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|rows_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|transpose_scalar_matrix| FORMULA-DECL NIL |matrix_props| NIL)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|transpose| CONST-DECL "PosFullMatrix" |matrices| |matrices|)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
       |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|matrix_vector_to_matrix_mult| FORMULA-DECL NIL |matrix_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (A SKOLEM-CONST-DECL "(spos_defn?(n))" |def_matrix_weighted_inner_prod|
     NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|smat_ip_sym-4| "" 3930140442
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (TYPEPRED "A") (("1" (TYPEPRED "n") (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (EXPAND "smat_ip")
        (("2" (LEMMA "dot_to_matrix_mult")
          (("2" (INST?)
            (("1" (REPLACE -1 2)
              (("1" (LEMMA "matrix_vector_to_matrix_mult")
                (("1" (INST -1 "n" "n" "A" "y")
                  (("1" (REPLACE -1 2)
                    (("1" (LEMMA "transpose_transpose")
                      (("1" (INST?)
                        (("1" (REPLACE -1 2)
                          (("1" (LEMMA "transpose_scalar_matrix")
                            (("1"
                              (INST -1
                               "vect2matrix(x) * (A * transpose(vect2matrix(y)))")
                              (("1" (REPLACE -1 2)
                                (("1" (LEMMA "transpose_mult")
                                  (("1" (INST?)
                                    (("1" (SPLIT)
                                      (("1" (REPLACE -1 2)
                                        (("1" (LEMMA "transpose_mult")
                                          (("1"
                                            (INST -1 "A"
                                             "transpose(vect2matrix(y))")
                                            (("1" (SPLIT)
                                              (("1" (REPLACE -1 2)
                                                (("1"
                                                  (LEMMA "transpose_transpose")
                                                  (("1"
                                                    (INST -1 "vect2matrix(y)")
                                                    (("1" (REPLACE -1 2)
                                                      (("1"
                                                        (LEMMA
                                                         "dot_to_matrix_mult")
                                                        (("1"
                                                          (INST -1 "n" "y"
                                                           "A * x")
                                                          (("1" (REPLACE -1 2)
                                                            (("1"
                                                              (LEMMA
                                                               "matrix_vector_to_matrix_mult")
                                                              (("1"
                                                                (INST -1 "n"
                                                                 "n" "A" "x")
                                                                (("1"
                                                                  (REPLACE -1
                                                                           2)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "transpose_transpose")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A * transpose(vect2matrix(x))")
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1 2)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("1"
                                                                            (LEMMA
                                                                             "matrix_mult_assoc")
                                                                            (("1"
                                                                              (HIDE
                                                                               -2
                                                                               -3
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "transpose(vect2matrix(x))"
                                                                                 "vect2matrix(y)"
                                                                                 "A")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "*")
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "mult(vect2matrix(y), mult(A, transpose(vect2matrix(x)))) = mult(mult(vect2matrix(y), A), transpose(vect2matrix(x)))")
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -2)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           2)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (TYPEPRED
                                                                                               "A")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "spos_defn?")
                                                                                                (("1"
                                                                                                  (FLATTEN)
                                                                                                  (("1"
                                                                                                    (CASE
                                                                                                        "transpose(A) = A")
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (HIDE
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3
                                                                                                       -4
                                                                                                       -5
                                                                                                       -6
                                                                                                       -7
                                                                                                       -8
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (LEMMA
                                                                                                         "full_matrix_eq")
                                                                                                        (("2"
                                                                                                          (INST?)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (LEMMA
                                                                                                               "rows_transpose")
                                                                                                              (("2"
                                                                                                                (INST?)
                                                                                                                (("2"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (LEMMA
                                                                                                                     "columns_transpose")
                                                                                                                    (("2"
                                                                                                                      (INST?)
                                                                                                                      (("2"
                                                                                                                        (REPLACE
                                                                                                                         -1
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (TYPEPRED
                                                                                                                           "A")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (SKEEP)
                                                                                                                              (("2"
                                                                                                                                (LEMMA
                                                                                                                                 "entry_transpose")
                                                                                                                                (("2"
                                                                                                                                  (INST?)
                                                                                                                                  (("2"
                                                                                                                                    (REPLACE
                                                                                                                                     -1
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (LEMMA
                                                                                                                                       "sym_entry_def_forward")
                                                                                                                                      (("2"
                                                                                                                                        (INST
                                                                                                                                         -1
                                                                                                                                         "A")
                                                                                                                                        (("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("2"
                                                                                                                                            (EXPAND
                                                                                                                                             "spos_defn?")
                                                                                                                                            (("2"
                                                                                                                                              (FLATTEN)
                                                                                                                                              (("2"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("2"
                                                                                                                                                  (INST
                                                                                                                                                   -1
                                                                                                                                                   "j"
                                                                                                                                                   "i")
                                                                                                                                                  NIL
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (HIDE -1 -2
                                                                   -3 -4 -5 -6
                                                                   -7 -8 3)
                                                                  (("2" (SPLIT)
                                                                    (("1"
                                                                      (TYPEPRED
                                                                       "A")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "rows")
                                                                        (("1"
                                                                          (PROPAX)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKEEP)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "length_row")
                                                                        (("2"
                                                                          (INST?)
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "i")
                                                                            (("2"
                                                                              (TYPEPRED
                                                                               "i")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "row")
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     -2
                                                                                     1)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "full_matrix_columns")
                                                                                      (("2"
                                                                                        (INST?)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (HIDE -1 -2 -3 -4
                                                             -5 -6 -7 3)
                                                            (("2"
                                                              (LEMMA
                                                               "mult_length")
                                                              (("2"
                                                                (INST -1 "A"
                                                                 "x" "n")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (TYPEPRED
                                                                     "A")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "rows")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("2"
                                                                            (PROPAX)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -2 -3 -4 -5 3)
                                                (("2" (LEMMA "rows_transpose")
                                                  (("2" (INST?)
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (HIDE -1)
                                                        (("2"
                                                          (LEMMA
                                                           "full_matrix_columns")
                                                          (("2" (INST -1 "A")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE -1 -2 -3 -4 3)
                                        (("2" (EXPAND "*")
                                          (("2" (LEMMA "rows_mult")
                                            (("2"
                                              (INST -1 "A"
                                               "transpose(vect2matrix(y))")
                                              (("2" (EXPAND "*")
                                                (("2" (REPLACE -1 1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (SKEEP)
                                  (("2" (ASSERT)
                                    (("2" (HIDE -1 -2 -3 3)
                                      (("2" (LEMMA "length_row")
                                        (("2"
                                          (INST -1
                                           "vect2matrix(x) * (A * transpose(vect2matrix(y)))"
                                           "i")
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "row")
                                              (("2" (REPLACE -1 1)
                                                (("2" (HIDE -1)
                                                  (("2" (EXPAND "*")
                                                    (("2"
                                                      (LEMMA "columns_mult")
                                                      (("2"
                                                        (INST -1
                                                         "vect2matrix(x)"
                                                         "mult(A, transpose(vect2matrix(y)))")
                                                        (("2" (ASSERT)
                                                          (("2" (SPLIT)
                                                            (("1" (EXPAND "*")
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1"
                                                                  (LEMMA
                                                                   "columns_mult")
                                                                  (("1"
                                                                    (EXPAND
                                                                     "*")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A"
                                                                       "transpose(vect2matrix(y))")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "columns_transpose")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (TYPEPRED
                                                                                   "vect2matrix(y)")
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (SPLIT)
                      (("1" (TYPEPRED "A")
                        (("1" (ASSERT)
                          (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2" (LEMMA "length_row")
                          (("2" (INST -1 "A" "i")
                            (("2" (ASSERT)
                              (("2" (EXPAND "row")
                                (("2" (REPLACE -1 1)
                                  (("2" (TYPEPRED "A")
                                    (("2" (REPLACE -5 -6)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "mult_length")
              (("2" (INST -1 "A" "y" "n")
                (("2" (ASSERT)
                  (("2" (TYPEPRED "A")
                    (("2" (EXPAND "rows")
                      (("2" (ASSERT)
                        (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_to_matrix_mult| FORMULA-DECL NIL |matrix_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|transpose_transpose| FORMULA-DECL NIL |matrices| |matrices|) NIL
    (|transpose_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_row| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
     |matrices| |matrices|)
    (|rows_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|sym_entry_def_forward| FORMULA-DECL NIL |def_symmetric_matrix| NIL)
    (|entry_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|full_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|matrix_mult_assoc| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|rows_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|transpose_scalar_matrix| FORMULA-DECL NIL |matrix_props| NIL)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|transpose| CONST-DECL "PosFullMatrix" |matrices| |matrices|)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
       |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|matrix_vector_to_matrix_mult| FORMULA-DECL NIL |matrix_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|) NIL
    NIL (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL) NIL)
   SHOSTAK)
  (|smat_ip_sym-3| "" 3929694517
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (TYPEPRED "A") (("1" (TYPEPRED "n") (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (EXPAND "smat_ip")
        (("2" (LEMMA "dot_to_matrix_mult")
          (("2" (INST?)
            (("1" (REPLACE -1 2)
              (("1" (LEMMA "matrix_vector_to_matrix_mult")
                (("1" (INST -1 "n" "n" "A" "y")
                  (("1" (REPLACE -1 2)
                    (("1" (LEMMA "transpose_transpose")
                      (("1" (INST?)
                        (("1" (REPLACE -1 2)
                          (("1" (LEMMA "transpose_scalar_matrix")
                            (("1"
                              (INST -1
                               "vect2matrix(x) * (A * transpose(vect2matrix(y)))")
                              (("1" (REPLACE -1 2)
                                (("1" (LEMMA "transpose_mult")
                                  (("1" (INST?)
                                    (("1" (SPLIT)
                                      (("1" (REPLACE -1 2)
                                        (("1" (LEMMA "transpose_mult")
                                          (("1"
                                            (INST -1 "A"
                                             "transpose(vect2matrix(y))")
                                            (("1" (SPLIT)
                                              (("1" (REPLACE -1 2)
                                                (("1"
                                                  (LEMMA "transpose_transpose")
                                                  (("1"
                                                    (INST -1 "vect2matrix(y)")
                                                    (("1" (REPLACE -1 2)
                                                      (("1"
                                                        (LEMMA
                                                         "dot_to_matrix_mult")
                                                        (("1"
                                                          (INST -1 "n" "y"
                                                           "A * x")
                                                          (("1" (REPLACE -1 2)
                                                            (("1"
                                                              (LEMMA
                                                               "matrix_vector_to_matrix_mult")
                                                              (("1"
                                                                (INST -1 "n"
                                                                 "n" "A" "x")
                                                                (("1"
                                                                  (REPLACE -1
                                                                           2)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "transpose_transpose")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A * transpose(vect2matrix(x))")
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1 2)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("1"
                                                                            (LEMMA
                                                                             "matrix_mult_assoc")
                                                                            (("1"
                                                                              (HIDE
                                                                               -2
                                                                               -3
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "transpose(vect2matrix(x))"
                                                                                 "vect2matrix(y)"
                                                                                 "A")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "*")
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "mult(vect2matrix(y), mult(A, transpose(vect2matrix(x)))) = mult(mult(vect2matrix(y), A), transpose(vect2matrix(x)))")
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -2)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           2)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (TYPEPRED
                                                                                               "A")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "spos_defn?")
                                                                                                (("1"
                                                                                                  (FLATTEN)
                                                                                                  (("1"
                                                                                                    (CASE
                                                                                                        "transpose(A) = A")
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (HIDE
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3
                                                                                                       -4
                                                                                                       -5
                                                                                                       -6
                                                                                                       -7
                                                                                                       -8
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (LEMMA
                                                                                                         "full_matrix_eq")
                                                                                                        (("2"
                                                                                                          (INST?)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (LEMMA
                                                                                                               "rows_transpose")
                                                                                                              (("2"
                                                                                                                (INST?)
                                                                                                                (("2"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (LEMMA
                                                                                                                     "columns_transpose")
                                                                                                                    (("2"
                                                                                                                      (INST?)
                                                                                                                      (("2"
                                                                                                                        (REPLACE
                                                                                                                         -1
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (TYPEPRED
                                                                                                                           "A")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (SKEEP)
                                                                                                                              (("2"
                                                                                                                                (LEMMA
                                                                                                                                 "entry_transpose")
                                                                                                                                (("2"
                                                                                                                                  (INST?)
                                                                                                                                  (("2"
                                                                                                                                    (REPLACE
                                                                                                                                     -1
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (LEMMA
                                                                                                                                       "sym_entry_def_forward")
                                                                                                                                      (("2"
                                                                                                                                        (INST
                                                                                                                                         -1
                                                                                                                                         "A")
                                                                                                                                        (("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("2"
                                                                                                                                            (EXPAND
                                                                                                                                             "spos_defn?")
                                                                                                                                            (("2"
                                                                                                                                              (FLATTEN)
                                                                                                                                              (("2"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("2"
                                                                                                                                                  (INST
                                                                                                                                                   -1
                                                                                                                                                   "j"
                                                                                                                                                   "i")
                                                                                                                                                  NIL
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (HIDE -1 -2
                                                                   -3 -4 -5 -6
                                                                   -7 -8 3)
                                                                  (("2" (SPLIT)
                                                                    (("1"
                                                                      (TYPEPRED
                                                                       "A")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "rows")
                                                                        (("1"
                                                                          (PROPAX)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKEEP)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "length_row")
                                                                        (("2"
                                                                          (INST?)
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "i")
                                                                            (("2"
                                                                              (TYPEPRED
                                                                               "i")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "row")
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     -2
                                                                                     1)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "full_matrix_columns")
                                                                                      (("2"
                                                                                        (INST?)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (HIDE -1 -2 -3 -4
                                                             -5 -6 -7 3)
                                                            (("2"
                                                              (LEMMA
                                                               "mult_length")
                                                              (("2"
                                                                (INST -1 "A"
                                                                 "x" "n")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (TYPEPRED
                                                                     "A")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "rows")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("2"
                                                                            (PROPAX)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -2 -3 -4 -5 3)
                                                (("2" (LEMMA "rows_transpose")
                                                  (("2" (INST?)
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (HIDE -1)
                                                        (("2"
                                                          (LEMMA
                                                           "full_matrix_columns")
                                                          (("2" (INST -1 "A")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE -1 -2 -3 -4 3)
                                        (("2" (EXPAND "*")
                                          (("2" (LEMMA "rows_mult")
                                            (("2"
                                              (INST -1 "A"
                                               "transpose(vect2matrix(y))")
                                              (("2" (EXPAND "*")
                                                (("2" (REPLACE -1 1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (SKEEP)
                                  (("2" (ASSERT)
                                    (("2" (HIDE -1 -2 -3 3)
                                      (("2" (LEMMA "length_row")
                                        (("2"
                                          (INST -1
                                           "vect2matrix(x) * (A * transpose(vect2matrix(y)))"
                                           "i")
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "row")
                                              (("2" (REPLACE -1 1)
                                                (("2" (HIDE -1)
                                                  (("2" (EXPAND "*")
                                                    (("2"
                                                      (LEMMA "columns_mult")
                                                      (("2"
                                                        (INST -1
                                                         "vect2matrix(x)"
                                                         "mult(A, transpose(vect2matrix(y)))")
                                                        (("2" (ASSERT)
                                                          (("2" (SPLIT)
                                                            (("1" (EXPAND "*")
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1"
                                                                  (LEMMA
                                                                   "columns_mult")
                                                                  (("1"
                                                                    (EXPAND
                                                                     "*")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A"
                                                                       "transpose(vect2matrix(y))")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "columns_transpose")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (TYPEPRED
                                                                                   "vect2matrix(y)")
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (SPLIT)
                      (("1" (TYPEPRED "A")
                        (("1" (ASSERT)
                          (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2" (LEMMA "length_row")
                          (("2" (INST -1 "A" "i")
                            (("2" (ASSERT)
                              (("2" (EXPAND "row")
                                (("2" (REPLACE -1 1)
                                  (("2" (TYPEPRED "A")
                                    (("2" (REPLACE -5 -6)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "mult_length")
              (("2" (INST -1 "A" "y" "n")
                (("2" (ASSERT)
                  (("2" (TYPEPRED "A")
                    (("2" (EXPAND "rows")
                      (("2" (ASSERT)
                        (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_to_matrix_mult| FORMULA-DECL NIL |matrix_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|transpose_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|transpose_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_row| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
     |matrices| |matrices|)
    (|rows_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|sym_entry_def_forward| FORMULA-DECL NIL |def_symmetric_matrix| NIL)
    (|entry_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|full_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|matrix_mult_assoc| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|rows_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|transpose_scalar_matrix| FORMULA-DECL NIL |matrix_props| NIL)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|transpose| CONST-DECL "PosFullMatrix" |matrices| |matrices|)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
       |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|matrix_vector_to_matrix_mult| FORMULA-DECL NIL |matrix_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK)
  (|smat_ip_sym-2| "" 3929693635
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (TYPEPRED "A") (("1" (TYPEPRED "n") (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (EXPAND "smat_ip")
        (("2" (LEMMA "dot_to_matrix_mult")
          (("2" (INST?)
            (("1" (REPLACE -1 2)
              (("1" (LEMMA "matrix_vector_to_matrix_mult")
                (("1" (INST -1 "n" "n" "A" "y")
                  (("1" (REPLACE -1 2)
                    (("1" (LEMMA "transpose_transpose")
                      (("1" (INST?)
                        (("1" (REPLACE -1 2)
                          (("1" (LEMMA "transpose_scalar_matrix")
                            (("1"
                              (INST -1
                               "vect2matrix(x) * (A * transpose(vect2matrix(y)))")
                              (("1" (REPLACE -1 2)
                                (("1" (LEMMA "transpose_mult")
                                  (("1" (INST?)
                                    (("1" (SPLIT)
                                      (("1" (REPLACE -1 2)
                                        (("1" (LEMMA "transpose_mult")
                                          (("1"
                                            (INST -1 "A"
                                             "transpose(vect2matrix(y))")
                                            (("1" (SPLIT)
                                              (("1" (REPLACE -1 2)
                                                (("1"
                                                  (LEMMA "transpose_transpose")
                                                  (("1"
                                                    (INST -1 "vect2matrix(y)")
                                                    (("1" (REPLACE -1 2)
                                                      (("1"
                                                        (LEMMA
                                                         "dot_to_matrix_mult")
                                                        (("1"
                                                          (INST -1 "n" "y"
                                                           "A * x")
                                                          (("1" (REPLACE -1 2)
                                                            (("1"
                                                              (LEMMA
                                                               "matrix_vector_to_matrix_mult")
                                                              (("1"
                                                                (INST -1 "n"
                                                                 "n" "A" "x")
                                                                (("1"
                                                                  (REPLACE -1
                                                                           2)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "transpose_transpose")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A * transpose(vect2matrix(x))")
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1 2)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("1"
                                                                            (LEMMA
                                                                             "matrix_mult_assoc")
                                                                            (("1"
                                                                              (HIDE
                                                                               -2
                                                                               -3
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "transpose(vect2matrix(x))"
                                                                                 "vect2matrix(y)"
                                                                                 "A")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "*")
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "mult(vect2matrix(y), mult(A, transpose(vect2matrix(x)))) = mult(mult(vect2matrix(y), A), transpose(vect2matrix(x)))")
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -2)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           2)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (LEMMA
                                                                                               "entry_mult")
                                                                                              (("1"
                                                                                                (INST
                                                                                                 -1
                                                                                                 "mult(vect2matrix(y), transpose(A))"
                                                                                                 "transpose(vect2matrix(x))"
                                                                                                 "0"
                                                                                                 "0")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (LEMMA
                                                                                                     "rows_mult")
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "*")
                                                                                                      (("1"
                                                                                                        (INST?)
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -1
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (TYPEPRED
                                                                                                             "vect2matrix(y)")
                                                                                                            (("1"
                                                                                                              (HIDE
                                                                                                               -1
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (EXPAND
                                                                                                                   "entry")
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "row")
                                                                                                                    (("1"
                                                                                                                      (EXPAND
                                                                                                                       "access")
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        (("1"
                                                                                                                          (LEMMA
                                                                                                                           "length_row")
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             -1
                                                                                                                             "mult(mult(vect2matrix(y), transpose(A)),
                          transpose(vect2matrix(x)))"
                                                                                                                             "0")
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 "row")
                                                                                                                                (("1"
                                                                                                                                  (REPLACE
                                                                                                                                   -1
                                                                                                                                   -7)
                                                                                                                                  (("1"
                                                                                                                                    (LEMMA
                                                                                                                                     "columns_mult")
                                                                                                                                    (("1"
                                                                                                                                      (INST
                                                                                                                                       -1
                                                                                                                                       "mult(vect2matrix(y), transpose(A))"
                                                                                                                                       "transpose(vect2matrix(x))")
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("1"
                                                                                                                                          (SPLIT)
                                                                                                                                          (("1"
                                                                                                                                            (EXPAND
                                                                                                                                             "*")
                                                                                                                                            (("1"
                                                                                                                                              (REPLACE
                                                                                                                                               -1
                                                                                                                                               -8)
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (REPLACE
                                                                                                                                                   -8
                                                                                                                                                   2)
                                                                                                                                                  (("1"
                                                                                                                                                    (POSTPONE)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (POSTPONE)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (POSTPONE)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (POSTPONE)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (POSTPONE) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (POSTPONE) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (POSTPONE) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (POSTPONE) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (POSTPONE) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (POSTPONE) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_sym-0| "" 3929693352
   ("" (SKEEP)
    (("" (CASE "null?(A)")
      (("1" (TYPEPRED "A") (("1" (TYPEPRED "n") (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (EXPAND "smat_ip")
        (("2" (LEMMA "dot_to_matrix_mult")
          (("2" (INST?)
            (("1" (REPLACE -1 2)
              (("1" (LEMMA "matrix_vector_to_matrix_mult")
                (("1" (INST -1 "n" "n" "A" "y")
                  (("1" (REPLACE -1 2)
                    (("1" (LEMMA "transpose_transpose")
                      (("1" (INST?)
                        (("1" (REPLACE -1 2)
                          (("1" (LEMMA "transpose_scalar_matrix")
                            (("1"
                              (INST -1
                               "vect2matrix(x) * (A * transpose(vect2matrix(y)))")
                              (("1" (REPLACE -1 2)
                                (("1" (LEMMA "transpose_mult")
                                  (("1" (INST?)
                                    (("1" (SPLIT)
                                      (("1" (REPLACE -1 2)
                                        (("1" (LEMMA "transpose_mult")
                                          (("1"
                                            (INST -1 "A"
                                             "transpose(vect2matrix(y))")
                                            (("1" (SPLIT)
                                              (("1" (REPLACE -1 2)
                                                (("1"
                                                  (LEMMA "transpose_transpose")
                                                  (("1"
                                                    (INST -1 "vect2matrix(y)")
                                                    (("1" (REPLACE -1 2)
                                                      (("1"
                                                        (LEMMA
                                                         "dot_to_matrix_mult")
                                                        (("1"
                                                          (INST -1 "n" "y"
                                                           "A * x")
                                                          (("1" (REPLACE -1 2)
                                                            (("1"
                                                              (LEMMA
                                                               "matrix_vector_to_matrix_mult")
                                                              (("1"
                                                                (INST -1 "n"
                                                                 "n" "A" "x")
                                                                (("1"
                                                                  (REPLACE -1
                                                                           2)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "transpose_transpose")
                                                                    (("1"
                                                                      (INST -1
                                                                       "A * transpose(vect2matrix(x))")
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1 2)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "*")
                                                                          (("1"
                                                                            (LEMMA
                                                                             "matrix_mult_assoc")
                                                                            (("1"
                                                                              (HIDE
                                                                               -2
                                                                               -3
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "transpose(vect2matrix(x))"
                                                                                 "vect2matrix(y)"
                                                                                 "A")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "*")
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "mult(vect2matrix(y), mult(A, transpose(vect2matrix(x)))) = mult(mult(vect2matrix(y), A), transpose(vect2matrix(x)))")
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -2)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           2)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (POSTPONE)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (POSTPONE)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (POSTPONE)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (POSTPONE) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (POSTPONE) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (POSTPONE) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (POSTPONE) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (POSTPONE) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (POSTPONE) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_to_matrix_mult| FORMULA-DECL NIL |matrix_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|transpose_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|transpose_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_row| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
     |matrices| |matrices|)
    (|rows_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|sym_entry_def_forward| FORMULA-DECL NIL |def_symmetric_matrix| NIL)
    (|entry_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns_transpose| FORMULA-DECL NIL |matrices| |matrices|)
    (|full_matrix_eq| FORMULA-DECL NIL |matrices| |matrices|)
    (|matrix_mult_assoc| FORMULA-DECL NIL |matrices| |matrices|)
    (|mult_length| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|rows_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|columns_mult| FORMULA-DECL NIL |matrices| |matrices|)
    (|access| CONST-DECL "real" |matrices| |matrices|)
    (|array2list| CONST-DECL
     "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list|
     |structures|)
    (|array2list_it| DEF-DECL
     "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}"
     |array2list| |structures|)
    (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}"
     |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices|
     |matrices|)
    (|transpose_scalar_matrix| FORMULA-DECL NIL |matrix_props| NIL)
    (|vect2matrix| CONST-DECL
     "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices|
     |matrices|)
    (|transpose| CONST-DECL "PosFullMatrix" |matrices| |matrices|)
    (* CONST-DECL "{A: MatrixMN(rows(M), columns(N)) |
   FORALL (i: nat, j: nat): entry(A)(i, j) = row(M)(i) * col(N)(j)}"
       |matrices| |matrices|)
    (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|entry| CONST-DECL "real" |matrices| |matrices|)
    (|mult_full| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|)
    (|matrix_vector_to_matrix_mult| FORMULA-DECL NIL |matrix_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK)
  (|smat_ip_sym-1| NIL 3929456411 ("" (POSTPONE) NIL NIL) NIL SHOSTAK))
 (|smat_ip_0| 3
  (|smat_ip_0-4| "" 3930401486
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "zero_vec(n)" "mult(A, zero_vec(n))")
              (("" (EXPAND "*")
                (("" (REPLACE -1 1)
                  (("" (LEMMA "dot_zero")
                    (("" (INST -1 "mult(A, zero_vec(n))" "n")
                      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_0-3| "" 3930401066
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "zero_vec(n)" "mult(A, zero_vec(n))")
              (("" (EXPAND "*")
                (("" (REPLACE -1 1)
                  (("" (LEMMA "dot_zero")
                    (("" (INST -1 "mult(A, zero_vec(n))" "n")
                      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_0-0| "" 3930140448
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "zero_vec(n)" "mult(A, zero_vec(n))")
              (("" (EXPAND "*")
                (("" (REPLACE -1 1)
                  (("" (LEMMA "dot_zero")
                    (("" (INST -1 "mult(A, zero_vec(n))" "n")
                      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_0-2| "" 3929458152
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_commutes")
            (("" (INST -1 "zero_vec(n)" "mult(A, zero_vec(n))")
              (("" (EXPAND "*")
                (("" (REPLACE -1 1)
                  (("" (LEMMA "dot_zero")
                    (("" (INST -1 "mult(A, zero_vec(n))" "n")
                      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (A SKOLEM-CONST-DECL "(spos_defn?(n))" |def_matrix_weighted_inner_prod|
     NIL)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK)
  (|smat_ip_0-1| NIL 3929458100 ("" (POSTPONE) NIL NIL)
   ((* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK))
 (|smat_ip_geq_0| 3
  (|smat_ip_geq_0-4| "" 3930401487
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (TYPEPRED "A")
        (("" (HIDE -1 -2 -3 -4 -5 -6)
          (("" (EXPAND "spos_defn?")
            (("" (FLATTEN) (("" (INST?) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_geq_0-3| "" 3930401067
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (TYPEPRED "A")
        (("" (HIDE -1 -2 -3 -4 -5 -6)
          (("" (EXPAND "spos_defn?")
            (("" (FLATTEN) (("" (INST?) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_geq_0-2| "" 3930140453
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (TYPEPRED "A")
        (("" (HIDE -1 -2 -3 -4 -5 -6)
          (("" (EXPAND "spos_defn?")
            (("" (FLATTEN) (("" (INST?) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|smat_ip_geq_0-0| "" 3929458183
   ("" (SKEEP)
    (("" (EXPAND "smat_ip")
      (("" (TYPEPRED "A")
        (("" (HIDE -1 -2 -3 -4 -5 -6)
          (("" (EXPAND "spos_defn?")
            (("" (FLATTEN) (("" (INST?) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|smat_ip_geq_0-1| NIL 3929458156 ("" (POSTPONE) NIL NIL)
   ((|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|mat_ip_TCC1| 1
  (|mat_ip_TCC1-5| "" 3930401077
   ("" (SKEEP)
    (("" (EXPAND "spos_defn?")
      (("" (CASE "sym?(A)")
        (("1" (ASSERT)
          (("1" (SKEEP)
            (("1" (TYPEPRED "A")
              (("1" (ASSERT)
                (("1" (EXPAND "pos_defn?")
                  (("1" (CASE "x!1 = zero_vec(n)")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST?)
                          (("1" (REPLACE -1 1)
                            (("1" (LEMMA "dot_zero")
                              (("1" (INST?)
                                (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (INST -7 "x!1") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (TYPEPRED "A")
            (("2" (EXPAND "pos_defn?") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|mat_ip| SUBTYPE "def_matrix_weighted_inner_prod.A"
    "(def_positive_definite.spos_defn?(def_matrix_weighted_inner_prod.n))"))
  (|mat_ip_TCC1-4| "" 3929694946
   ("" (SKEEP)
    (("" (EXPAND "spos_defn?")
      (("" (CASE "sym?(A)")
        (("1" (ASSERT)
          (("1" (SKEEP)
            (("1" (TYPEPRED "A")
              (("1" (ASSERT)
                (("1" (EXPAND "pos_defn?")
                  (("1" (CASE "x!1 = zero_vec(n)")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST?)
                          (("1" (REPLACE -1 1)
                            (("1" (LEMMA "dot_zero")
                              (("1" (INST?)
                                (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (INST -7 "x!1") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (TYPEPRED "A")
            (("2" (EXPAND "pos_defn?") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) NIL NIL
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|sym_forall?| CONST-DECL "bool" |def_symmetric_matrix| NIL)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL)
   SHOSTAK
   (|mat_ip| SUBTYPE "def_matrix_weighted_inner_prod.A"
    "(def_positive_definite.spos_defn?(def_matrix_weighted_inner_prod.n))"))
  (|mat_ip_TCC1-3| "" 3929694778
   ("" (SKEEP)
    (("" (EXPAND "spos_defn?")
      (("" (SPLIT)
        (("1" (TYPEPRED "A")
          (("1" (EXPAND "pos_defn?") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (SKEEP)
          (("2" (ASSERT)
            (("2" (TYPEPRED "A")
              (("2" (EXPAND "pos_defn?")
                (("2" (FLATTEN)
                  (("2" (INST -8 "x!1")
                    (("1" (ASSERT) NIL NIL)
                     ("2" (ASSERT)
                      (("2" (TYPEPRED "x!1")
                        (("2" (ASSERT) (("2" (POSTPONE) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|mat_ip| SUBTYPE "def_matrix_weighted_inner_prod.A"
    "(def_positive_definite.spos_defn?(def_matrix_weighted_inner_prod.n))"))
  (|mat_ip_TCC1-2| "" 3929518274
   ("" (SKEEP)
    (("" (EXPAND "spos_defn?")
      (("" (SPLIT)
        (("1" (EXPAND "sym?")
          (("1" (EXPAND "init_sym?")
            (("1" (SPLIT) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL))
              NIL))
            NIL))
          NIL)
         ("2" (POSTPONE) NIL NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|mat_ip| SUBTYPE "def_matrix_weighted_inner_prod.A"
    "(def_positive_definite.spos_defn?(def_matrix_weighted_inner_prod.n))"))
  (|mat_ip_TCC1-0| "" 3929516366
   ("" (SUBTYPE-TCC)
    (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)
     ("4" (POSTPONE) NIL NIL))
    NIL)
   NIL SHOSTAK
   (|mat_ip| SUBTYPE "def_matrix_weighted_inner_prod.A"
    "(def_positive_definite.spos_defn?(def_matrix_weighted_inner_prod.n))"))
  (|mat_ip_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|sym_forall?| CONST-DECL "bool" |def_symmetric_matrix| NIL)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL
   (|mat_ip| SUBTYPE "def_matrix_weighted_inner_prod.A"
    "(def_positive_definite.spos_defn?(def_matrix_weighted_inner_prod.n))")))
 (|mat_ip_scal_left_TCC1| 1
  (|mat_ip_scal_left_TCC1-2| "" 3930401078 ("" (SUBTYPE-TCC) NIL NIL) NIL
   SHOSTAK
   (|mat_ip_scal_left| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.x)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|mat_ip_scal_left_TCC1-0| "" 3929516366 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK
   (|mat_ip_scal_left| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.x)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|mat_ip_scal_left_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|mat_ip_scal_left| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.x)"
    "VectorN(def_matrix_weighted_inner_prod.n)")))
 (|mat_ip_scal_left| 0
  (|mat_ip_scal_left-5| "" 3930401488
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "asso_dot")
            (("" (INST?)
              (("" (INST -1 "x" "mult(A, y)")
                (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_scal_left-4| "" 3930401067
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "asso_dot")
            (("" (INST?)
              (("" (INST -1 "x" "mult(A, y)")
                (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (A SKOLEM-CONST-DECL "(pos_defn?(n))" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|mat_ip_scal_left-3| "" 3930140458
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "asso_dot")
            (("" (INST?)
              (("" (INST -1 "x" "mult(A, y)")
                (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL) NIL
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL) NIL)
   SHOSTAK)
  (|mat_ip_scal_left-2| "" 3929516456
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "asso_dot")
            (("" (INST?)
              (("" (INST -1 "x" "mult(A, y)")
                (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK)
  (|mat_ip_scal_left-0| "" 3929458096 ("" (POSTPONE) NIL NIL) NIL SHOSTAK)
  (|mat_ip_scal_left-1| NIL 3929458095 ("" (POSTPONE) NIL NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK))
 (|mat_ip_scal_right_TCC1| 1
  (|mat_ip_scal_right_TCC1-2| "" 3930401078 ("" (SUBTYPE-TCC) NIL NIL) NIL
   SHOSTAK
   (|mat_ip_scal_right| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.y)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|mat_ip_scal_right_TCC1-0| "" 3929516367 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK
   (|mat_ip_scal_right| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.y)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|mat_ip_scal_right_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|mat_ip_scal_right| SUBTYPE
    "matrices.*(def_matrix_weighted_inner_prod.c, def_matrix_weighted_inner_prod.y)"
    "VectorN(def_matrix_weighted_inner_prod.n)")))
 (|mat_ip_scal_right| 0
  (|mat_ip_scal_right-5| "" 3930401489
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "mmult_scal")
            (("" (INST -1 "n" "n" "A" "y" "c")
              (("1" (EXPAND "*")
                (("1" (EXPAND "mult" -1)
                  (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "x" "scal(c, mult(A, y))")
                          (("1" (EXPAND "*")
                            (("1" (REPLACE -1 1)
                              (("1" (LEMMA "asso_dot")
                                (("1" (INST -1 "c" "mult(A, y)" "x")
                                  (("1" (EXPAND "*")
                                    (("1" (REPLACE -1 1)
                                      (("1" (LEMMA "dot_commutes")
                                        (("1" (INST -1 "mult(A, y)" "x")
                                          (("1" (EXPAND "*")
                                            (("1" (REPLACE -1 1)
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SPLIT)
                (("1" (TYPEPRED "A")
                  (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
                 ("2" (TYPEPRED "A")
                  (("2" (SKEEP)
                    (("2" (HIDE -1)
                      (("2" (CASE "null?(A)")
                        (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                         ("2" (ASSERT)
                          (("2" (INST -1 "0" "i")
                            (("2" (LEMMA "full_matrix_columns")
                              (("2" (INST -1 "A")
                                (("2" (ASSERT)
                                  (("2" (EXPAND "nth" -2)
                                    (("2" (ASSERT)
                                      (("2" (CASE "i = 0")
                                        (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_scal_right-4| "" 3930401069
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "mmult_scal")
            (("" (INST -1 "n" "n" "A" "y" "c")
              (("1" (EXPAND "*")
                (("1" (EXPAND "mult" -1)
                  (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "x" "scal(c, mult(A, y))")
                          (("1" (EXPAND "*")
                            (("1" (REPLACE -1 1)
                              (("1" (LEMMA "asso_dot")
                                (("1" (INST -1 "c" "mult(A, y)" "x")
                                  (("1" (EXPAND "*")
                                    (("1" (REPLACE -1 1)
                                      (("1" (LEMMA "dot_commutes")
                                        (("1" (INST -1 "mult(A, y)" "x")
                                          (("1" (EXPAND "*")
                                            (("1" (REPLACE -1 1)
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SPLIT)
                (("1" (TYPEPRED "A")
                  (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
                 ("2" (TYPEPRED "A")
                  (("2" (SKEEP)
                    (("2" (HIDE -1)
                      (("2" (CASE "null?(A)")
                        (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                         ("2" (ASSERT)
                          (("2" (INST -1 "0" "i")
                            (("2" (LEMMA "full_matrix_columns")
                              (("2" (INST -1 "A")
                                (("2" (ASSERT)
                                  (("2" (EXPAND "nth" -2)
                                    (("2" (ASSERT)
                                      (("2" (CASE "i = 0")
                                        (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (A SKOLEM-CONST-DECL "(pos_defn?(n))" |def_matrix_weighted_inner_prod| NIL)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mmult_scal| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|mat_ip_scal_right-3| "" 3930140464
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "mmult_scal")
            (("" (INST -1 "n" "n" "A" "y" "c")
              (("1" (EXPAND "*")
                (("1" (EXPAND "mult" -1)
                  (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "x" "scal(c, mult(A, y))")
                          (("1" (EXPAND "*")
                            (("1" (REPLACE -1 1)
                              (("1" (LEMMA "asso_dot")
                                (("1" (INST -1 "c" "mult(A, y)" "x")
                                  (("1" (EXPAND "*")
                                    (("1" (REPLACE -1 1)
                                      (("1" (LEMMA "dot_commutes")
                                        (("1" (INST -1 "mult(A, y)" "x")
                                          (("1" (EXPAND "*")
                                            (("1" (REPLACE -1 1)
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SPLIT)
                (("1" (TYPEPRED "A")
                  (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
                 ("2" (TYPEPRED "A")
                  (("2" (SKEEP)
                    (("2" (HIDE -1)
                      (("2" (CASE "null?(A)")
                        (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                         ("2" (ASSERT)
                          (("2" (INST -1 "0" "i")
                            (("2" (LEMMA "full_matrix_columns")
                              (("2" (INST -1 "A")
                                (("2" (ASSERT)
                                  (("2" (EXPAND "nth" -2)
                                    (("2" (ASSERT)
                                      (("2" (CASE "i = 0")
                                        (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    NIL (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    NIL (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mmult_scal| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL) NIL)
   SHOSTAK)
  (|mat_ip_scal_right-2| "" 3929516947
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip") (("" (EXPAND "*") (("" (POSTPONE) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_scal_right-0| "" 3929516780
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "mmult_scal")
            (("" (INST -1 "n" "n" "A" "y" "c")
              (("1" (EXPAND "*")
                (("1" (EXPAND "mult" -1)
                  (("1" (CASE "mult(A, scal(c, y)) = scal(c, mult(A, y))")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dot_commutes")
                        (("1" (INST -1 "x" "scal(c, mult(A, y))")
                          (("1" (EXPAND "*")
                            (("1" (REPLACE -1 1)
                              (("1" (LEMMA "asso_dot")
                                (("1" (INST -1 "c" "mult(A, y)" "x")
                                  (("1" (EXPAND "*")
                                    (("1" (REPLACE -1 1)
                                      (("1" (LEMMA "dot_commutes")
                                        (("1" (INST -1 "mult(A, y)" "x")
                                          (("1" (EXPAND "*")
                                            (("1" (REPLACE -1 1)
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SPLIT)
                (("1" (TYPEPRED "A")
                  (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
                 ("2" (TYPEPRED "A")
                  (("2" (SKEEP)
                    (("2" (HIDE -1)
                      (("2" (CASE "null?(A)")
                        (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                         ("2" (ASSERT)
                          (("2" (INST -1 "0" "i")
                            (("2" (LEMMA "full_matrix_columns")
                              (("2" (INST -1 "A")
                                (("2" (ASSERT)
                                  (("2" (EXPAND "nth" -2)
                                    (("2" (ASSERT)
                                      (("2" (CASE "i = 0")
                                        (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mmult_scal| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK)
  (|mat_ip_scal_right-1| NIL 3929516459 ("" (POSTPONE) NIL NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|asso_dot| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mmult_scal| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK))
 (|mat_ip_sum_left_TCC1| 0
  (|mat_ip_sum_left_TCC1-0| "" 3930401079
   ("" (SKEEP)
    (("" (TYPEPRED "x + z")
      (("" (HIDE -1)
        (("" (TYPEPRED "x")
          (("" (TYPEPRED "z")
            (("" (HIDE -1 -3)
              (("" (REPLACE -1 -3)
                (("" (REPLACE -2 -3)
                  (("" (EXPAND "max") (("" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|mat_ip_sum_left| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|mat_ip_sum_left_TCC1-2| "" 3929517208
   ("" (SKEEP)
    (("" (TYPEPRED "x + z")
      (("" (HIDE -1)
        (("" (TYPEPRED "x")
          (("" (TYPEPRED "z")
            (("" (HIDE -1 -3)
              (("" (REPLACE -1 -3)
                (("" (REPLACE -2 -3)
                  (("" (EXPAND "max") (("" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL)
   SHOSTAK
   (|mat_ip_sum_left| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|mat_ip_sum_left_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL))
   NIL
   (|mat_ip_sum_left| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)")))
 (|mat_ip_sum_left| 0
  (|mat_ip_sum_left-4| "" 3930401490
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_dist")
            (("" (INST -1 "mult(A, y)" "x" "z")
              (("1" (EXPAND "*")
                (("1" (LEMMA "dot_commutes")
                  (("1" (INST -1 "x + z" "mult(A, y)")
                    (("1" (EXPAND "*")
                      (("1" (REPLACE -1 1)
                        (("1" (REPLACE -2 1)
                          (("1" (HIDE -1 -2)
                            (("1" (LEMMA "dot_commutes")
                              (("1" (INST-CP -1 "mult(A, y)" "x")
                                (("1" (EXPAND "*")
                                  (("1" (REPLACE -2 1)
                                    (("1" (INST -1 "mult(A, y)" "z")
                                      (("1" (REPLACE -1 1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_sum_left-3| "" 3930401070
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_dist")
            (("" (INST -1 "mult(A, y)" "x" "z")
              (("1" (EXPAND "*")
                (("1" (LEMMA "dot_commutes")
                  (("1" (INST -1 "x + z" "mult(A, y)")
                    (("1" (EXPAND "*")
                      (("1" (REPLACE -1 1)
                        (("1" (REPLACE -2 1)
                          (("1" (HIDE -1 -2)
                            (("1" (LEMMA "dot_commutes")
                              (("1" (INST-CP -1 "mult(A, y)" "x")
                                (("1" (EXPAND "*")
                                  (("1" (REPLACE -2 1)
                                    (("1" (INST -1 "mult(A, y)" "z")
                                      (("1" (REPLACE -1 1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (A SKOLEM-CONST-DECL "(pos_defn?(n))" |def_matrix_weighted_inner_prod| NIL)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|mat_ip_sum_left-2| "" 3930140469
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_dist")
            (("" (INST -1 "mult(A, y)" "x" "z")
              (("1" (EXPAND "*")
                (("1" (LEMMA "dot_commutes")
                  (("1" (INST -1 "x + z" "mult(A, y)")
                    (("1" (EXPAND "*")
                      (("1" (REPLACE -1 1)
                        (("1" (REPLACE -2 1)
                          (("1" (HIDE -1 -2)
                            (("1" (LEMMA "dot_commutes")
                              (("1" (INST-CP -1 "mult(A, y)" "x")
                                (("1" (EXPAND "*")
                                  (("1" (REPLACE -2 1)
                                    (("1" (INST -1 "mult(A, y)" "z")
                                      (("1" (REPLACE -1 1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|) NIL
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL) NIL)
   SHOSTAK)
  (|mat_ip_sum_left-0| "" 3929516927
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_dist")
            (("" (INST -1 "mult(A, y)" "x" "z")
              (("1" (EXPAND "*")
                (("1" (LEMMA "dot_commutes")
                  (("1" (INST -1 "x + z" "mult(A, y)")
                    (("1" (EXPAND "*")
                      (("1" (REPLACE -1 1)
                        (("1" (REPLACE -2 1)
                          (("1" (HIDE -1 -2)
                            (("1" (LEMMA "dot_commutes")
                              (("1" (INST-CP -1 "mult(A, y)" "x")
                                (("1" (EXPAND "*")
                                  (("1" (REPLACE -2 1)
                                    (("1" (INST -1 "mult(A, y)" "z")
                                      (("1" (REPLACE -1 1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK)
  (|mat_ip_sum_left-1| NIL 3929516785 ("" (POSTPONE) NIL NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK))
 (|mat_ip_sum_right_TCC1| 0
  (|mat_ip_sum_right_TCC1-2| "" 3930401080
   ("" (SKEEP)
    (("" (TYPEPRED "y + z")
      (("" (HIDE -1)
        (("" (TYPEPRED "y" "z")
          (("" (HIDE -1 -3)
            (("" (REPLACE -1 -3)
              (("" (REPLACE -2 -3)
                (("" (EXPAND "max") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|mat_ip_sum_right| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.y, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|mat_ip_sum_right_TCC1-0| "" 3929517236
   ("" (SKEEP)
    (("" (TYPEPRED "y + z")
      (("" (HIDE -1)
        (("" (TYPEPRED "y" "z")
          (("" (HIDE -1 -3)
            (("" (REPLACE -1 -3)
              (("" (REPLACE -2 -3)
                (("" (EXPAND "max") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL)
   SHOSTAK
   (|mat_ip_sum_right| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.y, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)"))
  (|mat_ip_sum_right_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL))
   NIL
   (|mat_ip_sum_right| SUBTYPE
    "(matrices.+)(def_matrix_weighted_inner_prod.y, def_matrix_weighted_inner_prod.z)"
    "VectorN(def_matrix_weighted_inner_prod.n)")))
 (|mat_ip_sum_right| 0
  (|mat_ip_sum_right-4| "" 3930401492
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (LEMMA "mmult_dist")
          (("" (INST -1 "n" "n" "A" "y" "z")
            (("1" (EXPAND "*")
              (("1" (EXPAND "mult" -1)
                (("1" (REPLACE -1)
                  (("1" (LEMMA "dot_dist")
                    (("1" (INST -1 "x" "mult(A, y)" "mult(A, z)")
                      (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                       ("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "z")
                          (("2" (HIDE -3)
                            (("2" (CASE "null?(A)")
                              (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "A")
                        (("3" (HIDE -1)
                          (("3" (CASE "null?(A)")
                            (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED "A")
                (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED "A")
                  (("2" (HIDE -1)
                    (("2" (CASE "null?(A)")
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (ASSERT)
                        (("2" (INST -1 "0" "i")
                          (("2" (LEMMA "full_matrix_columns")
                            (("2" (INST -1 "A")
                              (("2" (ASSERT)
                                (("2" (EXPAND "nth" -2)
                                  (("2" (ASSERT)
                                    (("2" (CASE "i = 0")
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL)
                                       ("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_sum_right-3| "" 3930401071
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (LEMMA "mmult_dist")
          (("" (INST -1 "n" "n" "A" "y" "z")
            (("1" (EXPAND "*")
              (("1" (EXPAND "mult" -1)
                (("1" (REPLACE -1)
                  (("1" (LEMMA "dot_dist")
                    (("1" (INST -1 "x" "mult(A, y)" "mult(A, z)")
                      (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                       ("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "z")
                          (("2" (HIDE -3)
                            (("2" (CASE "null?(A)")
                              (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "A")
                        (("3" (HIDE -1)
                          (("3" (CASE "null?(A)")
                            (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED "A")
                (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED "A")
                  (("2" (HIDE -1)
                    (("2" (CASE "null?(A)")
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (ASSERT)
                        (("2" (INST -1 "0" "i")
                          (("2" (LEMMA "full_matrix_columns")
                            (("2" (INST -1 "A")
                              (("2" (ASSERT)
                                (("2" (EXPAND "nth" -2)
                                  (("2" (ASSERT)
                                    (("2" (CASE "i = 0")
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL)
                                       ("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|y| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|z| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (A SKOLEM-CONST-DECL "(pos_defn?(n))" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)
  (|mat_ip_sum_right-2| "" 3930140475
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (LEMMA "mmult_dist")
          (("" (INST -1 "n" "n" "A" "y" "z")
            (("1" (EXPAND "*")
              (("1" (EXPAND "mult" -1)
                (("1" (REPLACE -1)
                  (("1" (LEMMA "dot_dist")
                    (("1" (INST -1 "x" "mult(A, y)" "mult(A, z)")
                      (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                       ("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "z")
                          (("2" (HIDE -3)
                            (("2" (CASE "null?(A)")
                              (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "A")
                        (("3" (HIDE -1)
                          (("3" (CASE "null?(A)")
                            (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED "A")
                (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED "A")
                  (("2" (HIDE -1)
                    (("2" (CASE "null?(A)")
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (ASSERT)
                        (("2" (INST -1 "0" "i")
                          (("2" (LEMMA "full_matrix_columns")
                            (("2" (INST -1 "A")
                              (("2" (ASSERT)
                                (("2" (EXPAND "nth" -2)
                                  (("2" (ASSERT)
                                    (("2" (CASE "i = 0")
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL)
                                       ("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|) NIL
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) NIL
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL) NIL
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL) NIL)
   SHOSTAK)
  (|mat_ip_sum_right-0| "" 3929517160
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (LEMMA "mmult_dist")
          (("" (INST -1 "n" "n" "A" "y" "z")
            (("1" (EXPAND "*")
              (("1" (EXPAND "mult" -1)
                (("1" (REPLACE -1)
                  (("1" (LEMMA "dot_dist")
                    (("1" (INST -1 "x" "mult(A, y)" "mult(A, z)")
                      (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                       ("2" (TYPEPRED "A")
                        (("2" (TYPEPRED "z")
                          (("2" (HIDE -3)
                            (("2" (CASE "null?(A)")
                              (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "A")
                        (("3" (HIDE -1)
                          (("3" (CASE "null?(A)")
                            (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT)
              (("1" (TYPEPRED "A")
                (("1" (EXPAND "rows") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
               ("2" (SKEEP)
                (("2" (TYPEPRED "A")
                  (("2" (HIDE -1)
                    (("2" (CASE "null?(A)")
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (ASSERT)
                        (("2" (INST -1 "0" "i")
                          (("2" (LEMMA "full_matrix_columns")
                            (("2" (INST -1 "A")
                              (("2" (ASSERT)
                                (("2" (EXPAND "nth" -2)
                                  (("2" (ASSERT)
                                    (("2" (CASE "i = 0")
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL)
                                       ("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK)
  (|mat_ip_sum_right-1| NIL 3929516948 ("" (POSTPONE) NIL NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|mmult_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |mv_analysis|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|full_matrix_columns| FORMULA-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication|
     |mv_analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK))
 (|mat_ip_sym| 1
  (|mat_ip_sym-4| "" 3930401072
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (LEMMA "smat_ip_sym") (("" (INST?) NIL NIL)) NIL)) NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_sym-3| "" 3929694655
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (LEMMA "smat_ip_sym") (("" (INST?) NIL NIL)) NIL)) NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|smat_ip_sym| FORMULA-DECL NIL |def_matrix_weighted_inner_prod| NIL) NIL)
   SHOSTAK)
  (|mat_ip_sym-2| "" 3929610373
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_to_matrix_mult")
            (("" (INST -1 "n" "x" "mult(A, y)")
              (("1" (EXPAND "*")
                (("1" (REPLACE -1 1)
                  (("1" (HIDE -1)
                    (("1" (LEMMA "transpose_scalar_matrix")
                      (("1"
                        (INST -1
                         "mult(vect2matrix(x), transpose(vect2matrix(mult(A, y))))")
                        (("1" (REPLACE -1 1)
                          (("1" (HIDE -1) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)
                         ("2" (ASSERT)
                          (("2" (SKEEP)
                            (("2" (LEMMA "length_row")
                              (("2"
                                (INST -1
                                 "mult(vect2matrix(x), transpose(vect2matrix(mult(A, y))))"
                                 "i")
                                (("2" (ASSERT)
                                  (("2" (EXPAND "row")
                                    (("2" (REPLACE -1 1)
                                      (("2" (HIDE -1)
                                        (("2" (LEMMA "columns_mult")
                                          (("2"
                                            (INST -1 "vect2matrix(x)"
                                             "transpose(vect2matrix(mult(A, y)))")
                                            (("2" (SPLIT)
                                              (("1" (EXPAND "*")
                                                (("1" (REPLACE -1 1)
                                                  (("1" (HIDE -1)
                                                    (("1"
                                                      (LEMMA
                                                       "columns_transpose")
                                                      (("1" (INST?)
                                                        (("1" (REPLACE -1 1)
                                                          (("1" (HIDE -1 2)
                                                            (("1"
                                                              (TYPEPRED
                                                               "vect2matrix(mult(A, y))")
                                                              (("1" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (GRIND) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (LEMMA "mult_length")
                (("2" (INST?)
                  (("2" (TYPEPRED "y")
                    (("2" (TYPEPRED "n")
                      (("2" (SPLIT)
                        (("1" (PROPAX) NIL NIL)
                         ("2" (HIDE -2)
                          (("2" (TYPEPRED "A")
                            (("2" (EXPAND "rows") (("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|smat_ip_sym| FORMULA-DECL NIL |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK)
  (|mat_ip_sym-0| "" 3929609870
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (LEMMA "dot_to_matrix_mult")
            (("" (INST -1 "n" "x" "mult(A, y)")
              (("1" (EXPAND "*")
                (("1" (REPLACE -1 1)
                  (("1" (HIDE -1)
                    (("1" (LEMMA "transpose_scalar_matrix")
                      (("1"
                        (INST -1
                         "mult(vect2matrix(x), transpose(vect2matrix(mult(A, y))))")
                        (("1" (POSTPONE) NIL NIL)
                         ("2" (ASSERT)
                          (("2" (SKEEP) (("2" (POSTPONE) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (TYPEPRED "mult(A, y)")
                (("2" (ASSERT)
                  (("2" (HIDE -1)
                    (("2" (GRIND)
                      (("2" (LEMMA "mult_length")
                        (("2" (INST?)
                          (("2" (ASSERT)
                            (("2" (GRIND)
                              (("2" (GRIND)
                                (("2" (HIDE 1)
                                  (("2" (LEMMA "mult_length")
                                    (("2" (INST?)
                                      (("2" (ASSERT) (("2" (POSTPONE) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_sym-1| NIL 3929609581 ("" (POSTPONE) NIL NIL) NIL SHOSTAK))
 (|mat_ip_0| 1
  (|mat_ip_0-0| "" 3930401073
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (EXPAND "*")
        (("" (LEMMA "dot_commutes")
          (("" (INST?)
            (("" (INST -1 "mult(A, zero_vec(n))")
              (("" (LEMMA "dot_zero")
                (("" (EXPAND "*")
                  (("" (REPLACE -2 1)
                    (("" (INST -1 "mult(A, zero_vec(n))" "n")
                      (("" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_0-3| "" 3929457717
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (EXPAND "*")
        (("" (LEMMA "dot_commutes")
          (("" (INST?)
            (("" (INST -1 "mult(A, zero_vec(n))")
              (("" (LEMMA "dot_zero")
                (("" (EXPAND "*")
                  (("" (REPLACE -2 1)
                    (("" (INST -1 "mult(A, zero_vec(n))" "n")
                      (("" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) NIL NIL
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|))
   SHOSTAK)
  (|mat_ip_0-1| NIL 3929457632 ("" (POSTPONE) NIL NIL)
   ((|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|))
   SHOSTAK))
 (|mat_ip_geq_0| 1
  (|mat_ip_geq_0-3| "" 3930401073
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (TYPEPRED "A")
          (("" (HIDE -1)
            (("" (EXPAND "pos_defn?")
              (("" (FLATTEN)
                (("" (INST?)
                  (("1" (GRIND) NIL NIL)
                   ("2" (LEMMA "dot_zero")
                    (("2" (EXPAND *)
                      (("2" (LEMMA "dot_commutes")
                        (("2" (INST -1 "x" "mult(A, x)")
                          (("2" (EXPAND *)
                            (("2" (REPLACE -1 2)
                              (("2" (ASSERT)
                                (("2" (CASE "x = zero_vec(n)")
                                  (("1" (REPLACE -1 2)
                                    (("1" (INST?)
                                      (("1" (GRIND) NIL NIL)
                                       ("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_geq_0-2| "" 3929457911
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (TYPEPRED "A")
          (("" (HIDE -1)
            (("" (EXPAND "pos_defn?")
              (("" (FLATTEN)
                (("" (INST?)
                  (("1" (GRIND) NIL NIL)
                   ("2" (LEMMA "dot_zero")
                    (("2" (EXPAND *)
                      (("2" (LEMMA "dot_commutes")
                        (("2" (INST -1 "x" "mult(A, x)")
                          (("2" (EXPAND *)
                            (("2" (REPLACE -1 2)
                              (("2" (ASSERT)
                                (("2" (CASE "x = zero_vec(n)")
                                  (("1" (REPLACE -1 2)
                                    (("1" (INST?)
                                      (("1" (GRIND) NIL NIL)
                                       ("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|) NIL
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|) NIL
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL) NIL)
   SHOSTAK)
  (|mat_ip_geq_0-0| "" 3929457806
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (EXPAND "*")
          (("" (TYPEPRED "A")
            (("" (EXPAND "pos_defn?")
              (("" (FLATTEN)
                (("" (TYPEPRED "x")
                  (("" (HIDE -3)
                    (("" (HIDE -1)
                      (("" (INST?)
                        (("1" (ASSERT)
                          (("1" (EXPAND "*") (("1" (GRIND) NIL NIL)) NIL)) NIL)
                         ("2" (LEMMA "dot_commutes") (("2" (POSTPONE) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_geq_0-1| NIL 3929457724 ("" (POSTPONE) NIL NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK))
 (|mat_ip_gt_0| 1
  (|mat_ip_gt_0-2| "" 3930401074
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (TYPEPRED "A")
          (("" (HIDE -1 -2 -3 -4 -5 -6)
            (("" (EXPAND "pos_defn?")
              (("" (FLATTEN) (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|mat_ip_gt_0-0| "" 3929457945
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (TYPEPRED "A")
          (("" (HIDE -1 -2 -3 -4 -5 -6)
            (("" (EXPAND "pos_defn?")
              (("" (FLATTEN) (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL) NIL NIL
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL) NIL)
   SHOSTAK)
  (|mat_ip_gt_0-1| NIL 3929457914 ("" (POSTPONE) NIL NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   SHOSTAK))
 (|norm_matn_TCC1| 1
  (|norm_matn_TCC1-2| "" 3930401462
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (TYPEPRED "A")
          (("" (EXPAND "pos_defn?")
            (("" (FLATTEN)
              (("" (INST -8 "x")
                (("1" (GRIND) NIL NIL)
                 ("2" (ASSERT)
                  (("2" (CASE "x = zero_vec(n)")
                    (("1" (REPLACE -1 2)
                      (("1" (LEMMA "dot_zero")
                        (("1" (INST?)
                          (("1" (LEMMA "dot_commutes")
                            (("1" (INST -1 "zero_vec(n)" "(A * zero_vec(n))")
                              (("1" (REPLACE -1 2)
                                (("1" (INST -2 "(A * zero_vec(n))")
                                  (("1" (REPLACE -2 2) (("1" (GRIND) NIL NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|norm_matn| SUBTYPE
    "def_matrix_weighted_inner_prod.mat_ip(def_matrix_weighted_inner_prod.n, def_matrix_weighted_inner_prod.A)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.x)"
    "nonneg_real"))
  (|norm_matn_TCC1-0| "" 3929517344
   ("" (SKEEP)
    (("" (EXPAND "mat_ip")
      (("" (EXPAND "smat_ip")
        (("" (TYPEPRED "A")
          (("" (EXPAND "pos_defn?")
            (("" (FLATTEN)
              (("" (INST -8 "x")
                (("1" (GRIND) NIL NIL)
                 ("2" (ASSERT)
                  (("2" (CASE "x = zero_vec(n)")
                    (("1" (REPLACE -1 2)
                      (("1" (LEMMA "dot_zero")
                        (("1" (INST?)
                          (("1" (LEMMA "dot_commutes")
                            (("1" (INST -1 "zero_vec(n)" "(A * zero_vec(n))")
                              (("1" (REPLACE -1 2)
                                (("1" (INST -2 "(A * zero_vec(n))")
                                  (("1" (REPLACE -2 2) (("1" (GRIND) NIL NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (A SKOLEM-CONST-DECL "(pos_defn?(n))" |def_matrix_weighted_inner_prod| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|n| SKOLEM-CONST-DECL "posnat" |def_matrix_weighted_inner_prod| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|x| SKOLEM-CONST-DECL "VectorN(n)" |def_matrix_weighted_inner_prod| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK
   (|norm_matn| SUBTYPE
    "def_matrix_weighted_inner_prod.mat_ip(def_matrix_weighted_inner_prod.n, def_matrix_weighted_inner_prod.A)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.x)"
    "nonneg_real"))
  (|norm_matn_TCC1-1| |nil| 3837203282 ("" (SUBTYPE-TCC) NIL NIL)
   ((|mat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|smat_ip| CONST-DECL "real" |def_matrix_weighted_inner_prod| NIL))
   NIL
   (|norm_matn| SUBTYPE
    "def_matrix_weighted_inner_prod.mat_ip(def_matrix_weighted_inner_prod.n, def_matrix_weighted_inner_prod.A)(def_matrix_weighted_inner_prod.x, def_matrix_weighted_inner_prod.x)"
    "nonneg_real"))))

