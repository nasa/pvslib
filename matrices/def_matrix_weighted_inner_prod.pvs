def_matrix_weighted_inner_prod : THEORY

  BEGIN

IMPORTING def_positive_definite
IMPORTING more_matrix_props
IMPORTING vector_arithmetic
IMPORTING matrix_vector_multiplication

%--------------------------------------------
%--------------------------------------------
%% First doing everything with semi-positive
%  definite matrices
%--------------------------------------------
%--------------------------------------------

%--------------------------------------------
%% Define the matrix inner product with a
%  positive definite matrix 
%--------------------------------------------

smat_ip(n:posnat,A:(spos_defn?(n)))(x,y: VectorN(n)): real =
x * (A * y)

%--------------------------------------------
%% Scalar properties
%--------------------------------------------

smat_ip_scal_left: LEMMA
 FORALL(n:posnat,A:(spos_defn?(n)),x,y: VectorN(n),c:real):
  smat_ip(n,A)(c*x,y)  = c * smat_ip(n,A)(x,y)

smat_ip_scal_right: LEMMA
 FORALL(n:posnat,A:(spos_defn?(n)),x,y: VectorN(n),c:real):
  smat_ip(n,A)(x,c*y)  = c * smat_ip(n,A)(x,y)

%--------------------------------------------
%% Summation properties
%--------------------------------------------

smat_ip_sum_left: LEMMA
 FORALL(n:posnat,A:(spos_defn?(n)),x,y,z: VectorN(n)):
  smat_ip(n,A)(x+z,y)  = smat_ip(n,A)(x,y) +smat_ip(n,A)(z,y)

smat_ip_sum_right: LEMMA
 FORALL(n:posnat,A:(spos_defn?(n)),x,y,z: VectorN(n)):
  smat_ip(n,A)(x,y+z)  = smat_ip(n,A)(x,y) + smat_ip(n,A)(x,z)

%--------------------------------------------
%% Symmetry
%--------------------------------------------

smat_ip_sym: LEMMA
  FORALL(n:posnat,A:(spos_defn?(n)),x,y: VectorN(n)):
  smat_ip(n,A)(x,y) = smat_ip(n,A)(y,x)

%--------------------------------------------
%% Positive definite-ness of inner product 
%--------------------------------------------

smat_ip_0: LEMMA
  FORALL(n:posnat,A:(spos_defn?(n))):
  LET x = zero_vec(n) IN
  smat_ip(n,A)(x,x)  = 0 

smat_ip_geq_0: LEMMA
  FORALL(n:posnat,A:(spos_defn?(n)),x: VectorN(n)):
  smat_ip(n,A)(x,x) >= 0


%--------------------------------------------
%--------------------------------------------
%% Now doing everything with positive
%  definite matrices
%--------------------------------------------
%--------------------------------------------

%--------------------------------------------
%% Define the matrix inner product with a
%  positive definite matrix 
%--------------------------------------------

mat_ip(n:posnat,A:(pos_defn?(n)))(x,y: VectorN(n)): real =
smat_ip(n,A)(x,y)

%--------------------------------------------
%% Scalar properties
%--------------------------------------------

mat_ip_scal_left: LEMMA
 FORALL(n:posnat,A:(pos_defn?(n)),x,y: VectorN(n),c:real):
  mat_ip(n,A)(c*x,y)  = c * mat_ip(n,A)(x,y)

mat_ip_scal_right: LEMMA
 FORALL(n:posnat,A:(pos_defn?(n)),x,y: VectorN(n),c:real):
  mat_ip(n,A)(x,c*y)  = c * mat_ip(n,A)(x,y)

%--------------------------------------------
%% Summation properties
%--------------------------------------------

mat_ip_sum_left: LEMMA
 FORALL(n:posnat,A:(pos_defn?(n)),x,y,z: VectorN(n)):
  mat_ip(n,A)(x+z,y)  = mat_ip(n,A)(x,y) + mat_ip(n,A)(z,y)

mat_ip_sum_right: LEMMA
 FORALL(n:posnat,A:(pos_defn?(n)),x,y,z: VectorN(n)):
  mat_ip(n,A)(x,y+z)  = mat_ip(n,A)(x,y) + mat_ip(n,A)(x,z)

%--------------------------------------------
%% Symmetry
%--------------------------------------------

mat_ip_sym: LEMMA
  FORALL(n:posnat,A:(pos_defn?(n)),x,y: VectorN(n)):
  mat_ip(n,A)(x,y) = mat_ip(n,A)(y,x)

%--------------------------------------------
%% Positive definite-ness of inner product 
%--------------------------------------------

mat_ip_0: LEMMA
  FORALL(n:posnat,A:(pos_defn?(n))):
  LET x = zero_vec(n) IN
  x * ( A * x)  = 0 

mat_ip_geq_0: LEMMA
  FORALL(n:posnat,A:(pos_defn?(n)),x: VectorN(n)):
  mat_ip(n,A)(x,x) >= 0

mat_ip_gt_0: LEMMA
  FORALL(n:posnat,A:(pos_defn?(n)),x: VectorN(n)):
   NOT x = zero_vec(n) IMPLIES mat_ip(n,A)(x,x) > 0



%--------------------------------------------
%% Square root it and get a norm (not done)
%--------------------------------------------

norm_matn(n:posnat,A:(pos_defn?(n)))(x:VectorN(n)): nonneg_real =
sqrt(mat_ip(n,A)(x,x))

norm_matnsq(n:posnat,A:(pos_defn?(n)))(x:VectorN(n)): nonneg_real =
mat_ip(n,A)(x,x)

  

  END def_matrix_weighted_inner_prod
