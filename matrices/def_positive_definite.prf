(|def_positive_definite|
 (|pos_def?_TCC1| 0
  (|pos_def?_TCC1-0| "" 3928933648 ("" (GRIND) NIL NIL) NIL SHOSTAK
   (|pos_def?| SUBTYPE "def_positive_definite.A"
    "SquareMatrix(list_props[list[real]].length(def_positive_definite.A))"))
  (|pos_def?_TCC1-1| |nil| 3837250064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|rows| CONST-DECL "nat" |matrices| |matrices|)) NIL
   (|pos_def?| SUBTYPE "def_positive_definite.A"
    "SquareMatrix(list_props[list[real]].length(def_positive_definite.A))")))
 (|pos_def?_TCC2| 0
  (|pos_def?_TCC2-0| "" 3928933652 ("" (GRIND) NIL NIL) NIL SHOSTAK
   (|pos_def?| SUBTYPE "list_props[list[real]].length(def_positive_definite.A)"
    "posnat"))
  (|pos_def?_TCC2-1| |nil| 3837250064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|pos_def?| SUBTYPE "list_props[list[real]].length(def_positive_definite.A)"
    "posnat")))
 (|pd_spd| 0
  (|pd_spd-6| "" 3928933636
   ("" (SKEEP)
    (("" (TYPEPRED "A")
      (("" (EXPAND "pos_defn?")
        (("" (EXPAND "spos_defn?")
          (("" (FLATTEN)
            (("" (ASSERT)
              (("" (SKEEP)
                (("" (INST -8 "x")
                  (("1" (GRIND) NIL NIL)
                   ("2" (CASE "x = zero_vec(n)")
                    (("1" (REPLACE -1 2)
                      (("1" (HIDE -1 -2 -3 -4 -5 -6 -7 -8 1)
                        (("1" (LEMMA "dot_prod_zero")
                          (("1" (LEMMA "dot_commutes")
                            (("1" (INST?)
                              (("1" (REPLACE -1 1)
                                (("1" (HIDE -1 -2)
                                  (("1" (LEMMA "dot_prod_zero")
                                    (("1" (INST?) (("1" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|pd_spd-1| |nil| 3837250073
   ("" (SKEEP)
    (("" (TYPEPRED "A")
      (("" (EXPAND "pos_defn?")
        (("" (EXPAND "spos_defn?")
          (("" (FLATTEN)
            (("" (ASSERT)
              (("" (SKEEP)
                (("" (INST -8 "x")
                  (("1" (ASSERT) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|SquareMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Square| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}"
     |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|rows| CONST-DECL "nat" |matrices| |matrices|)
    (> CONST-DECL "bool" |reals| NIL)
    (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|spos_defn?| CONST-DECL "bool" |def_positive_definite| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| |mv_analysis|)
    (|x| SKOLEM-CONST-DECL "VectorN(n)" |def_positive_definite| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|n| SKOLEM-CONST-DECL "posnat" |def_positive_definite| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzVecN| TYPE-EQ-DECL NIL |def_positive_definite| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "Vector" |matrix_vector_multiplication| |mv_analysis|)
    (|sym?| CONST-DECL "{b: bool | b = sym_forall?(A)}" |def_symmetric_matrix|
     NIL)
    (|dot_prod_zero| FORMULA-DECL NIL |vector_arithmetic| |mv_analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic|
     |mv_analysis|))
   SHOSTAK)))

