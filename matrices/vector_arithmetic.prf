(|vector_arithmetic|
 (|wf_1| 0
  (|wf_1-1| |nil| 3737805038
   ("" (EXPAND "well_founded?")
    (("" (TYPEPRED "list_adt[real].<<")
      (("" (EXPAND "strict_well_founded?")
        (("" (FLATTEN)
          (("" (EXPAND "well_founded?")
            (("" (SKEEP)
              (("" (INST - "LAMBDA (lll:list[real]): cons?(lll) AND p(lll)")
                (("" (SPLIT -)
                  (("1" (SKEEP)
                    (("1" (INST + "y")
                      (("1" (SKEEP)
                        (("1" (INST - "x_1")
                          (("1" (ASSERT)
                            (("1" (EXPAND "restrict") (("1" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKEEP -)
                    (("2" (INST + "y") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   SHOSTAK))
 (|zero_vec_TCC1| 0
  (|zero_vec_TCC1-1| |nil| 3737186446 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|zero_vec| SUBTYPE "list_adt[real].null" "VectorN(vector_arithmetic.m)")))
 (|zero_vec_TCC2| 0
  (|zero_vec_TCC2-1| |nil| 3737186446 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|zero_vec| SUBTYPE "(number_fields.-)(vector_arithmetic.m, 1)" "nat")))
 (|zero_vec_TCC3| 0
  (|zero_vec_TCC3-1| |nil| 3737186446 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|zero_vec| TERMINATION
    "vector_arithmetic.zero_vec((number_fields.-)(vector_arithmetic.m, 1))"
    "NIL")))
 (|zero_vec_TCC4| 0
  (|zero_vec_TCC4-1| |nil| 3737186446
   ("" (SKEEP) (("" (EXPAND "length") (("" (ASSERT) NIL NIL)) NIL)) NIL) NIL
   NIL
   (|zero_vec| SUBTYPE
    "list_adt[real].cons(0, vector_arithmetic.zero_vec((number_fields.-)(vector_arithmetic.m, 1)))"
    "VectorN(vector_arithmetic.m)")))
 (|zero_vec0_TCC1| 0
  (|zero_vec0_TCC1-1| |nil| 3738058587 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|zero_vec0| SUBTYPE "vector_arithmetic.i" "below[length[real](v)]")))
 (|zero_vec0| 0
  (|zero_vec0-1| |nil| 3738058588
   ("" (INDUCT "m")
    (("1" (SKEEP)
      (("1" (EXPAND "zero_vec")
        (("1" (TYPEPRED "v")
          (("1" (HIDE -1)
            (("1" (EXPAND "length" -1)
              (("1" (ASSERT)
                (("1" (SPLIT)
                  (("1" (FLATTEN) (("1" (ASSERT) (("1" (SKEEP) NIL NIL)) NIL))
                    NIL)
                   ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (SPLIT)
          (("1" (FLATTEN)
            (("1" (SKEEP)
              (("1" (EXPAND "nth" 1)
                (("1" (ASSERT)
                  (("1" (LIFT-IF)
                    (("1" (ASSERT)
                      (("1" (SPLIT)
                        (("1" (FLATTEN)
                          (("1" (EXPAND "zero_vec" -2)
                            (("1" (DECOMPOSE-EQUALITY -2) NIL NIL)) NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (INST -2 "cdr(v)")
                            (("1" (FLATTEN)
                              (("1" (EXPAND "zero_vec" -1)
                                (("1" (DECOMPOSE-EQUALITY -1)
                                  (("1" (ASSERT)
                                    (("1" (INST -3 "i-1") NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (TYPEPRED "v")
                                (("2" (EXPAND "length" -2)
                                  (("2" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (EXPAND "zero_vec" 1)
              (("2" (DECOMPOSE-EQUALITY 1)
                (("1" (INST -1 "0")
                  (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)
                 ("2" (INST -2 "cdr(v)")
                  (("1" (FLATTEN)
                    (("1" (ASSERT)
                      (("1" (SKEEP)
                        (("1" (INST -1 "i+1")
                          (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (TYPEPRED "v")
                      (("2" (EXPAND "length" -2) (("2" (PROPAX) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|nth_zero_TCC1| 0
  (|nth_zero_TCC1-1| |nil| 3737802758 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|nth_zero| SUBTYPE "vector_arithmetic.i"
    "below[length[real](zero_vec(m))]")))
 (|nth_zero| 0
  (|nth_zero-1| |nil| 3737802759
   ("" (INDUCT "m")
    (("1" (ASSERT) (("1" (SKEEP) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (ASSERT)
        (("2" (SKEEP)
          (("2" (EXPAND "nth" 1)
            (("2" (LIFT-IF)
              (("2" (ASSERT)
                (("2" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (ASSERT)
                      (("1" (EXPAND "zero_vec" 1) (("1" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (EXPAND "zero_vec" 2)
                      (("2" (TYPEPRED "i-1")
                        (("2" (TYPEPRED "i")
                          (("2" (HIDE -2)
                            (("2" (ISOLATE -1 R 2)
                              (("2" (INST -2 "i-1") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKEEP) (("3" (SKEEP) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|zero_cdr_TCC1| 0
  (|zero_cdr_TCC1-1| |nil| 3860660358 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|zero_cdr| SUBTYPE "vector_arithmetic.zero_vec(vector_arithmetic.m)"
    "(list_adt[real].cons?)")))
 (|zero_cdr_TCC2| 0
  (|zero_cdr_TCC2-1| |nil| 3860660358 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|zero_cdr| SUBTYPE "(number_fields.-)(vector_arithmetic.m, 1)" "nat")))
 (|zero_cdr| 0
  (|zero_cdr-1| |nil| 3860660358
   ("" (INDUCT "m")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (CASE "j=0")
        (("1" (REPLACE -1)
          (("1" (EXPAND "zero_vec" 1)
            (("1" (EXPAND "zero_vec" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (EXPAND "zero_vec" 2)
          (("2" (ASSERT)
            (("2" (ASSERT)
              (("2" (EXPAND "zero_vec" 2 1) (("2" (PROPAX) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (ASSERT) (("4" (SKEEP) (("4" (ASSERT) NIL NIL)) NIL)) NIL)
     ("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|every_zero| 0
  (|every_zero-1| |nil| 3860144193
   ("" (SKEEP)
    (("" (LEMMA "nth_zero")
      (("" (LEMMA "every_nth[number]")
        (("" (INST?)
          (("" (ASSERT)
            (("" (SKEEP) (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|constant_vec_TCC1| 0
  (|constant_vec_TCC1-1| |nil| 3737966289
   ("" (SKEEP) (("" (EXPAND "length" 2) (("" (GRIND) NIL NIL)) NIL)) NIL) NIL
   NIL
   (|constant_vec| SUBTYPE
    "list_adt[real].cons(vector_arithmetic.c, vector_arithmetic.constant_vec(vector_arithmetic.c, (number_fields.-)(vector_arithmetic.m, 1)))"
    "VectorN(vector_arithmetic.m)")))
 (|e_TCC1| 0
  (|e_TCC1-1| |nil| 3737455860 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|e| SUBTYPE "(number_fields.-)(vector_arithmetic.i, 1)"
    "{ii: naturalnumbers.nat | reals.<(ii, (number_fields.-)(vector_arithmetic.m, 1))}")))
 (|e_TCC2| 0
  (|e_TCC2-1| |nil| 3737455860
   ("" (SKEEP) (("" (EXPAND "length" 2) (("" (ASSERT) NIL NIL)) NIL)) NIL) NIL
   NIL
   (|e| SUBTYPE
    "list_adt[real].cons(0, vector_arithmetic.e((number_fields.-)(vector_arithmetic.m, 1), (number_fields.-)(vector_arithmetic.i, 1)))"
    "VectorN(vector_arithmetic.m)")))
 (|e_TCC3| 0
  (|e_TCC3-1| |nil| 3737455860
   ("" (SKEEP)
    (("" (ASSERT) (("" (EXPAND "length") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   NIL NIL
   (|e| SUBTYPE
    "list_adt[real].cons(1, vector_arithmetic.zero_vec((number_fields.-)(vector_arithmetic.m, 1)))"
    "VectorN(vector_arithmetic.m)")))
 (|e_cdr_TCC1| 0
  (|e_cdr_TCC1-1| |nil| 3740757786 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|e_cdr| SUBTYPE
    "vector_arithmetic.e(vector_arithmetic.m, vector_arithmetic.i)"
    "(list_adt[real].cons?)")))
 (|e_cdr_TCC2| 0
  (|e_cdr_TCC3-1| |nil| 3740757786 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|e_cdr| SUBTYPE "(number_fields.-)(vector_arithmetic.i, 1)"
    "{ii: naturalnumbers.nat | reals.<(ii, (number_fields.-)(vector_arithmetic.m, 1))}")))
 (|e_cdr| 0
  (|e_cdr-1| |nil| 3740757787
   ("" (INDUCT "m")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (ASSERT) (("3" (EXPAND "e" 1 1) (("3" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (SKEEP) (("4" (SKEEP) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)
     ("5" (SKEEP)
      (("5" (SKEEP)
        (("5" (ASSERT)
          (("5" (SKEEP)
            (("5" (TYPEPRED "e(m, i)") (("5" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|nth_e_TCC1| 0
  (|nth_e_TCC1-1| |nil| 3740757278 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|nth_e| SUBTYPE "vector_arithmetic.j" "below[length[real](e(m, i))]")))
 (|nth_e_TCC2| 0
  (|nth_e_TCC2-1| |nil| 3740757278 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|nth_e| SUBTYPE "vector_arithmetic.j" "below[length[real](e(m, i))]")))
 (|nth_e| 0
  (|nth_e-1| |nil| 3740757279
   ("" (INDUCT "m")
    (("1" (SKEEP) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (SKEEP)
          (("2" (SPLIT)
            (("1" (FLATTEN)
              (("1" (REPLACE -1 1)
                (("1" (EXPAND "e" 1)
                  (("1" (ASSERT)
                    (("1" (LIFT-IF)
                      (("1" (SPLIT)
                        (("1" (FLATTEN)
                          (("1" (EXPAND "nth" 1)
                            (("1" (ASSERT)
                              (("1" (INST -3 "i-1" "i-1")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (CASE "NOT i=0")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (REPLACE -1 1)
                              (("2" (REPLACE -1 2)
                                (("2" (EXPAND "nth" 2) (("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (FLATTEN)
              (("2" (EXPAND "e" 2)
                (("2" (ASSERT)
                  (("2" (CASE "i=0")
                    (("1" (ASSERT)
                      (("1" (EXPAND "nth" 2)
                        (("1" (ASSERT)
                          (("1" (LEMMA "nth_zero")
                            (("1" (INST -1 "j_1" "j-1") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (LIFT-IF)
                      (("2" (ASSERT)
                        (("2" (EXPAND "nth" 3)
                          (("2" (CASE "j=0")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (INST -1 "i-1" "j-1")
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (SKEEP)
            (("3" (TYPEPRED "e(m, i)") (("3" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP) (("4" (TYPEPRED "e(m,i)") (("4" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|every_e| 0
  (|every_e-1| |nil| 3860142279
   ("" (SKEEP)
    (("" (LEMMA "nth_e")
      (("" (INST?)
        (("" (LEMMA "every_nth[number]")
          (("" (INST?)
            (("" (ASSERT)
              (("" (SKEEP)
                (("" (INST?)
                  (("" (CASE "i=k")
                    (("1" (ASSERT)
                      (("1" (REPLACE -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                     ("2" (ASSERT)
                      (("2" (REPLACE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|e_not_zero| 0
  (|e_not_zero-1| |nil| 3741443770
   ("" (INDUCT "m")
    (("1" (SKEEP) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "e" -2)
          (("2" (EXPAND "zero_vec" -2)
            (("2" (ASSERT)
              (("2" (LIFT-IF)
                (("2" (TYPEPRED "i")
                  (("2" (TYPEPRED "j")
                    (("2" (ASSERT)
                      (("2" (CASE "i=0")
                        (("1" (ASSERT)
                          (("1" (SPLIT)
                            (("1" (FLATTEN)
                              (("1" (DECOMPOSE-EQUALITY -2) NIL NIL)) NIL)
                             ("2" (FLATTEN)
                              (("2" (DECOMPOSE-EQUALITY -1) NIL NIL)) NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (DECOMPOSE-EQUALITY -4)
                            (("2" (INST -4 "i-1") (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|test_zero1| 0
  (|test_zero1-1| |nil| 3737469912 ("" (EVAL-FORMULA 1) NIL NIL) NIL SHOSTAK))
 (|test_zero2| 0
  (|test_zero2-1| |nil| 3737469922 ("" (EVAL-FORMULA 1) NIL NIL) NIL SHOSTAK))
 (|test_e1| 0
  (|test_e1-1| |nil| 3737457208 ("" (EVAL-FORMULA 1) NIL NIL) NIL SHOSTAK))
 (|test_e2| 0
  (|test_e2-1| |nil| 3737456920 ("" (EVAL-FORMULA 1) NIL NIL) NIL SHOSTAK))
 (|test_e3| 0
  (|test_e3-1| |nil| 3737456975 ("" (EVAL-FORMULA 1) NIL NIL) NIL SHOSTAK))
 (|test_constant_vec1| 0
  (|test_constant_vec1-1| |nil| 3737966350 ("" (EVAL-FORMULA 1) NIL NIL) NIL
   SHOSTAK))
 (|test_constant_vec2| 0
  (|test_constant_vec2-1| |nil| 3737966362
   ("" (SKEEP)
    (("" (EXPAND "constant_vec")
      (("" (DECOMPOSE-EQUALITY)
        (("1" (EXPAND "constant_vec")
          (("1" (DECOMPOSE-EQUALITY)
            (("1" (EXPAND "constant_vec")
              (("1" (DECOMPOSE-EQUALITY)
                (("1" (EXPAND "constant_vec") (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (GRIND) NIL NIL))
                NIL))
              NIL)
             ("2" (GRIND) NIL NIL))
            NIL))
          NIL)
         ("2" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL))
   SHOSTAK))
 (|greater?_TCC1| 0
  (|greater?_TCC1-1| |nil| 3737804774
   ("" (LEMMA "wf_1") (("" (PROPAX) NIL NIL)) NIL) NIL NIL
   (|greater?| WELL-FOUNDED
    "restrict[[list[real], list[real]], [(list_adt[real].cons?), (list_adt[real].cons?)], bool].restrict(list_adt[real].<<)"
    "NIL")))
 (|greater?_TCC2| 0
  (|greater?_TCC2-1| |nil| 3737804774 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|greater?| SUBTYPE "list_adt[real].cdr(vector_arithmetic.l1)"
    "(list_adt[real].cons?)")))
 (|greater?_TCC3| 0
  (|greater?_TCC3-1| |nil| 3737804774 ("" (SKEEP) (("" (ASSERT) NIL NIL)) NIL)
   NIL NIL
   (|greater?| SUBTYPE "list_adt[real].cdr(vector_arithmetic.l2)"
    "(list_adt[real].cons?)")))
 (|greater?_TCC4| 0
  (|greater?_TCC4-1| |nil| 3737804774 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL
   (|greater?| TERMINATION
    "vector_arithmetic.greater?(list_adt[real].cdr(vector_arithmetic.l1), list_adt[real].cdr(vector_arithmetic.l2))"
    "NIL")))
 (|greater_eq?_TCC1| 0
  (|greater_eq?_TCC1-1| |nil| 3737805928 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|greater_eq?| SUBTYPE "list_adt[real].cdr(vector_arithmetic.l1)"
    "(list_adt[real].cons?)")))
 (|greater_eq?_TCC2| 0
  (|greater_eq?_TCC2-1| |nil| 3737805928 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|greater_eq?| SUBTYPE "list_adt[real].cdr(vector_arithmetic.l2)"
    "(list_adt[real].cons?)")))
 (|greater_eq?_TCC3| 0
  (|greater_eq?_TCC3-1| |nil| 3737806049 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL
   (|greater_eq?| TERMINATION
    "vector_arithmetic.greater_eq?(list_adt[real].cdr(vector_arithmetic.l1), list_adt[real].cdr(vector_arithmetic.l2))"
    "NIL")))
 (|less?_TCC1| 0
  (|less?_TCC1-1| |nil| 3737806049 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|less?| SUBTYPE "list_adt[real].cdr(vector_arithmetic.l1)"
    "(list_adt[real].cons?)")))
 (|less?_TCC2| 0
  (|less?_TCC2-1| |nil| 3737806049 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|less?| SUBTYPE "list_adt[real].cdr(vector_arithmetic.l2)"
    "(list_adt[real].cons?)")))
 (|less?_TCC3| 0
  (|less?_TCC3-1| |nil| 3737806049 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL
   (|less?| TERMINATION
    "vector_arithmetic.less?(list_adt[real].cdr(vector_arithmetic.l1), list_adt[real].cdr(vector_arithmetic.l2))"
    "NIL")))
 (|less_eq?_TCC1| 0
  (|less_eq?_TCC1-1| |nil| 3737806049 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|less_eq?| SUBTYPE "list_adt[real].cdr(vector_arithmetic.l1)"
    "(list_adt[real].cons?)")))
 (|less_eq?_TCC2| 0
  (|less_eq?_TCC2-1| |nil| 3737806049 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|less_eq?| SUBTYPE "list_adt[real].cdr(vector_arithmetic.l2)"
    "(list_adt[real].cons?)")))
 (|less_eq?_TCC3| 0
  (|less_eq?_TCC3-1| |nil| 3737806049 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL
   (|less_eq?| TERMINATION
    "vector_arithmetic.less_eq?(list_adt[real].cdr(vector_arithmetic.l1), list_adt[real].cdr(vector_arithmetic.l2))"
    "NIL")))
 (|g_1_TCC1| 0
  (|g_1_TCC1-1| |nil| 3737806252 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|g_1| SUBTYPE "vector_arithmetic.zero_vec(3)" "(list_adt[real].cons?)")))
 (|g_1| 0
  (|g_1-1| |nil| 3737806253
   ("" (EVAL-EXPR "zero_vec(3)")
    (("" (REPLACE -1 1) (("" (EVAL-FORMULA 1) NIL NIL)) NIL)) NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL))
   SHOSTAK))
 (|ge_1| 0
  (|ge_1-1| |nil| 3737807065 ("" (EVAL-FORMULA 1) NIL NIL) NIL SHOSTAK))
 (|l_1| 0 (|l_1-1| |nil| 3737807130 ("" (GRIND) NIL NIL) NIL SHOSTAK))
 (|cdr_scal_TCC1| 0
  (|cdr_scal_TCC1-1| |nil| 3737448083
   ("" (SKEEP)
    (("" (TYPEPRED "c*ll")
      (("" (TYPEPRED "ll")
        (("" (HIDE -1 -3)
          (("" (EXPAND "length" -2) (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|cdr_scal| SUBTYPE "matrices.*(vector_arithmetic.c, vector_arithmetic.ll)"
    "(list_adt[real].cons?)")))
 (|cdr_scal| 0
  (|cdr_scal-1| |nil| 3737448084
   ("" (INDUCT "ll")
    (("1" (SKEEP) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (SPLIT)
          (("1" (INST -1 "c")
            (("1" (EXPAND "*" 1 1)
              (("1" (EXPAND "scal" 1 1)
                (("1" (ASSERT)
                  (("1" (EXPAND "*" 1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "null?(cons2_var)")
              (("1" (EXPAND "*")
                (("1" (EXPAND "scal")
                  (("1" (ASSERT)
                    (("1" (EXPAND "scal") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (SKEEP)
        (("4" (SKEEP)
          (("4" (ASSERT)
            (("4" (TYPEPRED "c*ll")
              (("4" (ASSERT)
                (("4" (EXPAND "length" -2) (("4" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK))
 (|cdr_sub_TCC1| 0
  (|cdr_sub_TCC1-1| |nil| 3737448546
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (ASSERT)
          (("3" (SPLIT)
            (("1" (TYPEPRED "cons(cons1_var, cons2_var) - l2")
              (("1" (HIDE -1 -2)
                (("1" (INST -1 "l2") (("1" (GRIND) NIL NIL)) NIL)) NIL))
              NIL)
             ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|cdr_sub| SUBTYPE
    "(matrices.-)(vector_arithmetic.l1, vector_arithmetic.l2)"
    "(list_adt[real].cons?)")))
 (|cdr_sub| 0
  (|cdr_sub-1| |nil| 3737471510
   ("" (INDUCT "l1")
    (("1" (SKEEP) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (SPLIT)
          (("1" (ASSERT) (("1" (INST -1 "l2") (("1" (GRIND) NIL NIL)) NIL))
            NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (SKEEP) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL))
    NIL)
   ((|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|cdr_add_TCC1| 0
  (|cdr_add_TCC1-1| |nil| 3740322517
   ("" (SKEEP) (("" (TYPEPRED "l1+l2") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|))
   NIL
   (|cdr_add| SUBTYPE
    "(matrices.+)(vector_arithmetic.l1, vector_arithmetic.l2)"
    "(list_adt[real].cons?)")))
 (|cdr_add| 0
  (|cdr_add-1| |nil| 3740322518
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (ASSERT)
          (("3" (CASE "null?(cons2_var)")
            (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
             ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (ASSERT)
        (("4" (SKEEP) (("4" (TYPEPRED "l1+l2") (("4" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|car_scal| 0
  (|car_scal-1| |nil| 3737472796
   ("" (INDUCT "ll")
    (("1" (SKEEP) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (SPLIT)
          (("1" (INST -1 "c") (("1" (GRIND) NIL NIL)) NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (SKEEP) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL))
    NIL)
   ((|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK))
 (|car_sub| 0
  (|car_sub-1| |nil| 3737472842
   ("" (INDUCT "l1")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (SPLIT)
          (("1" (INST -1 "l2") (("1" (GRIND) NIL NIL)) NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (SKEEP) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL))
    NIL)
   ((|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|neg_1_scal| 0
  (|neg_1_scal-1| |nil| 3737729713
   ("" (INDUCT "ll")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (SPLIT)
          (("1" (DECOMPOSE-EQUALITY 1)
            (("1" (EXPAND "scal" 1 1)
              (("1" (LIFT-IF)
                (("1" (ASSERT)
                  (("1" (SPLIT)
                    (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (FLATTEN)
                      (("2" (EXPAND "scal" 2 1)
                        (("2" (EXPAND "scal" 2 2) (("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "NOT null?(cons2_var)")
              (("1" (ASSERT) NIL NIL)
               ("2" (EXPAND "scal" 2) (("2" (DECOMPOSE-EQUALITY 2) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|add_commute| 0
  (|add_commute-1| |nil| 3740914659
   ("" (INDUCT "l1")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "cons2_var=null")
          (("1" (HIDE -2)
            (("1" (GRIND)
              (("1" (EXPAND "add" 1)
                (("1" (CASE "cdr(l2)=null")
                  (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "+" 2)
              (("2" (EXPAND "add" 2)
                (("2" (INST -1 "cdr(l2)")
                  (("1" (EXPAND "+" -1) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|sub_idx| 0
  (|sub_idx-1| |nil| 3741344750
   ("" (SKEEP)
    (("" (EXPAND "-" 1 1)
      (("" (EXPAND "sub" 1 1)
        (("" (EXPAND "+" 1) (("" (EXPAND "*" 1) (("" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|))
   SHOSTAK))
 (|asso_1_scal| 0
  (|asso_1_scal-1| |nil| 3737731048
   ("" (INDUCT "ll")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (SPLIT)
            (("1" (INST -1 "a" "b")
              (("1" (EXPAND "scal" 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "scal" 2)
                (("2" (EXPAND "scal" 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|scal_asso| 0
  (|scal_asso-1| |nil| 3740395328
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (CASE "null?(cons2_var)")
            (("1" (EXPAND "*" 1)
              (("1" (EXPAND "dot" 1)
                (("1" (EXPAND "dot" 1)
                  (("1" (EXPAND "scal" 1) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "*" 2 4)
                (("2" (EXPAND "dot" 2)
                  (("2" (EXPAND "*" -1 4)
                    (("2" (EXPAND "*" 2 1)
                      (("2" (EXPAND "dot" 2 1)
                        (("2" (ASSERT)
                          (("2" (LIFT-IF)
                            (("2" (SPLIT)
                              (("1" (FLATTEN)
                                (("1" (CASE "cons?(l2)")
                                  (("1" (ASSERT)
                                    (("1" (TYPEPRED "c*l2")
                                      (("1" (EXPAND "length" -2)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (EXPAND "*" 2 1)
                                  (("2" (EXPAND "scal" 2 1)
                                    (("2" (INST -1 "cdr(l2)" "c")
                                      (("1" (EXPAND "*" -1 1)
                                        (("1" (EXPAND "*" -1 1)
                                          (("1" (ASSERT)
                                            (("1" (REPLACE -1 2)
                                              (("1"
                                                (CASE
                                                    "NOT c * dot(cons2_var, cdr(l2)) = dot(cons2_var, cdr(l2)) * c")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2" (REPLACE -1 2)
                                                  (("2" (ASSERT)
                                                    (("2" (EXPAND "*" 2 2)
                                                      (("2" (EXPAND "scal" 2 1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (CASE "null?(cdr(l2))")
                                          (("1" (ASSERT)
                                            (("1" (GRIND) NIL NIL)) NIL)
                                           ("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|asso_v| 0
  (|asso_v-1| |nil| 3737732038
   ("" (INDUCT "ll")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (ASSERT)
          (("3" (SKEEP)
            (("3" (SPLIT)
              (("1" (INST -1 "c1" "c2") (("1" (GRIND) NIL NIL)) NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|asso_dot| 0
  (|asso_dot-1| |nil| 3739531306
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (SPLIT)
          (("1" (ASSERT)
            (("1" (INST -1 "c" "cdr(l2)")
              (("1" (EXPAND "*" 1 1)
                (("1" (EXPAND "scal" 1)
                  (("1" (EXPAND "*" 1 2)
                    (("1" (EXPAND "dot" 1)
                      (("1" (EXPAND "*" 1 4)
                        (("1" (EXPAND "dot" 1 2)
                          (("1" (ASSERT)
                            (("1" (EXPAND "*" -1 1)
                              (("1" (EXPAND "*" -1 1)
                                (("1" (EXPAND "*" -1 2)
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (TYPEPRED "l2")
                  (("2" (ASSERT) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|asso_add| 0
  (|asso_add-1| |nil| 3740473232
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (ASSERT)
        (("3" (SKEEP)
          (("3" (ASSERT)
            (("3" (EXPAND "+" 1)
              (("3" (EXPAND "add" 1)
                (("3" (DECOMPOSE-EQUALITY 1)
                  (("3" (CASE "null?(cons2_var)")
                    (("1" (GRIND) NIL NIL)
                     ("2" (ASSERT)
                      (("2" (INST -1 "cdr(l2)" "cdr(l3)")
                        (("1" (ASSERT)
                          (("1" (EXPAND "length" -2)
                            (("1" (EXPAND "length" -3)
                              (("1" (ASSERT)
                                (("1" (EXPAND "+" -1) (("1" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "length" -1)
                          (("2" (EXPAND "length" -2)
                            (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                          NIL)
                         ("3" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|asso_sub_commute| 0
  (|asso_sub_commute-1| |nil| 3740913678
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (ASSERT)
        (("3" (SKEEP)
          (("3" (CASE "cons2_var=null")
            (("1" (CASE "not cdr(l2)=null")
              (("1" (GRIND) NIL NIL)
               ("2" (CASE "not cdr(l3)=null")
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "+" 2 2)
                (("2" (EXPAND "add" 2 1)
                  (("2" (TYPEPRED "l2-l3")
                    (("2" (EXPAND "max" -2)
                      (("2" (ASSERT)
                        (("2" (TYPEPRED "l2")
                          (("2" (ASSERT)
                            (("2" (EXPAND "length" -4)
                              (("2" (ASSERT)
                                (("2" (LIFT-IF)
                                  (("2" (ASSERT)
                                    (("2" (SPLIT)
                                      (("1" (PROPAX) NIL NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (LEMMA "cdr_sub")
                                            (("2" (INST -1 "l2" "l3")
                                              (("2" (REPLACE -1 3)
                                                (("2" (EXPAND "-" 3 1)
                                                  (("2" (EXPAND "sub" 3 1)
                                                    (("2" (EXPAND "scal" 3 1)
                                                      (("2" (EXPAND "add" 3 1)
                                                        (("2" (EXPAND "+" 3 1)
                                                          (("2"
                                                            (EXPAND "add" 3 1)
                                                            (("2"
                                                              (DECOMPOSE-EQUALITY
                                                               3)
                                                              (("1"
                                                                (LEMMA
                                                                 "car_sub")
                                                                (("1"
                                                                  (INST -1 "l2"
                                                                   "l3")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (INST -6
                                                                 "cdr(l2)"
                                                                 "cdr(l3)")
                                                                (("1" (SPLIT)
                                                                  (("1"
                                                                    (EXPAND "-"
                                                                            -1)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "+" -1)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "sub"
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "-"
                                                                             1)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 " sub"
                                                                                 1)
                                                                                (("1"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("3" (GRIND)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2" (GRIND)
                                                                  NIL NIL)
                                                                 ("3" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|scal_cancel| 0
  (|scal_cancel-1| |nil| 3740395797
   ("" (INDUCT "l1")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "null?(cons2_var)")
          (("1" (GRIND)
            (("1" (DECOMPOSE-EQUALITY -3)
              (("1" (ASSERT)
                (("1" (CASE "cons?(cdr(l2))")
                  (("1" (GRIND) NIL NIL)
                   ("2" (ASSERT)
                    (("2" (CANCEL-BY -1 "c")
                      (("2" (DECOMPOSE-EQUALITY 3) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "*" -3)
              (("2" (EXPAND "scal" -3)
                (("2" (DECOMPOSE-EQUALITY -3)
                  (("2" (DECOMPOSE-EQUALITY 2)
                    (("2" (INST -3 "cdr(l2)" "c")
                      (("1" (ASSERT)
                        (("1" (EXPAND "*" 3) (("1" (PROPAX) NIL NIL)) NIL))
                        NIL)
                       ("2" (EXPAND "length" -3) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|add_zero| 0
  (|add_zero-1| |nil| 3740323345
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (ASSERT)
          (("3" (SKEEP)
            (("3" (SPLIT)
              (("1" (ASSERT)
                (("1" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (EXPAND "+" -1)
                      (("1" (EXPAND "add" -1)
                        (("1" (DECOMPOSE-EQUALITY -1)
                          (("1" (EXPAND "length" -4)
                            (("1" (INST -3 "cdr(l2)")
                              (("1" (ASSERT)
                                (("1" (FLATTEN)
                                  (("1" (EXPAND "zero_vec" 1)
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "length" 1)
                                        (("1" (ASSERT)
                                          (("1" (DECOMPOSE-EQUALITY 1)
                                            (("1" (EXPAND "+" 2)
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (EXPAND "length" 2)
                                  (("2" (DECOMPOSE-EQUALITY 2)
                                    (("1" (EXPAND "zero_vec" 1)
                                      (("1" (PROPAX) NIL NIL)) NIL)
                                     ("2" (EXPAND "zero_vec" 1)
                                      (("2" (ASSERT)
                                        (("2" (EXPAND "length" -3)
                                          (("2" (CASE "NOT null?(cdr(l2))")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (ASSERT)
                                              (("2" (LIFT-IF)
                                                (("2" (SPLIT)
                                                  (("1" (ASSERT)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL)
                                                   ("2" (GRIND) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (EXPAND "+" 1)
                      (("2" (EXPAND "add" 1)
                        (("2" (DECOMPOSE-EQUALITY 1)
                          (("1" (EXPAND "length" -1)
                            (("1" (DECOMPOSE-EQUALITY -1)
                              (("1" (EXPAND "zero_vec" -2)
                                (("1" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (EXPAND "length" -1)
                            (("2" (EXPAND "zero_vec" -1)
                              (("2" (ASSERT)
                                (("2" (LIFT-IF)
                                  (("2" (ASSERT)
                                    (("2" (DECOMPOSE-EQUALITY -1)
                                      (("2" (INST -3 "cdr(l2)")
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "length" -4)
                                            (("1" (ASSERT)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "+" -3)
                                                  (("1" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (ASSERT)
                                          (("2" (EXPAND "length" -3)
                                            (("2" (ASSERT)
                                              (("2" (EXPAND "length" -3)
                                                (("2" (LIFT-IF)
                                                  (("2" (ASSERT)
                                                    (("2" (SPLIT)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (EXPAND "length" -3)
                                                          (("1"
                                                            (EXPAND "add" 2)
                                                            (("1" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (FLATTEN)
                                                        (("2"
                                                          (EXPAND "length" -1)
                                                          (("2" (ASSERT)
                                                            (("2" (LIFT-IF)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND)
                (("1" (DECOMPOSE-EQUALITY 2)
                  (("1" (DECOMPOSE-EQUALITY -2) NIL NIL)) NIL)
                 ("2" (DECOMPOSE-EQUALITY 2)
                  (("2" (DECOMPOSE-EQUALITY -2) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|zero_id| 0
  (|zero_id-1| |nil| 3740390423
   ("" (INDUCT "l1")
    (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (EXPAND "length" 1)
        (("2" (EXPAND "zero_vec" 1)
          (("2" (ASSERT)
            (("2" (EXPAND "+" 1)
              (("2" (EXPAND "add" 1)
                (("2" (DECOMPOSE-EQUALITY 1)
                  (("2" (EXPAND "+" -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|scal_zero| 0
  (|scal_zero-1| |nil| 3740389635
   ("" (INDUCT "m")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INST -1 "c")
          (("2" (EXPAND "zero_vec" 1)
            (("2" (EXPAND "*" 1)
              (("2" (EXPAND "scal" 1)
                (("2" (DECOMPOSE-EQUALITY 1)
                  (("2" (EXPAND "*" -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_zero| 0
  (|dot_zero-1| |nil| 3740500891
   ("" (INDUCT "l")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (ASSERT)
        (("3" (SKEEP)
          (("3" (EXPAND "*" 1)
            (("3" (EXPAND "dot" 1)
              (("3" (ASSERT)
                (("3" (SPLIT)
                  (("1" (LIFT-IF)
                    (("1" (SPLIT)
                      (("1" (PROPAX) NIL NIL)
                       ("2" (FLATTEN)
                        (("2" (EXPAND "zero_vec" 2 2)
                          (("2" (ASSERT)
                            (("2" (LIFT-IF)
                              (("2" (SPLIT)
                                (("1" (FLATTEN)
                                  (("1" (REPLACE -1 2)
                                    (("1" (EXPAND "zero_vec" 2)
                                      (("1" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (FLATTEN)
                                    (("2" (INST -1 "m-1")
                                      (("1" (EXPAND "zero_vec" 2)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "*" -1)
                                            (("1" (PROPAX) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND)
                    (("2" (EXPAND "zero_vec" 3)
                      (("2" (LIFT-IF)
                        (("2" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (REPLACE -1 3)
                              (("1" (EXPAND "zero_vec" 3)
                                (("1" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|dot| DEF-DECL "real" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|zero_mult| 0
  (|zero_mult-1| |nil| 3740392006
   ("" (INDUCT "l")
    (("1" (SKEEP) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "null?(cons2_var)")
          (("1" (EXPAND "length" 2)
            (("1" (EXPAND "length" 2)
              (("1" (ASSERT)
                (("1" (EXPAND "zero_vec" 2)
                  (("1" (EXPAND "zero_vec" 2)
                    (("1" (DECOMPOSE-EQUALITY 2)
                      (("1" (EXPAND "length" -3)
                        (("1" (EXPAND " length" -3)
                          (("1" (EXPAND "zero_vec" -3)
                            (("1" (EXPAND "*" -3)
                              (("1" (EXPAND "scal" -3)
                                (("1" (DECOMPOSE-EQUALITY -3) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "length" -2)
              (("2" (EXPAND "length" 3)
                (("2" (INST -1 "c")
                  (("2" (ASSERT)
                    (("2" (EXPAND "*" -2)
                      (("2" (EXPAND "scal" -2)
                        (("2" (DECOMPOSE-EQUALITY -2)
                          (("2" (ASSERT)
                            (("2" (EXPAND "zero_vec" -1)
                              (("2" (ASSERT)
                                (("2" (EXPAND "zero_vec" 3)
                                  (("2" (DECOMPOSE-EQUALITY 3)
                                    (("1" (CANCEL-BY -1 "c") NIL NIL)
                                     ("2" (EXPAND "zero_vec" -2)
                                      (("2" (EXPAND "*" -3)
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|add_cancel| 0
  (|add_cancel-1| |nil| 3740322953
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (CASE "null?(cons2_var)")
            (("1" (GRIND)
              (("1" (EXPAND "length" -2)
                (("1" (EXPAND "length" -3)
                  (("1" (GRIND)
                    (("1" (DECOMPOSE-EQUALITY 1)
                      (("1" (DECOMPOSE-EQUALITY -4) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "+" -4)
                (("2" (EXPAND "add" -4)
                  (("2" (DECOMPOSE-EQUALITY -4)
                    (("2" (DECOMPOSE-EQUALITY 2)
                      (("2" (INST -3 "cdr(l2)" "cdr(l3)")
                        (("1" (ASSERT)
                          (("1" (SPLIT)
                            (("1" (EXPAND "length" -4)
                              (("1" (EXPAND "length" -3)
                                (("1" (PROPAX) NIL NIL)) NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (EXPAND "length" -3)
                                (("2" (EXPAND "length" -4)
                                  (("2" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("3" (ASSERT)
                              (("3" (EXPAND "+" 1) (("3" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (EXPAND "length" -3) (("2" (GRIND) NIL NIL))
                            NIL))
                          NIL)
                         ("3" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|sub_zero| 0
  (|sub_zero-1| |nil| 3740393021
   ("" (INDUCT "l")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (ASSERT)
        (("3" (EXPAND "length" 1)
          (("3" (EXPAND "zero_vec" 1)
            (("3" (ASSERT)
              (("3" (ASSERT)
                (("3" (EXPAND "-" 1)
                  (("3" (EXPAND "sub" 1)
                    (("3" (EXPAND "scal" 1)
                      (("3" (EXPAND "add" 1)
                        (("3" (DECOMPOSE-EQUALITY 1)
                          (("3" (CASE "null?(cons2_var)")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (EXPAND "-" -1)
                                (("2" (EXPAND "sub" -1)
                                  (("2" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|mult_zero| 0
  (|mult_zero-1| |nil| 3740393120
   ("" (INDUCT "l")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (ASSERT)
        (("3" (EXPAND "length" 1)
          (("3" (CASE "null?(cons2_var)")
            (("1" (GRIND) NIL NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "zero_vec" 2)
                (("2" (EXPAND "*" 2 1)
                  (("2" (EXPAND "scal" 2)
                    (("2" (DECOMPOSE-EQUALITY 2)
                      (("2" (EXPAND "*" -1) (("2" (PROPAX) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|add_zero_trick| 0
  (|add_zero_trick-2| |nil| 3737191441
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (SPLIT)
          (("1" (EXPAND "-" 1 3)
            (("1" (EXPAND "sub" 1 1)
              (("1" (EXPAND "scal" 1)
                (("1" (EXPAND "add" 1)
                  (("1" (EXPAND "-" 1)
                    (("1" (EXPAND "sub" 1)
                      (("1" (EXPAND "scal" 1 1)
                        (("1" (EXPAND "scal" 1 2)
                          (("1" (EXPAND "add" 1 1)
                            (("1" (EXPAND "add" 1 2)
                              (("1" (EXPAND "+" 1)
                                (("1" (EXPAND "add" 1 1)
                                  (("1" (DECOMPOSE-EQUALITY 1)
                                    (("1" (INST -1 "cdr(l2)" "cdr(l3)")
                                      (("1" (SPLIT)
                                        (("1" (EXPAND "-" -1)
                                          (("1" (EXPAND "sub" -1)
                                            (("1" (EXPAND "+" -1)
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (ASSERT)
                                          (("2" (EXPAND "length" -1)
                                            (("2" (PROPAX) NIL NIL)) NIL))
                                          NIL)
                                         ("3" (EXPAND "length" -1)
                                          (("3" (ASSERT)
                                            (("3" (EXPAND "length" -2)
                                              (("3" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (CASE "NOT null?(cdr(l3))")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (EXPAND "scal" 2)
                                            (("2" (LIFT-IF)
                                              (("2" (SPLIT)
                                                (("1" (FLATTEN)
                                                  (("1" (ASSERT)
                                                    (("1" (EXPAND "add" 1)
                                                      (("1" (LIFT-IF)
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (FLATTEN)
                                                    (("2" (ASSERT)
                                                      (("2"
                                                        (EXPAND "length" -3)
                                                        (("2"
                                                          (EXPAND "length" -3)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (ASSERT)
                                        (("3" (CASE "NOT null?(cdr(l2))")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (ASSERT)
                                            (("2" (EXPAND "scal" 2)
                                              (("2" (EXPAND "add" 2)
                                                (("2" (LIFT-IF)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "NOT null?(cons2_var)")
              (("1" (ASSERT) NIL NIL)
               ("2" (EXPAND "-" 2)
                (("2" (EXPAND "sub" 2)
                  (("2" (EXPAND "scal" 2)
                    (("2" (EXPAND "add" 2)
                      (("2" (ASSERT)
                        (("2" (EXPAND "scal" 2)
                          (("2" (LIFT-IF)
                            (("2" (SPLIT)
                              (("1" (FLATTEN)
                                (("1" (LIFT-IF)
                                  (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL)
  (|add_zero_trick-1| |nil| 3737191206 ("" (POSTPONE) NIL NIL) NIL SHOSTAK))
 (|diff_zero| 0
  (|diff_zero-1| |nil| 3737368923
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (ASSERT)
            (("3" (SPLIT)
              (("1" (ASSERT)
                (("1" (INST -1 "m-1" "cdr(l2)")
                  (("1" (ASSERT)
                    (("1" (SPLIT)
                      (("1" (ASSERT)
                        (("1" (EXPAND "-" -3)
                          (("1" (EXPAND "sub" -3)
                            (("1" (EXPAND "scal" -3)
                              (("1" (EXPAND "add" -3)
                                (("1" (EXPAND "zero_vec" -3)
                                  (("1" (LIFT-IF)
                                    (("1" (SPLIT)
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (FLATTEN)
                                          (("2" (ASSERT)
                                            (("2" (DECOMPOSE-EQUALITY -1)
                                              (("1" (ASSERT)
                                                (("1"
                                                  (CASE
                                                      "NOT l2 = cons( car(l2), cdr(l2))")
                                                  (("1" (GRIND)
                                                    (("1"
                                                      (DECOMPOSE-EQUALITY 1)
                                                      NIL NIL))
                                                    NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (CASE
                                                    "NOT l2 = cons( car(l2), cdr(l2))")
                                                (("1" (DECOMPOSE-EQUALITY 1)
                                                  NIL NIL)
                                                 ("2" (ASSERT) NIL NIL))
                                                NIL)
                                               ("3" (TYPEPRED "m")
                                                (("3" (ISOLATE 1 L 1)
                                                  (("3" (SIMPLIFY)
                                                    (("3" (FLIP-INEQ 1)
                                                      (("3" (ASSERT)
                                                        (("3" (TYPEPRED "m")
                                                          (("3" (HIDE -4 -5 -6)
                                                            (("3" (HIDE 2)
                                                              (("3"
                                                                (FLIP-INEQ -1)
                                                                (("3"
                                                                  (FLIP-INEQ
                                                                   -2)
                                                                  (("3"
                                                                    (FLIP-INEQ
                                                                     -1)
                                                                    (("3"
                                                                      (GRIND)
                                                                      (("3"
                                                                        (TYPEPRED
                                                                         "m")
                                                                        (("3"
                                                                          (CASE
                                                                              "NOT FORALL (n:nat): n=0 OR n >=1")
                                                                          (("1"
                                                                            (HIDE
                                                                             -1
                                                                             2
                                                                             3
                                                                             4)
                                                                            (("1"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (INST
                                                                             -1
                                                                             "m")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (EXPAND "zero_vec" -2)
                          (("2" (LIFT-IF)
                            (("2" (SPLIT)
                              (("1" (FLATTEN)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "-" -2)
                                    (("1" (EXPAND "sub" -2)
                                      (("1" (EXPAND "scal" -2)
                                        (("1" (EXPAND "add" -2)
                                          (("1" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (ASSERT)
                                  (("2" (DECOMPOSE-EQUALITY -1)
                                    (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                                     ("2"
                                      (CASE "NOT FORALL (n:nat): n=0 OR n >=1")
                                      (("1" (ASSERT)
                                        (("1" (HIDE-ALL-BUT 1)
                                          (("1" (GRIND) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (INST -1 "m")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL)
                                     ("3"
                                      (CASE "NOT FORALL (n:nat): n=0 OR n >=1")
                                      (("1" (HIDE-ALL-BUT 1)
                                        (("1" (GRIND) NIL NIL)) NIL)
                                       ("2" (INST -1 "m")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (ASSERT)
                        (("3" (EXPAND "length" -1) (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (EXPAND "length" -1)
                      (("2" (ASSERT)
                        (("2" (TYPEPRED "l2")
                          (("2" (ASSERT)
                            (("2" (HIDE -1)
                              (("2" (CASE "NOT null?(cdr(l2))")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (DECOMPOSE-EQUALITY 2)
                                  (("1" (EXPAND "-" -4)
                                    (("1" (EXPAND "sub" -4)
                                      (("1" (EXPAND "scal" -4)
                                        (("1" (EXPAND "add" -4)
                                          (("1" (EXPAND "zero_vec" -4)
                                            (("1" (LIFT-IF)
                                              (("1" (SPLIT)
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (ASSERT)
                                                    (("2" (EXPAND "length" -4)
                                                      (("2" (LIFT-IF)
                                                        (("2" (ASSERT)
                                                          (("2" (SPLIT)
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (DECOMPOSE-EQUALITY
                                                                 -2)
                                                                (("1"
                                                                  (EXPAND "add"
                                                                          -2)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (CASE
                                                                          "NOT FORALL (n:nat): n=0 OR n >=1")
                                                                      (("1"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("1"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (INST
                                                                         -1
                                                                         "m")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (FLATTEN)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (EXPAND "length" -3)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (EXPAND "length" -1)
                    (("3" (EXPAND "length" -1)
                      (("3" (TYPEPRED "m")
                        (("3" (CASE "NOT m=0")
                          (("1" (ASSERT)
                            (("1" (CASE "NOT FORALL (n:nat): n=0 OR n >=1")
                              (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL))
                                NIL)
                               ("2" (INST -1 "m") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (REPLACE -1 -4)
                            (("2" (EXPAND "zero_vec" -4)
                              (("2" (ASSERT)
                                (("2" (DECOMPOSE-EQUALITY -4)
                                  (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (CASE "NOT null?(cons2_var)")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (ASSERT)
                    (("2" (EXPAND "length" -2)
                      (("2" (EXPAND "length" -2)
                        (("2" (ASSERT)
                          (("2" (LIFT-IF)
                            (("2" (ASSERT)
                              (("2" (GRIND)
                                (("2" (EXPAND "zero_vec" -3)
                                  (("2" (LIFT-IF)
                                    (("2" (ASSERT)
                                      (("2" (GRIND)
                                        (("2" (DECOMPOSE-EQUALITY 2)
                                          (("2"
                                            (CASE
                                                "NOT FORALL (l1,l2: (cons?)): l1=l2 implies car(l1)=car(l2)")
                                            (("1" (ASSERT)
                                              (("1" (HIDE -1 -2 -3 2 3)
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL)
                                             ("2"
                                              (INST -1
                                               "cons(cons1_var - car(l2), cdr(l2))"
                                               "cons(0, zero_vec(m - 1))")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2"
                                                (CASE
                                                    "NOT FORALL (l1,l2: (cons?)): l1=l2 implies car(l1)=car(l2)")
                                                (("1" (HIDE -1 -2 -3 2 3 4)
                                                  (("1" (GRIND) NIL NIL)) NIL)
                                                 ("2" (ASSERT :FLUSH? T) NIL
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|add_zero_imp_eq| 0
  (|add_zero_imp_eq-1| |nil| 3741522335
   ("" (INDUCT "m")
    (("1" (SKEEP)
      (("1" (ASSERT) (("1" (EXPAND "zero_vec" -2) (("1" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (ASSERT)
          (("2" (EXPAND "+" -3)
            (("2" (EXPAND "zero_vec" -3)
              (("2" (EXPAND "add" -3)
                (("2" (DECOMPOSE-EQUALITY -3)
                  (("2" (EXPAND "*" 1)
                    (("2" (EXPAND "scal" 1)
                      (("2" (DECOMPOSE-EQUALITY 1)
                        (("2" (INST -3 "cdr(l1)" "cdr(l2)")
                          (("1" (ASSERT)
                            (("1" (EXPAND "length" -4)
                              (("1" (ASSERT)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "+" -3 1)
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "*" -3)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (EXPAND "add" -2) (("2" (GRIND) NIL NIL)) NIL)
                           ("3" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|l2| SKOLEM-CONST-DECL "(cons?)" |vector_arithmetic| NIL)
    (|l1| SKOLEM-CONST-DECL "(cons?)" |vector_arithmetic| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL))
   SHOSTAK))
 (|one_idx| 0
  (|one_idx-1| |nil| 3740742214
   ("" (INDUCT "l")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)
   ((|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|zero_scal| 0
  (|zero_scal-1| |nil| 3741356946
   ("" (SKEEP)
    (("" (LEMMA "zero_mult")
      (("" (INST -1 "c" "l") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|sub_self| 0
  (|sub_self-1| |nil| 3741709351
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (CASE "cons2_var=null")
          (("1" (ASSERT)
            (("1" (REPLACE -1 1)
              (("1" (EXPAND "length" 1)
                (("1" (EXPAND "length" 1) (("1" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "zero_vec" 2)
              (("2" (ASSERT)
                (("2" (EXPAND "length" 2)
                  (("2" (ASSERT)
                    (("2" (EXPAND "-" 2)
                      (("2" (EXPAND "sub" 2)
                        (("2" (EXPAND "add" 2)
                          (("2" (EXPAND "scal" 2)
                            (("2" (DECOMPOSE-EQUALITY 2)
                              (("2" (EXPAND "-" -1)
                                (("2" (EXPAND "sub" -1)
                                  (("2" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|sub_sandwich| 0
  (|sub_sandwich-1| |nil| 3742031811
   ("" (SKEEP)
    (("" (LEMMA "sub_idx")
      (("" (LEMMA "add_commute")
        (("" (INST -1 "l1" "l2")
          (("" (REPLACE -1 1)
            (("" (LEMMA "sub_self")
              (("" (INST -1 "l1")
                (("" (LEMMA "sub_idx")
                  (("" (INST -1 "l2+l1" "l1")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "asso_add")
                        (("1" (INST -1 "l2" "l1" "(-1*l1)")
                          (("1" (ASSERT)
                            (("1" (REPLACE -1 1)
                              (("1" (INST -5 "l1" "l1")
                                (("1" (REPLACE -5 1 RL)
                                  (("1" (REPLACE -3 1)
                                    (("1" (TYPEPRED "l1")
                                      (("1" (REPLACE -8 1)
                                        (("1" (LEMMA "zero_id")
                                          (("1" (INST -1 "l2") NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (TYPEPRED "-1*l1")
                              (("2" (ASSERT)
                                (("2" (TYPEPRED "(-1 * l1)" "l1")
                                  (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|sub_equal_id| 0
  (|sub_equal_id-1| |nil| 3742211024
   ("" (SKEEP)
    (("" (LEMMA "sub_self")
      (("" (INST -1 "l2")
        (("" (LEMMA "asso_add")
          (("" (LEMMA "sub_idx")
            (("" (INST -1 "l2" "l2")
              (("" (REPLACE -1 -3)
                (("" (LEMMA "sub_idx")
                  (("" (INST -1 "l1+l2" "l2")
                    (("1" (REPLACE -1 1)
                      (("1" (INST -3 "l1" "l2" "-1*l2")
                        (("1" (ASSERT)
                          (("1" (REPLACE -3 1)
                            (("1" (REPLACE -4 1)
                              (("1" (LEMMA "zero_id")
                                (("1" (INST -1 "l1") (("1" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (TYPEPRED "-1 * l2")
                            (("2" (ASSERT)
                              (("2" (TYPEPRED "l2")
                                (("2" (ASSERT)
                                  (("2" (EXPAND "length" -)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (TYPEPRED "l1 + l2" "l1" "l2")
                      (("2" (ASSERT)
                        (("2" (EXPAND "length" -) (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|sub_equal_id1| 0
  (|sub_equal_id1-1| |nil| 3742211574
   ("" (SKEEP)
    (("" (LEMMA "sub_idx")
      (("" (INST -1 "l1" "l2")
        (("" (REPLACE -1 1)
          (("" (LEMMA "asso_add")
            (("" (INST -1 "l1" "(-1 * l2)" "l2")
              (("1" (ASSERT)
                (("1" (REPLACE -1 1)
                  (("1" (LEMMA "add_commute")
                    (("1" (INST -1 "(-1 * l2)" "l2")
                      (("1" (REPLACE -1 1)
                        (("1" (LEMMA "sub_idx")
                          (("1" (INST -1 "l2" "l2")
                            (("1" (REPLACE -1 1 RL)
                              (("1" (LEMMA "sub_self")
                                (("1" (INST -1 "l2")
                                  (("1" (REPLACE -1 1)
                                    (("1" (LEMMA "zero_id")
                                      (("1" (INST -1 "l1")
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "(-1 * l2)" "l2")
                        (("2" (EXPAND "length" -) (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (TYPEPRED "(-1 * l2)" "l2")
                (("2" (ASSERT)
                  (("2" (EXPAND "length" -) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|neg_1| 0
  (|neg_1-1| |nil| 3737366776
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (SPLIT)
          (("1" (INST -1 "cdr(l2)")
            (("1" (GRIND) NIL NIL)
             ("2" (CASE "NOT null?(cdr(l2))")
              (("1" (ASSERT) NIL NIL)
               ("2" (GRIND)
                (("2" (EXPAND "scal" 1 1)
                  (("2" (EXPAND "add" 1 1)
                    (("2" (LIFT-IF)
                      (("2" (SPLIT)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (CASE "NOT null?(cons2_var)")
            (("1" (ASSERT) NIL NIL)
             ("2" (GRIND)
              (("2" (EXPAND "scal" 1)
                (("2" (LIFT-IF)
                  (("2" (ASSERT)
                    (("2" (SPLIT)
                      (("1" (PROPAX) NIL NIL)
                       ("2" (FLATTEN)
                        (("2" (DECOMPOSE-EQUALITY 2)
                          (("2" (EXPAND "scal" 1)
                            (("2" (LIFT-IF)
                              (("2" (SPLIT)
                                (("1" (FLATTEN)
                                  (("1" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)
                                 ("2" (FLATTEN)
                                  (("2" (LIFT-IF)
                                    (("2" (ASSERT)
                                      (("2" (DECOMPOSE-EQUALITY 2)
                                        (("2" (LEMMA "neg_1_scal")
                                          (("2" (INST -1 "cdr(cdr(l2))")
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|l2| SKOLEM-CONST-DECL "(cons?)" |vector_arithmetic| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|neg_1_scal| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dist_1| 0
  (|dist_1-1| |nil| 3737446869
   ("" (INDUCT "l1")
    (("1" (SKEEP) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (ASSERT)
          (("3" (SPLIT)
            (("1" (INST -1 "c" "cdr(l2)")
              (("1" (ASSERT)
                (("1" (EXPAND "-" 1)
                  (("1" (EXPAND "sub" 1)
                    (("1" (EXPAND "scal" 1)
                      (("1" (EXPAND "add" 1)
                        (("1" (LIFT-IF)
                          (("1" (ASSERT)
                            (("1" (SPLIT)
                              (("1" (FLATTEN)
                                (("1" (ASSERT)
                                  (("1" (SPLIT)
                                    (("1" (FLATTEN)
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (ASSERT)
                                  (("2" (SPLIT)
                                    (("1" (FLATTEN)
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (DECOMPOSE-EQUALITY 2)
                                        (("1" (GRIND) NIL NIL)
                                         ("2" (GRIND) NIL NIL)
                                         ("3" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (CASE "NOT null?(cdr(l2))")
                (("1" (ASSERT) NIL NIL)
                 ("2" (EXPAND "-" 2)
                  (("2" (EXPAND "sub" 2)
                    (("2" (EXPAND "scal " 2)
                      (("2" (EXPAND "scal" 2)
                        (("2" (EXPAND "add" 2)
                          (("2" (GRIND)
                            (("2" (EXPAND "add" 1)
                              (("2" (EXPAND "scal" 1) (("2" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "-" 2)
                (("2" (EXPAND "sub" 2)
                  (("2" (EXPAND "scal" 2)
                    (("2" (LIFT-IF)
                      (("2" (SPLIT)
                        (("1" (GRIND) NIL NIL)
                         ("2" (GRIND)
                          (("2" (TYPEPRED "l2")
                            (("2" (TYPEPRED "cons2_var")
                              (("2" (DECOMPOSE-EQUALITY 2)
                                (("2" (LEMMA "asso_1_scal")
                                  (("2" (HIDE -2 -3)
                                    (("2" (LEMMA "asso_1_scal")
                                      (("2" (HIDE -2)
                                        (("2" (INST -1 "cdr(l2)" "c" "-1")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dist| 0
  (|dist-1| |nil| 3740471521
   ("" (INDUCT "l1")
    (("1" (SKEEP) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "null?(cons2_var)")
          (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "+" 2)
              (("2" (EXPAND "*" 2 2)
                (("2" (EXPAND "*" 2 2)
                  (("2" (EXPAND "scal" 2)
                    (("2" (EXPAND "add" 2)
                      (("2" (EXPAND "*" 2 1)
                        (("2" (EXPAND "scal" 2 1)
                          (("2" (DECOMPOSE-EQUALITY 2)
                            (("2" (INST -1 "c" "cdr(l2)")
                              (("1" (EXPAND "*" -1 1)
                                (("1" (EXPAND "+" -1 1)
                                  (("1" (EXPAND "*" -1 2)
                                    (("1" (EXPAND "*" -1 1)
                                      (("1" (EXPAND "+" -1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dist_scalar| 0
  (|dist_scalar-1| |nil| 3740471824
   ("" (INDUCT "ll")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (EXPAND "*" 1)
          (("3" (EXPAND "scal" 1)
            (("3" (EXPAND "+")
              (("3" (EXPAND "add" 1)
                (("3" (DECOMPOSE-EQUALITY 1)
                  (("3" (CASE "null?(cons2_var)")
                    (("1" (GRIND) NIL NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "*" -1) (("2" (INST -1 "c1" "c2") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dist_scalar_sub| 0
  (|dist_scalar_sub-1| |nil| 3740914753
   ("" (INDUCT "ll")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (CASE "cons2_var=null")
        (("1" (ASSERT) (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)) NIL)
         ("2" (ASSERT)
          (("2" (SKEEP)
            (("2" (EXPAND "*" 2 1)
              (("2" (EXPAND "scal" 2 1)
                (("2" (EXPAND "scal" 2 1)
                  (("2" (EXPAND "-" 2 4)
                    (("2" (EXPAND "sub" 2)
                      (("2" (EXPAND "scal" 2 2)
                        (("2" (LIFT-IF)
                          (("2" (SPLIT)
                            (("1" (ASSERT)
                              (("1"
                                (TYPEPRED "c2 * cons(cons1_var, cons2_var)")
                                (("1" (EXPAND "length" -2 2)
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (ASSERT)
                                (("2" (EXPAND "*" 2 8)
                                  (("2" (EXPAND "scal" 2 3)
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "add" 2 1)
                                        (("2" (LIFT-IF)
                                          (("2" (SPLIT)
                                            (("1"
                                              (TYPEPRED
                                               "c1 * cons(cons1_var, cons2_var)")
                                              (("1" (EXPAND "length" -2 2)
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (FLATTEN)
                                              (("2" (DECOMPOSE-EQUALITY 2)
                                                (("1" (GRIND) NIL NIL)
                                                 ("2" (EXPAND "*" 1 3)
                                                  (("2" (EXPAND "scal" 1 2)
                                                    (("2" (INST -1 "c1" "c2")
                                                      (("2" (EXPAND "*" -1)
                                                        (("2"
                                                          (EXPAND "scal" -1)
                                                          (("2"
                                                            (EXPAND "-" -1 3)
                                                            (("2"
                                                              (EXPAND "sub" -1
                                                                      1)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dist_list| 0
  (|dist_list-1| |nil| 3740741522
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (EXPAND "*" 1)
          (("3" (EXPAND "dot" 1)
            (("3" (ASSERT)
              (("3" (SPLIT)
                (("1" (LIFT-IF)
                  (("1" (SPLIT)
                    (("1" (FLATTEN)
                      (("1" (EXPAND "dot" 1)
                        (("1" (ASSERT)
                          (("1" (LIFT-IF)
                            (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (EXPAND "*" -1 1)
                        (("2" (EXPAND "+" 2 1)
                          (("2" (EXPAND "+" -1 1)
                            (("2" (EXPAND "add" 2 1)
                              (("2" (INST -1 "cdr(l2)" "cdr(l3)")
                                (("1" (REPLACE -1 2)
                                  (("1" (EXPAND "+" 2 3)
                                    (("1" (EXPAND "add" 2 1)
                                      (("1" (EXPAND "*" 2 1)
                                        (("1" (EXPAND "*" 2 1)
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (GRIND)
                                    (("2" (GRIND)
                                      (("2" (EXPAND "add" 2)
                                        (("2" (GRIND)
                                          (("2" (GRIND)
                                            (("2" (EXPAND "dot" 2)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|nth_dist_TCC1| 0
  (|nth_dist_TCC1-1| |nil| 3740760823 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|nth_dist| SUBTYPE "vector_arithmetic.i" "below[length[real](c * l)]")))
 (|nth_dist| 0
  (|nth_dist-1| |nil| 3740760824
   ("" (INDUCT "l")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "null?(cons2_var)")
          (("1" (GRIND) NIL NIL)
           ("2" (ASSERT)
            (("2" (SKEEP)
              (("2" (EXPAND "nth" 2)
                (("2" (CASE "i=0")
                  (("1" (ASSERT)
                    (("1" (EXPAND "*" 2)
                      (("1" (ASSERT)
                        (("1" (EXPAND "scal" 2 1) (("1" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (ASSERT)
                      (("2" (EXPAND "*" 3 1)
                        (("2" (EXPAND "scal" 3 1)
                          (("2" (INST -1 "c")
                            (("2" (INST -1 "i-1")
                              (("2" (ASSERT)
                                (("2" (EXPAND "*" -1 1)
                                  (("2" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (ASSERT)
        (("4" (SKEEP) (("4" (TYPEPRED "c*l") (("4" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK))
 (|nth_sum_TCC1| 0
  (|nth_sum_TCC1-1| |nil| 3740816175
   ("" (ASSERT)
    (("" (SKEEP)
      (("" (SKEEP)
        (("" (TYPEPRED "l1+l2")
          (("" (EXPAND "max" -2) (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|nth_sum| SUBTYPE "vector_arithmetic.i" "below[length[real](l1 + l2)]")))
 (|nth_sum_TCC2| 0
  (|nth_sum_TCC2-1| |nil| 3740816175 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL (|nth_sum| SUBTYPE "vector_arithmetic.i" "below[length[real](l2)]")))
 (|nth_sum| 0
  (|nth_sum-1| |nil| 3740816175
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (SKEEP)
            (("3" (CASE "cons2_var=null")
              (("1" (REPLACE -1 1)
                (("1" (CASE "i=0")
                  (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (EXPAND "+" 2)
                    (("2" (EXPAND "add" 2 1)
                      (("2" (EXPAND "add" 2 1)
                        (("2" (EXPAND "nth" 2 2)
                          (("2" (ASSERT)
                            (("2" (TYPEPRED "i-1")
                              (("2" (TYPEPRED "i")
                                (("2" (EXPAND "length" -1)
                                  (("2" (EXPAND "length" -1)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (EXPAND "+" 2 1)
                  (("2" (EXPAND "add" 2 1)
                    (("2" (CASE "i=0")
                      (("1" (REPLACE -1 2) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (INST -1 "cdr(l2)")
                        (("1" (ASSERT)
                          (("1" (TYPEPRED "cons2_var")
                            (("1" (TYPEPRED "l2")
                              (("1" (HIDE -1 -3)
                                (("1" (EXPAND "length" -3)
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "nth" 3)
                                      (("1" (INST -2 "i-1")
                                        (("1" (EXPAND "+" -2 1)
                                          (("1" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "length" -1)
                          (("2" (ASSERT)
                            (("2" (EXPAND "length" -1 1)
                              (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (SKEEP)
        (("4" (SKEEP) (("4" (TYPEPRED "i") (("4" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL)
     ("5" (SKEEP)
      (("5" (SKEEP)
        (("5" (SKEEP)
          (("5" (ASSERT)
            (("5" (TYPEPRED "l1+l2")
              (("5" (TYPEPRED "l2") (("5" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|nth_subtract_TCC1| 0
  (|nth_subtract_TCC1-1| |nil| 3789815130
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (TYPEPRED "l1-l2") (("" (TYPEPRED "i") (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|nth_subtract| SUBTYPE "vector_arithmetic.i"
    "below[length[real](l1 - l2)]")))
 (|nth_subtract| 0
  (|nth_subtract-1| |nil| 3789820192
   ("" (INDUCT "l1")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (CASE "cons2_var=null")
          (("1" (REPLACE -1)
            (("1" (SKEEP)
              (("1" (SKEEP)
                (("1" (TYPEPRED "i")
                  (("1" (EXPAND "length" -1 1)
                    (("1" (EXPAND "length" -1)
                      (("1" (ASSERT)
                        (("1" (EXPAND "nth" 1)
                          (("1" (ASSERT)
                            (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (SKEEP 2)
              (("2" (INST -1 "cdr(l2)")
                (("1" (SPLIT -1)
                  (("1" (SKEEP)
                    (("1" (CASE "i=0")
                      (("1" (REPLACE -1)
                        (("1" (HIDE -2 -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                       ("2" (INST -1 "i-1")
                        (("1" (EXPAND "nth" 3)
                          (("1" (ASSERT)
                            (("1" (EXPAND "-" 3 1)
                              (("1" (EXPAND "sub" 3 1)
                                (("1" (EXPAND "-" -1 1)
                                  (("1" (EXPAND "sub" -1 1)
                                    (("1" (EXPAND "add" 3 1)
                                      (("1" (ASSERT)
                                        (("1" (LIFT-IF 3)
                                          (("1" (SPLIT 3)
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (FLATTEN)
                                              (("2" (ASSERT)
                                                (("2" (EXPAND "scal" 2 1)
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (TYPEPRED "i")
                            (("2" (EXPAND "length" -1 1)
                              (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "length" -1) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL)
                 ("2" (EXPAND "length" -1)
                  (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (HIDE 2)
      (("4" (SKEEP)
        (("4" (SKEEP)
          (("4" (SKEEP) (("4" (TYPEPRED "i") (("4" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("5" (HIDE 2)
      (("5" (SKEEP)
        (("5" (SKEEP)
          (("5" (SKEEP) (("5" (TYPEPRED "l1-l2") (("5" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|sub_dist| 0
  (|sub_dist-1| |nil| 3741344819
   ("" (SKEEP)
    (("" (LEMMA "sub_idx")
      (("" (INST -1 "l1" "l2 + l3")
        (("1" (REPLACE -1 1)
          (("1" (LEMMA "dist")
            (("1" (INST -1 "-1" "l2" "l3")
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "sub_idx")
                  (("1" (LEMMA "asso_sub_commute")
                    (("1" (INST -2 "l1-l2" "l3")
                      (("1" (REPLACE -2 1)
                        (("1" (LEMMA "sub_idx")
                          (("1" (INST -1 "l1" "l2")
                            (("1" (REPLACE -1 1)
                              (("1" (ASSERT)
                                (("1" (LEMMA "asso_add")
                                  (("1" (INST -1 "l1" "(-1 * l2)" "(-1 * l3)")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (TYPEPRED "(-1 * l3)" "l3")
                                      (("2" (ASSERT)
                                        (("2" (TYPEPRED "l3")
                                          (("2" (EXPAND "length" -4)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (TYPEPRED "-1*l2")
                                      (("3" (TYPEPRED "l2")
                                        (("3" (EXPAND "length" -4)
                                          (("3" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "l1-l2" "l1" "l2")
                        (("2" (ASSERT)
                          (("2" (TYPEPRED "l1" "l2" "l1-l2")
                            (("2" (EXPAND "max")
                              (("2" (ASSERT)
                                (("2" (EXPAND "length" -6)
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (TYPEPRED "l2" "l3" "l2+l3")
          (("2" (ASSERT)
            (("2" (EXPAND "max" -6)
              (("2" (ASSERT)
                (("2" (EXPAND "length" -6) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|dot_linear| 0
  (|dot_linear-1| |nil| 3740741356
   ("" (LEMMA "dist_list")
    (("" (LEMMA "scal_asso")
      (("" (SKEEP)
        (("" (INST -2 "l1" "l2" "c*l3")
          (("1" (REPLACE -2 1)
            (("1" (INST -1 "l1" "l3" "c")
              (("1" (ASSERT)
                (("1" (REPLACE -1 1)
                  (("1" (LEMMA "asso_dot")
                    (("1" (INST -1 "c" "l1" "l3") (("1" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (CASE "NOT c=0")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (REPLACE -1 2)
                    (("2" (LEMMA "scal_zero")
                      (("2" (LEMMA "mult_zero")
                        (("2" (INST -1 "l3")
                          (("2" (REPLACE -1 2)
                            (("2" (LEMMA "mult_zero")
                              (("2" (INST -1 "l1")
                                (("2" (REPLACE -1 2)
                                  (("2" (LEMMA "dot_zero")
                                    (("2" (INST -1 "l1" "length(l3)")
                                      (("2" (REPLACE -1 2)
                                        (("2" (LEMMA "dot_commutes")
                                          (("2"
                                            (INST -1 "zero_vec(length(l1))"
                                             "l3")
                                            (("2" (REPLACE -1 2)
                                              (("2" (LEMMA "dot_zero")
                                                (("2"
                                                  (INST -1 "l3" "length(l1)")
                                                  (("2" (REPLACE -1 2)
                                                    (("2" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (TYPEPRED "c*l3")
            (("2" (TYPEPRED "l3")
              (("2" (ASSERT)
                (("2" (TYPEPRED "c*l3")
                  (("2" (TYPEPRED "l3")
                    (("2" (EXPAND "length" -4) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|dot_commutes| FORMULA-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|dot_short_TCC1| 0
  (|dot_short_TCC1-1| |nil| 3740829171
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (TYPEPRED "u")
        (("" (TYPEPRED "i") (("" (EXPAND "min" -1) (("" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL (|dot_short| SUBTYPE "vector_arithmetic.i" "below[length[real](u)]")))
 (|dot_short_TCC2| 0
  (|dot_short_TCC2-1| |nil| 3740829171
   ("" (SKEEP)
    (("" (GRIND) (("" (TYPEPRED "i") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL (|dot_short| SUBTYPE "vector_arithmetic.i" "below[length[real](v)]")))
 (|dot_short_TCC3| 0
  (|dot_short_TCC3-1| |nil| 3740847865 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|dot_short| SUBTYPE "(number_fields.-)(vector_arithmetic.i, 1)"
    "below(real_defs.min(list_props[real].length(vector_arithmetic.u), list_props[real].length(vector_arithmetic.v)))")))
 (|dot_short_TCC4| 0
  (|dot_short_TCC4-1| |nil| 3740847865 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|dot_short| TERMINATION
    "vector_arithmetic.dot_short(vector_arithmetic.u, vector_arithmetic.v, (number_fields.-)(vector_arithmetic.i, 1))"
    "NIL")))
 (|F_sum_TCC1| 0
  (|F_sum_TCC1-1| |nil| 3740901966 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL (|F_sum| SUBTYPE "vector_arithmetic.i" "below[length[real](u)]")))
 (|F_sum_TCC2| 0
  (|F_sum_TCC2-1| |nil| 3740901966 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL (|F_sum| SUBTYPE "vector_arithmetic.i" "below[length[real](v)]")))
 (|dot_short_is_sig| 0
  (|dot_short_is_sig-1| |nil| 3740901966
   ("" (SKEEP)
    (("" (INDUCT "i")
      (("1" (ASSERT)
        (("1" (FLATTEN)
          (("1" (EXPAND "dot_short" 1)
            (("1" (EXPAND "sigma" 1)
              (("1" (EXPAND "sigma" 1)
                (("1" (EXPAND "F_sum" 1)
                  (("1" (ASSERT)
                    (("1" (EXPAND "nth" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKEEP)
        (("2" (EXPAND "dot_short" 1)
          (("2" (EXPAND "sigma" 1)
            (("2" (EXPAND "F_sum" 1)
              (("2" (ASSERT)
                (("2" (EXPAND "F_sum" -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|F_shift| 0
  (|F_shift-1| |nil| 3740903539
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (EXPAND "F_sum" 1)
        ((""
          (CASE
              "1 + i < min(length(u), length(v)) IFF i < min(length(cdr(u)), length(cdr(v)))")
          (("1" (FLATTEN)
            (("1" (ASSERT)
              (("1" (SPLIT)
                (("1" (LIFT-IF)
                  (("1" (SPLIT)
                    (("1" (ASSERT)
                      (("1" (EXPAND "nth" 1 3)
                        (("1" (EXPAND "nth" 1 4) (("1" (PROPAX) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (PROPAX) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2)
            (("2" (EXPAND "length" 1 1)
              (("2" (EXPAND "length" 1 2)
                (("2" (EXPAND "min" 1 1)
                  (("2" (ASSERT)
                    (("2" (SPLIT)
                      (("1" (LIFT-IF)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "min" 1) (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (ASSERT)
                              (("2" (EXPAND "min" 2) (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (ASSERT)
                          (("2" (LIFT-IF)
                            (("2" (SPLIT)
                              (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                               ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|F_sum_shift| 0
  (|F_sum_shift-1| |nil| 3740903701
   ("" (SKEEP)
    (("" (LEMMA "F_shift")
      (("" (ASSERT)
        (("" (INST -1 "u" "v")
          (("" (ASSERT)
            (("" (LEMMA "sigma_shift_T")
              ((""
                (INST -1 "F_sum(u, v)" "min(length(cdr(u)), length(cdr(v)))"
                 "0" "1")
                (("" (ASSERT)
                  ((""
                    (CASE
                        "min(length(u), length(v)) = 1 + min(length(cdr(u)), length(cdr(v)))")
                    (("1" (ASSERT)
                      (("1" (REPLACE -1 -2 RL)
                        (("1" (REPLACE -2 1)
                          (("1"
                            (CASE
                                "(LAMBDA (i: nat): F_sum(u, v)(1 + i)) = F_sum(cdr(u), cdr(v))")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (HIDE 2)
                              (("2" (APPLY-EXTENSIONALITY 1)
                                (("2" (INST -3 "x!1")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (EXPAND "F_sum" 2)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE -) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|sigma_shift_T| FORMULA-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|))
   SHOSTAK))
 (|dot_is_sig| 0
  (|dot_is_sig-1| |nil| 3740902260
   ("" (INDUCT "u" 1)
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "cons2_var = null")
          (("1" (GRIND) NIL NIL)
           ("2" (ASSERT)
            (("2" (LEMMA "F_sum_shift")
              (("2" (INST -1 "cons(cons1_var, cons2_var)" "v")
                (("2" (ASSERT)
                  (("2" (CASE "cdr(v)=null")
                    (("1" (EXPAND "*" 2 1)
                      (("1" (EXPAND "dot" 2 1)
                        (("1" (EXPAND "dot" 2)
                          (("1" (ASSERT)
                            (("1" (EXPAND "sigma" 2 1)
                              (("1" (EXPAND "length" 2 2)
                                (("1" (EXPAND "length" 2 2)
                                  (("1" (EXPAND "length" 2 3)
                                    (("1" (EXPAND "length" 2 3)
                                      (("1" (EXPAND "length" 2 1)
                                        (("1" (EXPAND "length" 2 2)
                                          (("1" (ASSERT)
                                            (("1" (EXPAND "min" 2 1)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "length" 2 1)
                                                  (("1" (ASSERT)
                                                    (("1" (LIFT-IF)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (EXPAND "min" 2 1)
                                                          (("1" (LIFT-IF)
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (EXPAND
                                                                 "length" 2 1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "sigma" 2)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "sigma"
                                                                       2)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "F_sum")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (GRIND)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "*" 3 1)
                        (("2" (EXPAND "dot" 3 1)
                          (("2" (INST -2 "cdr(v)")
                            (("2" (EXPAND "*" -2 1)
                              (("2" (REPLACE -1 -2 RL)
                                (("2" (LEMMA "sigma_first")
                                  (("2"
                                    (INST -1
                                     "F_sum(cons(cons1_var, cons2_var), v)"
                                     "min(length(cons(cons1_var, cons2_var)), length(v))"
                                     "0")
                                    (("2" (ASSERT)
                                      (("2" (REPLACE -1 3)
                                        (("2" (EXPAND "F_sum" 3 1)
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "length" 3 1)
                                              (("2" (EXPAND "length" 3 2)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (CASE
                                                        " 0 < min(1 + length(cons2_var), 1 + length(cdr(v)))")
                                                    (("1" (ASSERT)
                                                      (("1" (EXPAND "nth" 3 1)
                                                        (("1"
                                                          (EXPAND "nth" 3 1)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE -)
                                                      (("2" (HIDE 4)
                                                        (("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sigma_first| FORMULA-DECL NIL |sigma| |reals|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_is_sig2| 0
  (|dot_is_sig2-1| |nil| 3740905542
   ("" (LEMMA "dot_is_sig")
    (("" (SKEEP)
      (("" (INST -1 "u" "v")
        (("" (EXPAND "sigma" 1) (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sigma| DEF-DECL "real" |sigma| |reals|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_short_is_dot_TCC1| 0
  (|dot_short_is_dot_TCC1-1| |nil| 3740843473
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (ASSERT)
        (("1" (TYPEPRED "u") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL))
        NIL)
       ("2" (GRIND) NIL NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|dot_short_is_dot| SUBTYPE
    "(number_fields.-)(list_props[real].length(vector_arithmetic.u), 1)"
    "below(real_defs.min(list_props[real].length(vector_arithmetic.u), list_props[real].length(vector_arithmetic.v)))")))
 (|dot_short_is_dot| 0
  (|dot_short_is_dot-1| |nil| 3740843474
   ("" (SKEEP)
    (("" (LEMMA "dot_is_sig")
      (("" (LEMMA "dot_short_is_sig")
        (("" (INST -1 "u" "v" "length(u)-1")
          (("1" (INST -2 "u" "v")
            (("1" (EXPAND "min" -2)
              (("1" (ASSERT)
                (("1" (EXPAND "sigma" -2)
                  (("1" (EXPAND "F_sum" -2 1)
                    (("1" (ASSERT)
                      (("1" (EXPAND "min" -2) (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (TYPEPRED "u")
            (("2" (ASSERT) (("2" (HIDE -1 -3 2) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|))
   SHOSTAK))
 (|dot_is_sigma_TCC1| 0
  (|dot_is_sigma_TCC1-1| |nil| 3853935772 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL
   (|dot_is_sigma| SUBTYPE "vector_arithmetic.i" "below[length[real](v)]")))
 (|dot_is_sigma| 0
  (|dot_is_sigma-1| |nil| 3853935816
   ("" (SKEEP)
    (("" (LEMMA "dot_is_sig2")
      (("" (INST?)
        (("" (REPLACE -1)
          (("" (ASSERT)
            ((""
              (CASE "F_sum(u,v) = LAMBDA (i: nat):
               IF i < length(u) THEN nth(u, i) * nth(v, i) ELSE 0 ENDIF")
              (("1" (ASSERT)
                (("1" (REPLACE -1)
                  (("1" (EXPAND "min" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (HIDE 2)
                (("2" (DECOMPOSE-EQUALITY 1)
                  (("1" (EXPAND "F_sum" 1)
                    (("1" (EXPAND "min" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)
                   ("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("3" (HIDE 2) (("3" (SKEEP) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_prod_zero| 0
  (|dot_prod_zero-1| |nil| 3798284288
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "*" 1 1)
          (("2" (EXPAND "zero_vec" 1)
            (("2" (EXPAND "dot" 1)
              (("2" (ASSERT)
                (("2" (LIFT-IF 1)
                  (("2" (SPLIT 1)
                    (("1" (PROPAX) NIL NIL)
                     ("2" (FLATTEN)
                      (("2" (ASSERT)
                        (("2" (INST -1 "cdr(v)")
                          (("2" (ASSERT)
                            (("2" (EXPAND "*" -1) (("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_prod_e_TCC1| 0
  (|dot_prod_e_TCC1-1| |nil| 3798283832 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|dot_prod_e| SUBTYPE "vector_arithmetic.i" "below[length[real](v)]")))
 (|dot_prod_e| 0
  (|dot_prod_e-1| |nil| 3798284131
   ("" (INDUCT "n")
    (("1" (SKEEP) NIL NIL)
     ("2" (ASSERT)
      (("2" (SKEEP)
        (("2" (SKEEP)
          (("2" (CASE "i=0")
            (("1" (EXPAND "*" 1 1)
              (("1" (EXPAND "dot" 1 1)
                (("1" (EXPAND "e" 1 1)
                  (("1" (ASSERT)
                    (("1" (EXPAND "e" 1)
                      (("1" (EXPAND "nth" 1)
                        (("1" (LEMMA "dot_prod_zero")
                          (("1" (INST -1 "j" "cdr(v)")
                            (("1" (ASSERT)
                              (("1" (EXPAND "*" -1) (("1" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "*" 2 1)
                (("2" (EXPAND "e" 2 1)
                  (("2" (EXPAND "dot" 2 1)
                    (("2" (INST -1 "i-1" "cdr(v)")
                      (("1" (EXPAND "*" -1)
                        (("1" (EXPAND "nth" 2 1) (("1" (PROPAX) NIL NIL)) NIL))
                        NIL)
                       ("2" (TYPEPRED "v")
                        (("2" (EXPAND "length " -2) (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_equality| 0
  (|dot_equality-1| |nil| 3740906241
   ("" (INDUCT "u" 1)
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "cons2_var = null")
          (("1" (REPLACE -1 -4)
            (("1" (REPLACE -1 1)
              (("1" (DECOMPOSE-EQUALITY 1)
                (("1" (EXPAND "length" -3)
                  (("1" (EXPAND "length" -3)
                    (("1" (ASSERT)
                      (("1" (LIFT-IF)
                        (("1" (ASSERT)
                          (("1" (SPLIT)
                            (("1" (ASSERT)
                              (("1" (SPLIT)
                                (("1" (ASSERT)
                                  (("1" (INST -4 "(: 1:)")
                                    (("1" (EXPAND "*" -4)
                                      (("1" (EXPAND "dot" -4)
                                        (("1" (EXPAND "dot" -4)
                                          (("1" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("2" (SPLIT)
                              (("1" (ASSERT)
                                (("1" (INST -3 "(:1:)") (("1" (GRIND) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "length" -3)
                  (("2" (HIDE -2 -4) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (DECOMPOSE-EQUALITY 2)
              (("1" (INST -3 "(:1:)")
                (("1" (HIDE -1 -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)
               ("2" (INST -1 "cdr(v)")
                (("1" (ASSERT)
                  (("1" (SPLIT)
                    (("1" (EXPAND "length" -1) (("1" (PROPAX) NIL NIL)) NIL)
                     ("2" (SKEEP)
                      (("2" (INST -2 "cons( 0, w)") (("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (CASE "cdr(v)=null")
                    (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_equality1| 0
  (|dot_equality1-1| |nil| 3740907760
   ("" (INDUCT "u" 1)
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "cons2_var = null")
          (("1" (REPLACE -1 -4)
            (("1" (REPLACE -1 1)
              (("1" (DECOMPOSE-EQUALITY 1)
                (("1" (EXPAND "length" -3)
                  (("1" (EXPAND "length" -3)
                    (("1" (ASSERT)
                      (("1" (LIFT-IF)
                        (("1" (ASSERT)
                          (("1" (SPLIT)
                            (("1" (ASSERT)
                              (("1" (SPLIT)
                                (("1" (ASSERT)
                                  (("1" (INST -4 "(: 1:)")
                                    (("1" (EXPAND "*" -4)
                                      (("1" (EXPAND "dot" -4)
                                        (("1" (EXPAND "dot" -4)
                                          (("1" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (EXPAND "length" 1)
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("2" (SPLIT)
                              (("1" (ASSERT)
                                (("1" (INST -3 "(:1:)")
                                  (("1" (GRIND) NIL NIL)
                                   ("2" (EXPAND "length" 1)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "length" -3)
                  (("2" (HIDE -2 -4) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (DECOMPOSE-EQUALITY 2)
              (("1" (TYPEPRED "v")
                (("1" (INST -5 "e(length(cons(cons1_var, cons2_var)),0)")
                  (("1" (EXPAND "*" -5)
                    (("1" (EXPAND "dot" -5)
                      (("1" (ASSERT)
                        (("1"
                          (TYPEPRED "e(length(cons(cons1_var, cons2_var)), 0)")
                          (("1" (ASSERT)
                            (("1" (HIDE -1 -3)
                              (("1" (EXPAND "length" -1)
                                (("1" (EXPAND "length" -4)
                                  (("1" (ASSERT)
                                    (("1"
                                      (CASE
                                          "e(1 + length[real](cons2_var), 0) =null")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (ASSERT)
                                        (("2" (LIFT-IF)
                                          (("2" (EXPAND "length" -5)
                                            (("2" (ASSERT)
                                              (("2" (EXPAND "e" -5)
                                                (("2" (ASSERT)
                                                  (("2" (LEMMA "dot_zero")
                                                    (("2"
                                                      (INST-CP -1 "cons2_var"
                                                       "length[real](cons2_var)")
                                                      (("2" (ASSERT)
                                                        (("2" (EXPAND "*" -2)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (REPLACE -2 -7)
                                                              (("2"
                                                                (INST -1
                                                                 "cdr(v)"
                                                                 "length[real](cons2_var)")
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (EXPAND "*"
                                                                            -1)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -1 -7)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (ASSERT)
                                                                  (("2"
                                                                    (CASE
                                                                        "NOT cdr(v)=null")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (HIDE -2
                                                                       -3 -5)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "dot"
                                                                           -4)
                                                                          (("2"
                                                                            (PROPAX)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("2" (INST -1 "cdr(v)")
                (("1" (ASSERT)
                  (("1" (EXPAND "length" -1)
                    (("1" (ASSERT)
                      (("1" (SKEEP)
                        (("1" (INST -2 "cons(0, w)")
                          (("1" (GRIND) NIL NIL)
                           ("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (CASE "cdr(v)=null")
                    (("1" (EXPAND "length" -2)
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL))
 (|dot_equality_e| 0
  (|dot_equality_e-1| |nil| 3853424285
   ("" (SKEEP)
    (("" (LEMMA "list_extensionality[real]")
      (("" (INST?)
        (("" (ASSERT)
          (("" (SKEEP)
            (("" (INST -2 "n")
              (("" (LEMMA "dot_prod_e")
                (("" (INST?)
                  (("" (ASSERT)
                    (("" (REPLACE -1)
                      (("" (LEMMA "dot_prod_e")
                        (("" (INST -1 "length(v)" "n" "v")
                          (("" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_scalar1| 0
  (|dot_scalar1-1| |nil| 3741515791
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (ASSERT)
      (("3" (SKEEP)
        (("3" (SKEEP)
          (("3" (CASE "cons2_var=null")
            (("1" (REPLACE -1 1) (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "*" 2)
                (("2" (EXPAND "dot" 2)
                  (("2" (EXPAND "scal" 2)
                    (("2" (ASSERT)
                      (("2" (EXPAND "*" -1)
                        (("2" (INST -1 "cdr(l2)" "c")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (CASE "NOT cdr(l2)=null")
                              (("1" (ASSERT) NIL NIL) ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_dist| 0
  (|dot_dist-1| |nil| 3741523118
   ("" (INDUCT "l1")
    (("1" (SKEEP) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "cons2_var=null")
          (("1" (REPLACE -1 1) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "*" 2)
              (("2" (EXPAND "+" 2)
                (("2" (EXPAND "dot" 2)
                  (("2" (EXPAND "add" 2)
                    (("2" (INST -1 "cdr(l2)" "cdr(l3)")
                      (("1" (ASSERT)
                        (("1" (EXPAND "*" -1)
                          (("1" (ASSERT)
                            (("1" (EXPAND "+" -1) (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (GRIND)
                        (("2" (TYPEPRED "l3")
                          (("2" (CASE "NOT cdr(l3)=null")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (GRIND)
                              (("2" (EXPAND "dot") (("2" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "l2")
                        (("3" (CASE "NOT cdr(l2) = null")
                          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dot_dist_sub| 0
  (|dot_dist_sub-1| |nil| 3741957166
   ("" (INDUCT "l1")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP)
        (("3" (CASE "cons2_var=null")
          (("1" (ASSERT)
            (("1" (REPLACE -1 1) (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "*" 2)
              (("2" (EXPAND "dot" 2)
                (("2" (EXPAND "-" 2)
                  (("2" (EXPAND "sub" 2)
                    (("2" (EXPAND "add" 2)
                      (("2" (EXPAND "scal" 2)
                        (("2" (ASSERT)
                          (("2" (INST -1 "cdr(l2)" "cdr(l3)")
                            (("1" (ASSERT)
                              (("1" (EXPAND "length" -2)
                                (("1" (EXPAND "length" -3)
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "*" -1)
                                      (("1" (EXPAND "-" -1)
                                        (("1" (EXPAND "sub" -1)
                                          (("1" (EXPAND "add" -1)
                                            (("1" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (CASE "NOT cdr(l3)=null")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (ASSERT)
                                (("2" (REPLACE -1 3) (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (CASE "NOT cdr(l2)=null")
                              (("1" (ASSERT) NIL NIL) ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|dot| DEF-DECL "real" |matrices| |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|quad_cancel| 0
  (|quad_cancel-1| |nil| 3742828209
   ("" (SKEEP)
    (("" (LEMMA "sub_idx")
      (("" (INST -1 " l1 - l2" "(l3 - l2)")
        (("1" (REPLACE -1 1)
          (("1" (LEMMA "sub_idx")
            (("1" (INST -1 "l3" "l2")
              (("1" (REPLACE -1 1)
                (("1" (LEMMA "sub_idx")
                  (("1" (INST -1 "l1" "l2")
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "dist")
                        (("1" (INST -1 "-1" "l3" "(-1 * l2)")
                          (("1" (REPLACE -1 1)
                            (("1" (LEMMA "asso_v")
                              (("1" (INST -1 "-1" "-1" "l2")
                                (("1" (REPLACE -1 1)
                                  (("1" (ASSERT)
                                    (("1" (CASE "NOT -1*-1 = 1")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (REPLACE -1 1)
                                        (("2" (LEMMA "one_idx")
                                          (("2" (INST -1 "l2")
                                            (("2" (REPLACE -1 1)
                                              (("2" (LEMMA "asso_add")
                                                (("2"
                                                  (INST -1 "l1" "(-1 * l2)"
                                                   "(-1 * l3 + l2)")
                                                  (("1" (ASSERT)
                                                    (("1" (SPLIT)
                                                      (("1" (REPLACE -1 1)
                                                        (("1"
                                                          (LEMMA "asso_add")
                                                          (("1"
                                                            (INST -1
                                                             "(-1 * l2)"
                                                             "-1 * l3" "l2")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (REPLACE -1 1
                                                                         RL)
                                                                (("1"
                                                                  (REPLACE -1 1
                                                                           LR)
                                                                  (("1"
                                                                    (REPLACE -1
                                                                             1
                                                                             RL)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "add_commute")
                                                                      (("1"
                                                                        (INST
                                                                         -1
                                                                         "(-1 * l2)"
                                                                         "l2")
                                                                        (("1"
                                                                          (LEMMA
                                                                           "add_commute")
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "(-1 * l2)"
                                                                             "-1 * l3 + l2")
                                                                            (("1"
                                                                              (REPLACE
                                                                               -1
                                                                               -3)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -3
                                                                                 1)
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "sub_idx")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     " l2"
                                                                                     "l2")
                                                                                    (("1"
                                                                                      (LEMMA
                                                                                       "asso_add")
                                                                                      (("1"
                                                                                        (INST
                                                                                         -1
                                                                                         "-1*l3"
                                                                                         "l2"
                                                                                         "-1*l2")
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (REPLACE
                                                                                             -1
                                                                                             1)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -2
                                                                                               1
                                                                                               RL)
                                                                                              (("1"
                                                                                                (LEMMA
                                                                                                 "sub_self")
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -1
                                                                                                   "l2")
                                                                                                  (("1"
                                                                                                    (REPLACE
                                                                                                     -1
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (LEMMA
                                                                                                       "zero_id")
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -1
                                                                                                         "-1*l3")
                                                                                                        (("1"
                                                                                                          (CASE
                                                                                                              "length(-1 * l3) =length(l2)")
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -1
                                                                                                             1
                                                                                                             RL)
                                                                                                            (("1"
                                                                                                              (REPLACE
                                                                                                               -2
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (LEMMA
                                                                                                                 "sub_idx")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (INST
                                                                                                                     -1
                                                                                                                     "l1"
                                                                                                                     "l3")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (TYPEPRED
                                                                                             "-1*l2"
                                                                                             "l2")
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "length"
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("3"
                                                                                          (HIDE
                                                                                           -)
                                                                                          (("3"
                                                                                            (TYPEPRED
                                                                                             "-1*l3"
                                                                                             "l3")
                                                                                            (("3"
                                                                                              (ASSERT)
                                                                                              (("3"
                                                                                                (EXPAND
                                                                                                 "length"
                                                                                                 -)
                                                                                                (("3"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (HIDE
                                                                                 -)
                                                                                (("2"
                                                                                  (TYPEPRED
                                                                                   "-1 * l3 + l2"
                                                                                   "-1*l3"
                                                                                   "l2"
                                                                                   "l3")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "max"
                                                                                       -)
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "length"
                                                                                           -4)
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "length"
                                                                                               -2)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (GRIND)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("3"
                                                                              (HIDE
                                                                               -)
                                                                              (("3"
                                                                                (TYPEPRED
                                                                                 "-1*l2"
                                                                                 "l2")
                                                                                (("3"
                                                                                  (EXPAND
                                                                                   "length"
                                                                                   -)
                                                                                  (("3"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE
                                                                           -)
                                                                          (("2"
                                                                            (TYPEPRED
                                                                             "-1*l2"
                                                                             "l2")
                                                                            (("2"
                                                                              (EXPAND
                                                                               "length"
                                                                               -)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (TYPEPRED "-1*l3"
                                                               "l3")
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (EXPAND
                                                                   "length" -)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3"
                                                              (TYPEPRED "-1*l2"
                                                               "l2")
                                                              (("3"
                                                                (EXPAND
                                                                 "length" -)
                                                                (("3" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (TYPEPRED "(-1 * l2)"
                                                         "l2" "(-1 * l3 + l2)"
                                                         "-1*l3" "l3")
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND "max" -)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (TYPEPRED "(-1 * l3 + l2)"
                                                     "l2" "-1*l3" "l3")
                                                    (("2" (EXPAND "max" -)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (EXPAND "length" -)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (HIDE -9 -10 -11
                                                               -12 -13 -14 -15)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (HIDE -)
                                                    (("3"
                                                      (TYPEPRED "(-1 * l2)"
                                                       "l2")
                                                      (("3" (ASSERT)
                                                        (("3"
                                                          (EXPAND "length" -2)
                                                          (("3" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "(-1 * l2)" "l2")
                            (("2" (EXPAND "length" -2) (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (TYPEPRED "l3-l2" "l2" "l3")
          (("2" (EXPAND "max" -)
            (("2" (ASSERT)
              (("2" (EXPAND "length" -) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL)
         ("3" (TYPEPRED "l1-l2" "l2" "l1")
          (("3" (EXPAND "length" -) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   SHOSTAK))
 (|quad_cancel_plus| 0
  (|quad_cancel_plus-1| |nil| 3787997957
   ("" (SKEEP)
    (("" (CASE " (l1 - l2) + (l2 - l3) =  (l1 - l2) - (l3 - l2)")
      (("1" (REPLACE -1)
        (("1" (LEMMA "quad_cancel")
          (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (EXPAND "-" 1 4)
          (("2" (EXPAND "sub" 1 1)
            (("2" (LEMMA "neg_1")
              (("2" (INST -1 "l3" "l2")
                (("2" (EXPAND "*" -1)
                  (("2" (REPLACE -1)
                    (("2" (EXPAND "+" 1 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|))
   SHOSTAK))
 (|quad_move| 0
  (|quad_move-1| |nil| 3788285468
   ("" (SKEEP)
    (("" (LEMMA "sub_dist")
      (("" (INST -1 "(l1+l2)" "l3" "l4")
        (("1" (ASSERT)
          (("1" (SPLIT -1)
            (("1" (REPLACE -1 1)
              (("1" (EXPAND "-" 1 1)
                (("1" (LEMMA "asso_add")
                  (("1" (LEMMA "add_commute")
                    (("1" (INST -1 "l1" "l2")
                      (("1" (REPLACE -1 1)
                        (("1" (EXPAND "sub" 1 1)
                          (("1" (INST -2 "l2" "l1" "scal(-1,l3)")
                            (("1" (ASSERT)
                              (("1" (EXPAND "+" -2 2)
                                (("1" (REPLACE -2 1)
                                  (("1" (LEMMA "add_commute")
                                    (("1" (INST -1 "l2" "l1+scal(-1,l3)")
                                      (("1" (REPLACE -1 1)
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "asso_add")
                                            (("1"
                                              (INST -1 "l1+scal(-1,l3)" "l2"
                                               "scal(-1,l4)")
                                              (("1" (ASSERT)
                                                (("1" (SPLIT -1)
                                                  (("1" (GRIND) NIL NIL)
                                                   ("2"
                                                    (TYPEPRED "l1+scal(-1,l3)"
                                                     "l1" "scal(-1,l3)" "l3")
                                                    (("2" (ASSERT)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3"
                                                    (TYPEPRED "scal(-1,l4)"
                                                     "l2")
                                                    (("3" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (GRIND) NIL NIL)
                                               ("3" (GRIND) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (TYPEPRED "l1+l2" "l1" "l2" "l3")
                (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|sub_dist| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|asso_add| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|l4| SKOLEM-CONST-DECL "(cons?)" |vector_arithmetic| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|l3| SKOLEM-CONST-DECL "(cons?)" |vector_arithmetic| NIL)
    (|add_commute| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|l1| SKOLEM-CONST-DECL "(cons?)" |vector_arithmetic| NIL)
    (|l2| SKOLEM-CONST-DECL "(cons?)" |vector_arithmetic| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|quad_cancel_p_m| 0
  (|quad_cancel_p_m-1| |nil| 3789300286
   ("" (SKEEP)
    (("" (LEMMA "quad_move")
      (("" (INST?)
        (("" (ASSERT)
          (("" (REPLACE -1 1)
            (("" (LEMMA "sub_self")
              (("" (INST?)
                (("" (REPLACE -1 1)
                  (("" (LEMMA "zero_id")
                    (("" (LEMMA "add_commute")
                      (("" (INST -1 "zero_vec(length(l1))" "(l2 - l3)")
                        (("1" (INST -2 "(l2 - l3)") (("1" (ASSERT) NIL NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (HIDE -)
                            (("2" (TYPEPRED "l2-l3" "l2" "l3" "l1")
                              (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (HIDE -1 -2 -3)
                          (("3" (HIDE 2)
                            (("3" (TYPEPRED "l1" "l2" "l3")
                              (("3" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|quad_cancel_tail| 0
  (|quad_cancel_tail-1| |nil| 3798117212
   ("" (SKEEP)
    (("" (EXPAND "-" 1)
      (("" (EXPAND "sub" 1)
        (("" (LEMMA "asso_add")
          (("" (INST -1 "add(l1, scal(-1, l2))" "scal(-1, l3)" "l3")
            (("1" (EXPAND "+" 1)
              (("1" (SPLIT -1)
                (("1" (EXPAND "+" -1)
                  (("1" (REPLACE -1 1)
                    (("1" (LEMMA "add_commute")
                      (("1" (INST -1 "scal(-1, l3)" "l3")
                        (("1" (EXPAND "+" -1 1)
                          (("1" (REPLACE -1 1 LR)
                            (("1" (LEMMA "sub_self")
                              (("1" (INST -1 "l3")
                                (("1" (EXPAND "-" -1)
                                  (("1" (EXPAND "sub" -1)
                                    (("1" (EXPAND "+" 1)
                                      (("1" (REPLACE -1 1)
                                        (("1" (LEMMA "zero_id")
                                          (("1"
                                            (INST -1 "add(l1, scal(-1, l2))")
                                            (("1"
                                              (CASE
                                                  "length(add(l1, scal(-1, l2))) = length(l3)")
                                              (("1" (REPLACE -1)
                                                (("1" (EXPAND "+" -2)
                                                  (("1" (REPLACE -2 1)
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2"
                                                  (TYPEPRED
                                                   "add(l1, scal(-1, l2))"
                                                   "scal(-1, l2)" "l3")
                                                  (("2" (HIDE -1 -3 -5)
                                                    (("2" (REPLACE -2)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (TYPEPRED "scal(-1, l3)" "l3")
                            (("2" (ASSERT)
                              (("2" (EXPAND "length" -)
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (HIDE 2)
                    (("2"
                      (TYPEPRED "add(l1, scal(-1, l2))" " scal(-1, l2)"
                       "scal(-1, l3)")
                      (("2" (ASSERT)
                        (("2" (HIDE -1 -3 -5)
                          (("2" (REPLACE -2)
                            (("2" (REPLACE -3) (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (ASSERT) NIL NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (TYPEPRED "scal(-1, l3)" "l3") (("2" (GRIND) NIL NIL))
                NIL))
              NIL)
             ("3" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|))
   SHOSTAK))
 (|add_sub_zero| 0
  (|add_sub_zero-1| |nil| 3740929012
   ("" (SKEEP)
    (("" (LEMMA "dist_scalar")
      (("" (LEMMA "one_idx")
        (("" (INST -1 "u")
          (("" (CASE "not u + (c - 1) * u = 1*u + (c - 1) * u ")
            (("1" (ASSERT) NIL NIL)
             ("2" (ASSERT)
              (("2" (REPLACE -1 1 LR)
                (("2" (INST -3 "1" "c-1" "u") (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK)))

