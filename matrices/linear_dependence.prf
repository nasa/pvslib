(|linear_dependence| (|zerow_TCC1| 0 (|zerow_TCC1-2| "" 3883696643 ("" (SKEEP) (("" (SPLASH +) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (FLATTEN) (("3" (SKEEP) (("3" (CASE "i=0") (("1" (CASE "j=0") (("1" (GRIND) NIL NIL) ("2" (TYPEPRED ("j")) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (GRIND) (("2" (TYPEPRED ("i")) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|zerow| SUBTYPE "(: matrices.zero(linear_dependence.p) :)" "PosFullMatrix")) (|zerow_TCC1-1| |nil| 3620493442 ("" (SKEEP) (("" (SPLASH +) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (FLATTEN) (("3" (SKEEP) (("3" (CASE "i=0") (("1" (CASE "j=0") (("1" (GRIND) NIL NIL) ("2" (TYPEPRED (J)) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (GRIND) (("2" (TYPEPRED (I)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|zero| CONST-DECL "VectorN(n)" |matrices| NIL) (|VectorN| TYPE-EQ-DECL NIL |matrices| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|array2list| CONST-DECL "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list| |structures|) (|array2list_it| DEF-DECL "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}" |array2list| |structures|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)) NIL (|zerow| SUBTYPE "(: matrices.zero(linear_dependence.p) :)" "PosFullMatrix"))) (|zerow_dim| 0 (|zerow_dim-1| |nil| 3620567942 ("" (SKEEP) (("" (SPLIT 1) (("1" (EXPAND "rows") (("1" (GROUND) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (EXPAND "zerow") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|zerow| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|zero| CONST-DECL "VectorN(n)" |matrices| NIL) (|array2list| CONST-DECL "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list| |structures|) (|array2list_it| DEF-DECL "{l: listn(n - i) | FORALL (j: subrange(i, n - 1)): a(j) = nth(l, j - i)}" |array2list| |structures|) (|rows| CONST-DECL "nat" |matrices| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)) SHOSTAK)) (|zecolumn_dim| 0 (|zecolumn_dim-1| |nil| 3620568042 ("" (SKEEP) (("" (EXPAND "zecolumn") (("" (REWRITE "rows_transpose") (("" (REWRITE "columns_transpose") (("" (LEMMA "zerow_dim") (("" (INST?) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|zecolumn| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|columns_transpose| FORMULA-DECL NIL |matrices| NIL) (|zerow_dim| FORMULA-DECL NIL |linear_dependence| NIL) (|zerow| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|rows_transpose| FORMULA-DECL NIL |matrices| NIL)) SHOSTAK)) (|row2mat_TCC1| 0 (|row2mat_TCC1-3| "" 3883696706 ("" (SKEEP) (("" (SPLASH) (("1" (TYPEPRED ("A")) (("1" (EXPAND "columns") (("1" (GROUND) (("1" (EXPAND "columns") (("1" (CASE "length(row(A)(j)) = columns(A)") (("1" (GROUND) NIL NIL) ("2" (GROUND) (("2" (REWRITE "length_row") (("2" (TYPEPRED ("j")) (("2" (EXPAND "rows") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (GRIND) NIL NIL)) NIL) ("3" (FLATTEN) (("3" (SKEEP) (("3" (CASE "i=0") (("1" (CASE-REPLACE "j_1=0") (("1" (REPLACE -2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (TYPEPRED ("j_1")) (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED ("i")) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|row2mat| SUBTYPE "(: matrices.row(linear_dependence.A)(linear_dependence.j) :)" "PosFullMatrix")) (|row2mat_TCC1-2| "" 3790097803 ("" (SKEEP) (("" (SPLASH) (("1" (TYPEPRED (A)) (("1" (EXPAND "columns") (("1" (GROUND) (("1" (EXPAND "columns") (("1" (CASE "length(row(A)(j)) = columns(A)") (("1" (GROUND) NIL NIL) ("2" (GROUND) (("2" (REWRITE "length_row") (("2" (TYPEPRED (J)) (("2" (EXPAND "rows") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (GRIND) NIL NIL)) NIL) ("3" (FLATTEN) (("3" (SKEEP) (("3" (CASE "i=0") (("1" (CASE-REPLACE "j_1=0") (("1" (REPLACE -2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (TYPEPRED (J_1)) (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED (I)) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (|row| CONST-DECL "Vector" |matrices| NIL) (|Vector| TYPE-EQ-DECL NIL |matrices| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_max| APPLICATION-JUDGEMENT "{k: int | i <= k AND j <= k}" |real_defs| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|length_row| FORMULA-DECL NIL |matrices| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)) SHOSTAK (|row2mat| SUBTYPE "(: matrices.row(linear_dependence.A)(linear_dependence.j) :)" "PosFullMatrix")) (|row2mat_TCC1-1| |nil| 3620493442 ("" (SKEEP) (("" (SPLASH) (("1" (TYPEPRED (A)) (("1" (EXPAND "columns") (("1" (GROUND) (("1" (EXPAND "columns") (("1" (GROUND) (("1" (CASE "length(row(A)(j)) = columns(A)") (("1" (GROUND) NIL NIL) ("2" (GROUND) (("2" (REWRITE "length_row") (("2" (TYPEPRED (J)) (("2" (EXPAND "rows") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (GRIND) NIL NIL)) NIL) ("3" (FLATTEN) (("3" (SKEEP) (("3" (CASE "i=0") (("1" (CASE-REPLACE "j_1=0") (("1" (REPLACE -2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (TYPEPRED (J_1)) (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED (I)) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|row2mat| SUBTYPE "(: matrices.row(linear_dependence.A)(linear_dependence.j) :)" "PosFullMatrix"))) (|row2mat_dim| 0 (|row2mat_dim-2| "" 3883696749 ("" (SKEEP) (("" (TYPEPRED ("A")) (("" (SPLIT 1) (("1" (GRIND) NIL NIL) ("2" (TYPEPRED "row2mat(A, j)") (("2" (LEMMA "matrices.length_row") (("2" (INST-CP -1 "A" "j") (("2" (SPLIT -2) (("1" (REPLACE -1 :DIR RL) (("1" (TYPEPRED "columns(row2mat(A,j))") (("1" (SPLIT -2) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (SKEEP) (("2" (CASE "i=0") (("1" (REPLACE -1) (("1" (REPLACE -2 :DIR RL) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED ("i")) (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GROUND) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED ("j")) (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|row2mat_dim-1| |nil| 3620568149 ("" (SKEEP) (("" (TYPEPRED (A)) (("" (SPLIT 1) (("1" (GRIND) NIL NIL) ("2" (TYPEPRED "row2mat(A, j)") (("2" (LEMMA "matrices.length_row") (("2" (INST-CP -1 "A" "j") (("2" (SPLIT -2) (("1" (REPLACE -1 :DIR RL) (("1" (TYPEPRED "columns(row2mat(A,j))") (("1" (SPLIT -2) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (SKEEP) (("2" (CASE "i=0") (("1" (REPLACE -1) (("1" (REPLACE -2 :DIR RL) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED (I)) (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GROUND) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED (J)) (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|length_row| FORMULA-DECL NIL |matrices| NIL) (|row| CONST-DECL "Vector" |matrices| NIL) (|row2mat| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL)) SHOSTAK)) (|sum_rows_TCC1| 0 (|sum_rows_TCC1-1| |nil| 3620493442 ("" (SKEEP) (("" (SPLASH +) (("1" (REWRITE "columns_add") (("1" (REWRITE "columns_scal") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (REWRITE "rows_add") (("2" (REWRITE "rows_scal") (("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (FLATTEN) (("3" (TYPEPRED "(M + f(j) * row2mat(A, j))") (("3" (SKEEP) (("3" (INST-CP - "i") (("3" (INST - "j_1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|row2mat| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i, j): entry(A)(i, j) = r * entry(M)(i, j)}" |matrices| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (+ CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) + entry(N)(i, j)}" |matrices| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|entry| CONST-DECL "real" |matrices| NIL) (|MatrixMN| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|columns_scal| FORMULA-DECL NIL |matrices| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|columns_add| FORMULA-DECL NIL |matrices| NIL) (|rows_scal| FORMULA-DECL NIL |matrices| NIL) (|rows_add| FORMULA-DECL NIL |matrices| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)) NIL (|sum_rows| SUBTYPE "(matrices.+)(linear_dependence.M, matrices.*(linear_dependence.f(linear_dependence.j), linear_dependence.row2mat(linear_dependence.A, linear_dependence.j)))" "PosFullMatrix"))) (|sum_rows_TCC2| 0 (|sum_rows_TCC2-1| |nil| 3620493442 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|sum_rows| SUBTYPE "(number_fields.-)(linear_dependence.j, 1)" "below(matrices.rows(linear_dependence.A))"))) (|sum_rows_TCC3| 0 (|sum_rows_TCC3-2| |nil| 3620570095 ("" (SKEEP) (("" (SPLASH +) (("1" (REWRITE "columns_add") (("1" (REWRITE "columns_scal") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (REWRITE "rows_add") (("2" (REWRITE "rows_scal") (("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (FLATTEN) (("3" (TYPEPRED "(M + f(j) * row2mat(A, j))") (("3" (SKEEP) (("3" (INST-CP - "i") (("3" (INST - "j_1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|row2mat| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i, j): entry(A)(i, j) = r * entry(M)(i, j)}" |matrices| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (+ CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) + entry(N)(i, j)}" |matrices| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|entry| CONST-DECL "real" |matrices| NIL) (|MatrixMN| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|columns_scal| FORMULA-DECL NIL |matrices| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|columns_add| FORMULA-DECL NIL |matrices| NIL) (|rows_scal| FORMULA-DECL NIL |matrices| NIL) (|rows_add| FORMULA-DECL NIL |matrices| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)) NIL (|sum_rows| SUBTYPE "(matrices.+)(linear_dependence.M, matrices.*(linear_dependence.f(linear_dependence.j), linear_dependence.row2mat(linear_dependence.A, linear_dependence.j)))" "PosFullMatrix")) (|sum_rows_TCC3-1| |nil| 3620493442 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|sum_rows| SUBTYPE "(matrices.+)(linear_dependence.M, matrices.*(linear_dependence.f(linear_dependence.j), linear_dependence.row2mat(linear_dependence.A, linear_dependence.j)))" "PosFullMatrix"))) (|sum_rows_TCC4| 0 (|sum_rows_TCC4-1| |nil| 3620493442 ("" (TERMINATION-TCC) NIL NIL) NIL NIL (|sum_rows| TERMINATION "linear_dependence.sum_rows(linear_dependence.A, linear_dependence.f, (number_fields.-)(linear_dependence.j, 1), (matrices.+)(linear_dependence.M, matrices.*(linear_dependence.f(linear_dependence.j), linear_dependence.row2mat(linear_dependence.A, linear_dependence.j))))" "NIL"))) (|sum_rows_TCC5| 0 (|sum_rows_TCC5-1| |nil| 3620493442 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|sum_rows| SUBTYPE "(number_fields.-)(matrices.rows(linear_dependence.A), 1)" "below(matrices.rows(linear_dependence.A))"))) (|sum_rows_TCC6| 0 (|sum_rows_TCC6-1| |nil| 3620493442 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|sum_rows| SUBTYPE "matrices.columns(linear_dependence.A)" "posnat"))) (|sum_rows_eq| 0 (|sum_rows_eq-2| "alt-proof" 3620557971 ("" (CASE "FORALL (n:nat, A,M: PosFullMatrix, f, g: [nat -> real], j: below(rows(A))):
                             n=j IMPLIES ((FORALL (k: subrange(0, j)): f(k) = g(k)) IMPLIES
                              sum_rows(A, f, j, M) =
                               sum_rows(A, g, j, M))") (("1" (SKEEP) (("1" (INST -1 "j" "A" "M" "f" "g" "j") (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "n") (("1" (SKEEP) (("1" (REPLACE -1 :DIR RL) (("1" (EXPAND "sum_rows") (("1" (INST -2 "0") (("1" (REPLACE -2) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "sum_rows" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (INST -4 "j") (("1" (REPLACE -4) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST-CP -3 "j") (("2" (REPLACE -4) (("2" (INST -1 "A" "M + g(j) * row2mat(A, j)" "f" "g" "j-1") (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (SKEEP) (("2" (INST -2 "k") NIL NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|j| SKOLEM-CONST-DECL "below(rows(A))" |linear_dependence| NIL) (A SKOLEM-CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|MatrixMN| TYPE-EQ-DECL NIL |matrices| NIL) (|entry| CONST-DECL "real" |matrices| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) + entry(N)(i, j)}" |matrices| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i, j): entry(A)(i, j) = r * entry(M)(i, j)}" |matrices| NIL) (|row2mat| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|sum_rows| DEF-DECL "PosFullMatrix" |linear_dependence| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|sum_rows_eq-1| |nil| 3620555529 ("" (CASE "FORALL (n:nat, A: PosFullMatrix, f, g: [nat -> real], j: below(rows(A))):
                      n=j IMPLIES ((FORALL (k: subrange(0, j)): f(k) = g(k)) IMPLIES
                       sum_rows(A, f, j, zerow(columns(A))) =
                        sum_rows(A, g, j, zerow(columns(A))))") (("1" (SKEEP) (("1" (INST -1 "j" "A" "f" "g" "j") (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "n") (("1" (SKEEP) (("1" (REPLACE -1 :DIR RL) (("1" (EXPAND "sum_rows") (("1" (INST -2 "0") (("1" (REPLACE -2) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "sum_rows" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (INST -4 "j") (("1" (REPLACE -4) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST -3 "j") (("2" (REPLACE -3) (("2" (INST -1 "A" "f" "g" "j-1") (("1" (SPLIT -1) (("1" (GROUND) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|sum_rows_add_start_TCC1| 0 (|sum_rows_add_start_TCC1-3| "" 3750617654 ("" (SKEEP) (("" (SPLASH +) (("1" (REWRITE "columns_add") (("1" (GROUND) NIL NIL)) NIL) ("2" (REWRITE "rows_add") (("2" (GROUND) NIL NIL)) NIL) ("3" (FLATTEN) (("3" (TYPEPRED "(M + N)") (("3" (SKEEP) (("3" (INST-CP - "i") (("3" (INST - "j!1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (+ CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) + entry(N)(i, j)}" |matrices| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|entry| CONST-DECL "real" |matrices| NIL) (|MatrixMN| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|columns_add| FORMULA-DECL NIL |matrices| NIL) (|rows_add| FORMULA-DECL NIL |matrices| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)) SHOSTAK (|sum_rows_add_start| SUBTYPE "(matrices.+)(linear_dependence.M, linear_dependence.N)" "PosFullMatrix")) (|sum_rows_add_start_TCC1-2| |nil| 3620570216 ("" (SKEEP) (("" (SPLASH +) (("1" (REWRITE "columns_add") (("1" (GROUND) NIL NIL)) NIL) ("2" (REWRITE "rows_add") (("2" (GROUND) NIL NIL)) NIL) ("3" (FLATTEN) (("3" (TYPEPRED "(M + N)") (("3" (SKEEP) (("3" (INST-CP - "i") (("3" (INST - "j_1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|sum_rows_add_start| SUBTYPE "(matrices.+)(linear_dependence.M, linear_dependence.N)" "PosFullMatrix")) (|sum_rows_add_start_TCC1-1| |nil| 3620563385 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|sum_rows_add_start| SUBTYPE "(matrices.+)(linear_dependence.M, linear_dependence.N)" "PosFullMatrix"))) (|sum_rows_add_start| 0 (|sum_rows_add_start-2| "" 3750617873 ("" (CASE "FORALL (n:nat, A, M, N: PosFullMatrix, f: [nat -> real], j: below(rows(A))):
               n=j IMPLIES
               sum_rows(A, f, j, M + N) = sum_rows(A, f, j, M) + N") (("1" (SKEEP) (("1" (INST -1 "j" "A" "M" "N" "f" "j") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "n") (("1" (SKEEP) (("1" (REPLACE -1 :DIR RL) (("1" (EXPAND "sum_rows") (("1" (GROUND) (("1" (LEMMA "matrix_add_comm") (("1" (INST -1 "N" "f(0) * row2mat(A, 0)") (("1" (GROUND) (("1" (REWRITE "matrix_add_assoc" 1) (("1" (REWRITE "matrix_add_assoc" 1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "sum_rows" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE -2) (("2" (REWRITE "matrix_add_assoc" 2) (("2" (REWRITE "matrix_add_comm" (2 2)) (("2" (REWRITE "matrix_add_assoc" 2 :DIR RL) (("2" (INST -1 "A" "M + f(j) * row2mat(A, j)" "N" "f" "j-1") (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (REVEAL -2) (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (SPLASH +) (("1" (REWRITE "columns_add") (("1" (GROUND) NIL NIL)) NIL) ("2" (REWRITE "rows_add") (("2" (GROUND) NIL NIL)) NIL) ("3" (FLATTEN) (("3" (SKEEP) (("3" (TYPEPRED "M+N") (("3" (INST-CP - "i") (("3" (INST - "j!1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (TYPEPRED "M + N") (("3" (SPLIT 1) (("1" (FLATTEN) (("1" (SKEEP) (("1" (INST-CP -3 "i") (("1" (INST-CP - "j!1") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (REWRITE "rows_add") (("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (REWRITE "columns_add") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|columns_add| FORMULA-DECL NIL |matrices| NIL) (|rows_add| FORMULA-DECL NIL |matrices| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|j| SKOLEM-CONST-DECL "below(rows(A))" |linear_dependence| NIL) (A SKOLEM-CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|matrix_add_comm| FORMULA-DECL NIL |matrices| NIL) (|matrix_add_assoc| FORMULA-DECL NIL |matrices| NIL) (|row2mat| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i, j): entry(A)(i, j) = r * entry(M)(i, j)}" |matrices| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|sum_rows| DEF-DECL "PosFullMatrix" |linear_dependence| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|MatrixMN| TYPE-EQ-DECL NIL |matrices| NIL) (|entry| CONST-DECL "real" |matrices| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) + entry(N)(i, j)}" |matrices| NIL)) SHOSTAK) (|sum_rows_add_start-1| |nil| 3620563440 ("" (CASE "FORALL (n:nat, A, M, N: PosFullMatrix, f: [nat -> real], j: below(rows(A))):
        n=j IMPLIES
        sum_rows(A, f, j, M + N) = sum_rows(A, f, j, M) + N") (("1" (SKEEP) (("1" (INST -1 "j" "A" "M" "N" "f" "j") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "n") (("1" (SKEEP) (("1" (REPLACE -1 :DIR RL) (("1" (EXPAND "sum_rows") (("1" (GROUND) (("1" (LEMMA "matrix_add_comm") (("1" (INST -1 "N" "f(0) * row2mat(A, 0)") (("1" (GROUND) (("1" (REWRITE "matrix_add_assoc" 1) (("1" (REWRITE "matrix_add_assoc" 1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "sum_rows" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE -2) (("2" (REWRITE "matrix_add_assoc" 2) (("2" (REWRITE "matrix_add_comm" (2 2)) (("2" (REWRITE "matrix_add_assoc" 2 :DIR RL) (("2" (INST -1 "A" "M + f(j) * row2mat(A, j)" "N" "f" "j-1") (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (REVEAL -2) (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (SPLASH +) (("1" (REWRITE "columns_add") (("1" (GROUND) NIL NIL)) NIL) ("2" (REWRITE "rows_add") (("2" (GROUND) NIL NIL)) NIL) ("3" (FLATTEN) (("3" (SKEEP) (("3" (TYPEPRED "M+N") (("3" (INST-CP - "i") (("3" (INST - "j_1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (TYPEPRED "M + N") (("3" (SPLIT 1) (("1" (FLATTEN) (("1" (SKEEP) (("1" (INST-CP -3 "i") (("1" (INST-CP - "j_1") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (REWRITE "rows_add") (("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (REWRITE "columns_add") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|subtract_same_scal| 0 (|subtract_same_scal-1| |nil| 3620554565 ("" (SKEEP) (("" (TYPEPRED "f(j) * row2mat(A, j) - f(j) * row2mat(A, j)") (("" (TYPEPRED "0 * row2mat(A, j)") (("" (LEMMA "matrix2array" ("SM" "0*row2mat(A,j)")) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "matrix2array" ("SM" "(f(j) * row2mat(A, j) - f(j) * row2mat(A, j))")) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (REWRITE "rows_sub") (("1" (REWRITE "columns_sub") (("1" (EXPAND "max") (("1" (REWRITE "rows_scal") (("1" (REWRITE "rows_scal") (("1" (REWRITE "columns_scal") (("1" (REWRITE "columns_scal") (("1" (LEMMA "form_matrix_eq") (("1" (INST?) (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (SKEEP) (("2" (INST -6 "i" "j_1") (("2" (INST -10 "i" "j_1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKEEP) (("2" (INST-CP -7 "i") (("2" (INST -7 "j_1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (GROUND) (("2" (SKEEP) (("2" (INST-CP -3 "i") (("2" (INST -3 "j_1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|row2mat| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i, j): entry(A)(i, j) = r * entry(M)(i, j)}" |matrices| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) - entry(N)(i, j)}" |matrices| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|entry| CONST-DECL "real" |matrices| NIL) (|MatrixMN| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|matrix2array| FORMULA-DECL NIL |matrices| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|rows_sub| FORMULA-DECL NIL |matrices| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|form_matrix_eq| FORMULA-DECL NIL |matrices| NIL) (|columns_scal| FORMULA-DECL NIL |matrices| NIL) (|rows_scal| FORMULA-DECL NIL |matrices| NIL) (|columns_sub| FORMULA-DECL NIL |matrices| NIL)) SHOSTAK)) (|sum_lem_prep_TCC1| 0 (|sum_lem_prep_TCC1-1| |nil| 3620563013 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|rows| CONST-DECL "nat" |matrices| NIL)) NIL (|sum_lem_prep| SUBTYPE "linear_dependence.k" "below(matrices.rows(linear_dependence.A))"))) (|sum_lem_prep| 0 (|sum_lem_prep-3| "" 3883696894 ("" (CASE "FORALL (n:nat, A, M: PosFullMatrix, f: [nat -> real], j: below(rows(A)),
                     k: below(1 + j)):
               n=j IMPLIES
               sum_rows(A, f WITH [k := 0], j, M) =
                sum_rows(A, f, j, M) - f(k) * row2mat(A, k)") (("1" (SKEEP) (("1" (INST -1 "j" "A" "M" "f" "j" "k") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "n") (("1" (SKEEP) (("1" (REPLACE -1 :DIR RL) (("1" (EXPAND "sum_rows") (("1" (TYPEPRED ("k")) (("1" (CASE-REPLACE "k=0") (("1" (SIMPLIFY 1) (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (REWRITE "matrix_add_assoc" 1) (("1" (LEMMA "subtract_same_scal") (("1" (INST?) (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "sum_rows" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (LEMMA "sum_rows_eq") (("1" (INST -1 "A" "M + 0 * row2mat(A, j)" "f WITH [k := 0]" "f" "j-1") (("1" (SPLIT -1) (("1" (REPLACE -1) (("1" (REPLACE -2 1 :DIR RL) (("1" (EXPAND "-" 1) (("1" (EXPAND "sub") (("1" (REWRITE "sum_rows_add_start" 1 :DIR RL) (("1" (REWRITE "matrix_add_assoc" 1) (("1" (LEMMA "subtract_same_scal") (("1" (INST -1 "A" "f" "j") (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE (2 3)) (("2" (SPLASH +) (("1" (REWRITE "columns_scal") (("1" (REWRITE "columns_scal") (("1" (LEMMA "row2mat_dim") (("1" (INST?) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "rows_scal") (("2" (REWRITE "rows_scal") (("2" (LEMMA "row2mat_dim") (("2" (INST?) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (FLATTEN) (("3" (TYPEPRED "-1 * (f(j) * row2mat(A, j))") (("3" (SKEEP) (("3" (INST-CP - "i") (("3" (INST - "j_1!1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (TYPEPRED ("k_1")) (("2" (GROUND) (("2" (REPLACE -3) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST?) (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL) ("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|sum_lem_prep-2| "" 3750618168 ("" (CASE "FORALL (n:nat, A, M: PosFullMatrix, f: [nat -> real], j: below(rows(A)),
                     k: below(1 + j)):
               n=j IMPLIES
               sum_rows(A, f WITH [k := 0], j, M) =
                sum_rows(A, f, j, M) - f(k) * row2mat(A, k)") (("1" (SKEEP) (("1" (INST -1 "j" "A" "M" "f" "j" "k") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "n") (("1" (SKEEP) (("1" (REPLACE -1 :DIR RL) (("1" (EXPAND "sum_rows") (("1" (TYPEPRED (K)) (("1" (CASE-REPLACE "k=0") (("1" (SIMPLIFY 1) (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (REWRITE "matrix_add_assoc" 1) (("1" (LEMMA "subtract_same_scal") (("1" (INST?) (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "sum_rows" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (LEMMA "sum_rows_eq") (("1" (INST -1 "A" "M + 0 * row2mat(A, j)" "f WITH [k := 0]" "f" "j-1") (("1" (SPLIT -1) (("1" (REPLACE -1) (("1" (REPLACE -2 1 :DIR RL) (("1" (EXPAND "-" 1) (("1" (EXPAND "sub") (("1" (REWRITE "sum_rows_add_start" 1 :DIR RL) (("1" (REWRITE "matrix_add_assoc" 1) (("1" (LEMMA "subtract_same_scal") (("1" (INST -1 "A" "f" "j") (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE (2 3)) (("2" (SPLASH +) (("1" (REWRITE "columns_scal") (("1" (REWRITE "columns_scal") (("1" (LEMMA "row2mat_dim") (("1" (INST?) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "rows_scal") (("2" (REWRITE "rows_scal") (("2" (LEMMA "row2mat_dim") (("2" (INST?) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (FLATTEN) (("3" (TYPEPRED "-1 * (f(j) * row2mat(A, j))") (("3" (SKEEP) (("3" (INST-CP - "i") (("3" (INST - "j_1!1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (TYPEPRED (K_1)) (("2" (GROUND) (("2" (REPLACE -3) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST?) (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL) ("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|sum_rows_eq| FORMULA-DECL NIL |linear_dependence| NIL) (|rows_scal| FORMULA-DECL NIL |matrices| NIL) (|columns_scal| FORMULA-DECL NIL |matrices| NIL) (|row2mat_dim| FORMULA-DECL NIL |linear_dependence| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|sum_rows_add_start| FORMULA-DECL NIL |linear_dependence| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (+ CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) + entry(N)(i, j)}" |matrices| NIL) (A SKOLEM-CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|j| SKOLEM-CONST-DECL "below(rows(A))" |linear_dependence| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|k| SKOLEM-CONST-DECL "below(1 + j)" |linear_dependence| NIL) (|matrix_add_assoc| FORMULA-DECL NIL |matrices| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|subtract_same_scal| FORMULA-DECL NIL |linear_dependence| NIL) (|sub| CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) - entry(N)(i, j)}" |matrices| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|row2mat| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i, j): entry(A)(i, j) = r * entry(M)(i, j)}" |matrices| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) - entry(N)(i, j)}" |matrices| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|entry| CONST-DECL "real" |matrices| NIL) (|MatrixMN| TYPE-EQ-DECL NIL |matrices| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|sum_rows| DEF-DECL "PosFullMatrix" |linear_dependence| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|sum_lem_prep-1| |nil| 3620565983 ("" (CASE "FORALL (n:nat, A, M: PosFullMatrix, f: [nat -> real], j: below(rows(A)),
              k: below(1 + j)):
        n=j IMPLIES
        sum_rows(A, f WITH [k := 0], j, M) =
         sum_rows(A, f, j, M) - f(k) * row2mat(A, k)") (("1" (SKEEP) (("1" (INST -1 "j" "A" "M" "f" "j" "k") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "n") (("1" (SKEEP) (("1" (REPLACE -1 :DIR RL) (("1" (EXPAND "sum_rows") (("1" (TYPEPRED (K)) (("1" (CASE-REPLACE "k=0") (("1" (SIMPLIFY 1) (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (REWRITE "matrix_add_assoc" 1) (("1" (LEMMA "subtract_same_scal") (("1" (INST?) (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "sum_rows" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (LEMMA "sum_rows_eq") (("1" (INST -1 "A" "M + 0 * row2mat(A, j)" "f WITH [k := 0]" "f" "j-1") (("1" (SPLIT -1) (("1" (REPLACE -1) (("1" (REPLACE -2 1 :DIR RL) (("1" (EXPAND "-" 1) (("1" (EXPAND "sub") (("1" (REWRITE "sum_rows_add_start" 1 :DIR RL) (("1" (REWRITE "matrix_add_assoc" 1) (("1" (LEMMA "subtract_same_scal") (("1" (INST -1 "A" "f" "j") (("1" (EXPAND "-") (("1" (EXPAND "sub") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE (2 3)) (("2" (SPLASH +) (("1" (FLATTEN) (("1" (TYPEPRED "-1 * (f(j) * row2mat(A, j))") (("1" (SKEEP) (("1" (INST-CP - "i") (("1" (INST - "j_1!1") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "columns_scal") (("2" (REWRITE "columns_scal") (("2" (LEMMA "row2mat_dim") (("2" (INST?) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REWRITE "rows_scal") (("3" (REWRITE "rows_scal") (("3" (LEMMA "row2mat_dim") (("3" (INST?) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (FLATTEN) (("4" (TYPEPRED "-1 * (f(j) * row2mat(A, j))") (("4" (SKEEP) (("4" (INST-CP - "i") (("4" (INST - "j_1!1") (("4" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (TYPEPRED (K_1)) (("2" (GROUND) (("2" (REPLACE -3) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST?) (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL) ("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|sum_lem| 0 (|sum_lem-1| |nil| 3620494148 ("" (EXPAND "sum_rows") (("" (SKEEP) (("" (LEMMA "sum_lem_prep") (("" (INST -1 "A" "zerow(columns(A))" "f" "rows(A)-1" "j") NIL NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|zerow| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|sum_lem_prep| FORMULA-DECL NIL |linear_dependence| NIL) (|sum_rows| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|row_dependence_lem| 0 (|row_dependence_lem-2| "" 3883696942 ("" (SKEEP) (("" (EXPAND "row_dependent") (("" (REWRITE "sum_lem") (("" (TYPEPRED ("f")) (("" (REPLACE -1) (("" (REPLACE -2) (("" (TYPEPRED "(zerow(columns(A)) - -1 * row2mat(A, j))") (("" (CASE-REPLACE "(zerow(columns(A)) - -1 * row2mat(A, j)) = row2mat(A,j)") (("" (HIDE 2) (("" (LEMMA "matrix2array" ("SM" "(zerow(columns(A)) - -1 * row2mat(A, j))")) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "matrix2array" ("SM" "row2mat(A,j)")) (("1" (NAME-REPLACE "FMB" "form_matrix(entry((zerow(columns(A)) - -1 * row2mat(A, j))),
                  rows((zerow(columns(A)) - -1 * row2mat(A, j))),
                  columns((zerow(columns(A)) - -1 * row2mat(A, j))))") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "FMB") (("1" (REWRITE "rows_sub") (("1" (REWRITE "columns_sub") (("1" (REWRITE "rows_scal") (("1" (REWRITE "columns_scal") (("1" (LEMMA "zerow_dim") (("1" (INST -1 "columns(A)") (("1" (FLATTEN) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (LEMMA "row2mat_dim") (("1" (INST -1 "A" "j") (("1" (FLATTEN) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (EXPAND "max" 1) (("1" (REWRITE "form_matrix_eq") (("1" (SKEEP) (("1" (INST -10 "i" "j_1") (("1" (REPLACE -10) (("1" (CASE-REPLACE "entry(zerow(columns(A)))(i,j_1) = 0") (("1" (SIMPLIFY 1) (("1" (TYPEPRED "-1 * entry(-1 * row2mat(A, j))(i, j_1)") (("1" (TYPEPRED "-1 * row2mat(A, j)") (("1" (INST -4 "i" "j_1") (("1" (REPLACE -4) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE-REPLACE "i=0") (("1" (CASE "row(zerow(columns(A)))(0) = zero(columns(A))") (("1" (EXPAND "entry") (("1" (REPLACE -1) (("1" (REWRITE "access_zero") NIL NIL)) NIL)) NIL) ("2" (EXPAND "row") (("2" (EXPAND "zerow") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (GROUND) (("2" (EXPAND "nth") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (GROUND) (("2" (SKEEP) (("2" (INST-CP -3 "i") (("2" (INST -3 "j_1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|row_dependence_lem-1| |nil| 3620493681 ("" (SKEEP) (("" (EXPAND "row_dependent") (("" (REWRITE "sum_lem") (("" (TYPEPRED (F)) (("" (REPLACE -1) (("" (REPLACE -2) (("" (TYPEPRED "(zerow(columns(A)) - -1 * row2mat(A, j))") (("" (CASE-REPLACE "(zerow(columns(A)) - -1 * row2mat(A, j)) = row2mat(A,j)") (("" (HIDE 2) (("" (LEMMA "matrix2array" ("SM" "(zerow(columns(A)) - -1 * row2mat(A, j))")) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "matrix2array" ("SM" "row2mat(A,j)")) (("1" (NAME-REPLACE "FMB" "form_matrix(entry((zerow(columns(A)) - -1 * row2mat(A, j))),
                  rows((zerow(columns(A)) - -1 * row2mat(A, j))),
                  columns((zerow(columns(A)) - -1 * row2mat(A, j))))") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "FMB") (("1" (REWRITE "rows_sub") (("1" (REWRITE "columns_sub") (("1" (REWRITE "rows_scal") (("1" (REWRITE "columns_scal") (("1" (LEMMA "zerow_dim") (("1" (INST -1 "columns(A)") (("1" (FLATTEN) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (LEMMA "row2mat_dim") (("1" (INST -1 "A" "j") (("1" (FLATTEN) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (EXPAND "max" 1) (("1" (REWRITE "form_matrix_eq") (("1" (SKEEP) (("1" (INST -10 "i" "j_1") (("1" (REPLACE -10) (("1" (CASE-REPLACE "entry(zerow(columns(A)))(i,j_1) = 0") (("1" (SIMPLIFY 1) (("1" (TYPEPRED "-1 * entry(-1 * row2mat(A, j))(i, j_1)") (("1" (TYPEPRED "-1 * row2mat(A, j)") (("1" (INST -4 "i" "j_1") (("1" (REPLACE -4) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE-REPLACE "i=0") (("1" (CASE "row(zerow(columns(A)))(0) = zero(columns(A))") (("1" (EXPAND "entry") (("1" (REPLACE -1) (("1" (REWRITE "access_zero") NIL NIL)) NIL)) NIL) ("2" (EXPAND "row") (("2" (EXPAND "zerow") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (GROUND) (("2" (EXPAND "nth") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (GROUND) (("2" (SKEEP) (("2" (INST-CP -3 "i") (("2" (INST -3 "j_1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|row_dependent| CONST-DECL "bool" |linear_dependence| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|matrix2array| FORMULA-DECL NIL |matrices| NIL) (|Vector| TYPE-EQ-DECL NIL |matrices| NIL) (|row| CONST-DECL "Vector" |matrices| NIL) (|form_matrix| CONST-DECL "{M: MatrixMN(m, n) |
   FORALL (i: below(m), j: below(n)): nth(row(M)(i), j) = F(i, j)}" |matrices| NIL) (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices| NIL) (|rows_sub| FORMULA-DECL NIL |matrices| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nonneg_rat_max| APPLICATION-JUDGEMENT "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL) (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs| NIL) (|rows_scal| FORMULA-DECL NIL |matrices| NIL) (|zerow_dim| FORMULA-DECL NIL |linear_dependence| NIL) (|zero| CONST-DECL "VectorN(n)" |matrices| NIL) (|VectorN| TYPE-EQ-DECL NIL |matrices| NIL) (|access_zero| FORMULA-DECL NIL |matrices| NIL) (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nzint_max| APPLICATION-JUDGEMENT "{k: nzint | i <= k AND j <= k}" |real_defs| NIL) (|posint_max| APPLICATION-JUDGEMENT "{k: posint | i <= k AND j <= k}" |real_defs| NIL) (|posrat_max| APPLICATION-JUDGEMENT "{s: posrat | s >= q AND s >= r}" |real_defs| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|form_matrix_eq| FORMULA-DECL NIL |matrices| NIL) (|row2mat_dim| FORMULA-DECL NIL |linear_dependence| NIL) (|columns_scal| FORMULA-DECL NIL |matrices| NIL) (|columns_sub| FORMULA-DECL NIL |matrices| NIL) (FMB SKOLEM-CONST-DECL "{x:
   {M:
      MatrixMN(rows((zerow(columns(A)) - -1 * row2mat(A, j))),
               columns((zerow(columns(A)) - -1 * row2mat(A, j)))) |
      FORALL (i: below(rows((zerow(columns(A)) - -1 * row2mat(A, j)))),
              j_1:
                below(columns((zerow(columns(A)) - -1 * row2mat(A, j))))):
        nth(row(M)(i), j_1) =
         entry((zerow(columns(A)) - -1 * row2mat(A, j)))(i, j_1)} |
   null?(x) OR
    FORALL (i, j: below(length(x))): length(nth(x, i)) = length(nth(x, j))}" |linear_dependence| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|MatrixMN| TYPE-EQ-DECL NIL |matrices| NIL) (|entry| CONST-DECL "real" |matrices| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "{A: MatrixMN(max(rows(M), rows(N)), max(columns(M), columns(N))) |
   FORALL (i, j): entry(A)(i, j) = entry(M)(i, j) - entry(N)(i, j)}" |matrices| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|zerow| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (* CONST-DECL "{A: MatrixMN(rows(M), columns(M)) |
   FORALL (i, j): entry(A)(i, j) = r * entry(M)(i, j)}" |matrices| NIL) (|row2mat| CONST-DECL "PosFullMatrix" |linear_dependence| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| NIL) (> CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|sum_lem| FORMULA-DECL NIL |linear_dependence| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)))
