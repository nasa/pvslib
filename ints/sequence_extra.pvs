%------------------------------------------------------------------------------
% Authors:
%
%		Bruno Berto de Oliveira Ribeiro
%		Universidade de Brasília - Brazil
%
% 		Thaynara Arielly de Lima
% 		Universidade Federal de Goiás - Brazil
%
%		Mauricio Ayala-Rincón
%		Universidade de Brasília - Brazil
%
%               Mariano M. Moscato
%               NASA  Langley  Research  Center - US
%
%------------------------------------------------------------------------------

sequence_extra: THEORY
  BEGIN

  IMPORTING max_finite_set_nat

  infinite_set_nat_enum(n:nat, s:set[nat]|is_infinite(s)): RECURSIVE (s) = 
  	IF n = 0 THEN min(s)
	ELSE min({v:(s)| v > infinite_set_nat_enum(n-1, s)}) ENDIF
	MEASURE n

  inf_set_nat_strict_incr: LEMMA
       FORALL(n:nat, s:set[nat]|is_infinite(s)):
          infinite_set_nat_enum(n, s) < infinite_set_nat_enum(n+1, s)

  inf_set_nat_below_existence: LEMMA
     FORALL(s:set[nat]|is_infinite(s), n:nat| n >= min(s)):
       is_finite[nat]({k: nat | s(k) AND k <= n}) AND
         NOT empty?[nat]({k: nat | s(k) AND k <= n})

  inf_set_nat_below_n(s:set[nat]|is_infinite(s),
		      n: nat| n >= min(s)): nat
          =  max_finite_set_nat.max({k:nat| s(k) AND k <= n})
      
  inf_set_nat_below_surj: LEMMA
      FORALL(s:set[nat]|is_infinite(s)):
	FORALL(n:nat| n >= min(s)): EXISTS(i:nat):
	   infinite_set_nat_enum(i, s) = inf_set_nat_below_n(s, n)

  inf_set_nat_strict_bij: LEMMA
       FORALL(n:nat, s:set[nat]|is_infinite(s)):
           bijective?(LAMBDA(i:nat): infinite_set_nat_enum(i, s))

  n_eq_seq?(n:nat, a, b:sequence[real]): bool =
  	       FORALL(i: nat| i <= n):
		  EXISTS(j:nat): a(i) = b(j)

  n_eq_seq_min_idx(n:nat, a:sequence[real],
	           b: sequence[real] | n_eq_seq?(n, a, b),
		   i: nat| i <= n): nat =
		min({j:nat| a(i) = b(j)})
 
  n_eq_seq_other_indices(n:nat, a:sequence[real]|injective?(a),
				b:sequence[real]|n_eq_seq?(n, a, b)): set[nat] =
		{i:nat| NOT EXISTS(j:nat| j <= n):
			i = n_eq_seq_min_idx(n, a, b, j)}

  n_eq_seq_other_infinite: LEMMA
    FORALL(n:nat, a: sequence[real]| injective?(a),
  	           b: sequence[real] | n_eq_seq?(n, a, b)):
         is_infinite[nat](n_eq_seq_other_indices(n, a, b))

  n_eq_perm(n:nat, a: sequence[real]| injective?(a),
  	           b: sequence[real] | n_eq_seq?(n, a, b),
            i:nat): nat = 
    IF i <= n THEN n_eq_seq_min_idx(n, a, b, i)
    ELSE infinite_set_nat_enum(i-n-1,
			 n_eq_seq_other_indices(n, a, b)) ENDIF


  n_eq_perm_bij: LEMMA
     FORALL(n:nat, a: sequence[real]| injective?(a),
  	           b: sequence[real] | n_eq_seq?(n, a, b)):
	bijective?(LAMBDA(i:nat): n_eq_perm(n, a, b, i))

     
  END sequence_extra
