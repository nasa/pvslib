(|inf_prime_topology|
 (|union_open_is_open| 0
  (|union_open_is_open-1| |nil| 3894301462
   ("" (SKEEP)
    (("" (TYPEPRED "O" "S")
      (("" (EXPAND "open_N_Z?" (-1 -2))
        (("" (PROP)
          (("1" (GRIND) NIL NIL)
           ("2" (REPLACES -2)
            (("2" (REWRITE "union_commutative[int]")
              (("2" (REWRITE "union_empty[int]")
                (("2" (TYPEPRED "S") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL)
           ("3" (REPLACES -1)
            (("3" (REWRITE "union_empty[int]")
              (("3" (TYPEPRED "o") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL)
           ("4" (EXPAND "open_N_Z?")
            (("4" (FLATTEN)
              (("4" (HIDE 1)
                (("4" (SKEEP)
                  (("4" (TYPEPRED "a")
                    (("4" (EXPAND "union" -1)
                      (("4" (SPLIT)
                        (("1" (HIDE -2)
                          (("1" (INST?)
                            (("1" (SKEEP)
                              (("1" (HIDE -1)
                                (("1" (INST 1 "b")
                                  (("1" (LEMMA "union_subset1[int]")
                                    (("1" (INST -1 "O" "S")
                                      (("1" (LEMMA "subset_transitive[int]")
                                        (("1"
                                          (INST -1 "N(a)(b)" "O" "union(O,S)")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -3)
                          (("2" (INST?)
                            (("1" (SKEEP)
                              (("1" (INST?)
                                (("1" (HIDE -1)
                                  (("1" (REWRITE "union_commutative")
                                    (("1" (LEMMA "union_subset1[int]")
                                      (("1" (INST -1 "S" "O")
                                        (("1" (LEMMA "subset_transitive[int]")
                                          (("1"
                                            (INST -1 "N(a)(b)" "S"
                                             "union(S,O)")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|union_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|union_empty| FORMULA-DECL NIL |sets_lemmas| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|subset_transitive| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|union_subset1| FORMULA-DECL NIL |sets_lemmas| NIL)
    (O SKOLEM-CONST-DECL "(open_N_Z?)" |inf_prime_topology| NIL)
    (S SKOLEM-CONST-DECL "(open_N_Z?)" |inf_prime_topology| NIL)
    (|a| SKOLEM-CONST-DECL "(union(o, S))" |inf_prime_topology| NIL))
   SHOSTAK))
 (|any_union_open_is_open| 0
  (|any_union_open_is_open-1| |nil| 3894301551
   ("" (SKEEP)
    (("" (EXPAND "open_N_Z?")
      (("" (PROP)
        (("" (SKEEP)
          (("" (TYPEPRED "a")
            (("" (EXPAND "Union" -1)
              (("" (SKEEP)
                (("" (TYPEPRED "a_1")
                  (("" (INST -3 "a_1")
                    (("" (PROP)
                      (("1" (DECOMPOSE-EQUALITY)
                        (("1" (INST -1 "a")
                          (("1" (IFF)
                            (("1" (PROP)
                              (("1" (EXPAND "emptyset")
                                (("1" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (INST -1 "a")
                        (("2" (SKOSIMP)
                          (("2" (INST 2 "b!1")
                            (("2" (LEMMA "Union_subset[int]")
                              (("2" (INST -1 "A" "a_1")
                                (("2" (LEMMA "subset_transitive[int]")
                                  (("2" (INST -1 "N(a)(b!1)" "a_1" "Union(A)")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|Union_subset| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|subset_transitive| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (A SKOLEM-CONST-DECL "setofsets[int]" |inf_prime_topology| NIL)
    (|a_1| SKOLEM-CONST-DECL "(A)" |inf_prime_topology| NIL)
    (|a| SKOLEM-CONST-DECL "(Union(A))" |inf_prime_topology| NIL)
    (|Union| CONST-DECL "set" |sets| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|inter_open_is_open| 0
  (|inter_open_is_open-1| |nil| 3894301552
   ("" (SKEEP)
    (("" (EXPAND "open_N_Z?")
      (("" (TYPEPRED "o" "S")
        (("" (EXPAND "open_N_Z?")
          (("" (PROP)
            (("1" (GRIND) NIL NIL)
             ("2" (REPLACES -2)
              (("2" (REWRITE "intersection_commutative[int]")
                (("2" (REWRITE "intersection_empty[int]") NIL NIL)) NIL))
              NIL)
             ("3" (REPLACES -1)
              (("3" (REWRITE "intersection_empty[int]") NIL NIL)) NIL)
             ("4" (HIDE 1)
              (("4" (SKOSIMP)
                (("4" (TYPEPRED "a!1")
                  (("4" (EXPAND "intersection" -1)
                    (("4" (PROP)
                      (("4" (INST -3 "a!1")
                        (("1" (INST -4 "a!1")
                          (("1" (SKOSIMP)
                            (("1" (SKOSIMP)
                              (("1" (INST 1 "b!1*b!2")
                                (("1" (LEMMA "intersection_lower_bound[int]")
                                  (("1" (INST -1 "S" "o" "N(a!1)(b!1 * b!2)")
                                    (("1" (PROP)
                                      (("1"
                                        (LEMMA "intersection_commutative[int]")
                                        (("1" (INST -1 "S" "o")
                                          (("1" (REPLACE -1 -2)
                                            (("1" (PROPAX) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE -4 2)
                                        (("2" (EXPAND "subset?")
                                          (("2" (SKOSIMP)
                                            (("2" (EXPAND "member")
                                              (("2" (EXPAND "N")
                                                (("2" (SKOSIMP)
                                                  (("2" (INST -4 "x!1")
                                                    (("2" (PROP)
                                                      (("2" (INST 1 "n!1*b!2")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (HIDE -3 2)
                                        (("3" (EXPAND "subset?")
                                          (("3" (SKOSIMP)
                                            (("3" (EXPAND "member")
                                              (("3" (EXPAND "N")
                                                (("3" (SKOSIMP)
                                                  (("3" (INST -4 "x!1")
                                                    (("3" (PROP)
                                                      (("3" (INST 1 "n!1*b!1")
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (EXPAND "member") (("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (|intersection_lower_bound| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (S SKOLEM-CONST-DECL "(open_N_Z?)" |inf_prime_topology| NIL)
    (O SKOLEM-CONST-DECL "(open_N_Z?)" |inf_prime_topology| NIL)
    (|a!1| SKOLEM-CONST-DECL "(intersection(o, S))" |inf_prime_topology| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|intersection_empty| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|intersection_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|finite_intersection1| APPLICATION-JUDGEMENT "finite_set" |finite_sets|
     NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|fin_inter_open_is_open| 0
  (|fin_inter_open_is_open-1| |nil| 3894301553
   ("" (MEASURE-INDUCT+ "card(W)" "W")
    (("" (CASE-REPLACE "x!1 =emptyset[set[int]]")
      (("1" (LEMMA "Intersection_empty_full[int]")
        (("1" (LEMMA "fullset_is_full?[int]")
          (("1" (INST -1 "Intersection(emptyset[set[int]])")
            (("1" (ASSERT)
              (("1" (REPLACE -1 1)
                (("1" (EXPAND "open_N_Z?")
                  (("1" (FLATTEN)
                    (("1" (SKEEP)
                      (("1" (INST 2 "1")
                        (("1" (EXPAND "subset?")
                          (("1" (SKEEP)
                            (("1" (HIDE-ALL-BUT (-6 2))
                              (("1" (EXPAND "member")
                                (("1" (EXPAND "N")
                                  (("1" (EXPAND "fullset")
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (CASE "card(x!1) = 1")
        (("1" (HIDE -2)
          (("1" (LEMMA "card_one[set[int]]")
            (("1" (INST -1 "x!1")
              (("1" (ASSERT)
                (("1" (SKEEP)
                  (("1" (REPLACE -1 2)
                    (("1" (CASE-REPLACE "Intersection(singleton(x))=x")
                      (("1" (INST -4 "x")
                        (("1" (HIDE-ALL-BUT (-2 1)) (("1" (GRIND) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE-ALL-BUT 1)
                        (("2" (DECOMPOSE-EQUALITY)
                          (("2" (IFF)
                            (("2" (PROP)
                              (("1" (EXPAND "Intersection")
                                (("1" (INST -1 "x")
                                  (("1" (EXPAND "singleton")
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "Intersection")
                                (("2" (SKEEP)
                                  (("2" (TYPEPRED "a")
                                    (("2" (EXPAND "singleton")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (LEMMA "Intersection_intersection_rew[int]")
          (("2" (INST -1 "x!1")
            (("2" (ASSERT)
              (("2" (CASE "nonempty?(x!1)")
                (("1" (ASSERT)
                  (("1" (LEMMA "card_strict_subset[set[int]]")
                    (("1" (INST -1 "rest(x!1)" "x!1")
                      (("1" (EXPAND "strict_subset?")
                        (("1" (LEMMA "rest_not_equal[set[int]]")
                          (("1" (LEMMA "rest_subset[set[int]]")
                            (("1" (INST -6 "rest(x!1)")
                              (("1" (INST -1 "x!1")
                                (("1" (INST -2 "x!1")
                                  (("1" (ASSERT)
                                    (("1" (SPLIT)
                                      (("1" (ASSERT)
                                        (("1" (SPLIT)
                                          (("1" (LEMMA "inter_open_is_open")
                                            (("1"
                                              (INST -1 "choose(x!1)"
                                               "Intersection(rest(x!1))")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (HIDE-ALL-BUT (-5 -7 1))
                                                (("2"
                                                  (INST -2
                                                   "choose[set[int]](x!1)")
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE-ALL-BUT (-2 -4 -6 1 2))
                                            (("2" (SKEEP)
                                              (("2" (TYPEPRED "o")
                                                (("2" (INST -4 "o")
                                                  (("2" (EXPAND "subset?")
                                                    (("2" (INST -2 "o")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT (-1 2))
                                        (("2" (DECOMPOSE-EQUALITY)
                                          (("2" (IFF)
                                            (("2" (PROP)
                                              (("1" (EXPAND "empty?")
                                                (("1" (INST -2 "x!2")
                                                  (("1" (EXPAND "member")
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "emptyset")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE-ALL-BUT (1 3))
                  (("2" (EXPAND "nonempty?")
                    (("2" (EXPAND "empty?")
                      (("2" (DECOMPOSE-EQUALITY)
                        (("2" (IFF)
                          (("2" (PROP)
                            (("1" (INST -2 "x!2") NIL NIL)
                             ("2" (EXPAND "emptyset") (("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|emptyset| CONST-DECL "set" |sets| NIL)
    (|fullset_is_full?| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Intersection_empty_full| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|Intersection_intersection_rew| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|finite_rest| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|rest| CONST-DECL "set" |sets| NIL)
    (|rest_not_equal| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|inter_open_is_open| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (O SKOLEM-CONST-DECL "(rest(x!1))" |inf_prime_topology| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|rest_subset| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|strict_subset?| CONST-DECL "bool" |sets| NIL)
    (|card_strict_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|x!1| SKOLEM-CONST-DECL "finite_set[set[int]]" |inf_prime_topology| NIL)
    (|x| SKOLEM-CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|card_one| FORMULA-DECL NIL |finite_sets| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL))
   SHOSTAK))
 (|int_is_open| 0
  (|int_is_open-1| |nil| 3894301554 ("" (GRIND) NIL NIL)
   ((|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL))
   SHOSTAK))
 (|N_Z_topology| 0
  (|N_Z_topology-1| |nil| 3894301556
   ("" (EXPAND "topology?")
    (("" (SPLIT)
      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
       ("3" (EXPAND "topology_Union?")
        (("3" (SKEEP)
          (("3" (LEMMA "any_union_open_is_open")
            (("3" (INST -1 "U")
              (("3" (SPLIT)
                (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (SKEEP)
                  (("2" (EXPAND "subset?")
                    (("2" (TYPEPRED "o")
                      (("2" (INST -2 "o") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("4" (EXPAND "topology_intersection?")
        (("4" (SKEEP)
          (("4" (TYPEPRED "A" "B")
            (("4" (LEMMA "inter_open_is_open")
              (("4" (INST -1 "A" "B")
                (("1" (HIDE -2 -3) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (HIDE 2 -1) (("2" (GRIND) NIL NIL)) NIL)
                 ("3" (HIDE -2 2) (("3" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|topology_empty?| CONST-DECL "bool" |topology_prelim| |topology|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|topology_full?| CONST-DECL "bool" |topology_prelim| |topology|)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Union| CONST-DECL "set" |sets| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|any_union_open_is_open| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|topology_Union?| CONST-DECL "bool" |topology_prelim| |topology|)
    (|inter_open_is_open| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (B SKOLEM-CONST-DECL
     "(extend[setof[int], (open_N_Z?), bool, FALSE](fullset[(open_N_Z?)]))"
     |inf_prime_topology| NIL)
    (A SKOLEM-CONST-DECL
     "(extend[setof[int], (open_N_Z?), bool, FALSE](fullset[(open_N_Z?)]))"
     |inf_prime_topology| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|topology_intersection?| CONST-DECL "bool" |topology_prelim| |topology|)
    (|topology?| CONST-DECL "bool" |topology_prelim| |topology|))
   SHOSTAK))
 (|Nab_is_infinite| 0
  (|Nab_is_infinite-1| |nil| 3894301557
   ("" (SKEEP)
    (("" (EXPAND "is_finite")
      (("" (SKEEP)
        (("" (LEMMA "composition_injective[below[N_1+1],(N(a)(b)),below[N_1]]")
          (("" (INST -1 "LAMBDA(i:below[1+N_1]):a+i*b" "f")
            (("1" (LEMMA "injection_n_to_m")
              (("1" (INST -1 "N_1" "1+N_1") (("1" (GRIND) NIL NIL)) NIL)) NIL)
             ("2" (HIDE -1)
              (("2" (EXPAND "injective?")
                (("2" (SKOSIMP)
                  (("2" (TYPEPRED "b") (("2" (DIV-BY -2 "b") NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|composition_injective| JUDGEMENT-TCC NIL |function_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|times_div_cancel2| FORMULA-DECL NIL |extra_real_props| NIL)
    (|both_sides_div1| FORMULA-DECL NIL |real_props| NIL)
    (|injection_n_to_m| FORMULA-DECL NIL |nat_fun_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|a| SKOLEM-CONST-DECL "int" |inf_prime_topology| NIL)
    (|b| SKOLEM-CONST-DECL "posint" |inf_prime_topology| NIL)
    (N_1 SKOLEM-CONST-DECL "nat" |inf_prime_topology| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|f| SKOLEM-CONST-DECL "[(N(a)(b)) -> below[N_1]]" |inf_prime_topology|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL))
   SHOSTAK))
 (|Nab_charac| 0
  (|Nab_charac-1| |nil| 3894301558
   ("" (SKEEP)
    (("" (DECOMPOSE-EQUALITY)
      (("" (IFF)
        (("" (PROP)
          (("1" (EXPAND "complement")
            (("1" (EXPAND "member")
              (("1" (EXPAND "Union")
                (("1" (SKOSIMP)
                  (("1" (TYPEPRED "a!1")
                    (("1" (EXPAND "Ni")
                      (("1" (SKOSIMP)
                        (("1" (REPLACE -1 -3)
                          (("1" (HIDE -1)
                            (("1" (EXPAND N)
                              (("1" (SKOSIMP)
                                (("1" (SKOSIMP)
                                  (("1" (TYPEPRED "i!1")
                                    (("1" (REPLACES -3)
                                      (("1" (ASSERT)
                                        (("1" (CASE " i!1 = n!1 * b - n!2 * b")
                                          (("1" (LEMMA "distributive")
                                            (("1" (INST -1 "b" "n!1" "-n!2")
                                              (("1" (REPLACE -1 -2 RL)
                                                (("1" (HIDE -1 -5)
                                                  (("1" (LEMMA "trichotomy")
                                                    (("1" (INST -1 "n!1 - n!2")
                                                      (("1" (PROP)
                                                        (("1"
                                                          (CASE-REPLACE
                                                           "n!1-n!2 = 1")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (CASE
                                                                "b * (n!1 + -n!2) > b")
                                                            (("1" (ASSERT) NIL
                                                              NIL)
                                                             ("2"
                                                              (LEMMA
                                                               "lt_times_lt_pos1")
                                                              (("2"
                                                                (INST -1 "1"
                                                                 "b" "n!1-n!2"
                                                                 "b")
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (REPLACE -1 -2)
                                                          (("2" (HIDE -1 -4)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("3"
                                                          (LEMMA
                                                           "neg_times_lt")
                                                          (("3"
                                                            (INST -1 "b"
                                                             "n!1-n!2")
                                                            (("3" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "complement")
            (("2" (EXPAND "member")
              (("2" (EXPAND "Union")
                (("2" (EXPAND "N")
                  (("2" (LEMMA "euclid_int")
                    (("2" (INST -1 "b" "x!1 - a")
                      (("2" (SKEEP)
                        (("2" (CASE-REPLACE "r = 0")
                          (("1" (ASSERT)
                            (("1" (INST 2 "q")
                              (("1" (HIDE -1 1) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "r")
                            (("2" (HIDE 3)
                              (("2" (INST 2 "N(a+r)(b)")
                                (("1" (EXPAND "N")
                                  (("1" (CASE "x!1 = q*b + r + a")
                                    (("1" (HIDE -3)
                                      (("1" (INST 2 "q")
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL)
                                     ("2" (HIDE 2 3 -1) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "Ni")
                                  (("2" (INST 1 "r")
                                    (("1" (HIDE -1 -2) (("1" (ASSERT) NIL NIL))
                                      NIL)
                                     ("2" (HIDE -2) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Ni| CONST-DECL "setofsets[int]" |inf_prime_topology| NIL)
    (|Union| CONST-DECL "set" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|neg_times_lt| FORMULA-DECL NIL |real_props| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|lt_times_lt_pos1| FORMULA-DECL NIL |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|trichotomy| FORMULA-DECL NIL |real_axioms| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|distributive| FORMULA-DECL NIL |number_fields| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|subrange| TYPE-EQ-DECL NIL |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|mod| NONEMPTY-TYPE-EQ-DECL NIL |euclidean_division| NIL)
    (|a| SKOLEM-CONST-DECL "int" |inf_prime_topology| NIL)
    (|b| SKOLEM-CONST-DECL "posint" |inf_prime_topology| NIL)
    (|r| SKOLEM-CONST-DECL "mod(b)" |inf_prime_topology| NIL)
    (|euclid_int| FORMULA-DECL NIL |euclidean_division| NIL))
   SHOSTAK))
 (|IMP_topology_TCC1| 0
  (|IMP_topology_TCC1-1| |nil| 3894301133
   ("" (LEMMA "N_Z_topology") (("" (PROPAX) NIL NIL)) NIL)
   ((|N_Z_topology| FORMULA-DECL NIL |inf_prime_topology| NIL)) NIL
   (|IMP_topology| SUBTYPE
    "extend[setof[int], (inf_prime_topology.open_N_Z?), bool, booleans.FALSE].extend(sets[(inf_prime_topology.open_N_Z?)].fullset)"
    "topology[int]")))
 (|open_is_infinite| 0
  (|open_is_infinite-1| |nil| 3894301559
   ("" (SKOSIMP)
    (("" (EXPAND "nonempty?")
      (("" (EXPAND "empty?")
        (("" (SKOSIMP)
          (("" (EXPAND "member")
            (("" (TYPEPRED "A!1")
              (("" (EXPAND "open?")
                (("" (EXPAND "member")
                  (("" (EXPAND "extend")
                    (("" (PROP)
                      (("" (EXPAND "open_N_Z?")
                        (("" (PROP)
                          (("1" (GRIND) NIL NIL)
                           ("2" (INST -1 "x!1")
                            (("2" (SKOSIMP)
                              (("2" (LEMMA "infinite_superset[int]")
                                (("2" (INST -1 "N(x!1)(b!1)" "A!1")
                                  (("1" (PROP) NIL NIL)
                                   ("2" (HIDE -2 -3 -4 -5)
                                    (("2" (LEMMA "Nab_is_infinite")
                                      (("2" (INST -1 "x!1" "b!1") NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|open?| CONST-DECL "bool" |topology| |topology|)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|emptyset_is_clopen| NAME-JUDGEMENT "clopen
    [int,
     extend[setof[int], (open_N_Z?), bool, FALSE](fullset[(open_N_Z?)])]"
     |inf_prime_topology| NIL)
    (|emptyset_is_compact| NAME-JUDGEMENT "compact
    [int,
     extend[setof[int], (open_N_Z?), bool, FALSE](fullset[(open_N_Z?)])]"
     |inf_prime_topology| NIL)
    (|b!1| SKOLEM-CONST-DECL "posint" |inf_prime_topology| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|infinite_set| TYPE-EQ-DECL NIL |infinite_sets_def| NIL)
    (|Nab_is_infinite| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|infinite_superset| FORMULA-DECL NIL |infinite_sets_def| NIL)
    (A!1 SKOLEM-CONST-DECL "(open?)" |inf_prime_topology| NIL)
    (|x!1| SKOLEM-CONST-DECL "int" |inf_prime_topology| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL))
   SHOSTAK))
 (|Nab_open| 0
  (|Nab_open-1| |nil| 3894301561
   ("" (SKOSIMP)
    (("" (EXPAND "open?")
      (("" (EXPAND "member")
        (("" (EXPAND "extend")
          (("" (PROP)
            (("1" (EXPAND "fullset") (("1" (PROPAX) NIL NIL)) NIL)
             ("2" (EXPAND "open_N_Z?")
              (("2" (PROP)
                (("2" (HIDE 1)
                  (("2" (SKOSIMP)
                    (("2" (TYPEPRED "a!2")
                      (("2" (EXPAND "N")
                        (("2" (SKOSIMP)
                          (("2" (EXPAND "subset?")
                            (("2" (ASSERT)
                              (("2" (INST 1 "b!1")
                                (("2" (SKOSIMP)
                                  (("2" (SKOSIMP)
                                    (("2" (REPLACE -1 -2)
                                      (("2" (INST 1 "n!1 + n!2")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|open?| CONST-DECL "bool" |topology| |topology|)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   SHOSTAK))
 (|Nab_closed| 0
  (|Nab_closed-1| |nil| 3894301562
   ("" (SKEEP)
    (("" (EXPAND "closed?")
      (("" (EXPAND "member")
        (("" (EXPAND "extend")
          (("" (PROP)
            (("1" (EXPAND "fullset") (("1" (PROPAX) NIL NIL)) NIL)
             ("2" (LEMMA "Nab_charac")
              (("2" (INST -1 "a" "b")
                (("2" (LEMMA "complement_complement[int]")
                  (("2" (INST -1 "Union(Ni(a)(b))")
                    (("2" (REPLACE -2 -1 RL)
                      (("2" (LEMMA "any_union_open_is_open")
                        (("2" (INST -1 "Ni(a)(b)")
                          (("2" (ASSERT)
                            (("2" (HIDE - 2)
                              (("2" (SKEEP)
                                (("2" (TYPEPRED "o")
                                  (("2" (EXPAND "Ni")
                                    (("2" (SKEEP)
                                      (("2" (LEMMA "Nab_open")
                                        (("2" (INST -1 "i+a" "b")
                                          (("2" (REPLACE -2 -1 RL)
                                            (("2" (HIDE -2)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|closed?| CONST-DECL "bool" |topology| |topology|)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|Nab_charac| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|complement_complement| FORMULA-DECL NIL |sets_lemmas| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|subrange| TYPE-EQ-DECL NIL |integers| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|open?| CONST-DECL "bool" |topology| |topology|)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|emptyset_is_clopen| NAME-JUDGEMENT "clopen
    [int,
     extend[setof[int], (open_N_Z?), bool, FALSE](fullset[(open_N_Z?)])]"
     |inf_prime_topology| NIL)
    (|emptyset_is_compact| NAME-JUDGEMENT "compact
    [int,
     extend[setof[int], (open_N_Z?), bool, FALSE](fullset[(open_N_Z?)])]"
     |inf_prime_topology| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|Nab_open| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|any_union_open_is_open| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|Ni| CONST-DECL "setofsets[int]" |inf_prime_topology| NIL)
    (|Union| CONST-DECL "set" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   SHOSTAK))
 (|N_prime_TCC1| 0
  (|N_prime_TCC1-1| |nil| 3894301133 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|prime?| CONST-DECL "bool" |primes| |ints|)
    (> CONST-DECL "bool" |reals| NIL)
    (|p!1| SKOLEM-CONST-DECL "(prime?)" |inf_prime_topology| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|divides| CONST-DECL "bool" |divides| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL))
   NIL (|N_prime| SUBTYPE "inf_prime_topology.p" "posint")))
 (|one_prime_decomposition| 0
  (|one_prime_decomposition-1| |nil| 3894301563
   ("" (SKEEP)
    (("" (REWRITE "prime_divides")
      (("" (GRIND)
        (("" (LEMMA "prime_divides")
          (("" (INST -1 "-x")
            (("" (PROP)
              (("" (SKEEP)
                (("" (INST 3 "p")
                  (("" (EXPAND "divides")
                    (("" (SKEEP)
                      (("" (INST 3 "-x_1") (("" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|prime_divides| FORMULA-DECL NIL |number_util| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|abs_nat_rew| FORMULA-DECL NIL |abs_rews| |ints|)
    (|int_abs_is_nonneg| APPLICATION-JUDGEMENT "{j: nonneg_int | j >= i}"
     |real_defs| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|divides| CONST-DECL "bool" |divides| NIL)
    (|prime?| CONST-DECL "bool" |primes| |ints|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL))
   SHOSTAK))
 (|Union_Nprime| 0
  (|Union_Nprime-1| |nil| 3894301564
   ("" (DECOMPOSE-EQUALITY)
    (("" (IFF)
      (("" (PROP)
        (("1" (EXPAND "Union")
          (("1" (EXPAND "complement")
            (("1" (EXPAND "member")
              (("1" (PROP)
                (("1" (LEMMA "one_prime_decomposition")
                  (("1" (INST -1 "x!1")
                    (("1" (PROP)
                      (("1" (SKEEP)
                        (("1" (EXPAND "divides")
                          (("1" (SKEEP)
                            (("1" (INST 3 "N(0)(p)")
                              (("1" (EXPAND "N")
                                (("1" (INST 3 "x") (("1" (ASSERT) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "N_prime")
                                (("2" (INST 1 "p") NIL NIL)) NIL)
                               ("3" (TYPEPRED "p")
                                (("3" (EXPAND "prime?")
                                  (("3" (FLATTEN) (("3" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "Union")
          (("2" (SKOSIMP)
            (("2" (TYPEPRED "a!1")
              (("2" (EXPAND "N_prime")
                (("2" (SKOSIMP)
                  (("2" (REPLACE -1 -2)
                    (("2" (HIDE -1)
                      (("2" (EXPAND "N")
                        (("2" (SKOSIMP)
                          (("2" (TYPEPRED "p!1")
                            (("2" (EXPAND "complement")
                              (("2" (EXPAND "member")
                                (("2" (PROP)
                                  (("1" (EXPAND "prime?")
                                    (("1" (REPLACE -1 -3)
                                      (("1" (LEMMA "product_one")
                                        (("1" (INST -1 "n!1" "p!1")
                                          (("1" (ASSERT)
                                            (("1" (PROP)
                                              (("1" (HIDE -1 -3 -4 -6)
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (HIDE -1 -3 -4 -6)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (EXPAND "prime?")
                                    (("2" (PROP)
                                      (("2" (HIDE -2)
                                        (("2" (REPLACE -1 -3)
                                          (("2" (HIDE -1)
                                            (("2" (CASE "1 = -n!1*p!1")
                                              (("1" (HIDE -3)
                                                (("1" (LEMMA "product_one")
                                                  (("1" (INST -1 "-n!1" "p!1")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|product_one| FORMULA-DECL NIL |divides| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|one_prime_decomposition| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|divides| CONST-DECL "bool" |divides| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|p| SKOLEM-CONST-DECL "(prime?)" |inf_prime_topology| NIL)
    (|prime?| CONST-DECL "bool" |primes| |ints|)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_abs_is_nonneg| APPLICATION-JUDGEMENT "{j: nonneg_int | j >= i}"
     |real_defs| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|Union| CONST-DECL "set" |sets| NIL)
    (|N_prime| CONST-DECL "setofsets[int]" |inf_prime_topology| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|set_one_mone_is_finite| 0
  (|set_one_mone_is_finite-1| |nil| 3894301565
   ("" (EXPAND "is_finite")
    ((""
      (INST 1 "2"
       "LAMBDA (i:({x: int | x = 1 OR x = -1})): (IF i = 1 THEN 0 ELSE 1 ENDIF)")
      (("" (EXPAND "injective?") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|exp2| DEF-DECL "posnat" |exp2| NIL)
    (|uint8| TYPE-EQ-DECL NIL |integertypes| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL))
   SHOSTAK))
 (|prime_Nprime_bij| 0
  (|prime_Nprime_bij-1| |nil| 3894301567
   ("" (INST 1 "LAMBDA(p: (fullset[(prime?)])): N(0)(p)")
    (("1" (EXPAND "bijective?")
      (("1" (PROP)
        (("1" (EXPAND "injective?")
          (("1" (SKEEP)
            (("1" (DECOMPOSE-EQUALITY -1)
              (("1" (INST -1 "x1")
                (("1" (IFF)
                  (("1" (PROP)
                    (("1" (HIDE -1)
                      (("1" (EXPAND "N")
                        (("1" (SKEEP)
                          (("1" (TYPEPRED "x1" "x2")
                            (("1" (HIDE -2 -4)
                              (("1" (EXPAND "prime?")
                                (("1" (PROP)
                                  (("1" (INST -1 "x2")
                                    (("1" (PROP)
                                      (("1" (EXPAND "divides")
                                        (("1" (INST 1 "n")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (ASSERT) NIL NIL)
                                       ("3" (ASSERT) NIL NIL))
                                      NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE (1 3))
                      (("2" (EXPAND "N")
                        (("2" (INST 1 "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE (-1 2))
                (("2" (TYPEPRED "x2")
                  (("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL)
               ("3" (HIDE (-1 2))
                (("3" (TYPEPRED "x1")
                  (("3" (HIDE -2) (("3" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "surjective?")
          (("2" (SKEEP)
            (("2" (TYPEPRED "y")
              (("2" (EXPAND "N_prime")
                (("2" (SKEEP)
                  (("2" (INST 1 "p")
                    (("1" (ASSERT) NIL NIL)
                     ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL))
    NIL)
   ((|p!1| SKOLEM-CONST-DECL "(fullset[(prime?)])" |inf_prime_topology| NIL)
    (|p!1| SKOLEM-CONST-DECL "(fullset[(prime?)])" |inf_prime_topology| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|p| SKOLEM-CONST-DECL "(prime?)" |inf_prime_topology| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|divides| CONST-DECL "bool" |divides| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|x2| SKOLEM-CONST-DECL "(fullset[(prime?)])" |inf_prime_topology| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|N_prime| CONST-DECL "setofsets[int]" |inf_prime_topology| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|prime?| CONST-DECL "bool" |primes| |ints|)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|fullset| CONST-DECL "set" |sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL))
   SHOSTAK))
 (|fin_prime_closed_Np| 0
  (|fin_prime_closed_Np-1| |nil| 3894301568
   ("" (PROP)
    (("" (LEMMA "closed_Union")
      (("" (INST -1 "N_prime")
        (("" (PROP)
          (("1" (EXPAND "is_finite")
            (("1" (SKOSIMP)
              (("1" (LEMMA "prime_Nprime_bij")
                (("1" (SKEEP)
                  (("1" (INST 1 "N!1" "f!1 o inverse(f)")
                    (("1" (EXPAND "bijective?")
                      (("1" (PROP)
                        (("1"
                          (LEMMA
                           "composition_injective[(N_prime), (fullset[(prime?)]), below[N!1]]")
                          (("1" (INST -1 "inverse(f)" "f!1")
                            (("1"
                              (LEMMA
                               "bij_inv_is_bij_alt[(fullset[(prime?)]), (N_prime)]")
                              (("1" (INST -1 "f" "inverse(f)")
                                (("1" (EXPAND "bijective?")
                                  (("1" (PROP) NIL NIL)) NIL)
                                 ("2" (HIDE (-3 2 3 4))
                                  (("2"
                                    (LEMMA
                                     "left_inverse_is_inverse[(fullset[(prime?)]), (N_prime)]")
                                    (("2" (INST -1 "f" "inverse(f)")
                                      (("1" (HIDE 2)
                                        (("1"
                                          (LEMMA
                                           "inj_left[(fullset[(prime?)]), (N_prime)]")
                                          (("1" (INST -1 "f")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (HIDE-ALL-BUT 1)
                                            (("2" (INST 1 "2")
                                              (("2" (EXPAND "fullset")
                                                (("2" (REWRITE "prime_2") NIL
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (INST 1 "2")
                                          (("2" (EXPAND "fullset")
                                            (("2" (REWRITE "prime_2") NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (INST 1 "2")
                                  (("3" (HIDE-ALL-BUT 1)
                                    (("3" (EXPAND "fullset")
                                      (("3" (REWRITE "prime_2") NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("4" (HIDE-ALL-BUT (-1 -2 1))
                                  (("4" (EXPAND "bijective?")
                                    (("4" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (INST 1 "2")
                              (("2" (EXPAND "fullset")
                                (("2" (REWRITE "prime_2") NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (INST 1 "2")
                      (("2" (EXPAND "fullset")
                        (("2" (REWRITE "prime_2") NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "every")
            (("2" (SKEEP)
              (("2" (TYPEPRED "x")
                (("2" (EXPAND "N_prime")
                  (("2" (SKEEP)
                    (("2" (LEMMA "Nab_closed")
                      (("2" (INST -1 "0" "p")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (TYPEPRED "p")
                          (("2" (EXPAND "prime?") (("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|fullset| CONST-DECL "set" |sets| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|closed_Union| FORMULA-DECL NIL |topology| |topology|)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|composition_injective| JUDGEMENT-TCC NIL |function_props| NIL)
    (|bij_inv_is_bij_alt| FORMULA-DECL NIL |function_inverse_def| NIL)
    (|left_inverse?| CONST-DECL "bool" |function_inverse_def| NIL)
    (|inj_left| FORMULA-DECL NIL |function_inverse| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|prime_2| FORMULA-DECL NIL |primes| |ints|)
    (|left_inverse_is_inverse| FORMULA-DECL NIL |function_inverse_def| NIL)
    (|inverse?| CONST-DECL "bool" |function_inverse_def| NIL)
    (|f| SKOLEM-CONST-DECL "[(fullset[(prime?)]) -> (N_prime)]"
     |inf_prime_topology| NIL)
    (N!1 SKOLEM-CONST-DECL "nat" |inf_prime_topology| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|f!1| SKOLEM-CONST-DECL "[(fullset[(prime?)]) -> below[N!1]]"
     |inf_prime_topology| NIL)
    (|inverse| CONST-DECL "D" |function_inverse| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|prime?| CONST-DECL "bool" |primes| |ints|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|prime_Nprime_bij| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|Nab_closed| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|p| SKOLEM-CONST-DECL "(prime?)" |inf_prime_topology| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|every| CONST-DECL "bool" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|N_prime| CONST-DECL "setofsets[int]" |inf_prime_topology| NIL))
   SHOSTAK))
 (|prime_set_is_infinite| 0
  (|prime_set_is_infinite-1| |nil| 3894301569
   ("" (LEMMA "fin_prime_closed_Np")
    (("" (LEMMA "closed_complement")
      (("" (LEMMA "Union_Nprime")
        (("" (REPLACE -1 -3 RL HIDE)
          (("" (LEMMA "set_one_mone_is_finite")
            (("" (LEMMA "open_is_infinite")
              (("" (INST -1 "{x: int | x = 1 OR x = -1}")
                (("1" (INST -3 "{x: int | x = 1 OR x = -1}")
                  (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (INST -2 "{x: int | x = 1 OR x = -1}")
                  (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|closed_complement| FORMULA-DECL NIL |topology| |topology|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|open_N_Z?| CONST-DECL "bool" |inf_prime_topology| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|open_is_infinite| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|emptyset_is_compact| NAME-JUDGEMENT "compact
    [int,
     extend[setof[int], (open_N_Z?), bool, FALSE](fullset[(open_N_Z?)])]"
     |inf_prime_topology| NIL)
    (|emptyset_is_clopen| NAME-JUDGEMENT "clopen
    [int,
     extend[setof[int], (open_N_Z?), bool, FALSE](fullset[(open_N_Z?)])]"
     |inf_prime_topology| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|closed?| CONST-DECL "bool" |topology| |topology|)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (N CONST-DECL "set[int]" |inf_prime_topology| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|open?| CONST-DECL "bool" |topology| |topology|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|set_one_mone_is_finite| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|Union_Nprime| FORMULA-DECL NIL |inf_prime_topology| NIL)
    (|fin_prime_closed_Np| FORMULA-DECL NIL |inf_prime_topology| NIL))
   SHOSTAK)))

