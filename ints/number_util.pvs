%------------------------------------------------------------------------------
% Number Theory utilities
%
% Authors:	
%		Bruno Berto de Oliveira Ribeiro
%		Universidade de Brasília - Brazil
%
%		Mauricio Ayala-Rincón
%		Universidade de Brasília - Brazil
%
% 		Thaynara Arielly de Lima
% 		Universidade Federal de Goiás - Brazil
%
%               Mariano M. Moscato
%               NASA  Langley  Research  Center - US
%
%------------------------------------------------------------------------------

number_util: THEORY

  BEGIN

  IMPORTING primes, gcd, primes, product

  prime_divides: LEMMA
      FORALL (n:nat) : n /= 1 IMPLIES EXISTS(p:(prime?)): divides(p,n)

  posnat_divides_posnat: LEMMA
    FORALL(a, b:posnat, c:int):
       a = b * c => c > 0

  divisor_posnat_strict_smaller: LEMMA
     FORALL(a: posnat, b: nat | b > 1 , c:posnat):
     	a = b * c => c < a

  prime_gcd_rel: LEMMA
    FORALL(a:int, p:(prime?)):
       NOT divides(p, a) => gcd(p, a) = 1

  gcd_one_left: LEMMA
    FORALL(n:int): gcd(1, n) = 1

  gcd_one_right: LEMMA
    FORALL(n:int): gcd(n, 1) = 1

  gcd_dif_primes_eq_one: LEMMA
    FORALL(p,q: (prime?)): p /= q => gcd(p, q) = 1

  product_eq_gcd_one: LEMMA
     FORALL(a, b, c, d: int):
       (a /= 0 OR c /= 0) AND
       gcd(a, c) = 1 AND a*b = c*d => divides(a, d)

  gcd_one_divides_prod: LEMMA
      FORALL(a, b, c: int):
       (a /= 0 OR b /= 0) AND
       gcd(a, b) = 1 AND divides(a, b*c) => divides(a, c)

  gcd_one_prod_eq_one: LEMMA
    FORALL(a, b, c: int):
      (b /= 0 AND c /= 0) AND
      gcd(a,b) = 1 AND gcd(a,c) = 1 => gcd(a, b*c) = 1

  gcd_one_pot_eq_one: LEMMA
     FORALL(a, b:nzint, i, j:nat):
      gcd(a,b) = 1  => gcd(a^i, b^j) = 1

  divides_gcd_one: LEMMA
     FORALL(a, b, c: int):
       (a /= 0 OR b /= 0) AND
       gcd(a, b) = 1 AND divides(a, c) AND divides(b, c) =>
       	      divides(a*b,c)

  prod_selection_prop: LEMMA
    FORALL (n:nat):
     FORALL(a: sequence[int], i:nat| i <= n):
      product(0, n, a) = a(i) *
            product(0, n, LAMBDA(j:nat): IF j = i THEN 1 else a(j) ENDIF)


  END number_util
