(|dnf_polynomials| (|eval_TCC1| 0 (|eval_TCC1-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe1)" "NIL"))) (|eval_TCC2| 0 (|eval_TCC2-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe2)" "NIL"))) (|eval_TCC3| 0 (|eval_TCC3-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe1)" "NIL"))) (|eval_TCC4| 0 (|eval_TCC4-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe2)" "NIL"))) (|eval_TCC5| 0 (|eval_TCC5-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe)" "NIL"))) (|eval_TCC6| 0 (|eval_TCC6-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe1)" "NIL"))) (|eval_TCC7| 0 (|eval_TCC7-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe2)" "NIL"))) (|eval_TCC8| 0 (|eval_TCC9-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe2)" "NIL"))) (|eval_TCC9| 0 (|eval_TCC8-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe1)" "NIL"))) (|eval_TCC10| 0 (|eval_TCC10-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe1)" "NIL"))) (|eval_TCC11| 0 (|eval_TCC11-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe2)" "NIL"))) (|eval_TCC12| 0 (|eval_TCC14-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe1)" "NIL"))) (|eval_TCC13| 0 (|eval_TCC12-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe2)" "NIL"))) (|eval_TCC14| 0 (|eval_TCC15-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|eval| TERMINATION "dnf_polynomials.eval(dnf_polynomials.pe3)" "NIL"))) (|eval_atm_list_TCC1| 0 (|eval_atm_list_TCC1-1| |nil| 3770397240 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL)) NIL (|eval_atm_list| SUBTYPE "dnf_polynomials.dnf_atm_lst" "(list_adt[DNF_Atom].cons?)"))) (|eval_atm_list_TCC2| 0 (|eval_atm_list_TCC2-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|eval_atm_list| TERMINATION "dnf_polynomials.eval_atm_list(list_adt[DNF_Atom].cdr(dnf_polynomials.dnf_atm_lst))" "NIL"))) (|eval_TCC15| 0 (|eval_TCC15-1| |nil| 3769959726 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL)) NIL (|eval| SUBTYPE "dnf_polynomials.dnf" "(list_adt[list[DNF_Atom]].cons?)"))) (|eval_TCC16| 0 (|eval_TCC16-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|eval| TERMINATION "dnf_polynomials.eval(list_adt[list[DNF_Atom]].cdr(dnf_polynomials.dnf))" "NIL"))) (|degr_rec_TCC1| 0 (|degr_rec_TCC1-1| |nil| 3772801120 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|degr_rec| SUBTYPE "0" "upto(dnf_polynomials.deg)"))) (|degr_rec_TCC2| 0 (|degr_rec_TCC2-1| |nil| 3772801120 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL (|degr_rec| SUBTYPE "dnf_polynomials.deg" "upto(dnf_polynomials.deg)"))) (|degr_rec_TCC3| 0 (|degr_rec_TCC3-1| |nil| 3772801120 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|degr_rec| SUBTYPE "(number_fields.-)(dnf_polynomials.deg, 1)" "nat"))) (|degr_rec_TCC4| 0 (|degr_rec_TCC4-1| |nil| 3772801120 ("" (TERMINATION-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL (|degr_rec| TERMINATION "dnf_polynomials.degr_rec(dnf_polynomials.polyn, (number_fields.-)(dnf_polynomials.deg, 1))" "NIL"))) (|degr_rec_TCC5| 0 (|degr_rec_TCC5-1| |nil| 3772801120 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|degr_rec| SUBTYPE "dnf_polynomials.degr_rec(dnf_polynomials.polyn, (number_fields.-)(dnf_polynomials.deg, 1))" "upto(dnf_polynomials.deg)"))) (|degr_rec_lemma| 0 (|degr_rec_lemma-1| |nil| 3772801948 ("" (SKEEP) (("" (INDUCT "deg") (("1" (SKEEP) (("1" (EXPAND "degr_rec") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKEEP) (("2" (SKEEP) (("2" (INST -1 "x") (("2" (EXPAND "degr_rec" 1) (("2" (CASE "polyn(1 + j) /= 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (CASE "polyn(1 + j) = 0") (("1" (HIDE 1) (("1" (LEMMA "poly_reduce_degree") (("1" (INST -1 "polyn" "j" "1 + j" "x") (("1" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (SKEEP) (("3" (TYPEPRED "ii") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|sequence| TYPE-EQ-DECL NIL |sequences| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|poly_reduce_degree| FORMULA-DECL NIL |polynomials| |reals|) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK)) (|degr_rec_change_function| 0 (|degr_rec_change_function-1| |nil| 3772802502 ("" (SKEEP) (("" (SKEEP) (("" (INDUCT "deg") (("1" (EXPAND "degr_rec") (("1" (PROPAX) NIL NIL)) NIL) ("2" (SKEEP) (("2" (EXPAND "degr_rec" 1) (("2" (CASE "NOT change_function(polyn, re)(1 + j) = 0") (("1" (ASSERT) (("1" (EXPAND "change_function" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "change_function" -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|change_function| CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|construct_record_TCC1| 0 (|construct_record_TCC1-1| |nil| 3772807183 ("" (INDUCT "deg") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "degr_rec" -2) (("2" (CASE " polyn(1 + j) = 0") (("1" (ASSERT) (("1" (INST -2 "polyn" "re") (("1" (SPLIT -2) (("1" (ASSERT) (("1" (EXPAND "degr_rec" -4) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "degr_rec" -3) (("2" (EXPAND "change_function" -3) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|change_function| CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (<= CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL (|construct_record| SUBTYPE "(# pn := dnf_polynomials.change_function(dnf_polynomials.polyn, dnf_polynomials.re), d := dnf_polynomials.degr_rec(dnf_polynomials.polyn, dnf_polynomials.deg), rel := dnf_polynomials.trel #)" "DNF_Atom"))) (|depth_TCC1| 0 (|depth_TCC1-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|depth| TERMINATION "dnf_polynomials.depth(dnf_polynomials.pe2)" "NIL"))) (|depth_TCC2| 0 (|depth_TCC2-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|depth| TERMINATION "dnf_polynomials.depth(dnf_polynomials.pe2)" "NIL"))) (|depth_TCC3| 0 (|depth_TCC3-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|depth| TERMINATION "dnf_polynomials.depth(dnf_polynomials.pe2)" "NIL"))) (|depth_TCC4| 0 (|depth_TCC5-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|depth| TERMINATION "dnf_polynomials.depth(dnf_polynomials.pe1)" "NIL"))) (|depth_TCC5| 0 (|depth_TCC4-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|depth| TERMINATION "dnf_polynomials.depth(dnf_polynomials.pe2)" "NIL"))) (|depth_TCC6| 0 (|depth_TCC7-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((<< ADT-DEF-DECL "(strict_well_founded?[PolyRelExpr])" |PolyRelExpr_adt| NIL)) NIL (|depth| TERMINATION "dnf_polynomials.depth(dnf_polynomials.pe3)" "NIL"))) (|abs_nnf_rel_preserves_truth| 0 (|abs_nnf_rel_preserves_truth-10| |nil| 3772553711 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (FLATTEN 1) (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "abs_nnf_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (FLATTEN 1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "abs_nnf_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (FLATTEN 1) (("3" (EXPAND "eval_rel") (("3" (EXPAND "abs") (("3" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "abs_nnf_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval") (("4" (FLATTEN 1) (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "abs_nnf_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (FLATTEN 1) (("5" (EXPAND "eval_rel") (("5" (EXPAND "abs") (("5" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "abs_nnf_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (FLATTEN 1) (("6" (EXPAND "eval_rel") (("6" (EXPAND "abs") (("6" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (EXPAND "abs_nnf_rel") (("7" (EXPAND "eval") (("7" (EXPAND "eval") (("7" (FLATTEN 1) (("7" (EXPAND "eval_rel") (("7" (EXPAND "abs") (("7" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (EXPAND "abs_nnf_rel") (("8" (EXPAND "eval") (("8" (EXPAND "eval") (("8" (FLATTEN 1) (("8" (EXPAND "eval_rel") (("8" (EXPAND "abs") (("8" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (EXPAND "abs_nnf_rel") (("9" (EXPAND "eval") (("9" (EXPAND "eval") (("9" (FLATTEN 1) (("9" (EXPAND "eval_rel") (("9" (EXPAND "abs") (("9" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (EXPAND "abs_nnf_rel") (("10" (EXPAND "eval") (("10" (EXPAND "eval") (("10" (FLATTEN 1) (("10" (EXPAND "eval_rel") (("10" (EXPAND "abs") (("10" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("11" (EXPAND "abs_nnf_rel") (("11" (EXPAND "eval") (("11" (EXPAND "eval") (("11" (FLATTEN 1) (("11" (EXPAND "eval_rel") (("11" (EXPAND "abs") (("11" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("12" (EXPAND "abs_nnf_rel") (("12" (EXPAND "eval") (("12" (EXPAND "eval") (("12" (FLATTEN 1) (("12" (EXPAND "eval_rel") (("12" (EXPAND "abs") (("12" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|sequence| TYPE-EQ-DECL NIL |sequences| NIL) (< CONST-DECL "bool" |reals| NIL) (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|TarskiRel_induction| FORMULA-DECL NIL |poly_system_strategy| NIL) (PABS ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PABS?)]" |PolyRelExpr_adt| NIL) (PABS? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|abs_nnf_rel| CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL)) NIL) (|abs_nnf_rel_preserves_truth-9| |nil| 3772553655 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (FLATTEN 1) (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "abs_nnf_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (FLATTEN 1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "abs_nnf_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (FLATTEN 1) (("3" (EXPAND "eval_rel") (("3" (EXPAND "abs") (("3" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "abs_nnf_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval") (("4" (FLATTEN 1) (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "abs_nnf_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (FLATTEN 1) (("5" (EXPAND "eval_rel") (("5" (EXPAND "abs") (("5" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "abs_nnf_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (FLATTEN 1) (("6" (EXPAND "eval_rel") (("6" (EXPAND "abs") (("6" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (EXPAND "abs_nnf_rel") (("7" (EXPAND "eval") (("7" (EXPAND "eval") (("7" (FLATTEN 1) (("7" (EXPAND "eval_rel") (("7" (EXPAND "abs") (("7" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_preserves_truth-8| |nil| 3772553612 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (FLATTEN 1) (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "abs_nnf_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (FLATTEN 1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "abs_nnf_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (FLATTEN 1) (("3" (EXPAND "eval_rel") (("3" (EXPAND "abs") (("3" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "abs_nnf_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval") (("4" (FLATTEN 1) (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "abs_nnf_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (FLATTEN 1) (("5" (EXPAND "eval_rel") (("5" (EXPAND "abs") (("5" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "abs_nnf_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (FLATTEN 1) (("6" (EXPAND "eval_rel") (("6" (EXPAND "abs") (("6" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_preserves_truth-7| |nil| 3772553584 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (FLATTEN 1) (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "abs_nnf_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (FLATTEN 1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_preserves_truth-6| |nil| 3770461721 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (FLATTEN 1) (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (CASE " polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_preserves_truth-5| |nil| 3770461671 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (GROUND) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "abs_nnf_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (GROUND) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "abs_nnf_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval_rel") (("3" (EXPAND "abs") (("3" (GROUND) (("1" (GRIND) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "abs_nnf_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (GROUND) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "abs_nnf_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (EXPAND "abs") (("5" (GROUND) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "abs_nnf_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (EXPAND "eval_rel") (("6" (EXPAND "abs") (("6" (GROUND) (("6" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (EXPAND "abs_nnf_rel") (("7" (EXPAND "eval") (("7" (EXPAND "eval") (("7" (EXPAND "eval_rel") (("7" (EXPAND "abs") (("7" (GROUND) (("7" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (EXPAND "abs_nnf_rel") (("8" (EXPAND "eval") (("8" (EXPAND "eval") (("8" (EXPAND "eval_rel") (("8" (EXPAND "abs") (("8" (GROUND) (("1" (GRIND) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_preserves_truth-4| |nil| 3770461615 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (GROUND) (("1" (GRIND) NIL))))))))))))) ("2" (EXPAND "abs_nnf_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (GROUND) (("2" (GRIND) NIL))))))))))))) ("3" (EXPAND "abs_nnf_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval_rel") (("3" (EXPAND "abs") (("3" (GROUND) (("3" (GRIND) NIL))))))))))))) ("4" (EXPAND "abs_nnf_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (GROUND) (("4" (GRIND) NIL))))))))))))) ("5" (EXPAND "abs_nnf_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (EXPAND "abs") (("5" (GROUND) (("5" (GRIND) NIL))))))))))))) ("6" (POSTPONE) NIL) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL) ("11" (POSTPONE) NIL) ("12" (POSTPONE) NIL)))))))) NIL) NIL NIL) (|abs_nnf_rel_preserves_truth-3| |nil| 3770461173 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (GROUND) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_preserves_truth-2| |nil| 3770461019 ("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (SKEEP) (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "abs") (("1" (EXPAND "eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (EXPAND "abs_nnf_rel") (("2" (EXPAND "eval") (("2" (EXPAND "abs") (("2" (EXPAND "eval_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND "abs_nnf_rel") (("3" (EXPAND "eval") (("3" (EXPAND "abs") (("3" (EXPAND "eval_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval_rel") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (EXPAND "abs_nnf_rel") (("4" (EXPAND "eval") (("4" (EXPAND "abs") (("4" (EXPAND "eval_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "abs_nnf_rel") (("5" (EXPAND "eval") (("5" (EXPAND "abs") (("5" (EXPAND "eval_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "abs_nnf_rel") (("6" (EXPAND "eval") (("6" (EXPAND "abs") (("6" (EXPAND "eval_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval_rel") (("6" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_preserves_truth-1| |nil| 3770460790 ("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (SKEEP) (("1" (EXPAND "abs_nnf_rel") (("1" (EXPAND "eval") (("1" (EXPAND "abs") (("1" (EXPAND "eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|abs_nnf_rel_pnot_preserves_truth| 0 (|abs_nnf_rel_pnot_preserves_truth-9| "" 3772554279 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval_rel") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "not_eval_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "not_eval_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "not_eval_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (EXPAND "eval_rel") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|TarskiRel_induction| FORMULA-DECL NIL |poly_system_strategy| NIL) (PNOT ADT-CONSTRUCTOR-DECL "[PolyRelExpr -> (PNOT?)]" |PolyRelExpr_adt| NIL) (PNOT? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|not_eval_rel| CONST-DECL "TarskiRel" |dnf_polynomials| NIL) (PABS ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PABS?)]" |PolyRelExpr_adt| NIL) (PABS? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL)) NIL) (|abs_nnf_rel_pnot_preserves_truth-8| "" 3772554261 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval_rel") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "not_eval_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "not_eval_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "not_eval_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (EXPAND "eval_rel") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_pnot_preserves_truth-7| "" 3772554246 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "abs") (("3" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (EXPAND "not_eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval_rel") (("2" (EXPAND "not_eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "not_eval_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "not_eval_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "not_eval_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (EXPAND "eval_rel") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_pnot_preserves_truth-6| "" 3772554225 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "abs") (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "abs") (("3" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (EXPAND "not_eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval_rel") (("2" (EXPAND "not_eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "not_eval_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "not_eval_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "not_eval_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (EXPAND "eval_rel") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_pnot_preserves_truth-5| "" 3772554205 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "eval") (("1" (EXPAND "abs") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "abs") (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "abs") (("3" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (EXPAND "not_eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval_rel") (("2" (EXPAND "not_eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "not_eval_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "not_eval_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "not_eval_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval") (("6" (EXPAND "eval_rel") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_pnot_preserves_truth-4| "" 3772553805 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "eval") (("1" (EXPAND "abs") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "abs") (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "abs") (("3" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (EXPAND "not_eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval_rel") (("2" (EXPAND "not_eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "not_eval_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (EXPAND "abs") (("4" (CASE "polynomial(pn, d)(x) < 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "not_eval_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_pnot_preserves_truth-3| "" 3772553778 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "eval") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|abs_nnf_rel_pnot_preserves_truth-2| |nil| 3770463010 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "eval") (("1" (EXPAND "abs") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "abs") (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "eval") (("3" (EXPAND "abs") (("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval") (("3" (EXPAND "eval_rel") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "eval") (("4" (EXPAND "abs") (("4" (EXPAND "not_eval_rel") (("4" (EXPAND "eval") (("4" (EXPAND "eval_rel") (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "eval") (("5" (EXPAND "abs") (("5" (EXPAND "not_eval_rel") (("5" (EXPAND "eval") (("5" (EXPAND "eval_rel") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "eval") (("6" (EXPAND "abs") (("6" (EXPAND "not_eval_rel") (("6" (EXPAND "eval") (("6" (EXPAND "eval_rel") (("6" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|abs_nnf_rel_pnot_preserves_truth-1| |nil| 3770462960 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (INDUCT "rel") (("1" (EXPAND "eval") (("1" (EXPAND "abs") (("1" (EXPAND "not_eval_rel") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|nnf_TCC1| 0 (|nnf_TCC1-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC2| 0 (|nnf_TCC1-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe2)" "NIL"))) (|nnf_TCC3| 0 (|nnf_TCC3-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC4| 0 (|nnf_TCC2-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe2)" "NIL"))) (|nnf_TCC5| 0 (|no| "" 3769966244 ("" (SKEEP) (("" (SKEEP) (("" (EXPAND "depth") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL")) (|nnf_TCC3-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) NIL NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL"))) (|nnf_TCC6| 0 (|nnf_TCC4-1| |nil| 3769959726 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe2))" "NIL"))) (|nnf_TCC7| 0 (|nnf_TCC3-1| |nil| 3769965722 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL"))) (|nnf_TCC8| 0 (|nnf_TCC4-1| |nil| 3769965722 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe2))" "NIL"))) (|nnf_TCC9| 0 (|nnf_TCC9-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC10| 0 (|nnf_TCC10-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC11| 0 (|nnf_TCC5-1| |nil| 3769965722 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe2))" "NIL"))) (|nnf_TCC12| 0 (|nnf_TCC6-1| |nil| 3769965722 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL"))) (|nnf_TCC13| 0 (|nnf_TCC13-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe2)" "NIL"))) (|nnf_TCC14| 0 (|nnf_TCC14-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC15| 0 (|nnf_TCC10-1| |nil| 3769965722 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe2))" "NIL"))) (|nnf_TCC16| 0 (|nnf_TCC9-1| |nil| 3769965722 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL"))) (|nnf_TCC17| 0 (|nnf_TCC15-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe2)" "NIL"))) (|nnf_TCC18| 0 (|nnf_TCC18-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC19| 0 (|nnf_TCC19-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe2))" "NIL"))) (|nnf_TCC20| 0 (|nnf_TCC20-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL"))) (|nnf_TCC21| 0 (|nnf_TCC21-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe3))" "NIL"))) (|nnf_TCC22| 0 (|nnf_TCC24-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL"))) (|nnf_TCC23| 0 (|nnf_TCC21-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe2)" "NIL"))) (|nnf_TCC24| 0 (|nnf_TCC22-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC25| 0 (|nnf_TCC25-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe2))" "NIL"))) (|nnf_TCC26| 0 (|nnf_TCC26-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL"))) (|nnf_TCC27| 0 (|nnf_TCC23-1| |nil| 3770024185 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe2)" "NIL"))) (|nnf_TCC28| 0 (|nnf_TCC28-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC29| 0 (|nnf_TCC29-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe2))" "NIL"))) (|nnf_TCC30| 0 (|nnf_TCC30-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(PolyRelExpr_adt.PNOT(dnf_polynomials.pe1))" "NIL"))) (|nnf_TCC31| 0 (|nnf_TCC31-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe2)" "NIL"))) (|nnf_TCC32| 0 (|nnf_TCC32-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe1)" "NIL"))) (|nnf_TCC33| 0 (|nnf_TCC33-1| |nil| 3770397240 ("" (TERMINATION-TCC) NIL NIL) ((|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|nnf| TERMINATION "dnf_polynomials.nnf(dnf_polynomials.pe3)" "NIL"))) (|nnf_not_has_special_form| 0 (|nnf_not_has_special_form-6| |nil| 3770399857 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "has_special_form" 1) (("4" (EXPAND "nnf" -4) (("4" (EXPAND "has_special_form" -4) (("4" (FLATTEN -4) (("4" (SPLIT 1) (("1" (INST -3 "PAND1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PAND2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "has_special_form" 1) (("5" (EXPAND "nnf" -4) (("5" (EXPAND "has_special_form" -4) (("5" (FLATTEN -4) (("5" (SPLIT 1) (("1" (INST -3 "POR1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "POR2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (EXPAND "nnf" -3) (("6" (LIFT-IF) (("6" (GROUND) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (EXPAND "has_special_form" -2) (("4" (FLATTEN -2) (("4" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5) (("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "has_special_form" -2) (("5" (FLATTEN -2) (("5" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("6" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE -1) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("7" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var),pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (HIDE 2 3 4 5 6 7) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5 6 7) (("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("8" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" 8) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 8) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "pe2(PNOT1_var)") (("2" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("9" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (ASSERT) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (HIDE -1 -2) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "pe2(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe1(PNOT1_var))") (("1" (REVEAL -1) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("10" (CASE "PITE?(PNOT1_var)") (("1" (CASE "PNOT1_var = PITE(pe1(PNOT1_var),pe2(PNOT1_var),pe3(PNOT1_var))") (("1" (REPLACE -1 10) (("1" (HIDE -2 -3 -4) (("1" (HIDE 1 2 3 4 5 6 7 8 9) (("1" (EXPAND "nnf" 1) (("1" (EXPAND "has_special_form" 1) (("1" (EXPAND "has_special_form" 1) (("1" (INST -2 "pe1(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe1(PNOT1_var))") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe2(PNOT1_var))") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe3(PNOT1_var))") (("1" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -5) (("1" (EXPAND "nnf" -2) (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "nnf" -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (REVEAL -4) (("2" (REPLACE -4 -1) (("2" (EXPAND "nnf" -1) (("2" (EXPAND "has_special_form" -1) (("2" (EXPAND "has_special_form" -1) (("2" (FLATTEN -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL -4) (("2" (HIDE -2 -3 -5) (("2" (REPLACE -2 -1) (("2" (EXPAND "nnf" -1) (("2" (EXPAND "has_special_form" -1) (("2" (EXPAND "has_special_form" -1) (("2" (FLATTEN -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (REVEAL -4) (("2" (HIDE -2 -3 -5) (("2" (REPLACE -2 -1) (("2" (EXPAND "nnf" -1) (("2" (EXPAND "has_special_form" -1) (("2" (EXPAND "has_special_form" -1) (("2" (FLATTEN -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (GRIND) NIL NIL) ("12" (GRIND) NIL NIL) ("13" (GRIND) NIL NIL) ("14" (EXPAND "has_special_form" -2) (("14" (FLATTEN -2) (("14" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (HIDE 4) (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("15" (EXPAND "has_special_form" -2) (("15" (FLATTEN -2) (("15" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (HIDE 6) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("16" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE 7) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("17" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (HIDE 8) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (INST -5 "pe1(PNOT1_var)") (("1" (SPLIT -5) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("18" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" 8) (("1" (SPLIT 8) (("1" (INST -4 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (FLATTEN -3) NIL NIL) ("3" (FLATTEN -3) (("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -3) (("2" (INST -5 " pe2(PNOT1_var)") (("2" (SPLIT -5) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("19" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (SPLIT 9) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) NIL NIL)) NIL)) NIL) ("2" (EXPAND "has_special_form" -3) (("2" (EXPAND "has_special_form" -3) (("2" (FLATTEN -3) NIL NIL)) NIL)) NIL) ("3" (EXPAND "has_special_form" -3) (("3" (EXPAND "has_special_form" -3) (("3" (FLATTEN -3) NIL NIL)) NIL)) NIL) ("4" (EXPAND "has_special_form" -3) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("20" (CASE "PITE?(PNOT1_var)") (("1" (CASE "PNOT1_var = PITE(pe1(PNOT1_var),pe2(PNOT1_var),pe3(PNOT1_var))") (("1" (HIDE 1 2 3 4 5 6 7 8 9 10) (("1" (REPLACE -1 1) (("1" (HIDE -2 -3) (("1" (EXPAND "nnf" 1) (("1" (EXPAND "has_special_form" 1) (("1" (EXPAND "has_special_form" 1) (("1" (REVEAL -2) (("1" (EXPAND "has_special_form" -1) (("1" (EXPAND "has_special_form" -1) (("1" (FLATTEN -1) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe2(PNOT1_var))") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe1(PNOT1_var))") (("1" (REVEAL -1) (("1" (INST -1 " PNOT(pe3(PNOT1_var))") (("1" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -9) (("1" (ASSERT) (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe2(PNOT1_var))") (("1" (SPLIT -1) (("1" (SPLIT 1) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REVEAL -1) (("2" (INST -1 "PNOT(pe3(PNOT1_var))") (("2" (SPLIT -1) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("21" (GRIND) NIL NIL) ("22" (GRIND) NIL NIL) ("23" (GRIND) NIL NIL) ("24" (EXPAND "has_special_form" -2) (("24" (FLATTEN -2) (("24" (ASSERT) (("24" (SKEEP) (("24" (INST -6 "y") (("24" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (HIDE -1 -2 -3 -5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("25" (HIDE 1 2 3 4 6) (("25" (HIDE -1 -2) (("25" (SKEEP) (("25" (INST -3 "y") (("25" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("26" (HIDE 1 2 3 4 5 6 7 9) (("26" (HIDE -1 -2) (("26" (REVEAL 6) (("26" (SKEEP) (("26" (INST -3 "y") (("26" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -2 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("27" (HIDE 1 2 3 4 5 7) (("27" (HIDE -1 -2) (("27" (REVEAL 6) (("27" (SKEEP) (("27" (INST -3 "y") (("27" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -2 2 3 4) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("28" (HIDE 1 2 3 4 5 6 8) (("28" (HIDE -2 -1) (("28" (REVEAL 7) (("28" (SKEEP) (("28" (INST -3 "y") (("28" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -2 2 3 4) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("29" (HIDE 1 2 3 4 5 6 7 8 10) (("29" (HIDE -1) (("29" (SKEEP) (("29" (INST -4 "y") (("29" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -1 -3 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("30" (HIDE 1 2 3 4 5 6 7 8 9 11) (("30" (SKEEP) (("30" (INST -4 "y") (("30" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -1 -3 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "has_special_form" 1) (("7" (EXPAND "nnf" -4) (("7" (EXPAND "has_special_form" -4) (("7" (FLATTEN -4) (("7" (SPLIT 1) (("1" (INST -3 "PNOT(PIMPLIES1_var)") (("1" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PIMPLIES2_var") (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" -4) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" -4) (("8" (EXPAND "has_special_form" -4) (("8" (FLATTEN -4) (("8" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL) ("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "nnf" -4) (("9" (EXPAND "has_special_form" -4) (("9" (EXPAND "has_special_form" 1) (("9" (FLATTEN -4) (("9" (SPLIT 1) (("1" (INST -3 "PWHEN1_var") (("1" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PNOT(PWHEN2_var)") (("2" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "has_special_form" 1) (("10" (EXPAND "nnf" -5) (("10" (EXPAND "has_special_form" -5) (("10" (EXPAND "has_special_form" 1) (("10" (EXPAND "has_special_form" -5) (("10" (ASSERT) (("10" (FLATTEN -5) (("10" (HIDE -1 -2 -3) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PITE2_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE3_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE1_var") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|not_eval_rel| CONST-DECL "TarskiRel" |dnf_polynomials| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|abs_nnf_rel| CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|PolyRelExpr_PITE_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (PITE ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr, PolyRelExpr] -> (PITE?)]" |PolyRelExpr_adt| NIL) (|pe3| ADT-ACCESSOR-DECL "[(PITE?) -> PolyRelExpr]" |PolyRelExpr_adt| NIL) (PIFF ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PIFF?)]" |PolyRelExpr_adt| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|PolyRelExpr_PIFF_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (PWHEN ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PWHEN?)]" |PolyRelExpr_adt| NIL) (|PolyRelExpr_PWHEN_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (PIMPLIES ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PIMPLIES?)]" |PolyRelExpr_adt| NIL) (|PolyRelExpr_PIMPLIES_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|pe| ADT-ACCESSOR-DECL "[(PNOT?) -> PolyRelExpr]" |PolyRelExpr_adt| NIL) (|PolyRelExpr_PNOT_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (POR ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (POR?)]" |PolyRelExpr_adt| NIL) (|PolyRelExpr_POR_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|pe2| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr |
         PAND?(x) OR POR?(x) OR PIMPLIES?(x) OR PIFF?(x) OR PWHEN?(x)
     OR PITE?(x)} ->
   PolyRelExpr]" |PolyRelExpr_adt| NIL) (|pe1| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr |
         PAND?(x) OR POR?(x) OR PIMPLIES?(x) OR PIFF?(x) OR PWHEN?(x)
     OR PITE?(x)} ->
   PolyRelExpr]" |PolyRelExpr_adt| NIL) (PITE? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PWHEN? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PIFF? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PIMPLIES? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (POR? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PAND ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PAND?)]" |PolyRelExpr_adt| NIL) (PAND? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|PolyRelExpr_PAND_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (PNOT ADT-CONSTRUCTOR-DECL "[PolyRelExpr -> (PNOT?)]" |PolyRelExpr_adt| NIL) (PNOT? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) NIL) (|nnf_not_has_special_form-5| |nil| 3770399763 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x") (("1" (GRIND) NIL) ("2" (GRIND) NIL) ("3" (GRIND) NIL) ("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "has_special_form" 1) (("4" (EXPAND "nnf" -4) (("4" (EXPAND "has_special_form" -4) (("4" (FLATTEN -4) (("4" (SPLIT 1) (("1" (INST -3 "PAND1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL))))))) ("2" (INST -3 "PAND2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL))))))))))))))))))))) ("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "has_special_form" 1) (("5" (EXPAND "nnf" -4) (("5" (EXPAND "has_special_form" -4) (("5" (FLATTEN -4) (("5" (SPLIT 1) (("1" (INST -3 "POR1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL))))))) ("2" (INST -3 "POR2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL))))))))))))))))))))) ("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (EXPAND "nnf" -3) (("6" (LIFT-IF) (("6" (GROUND) (("1" (GRIND) NIL) ("2" (GRIND) NIL) ("3" (GRIND) NIL) ("4" (EXPAND "has_special_form" -2) (("4" (FLATTEN -2) (("4" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL))))))) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL))))))))))))))) ("2" (HIDE 2 3 4 5) (("2" (APPLY-EXTENSIONALITY) NIL))))))))) ("5" (EXPAND "has_special_form" -2) (("5" (FLATTEN -2) (("5" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL))))))) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))))))) ("6" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE -1) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("7" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var),pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (HIDE 2 3 4 5 6 7) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (SPLIT -6) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))))) ("2" (HIDE 2 3 4 5 6 7) (("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("8" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" 8) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 8) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL))))))) ("2" (INST -6 "pe2(PNOT1_var)") (("2" (SPLIT -6) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("9" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (ASSERT) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (HIDE -1 -2) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "pe2(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe1(PNOT1_var))") (("1" (REVEAL -1) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (ASSERT) NIL) ("2" (PROPAX) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))) ("2" (PROPAX) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))) ("2" (PROPAX) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))))))))))))))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("10" (CASE "PITE?(PNOT1_var)") (("1" (CASE "PNOT1_var = PITE(pe1(PNOT1_var),pe2(PNOT1_var),pe3(PNOT1_var))") (("1" (REPLACE -1 10) (("1" (HIDE -2 -3 -4) (("1" (HIDE 1 2 3 4 5 6 7 8 9) (("1" (EXPAND "nnf" 1) (("1" (EXPAND "has_special_form" 1) (("1" (EXPAND "has_special_form" 1) (("1" (INST -2 "pe1(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe1(PNOT1_var))") (("1" (REVEAL -1) (("1" (INST -1 "pe2(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "pe3(PNOT1_var)") (("1" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -5) (("1" (EXPAND "nnf" -2) (("1" (POSTPONE) NIL))) ("2" (HIDE 2) (("2" (EXPAND "nnf" -1) (("2" (PROPAX) NIL))))) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (SPLIT -4) (("1" (PROPAX) NIL) ("2" (POSTPONE) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))))) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (POSTPONE) NIL))) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))) ("2" (POSTPONE) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))))))))))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (ASSERT) NIL))) ("11" (GRIND) NIL) ("12" (GRIND) NIL) ("13" (GRIND) NIL) ("14" (EXPAND "has_special_form" -2) (("14" (FLATTEN -2) (("14" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (HIDE 4) (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL))))))) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))))))) ("15" (EXPAND "has_special_form" -2) (("15" (FLATTEN -2) (("15" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (HIDE 6) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL))))))) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))))))) ("16" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE 7) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("17" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (HIDE 8) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (INST -5 "pe1(PNOT1_var)") (("1" (SPLIT -5) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL))))))) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("18" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" 8) (("1" (SPLIT 8) (("1" (INST -4 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (FLATTEN -3) NIL) ("3" (FLATTEN -3) (("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL))))))))) ("2" (FLATTEN -3) (("2" (INST -5 " pe2(PNOT1_var)") (("2" (SPLIT -5) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("19" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (SPLIT 9) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) NIL))))) ("2" (EXPAND "has_special_form" -3) (("2" (EXPAND "has_special_form" -3) (("2" (FLATTEN -3) NIL))))) ("3" (EXPAND "has_special_form" -3) (("3" (EXPAND "has_special_form" -3) (("3" (FLATTEN -3) NIL))))) ("4" (EXPAND "has_special_form" -3) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) NIL))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("20" (CASE "PITE?(PNOT1_var)") (("1" (CASE "PNOT1_var = PITE(pe1(PNOT1_var),pe2(PNOT1_var),pe3(PNOT1_var))") (("1" (HIDE 1 2 3 4 5 6 7 8 9 10) (("1" (REPLACE -1 1) (("1" (HIDE -2 -3) (("1" (EXPAND "nnf" 1) (("1" (EXPAND "has_special_form" 1) (("1" (EXPAND "has_special_form" 1) (("1" (POSTPONE) NIL))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (ASSERT) NIL))) ("21" (GRIND) NIL) ("22" (GRIND) NIL) ("23" (GRIND) NIL) ("24" (EXPAND "has_special_form" -2) (("24" (FLATTEN -2) (("24" (ASSERT) (("24" (SKEEP) (("24" (INST -6 "y") (("24" (SPLIT -6) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (HIDE -1 -2 -3 -5) (("3" (GRIND) NIL))))))))))))))))) ("25" (HIDE 1 2 3 4 6) (("25" (HIDE -1 -2) (("25" (SKEEP) (("25" (INST -3 "y") (("25" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (GRIND) NIL))))))))))) ("26" (HIDE 1 2 3 4 5 6 7 9) (("26" (HIDE -1 -2) (("26" (REVEAL 6) (("26" (SKEEP) (("26" (INST -3 "y") (("26" (SPLIT -3) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE -2 2) (("3" (GRIND) NIL))))))))))))))) ("27" (HIDE 1 2 3 4 5 7) (("27" (HIDE -1 -2) (("27" (REVEAL 6) (("27" (SKEEP) (("27" (INST -3 "y") (("27" (SPLIT -3) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE -2 2 3 4) (("3" (GRIND) NIL))))))))))))))) ("28" (HIDE 1 2 3 4 5 6 8) (("28" (HIDE -2 -1) (("28" (REVEAL 7) (("28" (SKEEP) (("28" (INST -3 "y") (("28" (SPLIT -3) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE -2 2 3 4) (("3" (GRIND) NIL))))))))))))))) ("29" (HIDE 1 2 3 4 5 6 7 8 10) (("29" (HIDE -1) (("29" (SKEEP) (("29" (INST -4 "y") (("29" (SPLIT -4) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE -1 -3 2) (("3" (GRIND) NIL))))))))))))) ("30" (HIDE 1 2 3 4 5 6 7 8 9 11) (("30" (SKEEP) (("30" (INST -4 "y") (("30" (SPLIT -4) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE -1 -3 2) (("3" (GRIND) NIL))))))))))))))))))))) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "has_special_form" 1) (("7" (EXPAND "nnf" -4) (("7" (EXPAND "has_special_form" -4) (("7" (FLATTEN -4) (("7" (SPLIT 1) (("1" (INST -3 "PNOT(PIMPLIES1_var)") (("1" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))) ("2" (INST -3 "PIMPLIES2_var") (("2" (SPLIT -3) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))))))))))))))))) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" -4) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" -4) (("8" (EXPAND "has_special_form" -4) (("8" (FLATTEN -4) (("8" (SPLIT 1) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL) ("4" (PROPAX) NIL))))))))))))))))))) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "nnf" -4) (("9" (EXPAND "has_special_form" -4) (("9" (EXPAND "has_special_form" 1) (("9" (FLATTEN -4) (("9" (SPLIT 1) (("1" (INST -3 "PWHEN1_var") (("1" (SPLIT -3) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))) ("2" (INST -3 "PNOT(PWHEN2_var)") (("2" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))))))))))))))))) ("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "has_special_form" 1) (("10" (EXPAND "nnf" -5) (("10" (EXPAND "has_special_form" -5) (("10" (EXPAND "has_special_form" 1) (("10" (EXPAND "has_special_form" -5) (("10" (ASSERT) (("10" (FLATTEN -5) (("10" (HIDE -1 -2 -3) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PITE2_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE3_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE1_var") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (ASSERT) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))) ("2" (PROPAX) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))) ("2" (PROPAX) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL))))) ("2" (PROPAX) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL)))))))))))))))))))))))))))))))))))))))))) NIL) NIL NIL) (|nnf_not_has_special_form-4| |nil| 3770398247 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "has_special_form" 1) (("4" (EXPAND "nnf" -4) (("4" (EXPAND "has_special_form" -4) (("4" (FLATTEN -4) (("4" (SPLIT 1) (("1" (INST -3 "PAND1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PAND2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "has_special_form" 1) (("5" (EXPAND "nnf" -4) (("5" (EXPAND "has_special_form" -4) (("5" (FLATTEN -4) (("5" (SPLIT 1) (("1" (INST -3 "POR1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "POR2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (EXPAND "nnf" -3) (("6" (LIFT-IF) (("6" (GROUND) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (EXPAND "has_special_form" -2) (("4" (FLATTEN -2) (("4" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5) (("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "has_special_form" -2) (("5" (FLATTEN -2) (("5" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("6" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE -1) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("7" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var),pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (HIDE 2 3 4 5 6 7) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5 6 7) (("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("8" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" 8) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 8) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "pe2(PNOT1_var)") (("2" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("9" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (ASSERT) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (HIDE -1 -2) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "pe2(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe1(PNOT1_var))") (("1" (REVEAL -1) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("10" (CASE "PITE?(PNOT1_var)") (("1" (CASE "PNOT1_var = PITE(pe1(PNOT1_var),pe2(PNOT1_var),pe3(PNOT1_var))") (("1" (REPLACE -1 10) (("1" (HIDE -2 -3 -4) (("1" (HIDE 1 2 3 4 5 6 7 8 9) (("1" (EXPAND "nnf" 1) (("1" (EXPAND "has_special_form" 1) (("1" (EXPAND "has_special_form" 1) (("1" (INST -2 "pe1(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "PNOT(pe1(PNOT1_var))") (("1" (REVEAL -1) (("1" (INST -1 "pe2(PNOT1_var)") (("1" (REVEAL -1) (("1" (INST -1 "pe3(PNOT1_var)") (("1" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -5) (("1" (EXPAND "nnf" -2) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "nnf" -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (POSTPONE) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (REVEAL -1) (("2" (INST -1 "PNOT(pe3(PNOT1_var))") (("2" (SPLIT -1) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REVEAL -1) (("2" (INST -1 "pe3(PNOT1_var)") (("2" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (REVEAL -1) (("2" (INST -1 "PNOT(pe3(PNOT1_var))") (("2" (SPLIT -1) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (SPLIT -1) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (GRIND) NIL NIL) ("12" (GRIND) NIL NIL) ("13" (GRIND) NIL NIL) ("14" (EXPAND "has_special_form" -2) (("14" (FLATTEN -2) (("14" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (HIDE 4) (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("15" (EXPAND "has_special_form" -2) (("15" (FLATTEN -2) (("15" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (HIDE 6) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("16" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE 7) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("17" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (HIDE 8) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (INST -5 "pe1(PNOT1_var)") (("1" (SPLIT -5) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("18" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" 8) (("1" (SPLIT 8) (("1" (INST -4 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (FLATTEN -3) NIL NIL) ("3" (FLATTEN -3) (("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -3) (("2" (INST -5 " pe2(PNOT1_var)") (("2" (SPLIT -5) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("19" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (SPLIT 9) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) NIL NIL)) NIL)) NIL) ("2" (EXPAND "has_special_form" -3) (("2" (EXPAND "has_special_form" -3) (("2" (FLATTEN -3) NIL NIL)) NIL)) NIL) ("3" (EXPAND "has_special_form" -3) (("3" (EXPAND "has_special_form" -3) (("3" (FLATTEN -3) NIL NIL)) NIL)) NIL) ("4" (EXPAND "has_special_form" -3) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("20" (CASE "PITE?(PNOT1_var)") (("1" (CASE "PNOT1_var = PITE(pe1(PNOT1_var),pe2(PNOT1_var),pe3(PNOT1_var))") (("1" (HIDE 1 2 3 4 5 6 7 8 9 10) (("1" (REPLACE -1 1) (("1" (HIDE -2 -3) (("1" (EXPAND "nnf" 1) (("1" (EXPAND "has_special_form" 1) (("1" (EXPAND "has_special_form" 1) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("21" (GRIND) NIL NIL) ("22" (GRIND) NIL NIL) ("23" (GRIND) NIL NIL) ("24" (EXPAND "has_special_form" -2) (("24" (FLATTEN -2) (("24" (ASSERT) (("24" (SKEEP) (("24" (INST -6 "y") (("24" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (HIDE -1 -2 -3 -5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("25" (HIDE 1 2 3 4 6) (("25" (HIDE -1 -2) (("25" (SKEEP) (("25" (INST -3 "y") (("25" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("26" (HIDE 1 2 3 4 5 6 7 9) (("26" (HIDE -1 -2) (("26" (REVEAL 6) (("26" (SKEEP) (("26" (INST -3 "y") (("26" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -2 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("27" (HIDE 1 2 3 4 5 7) (("27" (HIDE -1 -2) (("27" (REVEAL 6) (("27" (SKEEP) (("27" (INST -3 "y") (("27" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -2 2 3 4) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("28" (HIDE 1 2 3 4 5 6 8) (("28" (HIDE -2 -1) (("28" (REVEAL 7) (("28" (SKEEP) (("28" (INST -3 "y") (("28" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -2 2 3 4) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("29" (HIDE 1 2 3 4 5 6 7 8 10) (("29" (HIDE -1) (("29" (SKEEP) (("29" (INST -4 "y") (("29" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -1 -3 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("30" (HIDE 1 2 3 4 5 6 7 8 9 11) (("30" (SKEEP) (("30" (INST -4 "y") (("30" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE -1 -3 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "has_special_form" 1) (("7" (EXPAND "nnf" -4) (("7" (EXPAND "has_special_form" -4) (("7" (FLATTEN -4) (("7" (SPLIT 1) (("1" (INST -3 "PNOT(PIMPLIES1_var)") (("1" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PIMPLIES2_var") (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" -4) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" -4) (("8" (EXPAND "has_special_form" -4) (("8" (FLATTEN -4) (("8" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL) ("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "nnf" -4) (("9" (EXPAND "has_special_form" -4) (("9" (EXPAND "has_special_form" 1) (("9" (FLATTEN -4) (("9" (SPLIT 1) (("1" (INST -3 "PWHEN1_var") (("1" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PNOT(PWHEN2_var)") (("2" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "has_special_form" 1) (("10" (EXPAND "nnf" -5) (("10" (EXPAND "has_special_form" -5) (("10" (EXPAND "has_special_form" 1) (("10" (EXPAND "has_special_form" -5) (("10" (ASSERT) (("10" (FLATTEN -5) (("10" (HIDE -1 -2 -3) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PITE2_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE3_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE1_var") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|nnf_not_has_special_form-3| |nil| 3770397838 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x") (("1" (GRIND) NIL) ("2" (GRIND) NIL) ("3" (GRIND) NIL) ("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "has_special_form" 1) (("4" (EXPAND "nnf" -4) (("4" (EXPAND "has_special_form" -4) (("4" (FLATTEN -4) (("4" (SPLIT 1) (("1" (INST -3 "PAND1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL))))))) ("2" (INST -3 "PAND2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL))))))))))))))))))))) ("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "has_special_form" 1) (("5" (EXPAND "nnf" -4) (("5" (EXPAND "has_special_form" -4) (("5" (FLATTEN -4) (("5" (SPLIT 1) (("1" (INST -3 "POR1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL))))))) ("2" (INST -3 "POR2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL))))))))))))))))))))) ("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (EXPAND "nnf" -3) (("6" (LIFT-IF) (("6" (GROUND) (("1" (GRIND) NIL) ("2" (GRIND) NIL) ("3" (GRIND) NIL) ("4" (EXPAND "has_special_form" -2) (("4" (FLATTEN -2) (("4" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL))))))) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL))))))))))))))) ("2" (HIDE 2 3 4 5) (("2" (APPLY-EXTENSIONALITY) NIL))))))))) ("5" (EXPAND "has_special_form" -2) (("5" (FLATTEN -2) (("5" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL))))))) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))))))) ("6" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE -1) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("7" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var),pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (HIDE 2 3 4 5 6 7) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (SPLIT -6) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))))) ("2" (HIDE 2 3 4 5 6 7) (("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("8" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" 8) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 8) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL))))))) ("2" (INST -6 "pe2(PNOT1_var)") (("2" (SPLIT -6) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("9" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (ASSERT) (("1" (POSTPONE) NIL))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("10" (POSTPONE) NIL) ("11" (GRIND) NIL) ("12" (GRIND) NIL) ("13" (GRIND) NIL) ("14" (EXPAND "has_special_form" -2) (("14" (FLATTEN -2) (("14" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (HIDE 4) (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL))))))) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))))))) ("15" (EXPAND "has_special_form" -2) (("15" (FLATTEN -2) (("15" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (HIDE 6) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL))))))) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))))))) ("16" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE 7) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("17" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (HIDE 8) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (INST -5 "pe1(PNOT1_var)") (("1" (SPLIT -5) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL))))))) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("18" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" 8) (("1" (SPLIT 8) (("1" (INST -4 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (FLATTEN -3) NIL) ("3" (FLATTEN -3) (("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL))))))))) ("2" (FLATTEN -3) (("2" (INST -5 " pe2(PNOT1_var)") (("2" (SPLIT -5) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("19" (CASE "PIFF?(PNOT1_var)") (("1" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (SPLIT 9) (("1" (POSTPONE) NIL) ("2" (POSTPONE) NIL) ("3" (POSTPONE) NIL) ("4" (POSTPONE) NIL))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (PROPAX) NIL))) ("20" (POSTPONE) NIL) ("21" (GRIND) NIL) ("22" (GRIND) NIL) ("23" (GRIND) NIL) ("24" (EXPAND "has_special_form" -2) (("24" (FLATTEN -2) (("24" (ASSERT) (("24" (SKEEP) (("24" (INST -6 "y") (("24" (SPLIT -6) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2 3 4 5 6) (("3" (HIDE -1 -2 -3 -5) (("3" (GRIND) NIL))))))))))))))))) ("25" (HIDE 1 2 3 4 6) (("25" (HIDE -1 -2) (("25" (SKEEP) (("25" (INST -3 "y") (("25" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (GRIND) NIL))))))))))) ("26" (HIDE 1 2 3 4 5 6 7 9) (("26" (HIDE -1 -2) (("26" (POSTPONE) NIL))))) ("27" (HIDE 1 2 3 4 5 7) (("27" (HIDE -1 -2) (("27" (POSTPONE) NIL))))) ("28" (HIDE 1 2 3 4 5 6 8) (("28" (HIDE -2 -1) (("28" (POSTPONE) NIL))))) ("29" (HIDE 1 2 3 4 5 6 7 8 10) (("29" (HIDE -1) (("29" (SKEEP) (("29" (POSTPONE) NIL))))))) ("30" (POSTPONE) NIL))))))))))) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "has_special_form" 1) (("7" (EXPAND "nnf" -4) (("7" (EXPAND "has_special_form" -4) (("7" (FLATTEN -4) (("7" (SPLIT 1) (("1" (INST -3 "PNOT(PIMPLIES1_var)") (("1" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))) ("2" (INST -3 "PIMPLIES2_var") (("2" (SPLIT -3) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))))))))))))))))) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" -4) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" -4) (("8" (EXPAND "has_special_form" -4) (("8" (FLATTEN -4) (("8" (SPLIT 1) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL) ("4" (PROPAX) NIL))))))))))))))))))) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "nnf" -4) (("9" (EXPAND "has_special_form" -4) (("9" (EXPAND "has_special_form" 1) (("9" (FLATTEN -4) (("9" (SPLIT 1) (("1" (INST -3 "PWHEN1_var") (("1" (SPLIT -3) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))) ("2" (INST -3 "PNOT(PWHEN2_var)") (("2" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL))) ("2" (PROPAX) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL))))))))))))))))))))) ("10" (POSTPONE) NIL)))) NIL) NIL NIL) (|nnf_not_has_special_form-2| |nil| 3770397626 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "has_special_form" 1) (("4" (EXPAND "nnf" -4) (("4" (EXPAND "has_special_form" -4) (("4" (FLATTEN -4) (("4" (SPLIT 1) (("1" (INST -3 "PAND1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PAND2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "has_special_form" 1) (("5" (EXPAND "nnf" -4) (("5" (EXPAND "has_special_form" -4) (("5" (FLATTEN -4) (("5" (SPLIT 1) (("1" (INST -3 "POR1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "POR2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (EXPAND "nnf" -3) (("6" (LIFT-IF) (("6" (GROUND) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (EXPAND "has_special_form" -2) (("4" (FLATTEN -2) (("4" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5) (("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "has_special_form" -2) (("5" (FLATTEN -2) (("5" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("6" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE -1) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("7" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var),pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (HIDE 2 3 4 5 6 7) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5 6 7) (("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("8" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" 8) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 8) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "pe2(PNOT1_var)") (("2" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("9" (CASE "PIFF?(PNOT1_var)") (("1" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL) ("10" (POSTPONE) NIL NIL) ("11" (GRIND) NIL NIL) ("12" (GRIND) NIL NIL) ("13" (GRIND) NIL NIL) ("14" (EXPAND "has_special_form" -2) (("14" (FLATTEN -2) (("14" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (HIDE 4) (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("15" (EXPAND "has_special_form" -2) (("15" (FLATTEN -2) (("15" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (HIDE 6) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("16" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE 7) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("17" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (HIDE 8) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (INST -5 "pe1(PNOT1_var)") (("1" (SPLIT -5) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("18" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" 8) (("1" (SPLIT 8) (("1" (INST -4 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (FLATTEN -3) NIL NIL) ("3" (FLATTEN -3) (("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -3) (("2" (INST -5 " pe2(PNOT1_var)") (("2" (SPLIT -5) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("19" (CASE "PIFF?(PNOT1_var)") (("1" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (SPLIT 9) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL) ("20" (POSTPONE) NIL NIL) ("21" (GRIND) NIL NIL) ("22" (GRIND) NIL NIL) ("23" (GRIND) NIL NIL) ("24" (EXPAND "has_special_form" -2) (("24" (FLATTEN -2) (("24" (ASSERT) (("24" (SKEEP) (("24" (INST -6 "y") (("24" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (HIDE -1 -2 -3 -5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("25" (HIDE 1 2 3 4 6) (("25" (HIDE -1 -2) (("25" (SKEEP) (("25" (INST -3 "y") (("25" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("26" (HIDE 1 2 3 4 5 6 7 9) (("26" (HIDE -1 -2) (("26" (POSTPONE) NIL NIL)) NIL)) NIL) ("27" (HIDE 1 2 3 4 5 7) (("27" (HIDE -1 -2) (("27" (POSTPONE) NIL NIL)) NIL)) NIL) ("28" (HIDE 1 2 3 4 5 6 8) (("28" (HIDE -2 -1) (("28" (POSTPONE) NIL NIL)) NIL)) NIL) ("29" (HIDE 1 2 3 4 5 6 7 8 10) (("29" (HIDE -1) (("29" (SKEEP) (("29" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("30" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "has_special_form" 1) (("7" (EXPAND "nnf" -4) (("7" (EXPAND "has_special_form" -4) (("7" (FLATTEN -4) (("7" (SPLIT 1) (("1" (INST -3 "PNOT(PIMPLIES1_var)") (("1" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PIMPLIES2_var") (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" -4) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" -4) (("8" (EXPAND "has_special_form" -4) (("8" (FLATTEN -4) (("8" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL) ("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "nnf" -4) (("9" (EXPAND "has_special_form" -4) (("9" (EXPAND "has_special_form" 1) (("9" (FLATTEN -4) (("9" (SPLIT 1) (("1" (INST -3 "PWHEN1_var") (("1" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PNOT(PWHEN2_var)") (("2" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_not_has_special_form-1| |nil| 3770028479 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "has_special_form" 1) (("4" (EXPAND "nnf" -4) (("4" (EXPAND "has_special_form" -4) (("4" (FLATTEN -4) (("4" (SPLIT 1) (("1" (INST -3 "PAND1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PAND2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "has_special_form" 1) (("5" (EXPAND "nnf" -4) (("5" (EXPAND "has_special_form" -4) (("5" (FLATTEN -4) (("5" (SPLIT 1) (("1" (INST -3 "POR1_var") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "POR2_var") (("2" (ASSERT) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (EXPAND "nnf" -3) (("6" (LIFT-IF) (("6" (GROUND) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (EXPAND "has_special_form" -2) (("4" (FLATTEN -2) (("4" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5) (("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "has_special_form" -2) (("5" (FLATTEN -2) (("5" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("6" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE -1) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("7" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var),pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (HIDE 2 3 4 5 6 7) (("1" (INST -6 "pe1(PNOT1_var)") (("1" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5 6 7) (("2" (INST -6 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("8" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" 8) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 8) (("1" (INST -6 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -6) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -6 "pe2(PNOT1_var)") (("2" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("9" (CASE "PIFF?(PNOT1_var)") (("1" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL) ("12" (GRIND) NIL NIL) ("13" (EXPAND "has_special_form" -2) (("13" (FLATTEN -2) (("13" (CASE "PNOT1_var = PAND(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (HIDE 4) (("1" (REPLACE -1 4) (("1" (EXPAND "nnf" 4) (("1" (EXPAND "has_special_form" 4) (("1" (SPLIT 4) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("14" (EXPAND "has_special_form" -2) (("14" (FLATTEN -2) (("14" (CASE "PNOT1_var = POR(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 5) (("1" (HIDE 6) (("1" (EXPAND "nnf" 5) (("1" (EXPAND "has_special_form" 5) (("1" (SPLIT 5) (("1" (INST -5 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("15" (CASE "PNOT1_var = PNOT(pe(PNOT1_var))") (("1" (REPLACE -1 6) (("1" (HIDE 7) (("1" (INST -4 "pe(PNOT1_var)") (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("16" (CASE "PNOT1_var = PIMPLIES(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 7) (("1" (HIDE 8) (("1" (EXPAND "nnf" 7) (("1" (EXPAND "has_special_form" 7) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (SPLIT 7) (("1" (INST -5 "pe1(PNOT1_var)") (("1" (SPLIT -5) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "PNOT(pe2(PNOT1_var))") (("2" (SPLIT -5) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("17" (CASE "PNOT1_var = PWHEN(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 8) (("1" (EXPAND "nnf" 8) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" 8) (("1" (SPLIT 8) (("1" (INST -4 "PNOT(pe1(PNOT1_var))") (("1" (SPLIT -4) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (FLATTEN -3) NIL NIL) ("3" (FLATTEN -3) (("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -3) (("2" (INST -5 " pe2(PNOT1_var)") (("2" (SPLIT -5) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6 7 8 9 10) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("18" (CASE "PIFF?(PNOT1_var)") (("1" (CASE "PNOT1_var = PIFF(pe1(PNOT1_var), pe2(PNOT1_var))") (("1" (REPLACE -1 9) (("1" (EXPAND "nnf" 9) (("1" (EXPAND "has_special_form" -3) (("1" (EXPAND "has_special_form" 9) (("1" (EXPAND "has_special_form" -3) (("1" (FLATTEN -3) (("1" (EXPAND "has_special_form" 9) (("1" (SPLIT 9) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL) ("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("19" (GRIND) NIL NIL) ("20" (GRIND) NIL NIL) ("21" (GRIND) NIL NIL) ("22" (EXPAND "has_special_form" -2) (("22" (FLATTEN -2) (("22" (ASSERT) (("22" (SKEEP) (("22" (INST -6 "y") (("22" (SPLIT -6) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2 3 4 5 6) (("3" (HIDE -1 -2 -3 -5) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("23" (HIDE 1 2 3 4 6) (("23" (HIDE -1 -2) (("23" (SKEEP) (("23" (INST -3 "y") (("23" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("24" (HIDE 1 2 3 4 5 7) (("24" (HIDE -1 -2) (("24" (SKEEP) (("24" (INST -3 "y") (("24" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("25" (HIDE 1 2 3 4 5 6 8) (("25" (HIDE -2 -1) (("25" (SKEEP) (("25" (INST -3 "y") (("25" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("26" (HIDE 1 2 3 4 5 6 7 9) (("26" (HIDE -1 -2) (("26" (SKEEP) (("26" (INST -3 "y") (("26" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("27" (HIDE 1 2 3 4 5 6 7 8 10) (("27" (HIDE -1) (("27" (SKEEP) (("27" (INST -3 "y") (("27" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "has_special_form" 1) (("7" (EXPAND "nnf" -4) (("7" (EXPAND "has_special_form" -4) (("7" (FLATTEN -4) (("7" (SPLIT 1) (("1" (INST -3 "PNOT(PIMPLIES1_var)") (("1" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PIMPLIES2_var") (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" -4) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" 1) (("8" (EXPAND "has_special_form" -4) (("8" (EXPAND "has_special_form" -4) (("8" (FLATTEN -4) (("8" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL) ("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "nnf" -4) (("9" (EXPAND "has_special_form" -4) (("9" (EXPAND "has_special_form" 1) (("9" (FLATTEN -4) (("9" (SPLIT 1) (("1" (INST -3 "PWHEN1_var") (("1" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "PNOT(PWHEN2_var)") (("2" (SPLIT -3) (("1" (EXPAND "nnf" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|nnf_has_special_form| 0 (|nnf_has_special_form-1| |nil| 3769959809 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (LEMMA NNF_NOT_HAS_SPECIAL_FORM) (("6" (PROPAX) NIL NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "has_special_form" 1) (("7" (SPLIT) (("1" (LEMMA "nnf_not_has_special_form") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "has_special_form" 1) (("8" (SPLIT) (("1" (EXPAND "has_special_form" 1) (("1" (SPLIT) (("1" (LEMMA "nnf_not_has_special_form") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "has_special_form" 1) (("2" (LEMMA "nnf_not_has_special_form") (("2" (INST?) (("2" (SPLIT) (("1" (LEMMA "nnf_not_has_special_form") (("1" (INST -1 "PIFF2_var") (("1" (SPLIT) (("1" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "has_special_form" 1) (("9" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (LEMMA "nnf_not_has_special_form") (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "has_special_form" 1) (("10" (EXPAND "has_special_form" 1) (("10" (LEMMA NNF_NOT_HAS_SPECIAL_FORM) (("10" (INST -1 "PITE1_var") (("10" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnf_not_has_special_form| FORMULA-DECL NIL |dnf_polynomials| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|abs_nnf_rel| CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) SHOSTAK)) (|pull_out_conjunctions_TCC1| 0 (|pull_out_conjunctions_TCC1-1| |nil| 3770129304 ("" (SKEEP) (("" (TYPEPRED "p") (("" (REPLACE -2 -1) (("" (EXPAND "has_special_form" -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL (|pull_out_conjunctions| SUBTYPE "dnf_polynomials.pe1" "NNF_expr"))) (|pull_out_conjunctions_TCC2| 0 (|pull_out_conjunctions_TCC2-1| |nil| 3770129304 ("" (SKEEP) (("" (TYPEPRED "p") (("" (REPLACE -2 -1) (("" (EXPAND "has_special_form" -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL (|pull_out_conjunctions| SUBTYPE "dnf_polynomials.pe2" "NNF_expr"))) (|pull_out_conjunctions_TCC3| 0 (|pull_out_conjunctions_TCC3-1| |nil| 3770129304 ("" (SKEEP) (("" (TYPEPRED "p") (("" (EXPAND "has_special_form") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL (|pull_out_conjunctions| CASES "dnf_polynomials.p" "PolyRelExpr: DATATYPE
 BEGIN
  IMPORTING poly_system_strategy

  PCONST(pb: bool): PCONST?
  PREL(pn: [nat -> rat], d: nat, rel: TarskiRel, r: rat): PREL?
  PABS(pn: [nat -> rat], d: nat, rel: TarskiRel, r: rat): PABS?
  PAND(pe1, pe2: PolyRelExpr): PAND?
  POR(pe1, pe2: PolyRelExpr): POR?
  PNOT(pe: PolyRelExpr): PNOT?
  PIMPLIES(pe1, pe2: PolyRelExpr): PIMPLIES?
  PIFF(pe1, pe2: PolyRelExpr): PIFF?
  PWHEN(pe1, pe2: PolyRelExpr): PWHEN?
  PITE(pe1, pe2, pe3: PolyRelExpr): PITE?
 END PolyRelExpr"))) (|length_pull_out_conjunctions| 0 (|length_pull_out_conjunctions-3| |nil| 3770463338 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (SKEEP) (("6" (EXPAND "has_special_form" -3) (("6" (FLATTEN -3) (("6" (ASSERT) (("6" (EXPAND "pull_out_conjunctions" 1) (("6" (EXPAND "append" 1) (("6" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) NIL) (|length_pull_out_conjunctions-2| |nil| 3770463310 ("" (INDUCT "p") (("1" (GRIND) NIL) ("2" (GRIND) NIL) ("3" (GRIND) NIL) ("4" (GRIND) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "pull_out_conjunctions" 1) (("5" (EXPAND "append" 1) (("5" (GRIND) NIL))))))))))))) ("6" (GRIND) NIL) ("7" (GRIND) NIL) ("8" (GRIND) NIL) ("9" (GRIND) NIL) ("10" (GRIND) NIL)) NIL) NIL NIL) (|length_pull_out_conjunctions-1| |nil| 3770130360 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (SKEEP) (("6" (EXPAND "has_special_form" -3) (("6" (FLATTEN -3) (("6" (ASSERT) (("6" (EXPAND "pull_out_conjunctions" 1) (("6" (EXPAND "append" 1) (("6" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) NIL SHOSTAK)) (|conjunct_element_TCC1| 0 (|conjunct_element_TCC1-1| |nil| 3770129790 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL) ((|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL)) NIL (|conjunct_element| SUBTYPE "(: PolyRelExpr_adt.PAND(dnf_polynomials.p, list_adt[NNF_expr].car(dnf_polynomials.b)) :)" "list[NNF_expr]"))) (|conjunct_element_TCC2| 0 (|conjunct_element_TCC2-1| |nil| 3770129790 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)) NIL (|conjunct_element| SUBTYPE "dnf_polynomials.b" "(list_adt[NNF_expr].cons?)"))) (|conjunct_element_TCC3| 0 (|conjunct_element_TCC3-1| |nil| 3770129790 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|conjunct_element| TERMINATION "dnf_polynomials.conjunct_element(dnf_polynomials.p, list_adt[NNF_expr].cdr(dnf_polynomials.b))" "NIL"))) (|conjunct_lists_TCC1| 0 (|conjunct_lists_TCC1-1| |nil| 3770129790 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL)) NIL (|conjunct_lists| SUBTYPE "dnf_polynomials.a" "(list_adt[NNF_expr].cons?)"))) (|conjunct_lists_TCC2| 0 (|conjunct_lists_TCC2-1| |nil| 3770129790 ("" (TERMINATION-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|conjunct_lists| TERMINATION "dnf_polynomials.conjunct_lists(list_adt[NNF_expr].cdr(dnf_polynomials.a), dnf_polynomials.b)" "NIL"))) (|length_conjunct_lists| 0 (|length_conjunct_lists-1| |nil| 3770139335 ("" (SKEEP) (("" (LEMMA "length_pull_out_conjunctions") (("" (INST?) (("" (LEMMA "length_pull_out_conjunctions") (("" (INST -1 "p2") (("" (EXPAND "conjunct_lists" 1) (("" (EXPAND "conjunct_element" 1) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|length_pull_out_conjunctions| FORMULA-DECL NIL |dnf_polynomials| NIL) (|conjunct_lists| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|append| DEF-DECL "list[T]" |list_props| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|conjunct_element| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) SHOSTAK)) (|form_disjunction_TCC1| 0 (|form_disjunction_TCC1-1| |nil| 3770129790 ("" (GRIND) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|form_disjunction| SUBTYPE "dnf_polynomials.a" "(list_adt[NNF_expr].cons?)"))) (|form_disjunction_TCC2| 0 (|form_disjunction_TCC2-1| |nil| 3770129790 ("" (GRIND) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|form_disjunction| SUBTYPE "dnf_polynomials.a" "(list_adt[NNF_expr].cons?)"))) (|form_disjunction_TCC3| 0 (|form_disjunction_TCC3-1| |nil| 3770129790 ("" (SKEEP) (("" (TYPEPRED "a") (("" (CASE "length(a) > 1") (("1" (GRIND) (("1" (EXPAND "length" 2) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) NIL (|form_disjunction| SUBTYPE "list_adt[NNF_expr].cdr(dnf_polynomials.a)" "{a: list_adt[NNF_expr].list | reals.>(list_props[NNF_expr].length(a), 0)}"))) (|form_disjunction_TCC4| 0 (|form_disjunction_TCC4-1| |nil| 3770129790 ("" (GRIND) (("" (EXPAND "length" 2) (("" (GRIND) NIL NIL)) NIL)) NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL)) NIL (|form_disjunction| TERMINATION "dnf_polynomials.form_disjunction(list_adt[NNF_expr].cdr(dnf_polynomials.a))" "NIL"))) (|form_disjunction_TCC5| 0 (|form_disjunction_TCC5-1| |nil| 3770129790 ("" (GRIND) NIL NIL) ((|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL)) NIL (|form_disjunction| SUBTYPE "PolyRelExpr_adt.POR(list_adt[NNF_expr].car(dnf_polynomials.a), dnf_polynomials.form_disjunction(list_adt[NNF_expr].cdr(dnf_polynomials.a)))" "NNF_expr"))) (|distribute_ands_TCC1| 0 (|distribute_ands_TCC1-1| |nil| 3770025288 ("" (GRIND) NIL NIL) ((|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL)) NIL (|distribute_ands| SUBTYPE "PolyRelExpr_adt.PCONST(dnf_polynomials.pb)" "NNF_expr"))) (|distribute_ands_TCC2| 0 (|distribute_ands_TCC2-1| |nil| 3770025288 ("" (GRIND) NIL NIL) ((|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL)) NIL (|distribute_ands| SUBTYPE "PolyRelExpr_adt.PREL(dnf_polynomials.pn, dnf_polynomials.d, dnf_polynomials.rel, dnf_polynomials.r)" "NNF_expr"))) (|distribute_ands_TCC3| 0 (|distribute_ands_TCC3-1| |nil| 3770025288 ("" (GRIND) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL)) NIL (|distribute_ands| SUBTYPE "PolyRelExpr_adt.PABS(dnf_polynomials.pn, dnf_polynomials.d, dnf_polynomials.rel, dnf_polynomials.r)" "NNF_expr"))) (|distribute_ands_TCC4| 0 (|distribute_ands_TCC6-1| |nil| 3769962132 ("" (GRIND) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL)) NIL (|distribute_ands| SUBTYPE "dnf_polynomials.pe1" "NNF_expr"))) (|distribute_ands_TCC5| 0 (|distribute_ands_TCC8-1| |nil| 3769962132 ("" (GRIND) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL)) NIL (|distribute_ands| SUBTYPE "dnf_polynomials.pe2" "NNF_expr"))) (|distribute_ands_TCC6| 0 (|distribute_ands_TCC10-1| |nil| 3770025288 ("" (SKEEP) (("" (SKEEP*) (("" (LEMMA "length_pull_out_conjunctions") (("" (TYPEPRED "a") (("" (TYPEPRED "b") (("" (INST -3 "a") (("" (LEMMA LENGTH_PULL_OUT_CONJUNCTIONS) (("" (INST -1 "b") (("" (EXPAND "conjunct_lists" 1) (("" (GRIND) (("" (EXPAND "length" 1) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|length_pull_out_conjunctions| FORMULA-DECL NIL |dnf_polynomials| NIL) (|conjunct_lists| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|conjunct_element| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|length| DEF-DECL "nat" |list_props| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL (|distribute_ands| SUBTYPE "dnf_polynomials.conjunct_lists(dnf_polynomials.pull_out_conjunctions(dnf_polynomials.a), dnf_polynomials.pull_out_conjunctions(dnf_polynomials.b))" "{a: list_adt[NNF_expr].list | reals.>(list_props[NNF_expr].length(a), 0)}"))) (|distribute_ands_TCC7| 0 (|distribute_ands_TCC19-1| |nil| 3770025288 ("" (SKEEP*) (("" (EXPAND "has_special_form" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL) ((|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)) NIL (|distribute_ands| SUBTYPE "PolyRelExpr_adt.POR(dnf_polynomials.distribute_ands(dnf_polynomials.pe1), dnf_polynomials.distribute_ands(dnf_polynomials.pe2))" "NNF_expr"))) (|distribute_ands_TCC8| 0 (|distribute_ands_TCC8-1| |nil| 3770463291 ("" (GRIND) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL)) NIL (|distribute_ands| CASES "dnf_polynomials.p" "PolyRelExpr: DATATYPE
 BEGIN
  IMPORTING poly_system_strategy

  PCONST(pb: bool): PCONST?
  PREL(pn: [nat -> rat], d: nat, rel: TarskiRel, r: rat): PREL?
  PABS(pn: [nat -> rat], d: nat, rel: TarskiRel, r: rat): PABS?
  PAND(pe1, pe2: PolyRelExpr): PAND?
  POR(pe1, pe2: PolyRelExpr): POR?
  PNOT(pe: PolyRelExpr): PNOT?
  PIMPLIES(pe1, pe2: PolyRelExpr): PIMPLIES?
  PIFF(pe1, pe2: PolyRelExpr): PIFF?
  PWHEN(pe1, pe2: PolyRelExpr): PWHEN?
  PITE(pe1, pe2, pe3: PolyRelExpr): PITE?
 END PolyRelExpr"))) (|conjunct_element_prop| 0 (|conjunct_element_prop-1| |nil| 3770378885 ("" (SKEEP) (("" (INDUCT "b") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (INST -2 "q") (("2" (REVEAL -1) (("2" (HIDE -3) (("2" (SPLIT -2) (("1" (INST -1 "q") (("1" (EXPAND "conjunct_element" -4) (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (INST?) (("1" (SPLIT -1) (("1" (CASE "has_no_ors(cons1_var)") (("1" (EXPAND "member" -2) (("1" (SPLIT -2) (("1" (REPLACE -1 1) (("1" (EXPAND "has_no_ors" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "member" -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "cons1_var") (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (EXPAND "member" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP 1) (("2" (INST -2 "q!1") (("2" (SPLIT -2) (("1" (PROPAX) NIL NIL) ("2" (HIDE -2 -3 2 3) (("2" (EXPAND "member" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|has_no_ors| DEF-DECL "bool" |dnf_polynomials| NIL) (|conjunct_element| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (PAND ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PAND?)]" |PolyRelExpr_adt| NIL) (PAND? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|member_append_fi| FORMULA-DECL NIL |more_list_props| |structures|)) SHOSTAK)) (|conjunct_lists_prop| 0 (|conjunct_lists_prop-1| |nil| 3770378260 ("" (INDUCT "a") (("1" (INDUCT "b") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (SKEEP) (("2" (INST -3 "q") (("2" (INST -2 "q") (("2" (INST -1 "b") (("2" (SPLIT -1) (("1" (INST -1 "q") (("1" (EXPAND "conjunct_lists" -4) (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (INST?) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (CASE "has_no_ors(cons1_var)") (("1" (HIDE -5) (("1" (HIDE -3) (("1" (LEMMA "conjunct_element_prop") (("1" (INST?) (("1" (REVEAL -9) (("1" (SPLIT -2) (("1" (INST -1 "q") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL -5) (("2" (INST -1 "cons1_var") (("2" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -2) (("2" (HIDE -2 -3 -4) (("2" (SKEEP) (("2" (INST -1 "q!1") (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (EXPAND "member" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REVEAL -3) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|conjunct_element| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|conjunct_element_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|member_append_fi| FORMULA-DECL NIL |more_list_props| |structures|) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|conjunct_lists| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|has_no_ors| DEF-DECL "bool" |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)) SHOSTAK)) (|conjunct_elements_truth_prop| 0 (|conjunct_elements_truth_prop-1| |nil| 3770387153 ("" (INDUCT "p") (("1" (TYPEPRED "p!1") (("1" (PROPAX) NIL NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (SKEEP) (("3" (CASE "cons2_var = null") (("1" (HIDE -2) (("1" (REPLACE -1 -2) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT 1) (("1" (FLATTEN) (("1" (SKEEP -1) (("1" (EXPAND "member" 1) (("1" (EXPAND "member" 1) (("1" (CASE "eval(c)(x) AND eval(cons1_var)(x)") (("1" (ASSERT) (("1" (GROUND) (("1" (INST 1 "cons1_var") NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "conjunct_element") (("2" (EXPAND "conjunct_element") (("2" (EXPAND "member") (("2" (EXPAND "append") (("2" (SPLIT -2) (("1" (REPLACE -1 -2) (("1" (EXPAND "eval" -2) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "append" -1) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP -2) (("2" (EXPAND "member" -2) (("2" (SPLIT -2) (("1" (REPLACE -1 -3) (("1" (INST 1 "PAND(c, cons1_var)") (("1" (ASSERT) (("1" (SPLIT 1) (("1" (EXPAND "eval" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "conjunct_element") (("2" (EXPAND "conjunct_element") (("2" (EXPAND "append") (("2" (EXPAND "append") (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "c") (("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 1) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 0 ") (("1" (ASSERT) (("1" (INST -2 "c") (("1" (INST -2 "x") (("1" (SPLIT 2) (("1" (FLATTEN 1) (("1" (SKEEP -1) (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (EXPAND "conjunct_element" -3) (("1" (INST? -1) (("1" (SPLIT -1) (("1" (HIDE -3) (("1" (EXPAND "member" -1) (("1" (EXPAND "member" -1) (("1" (HIDE -4 -5 -6) (("1" (REPLACE -1 -2) (("1" (EXPAND "eval" -2) (("1" (FLATTEN -2) (("1" (ASSERT) (("1" (INST 1 "cons1_var") (("1" (ASSERT) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "(EXISTS (a: NNF_expr):
         eval(a)(x) AND member(a, conjunct_element(c, cons2_var)))") (("1" (ASSERT) (("1" (HIDE -7) (("1" (CASE "(eval(c)(x) AND
         EXISTS (b: NNF_expr): member(b, cons2_var) AND eval(b)(x))") (("1" (FLATTEN -1) (("1" (ASSERT) (("1" (SKEEP -2) (("1" (INST 1 "b") (("1" (ASSERT) (("1" (EXPAND "member" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (HIDE -2 -3 -4) (("2" (HIDE -2 -4) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (INST 1 "a") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP -2) (("2" (INST 1 "PAND(c, b)") (("1" (EXPAND "member" -2) (("1" (SPLIT -2) (("1" (REPLACE -1 1) (("1" (REPLACE -1 -3) (("1" (HIDE -4 -5 -6 -7) (("1" (SPLIT 1) (("1" (EXPAND "eval" 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "conjunct_element" 1) (("2" (EXPAND "member" 1) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -6) (("1" (REVEAL 1) (("1" (HIDE 2 3) (("1" (SKEEP -1) (("1" (INST 1 "a") (("1" (SPLIT 1) (("1" (PROPAX) NIL NIL) ("2" (EXPAND "conjunct_element" 1) (("2" (EXPAND "member" 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (INST 1 "b") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c") (("2" (TYPEPRED "b") (("2" (EXPAND "has_special_form" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3 -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|member_append_fi| FORMULA-DECL NIL |more_list_props| |structures|) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|b| SKOLEM-CONST-DECL "NNF_expr" |dnf_polynomials| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|) (|cons1_var| SKOLEM-CONST-DECL "NNF_expr" |dnf_polynomials| NIL) (|c| SKOLEM-CONST-DECL "NNF_expr" |dnf_polynomials| NIL) (PAND ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PAND?)]" |PolyRelExpr_adt| NIL) (PAND? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|conjunct_element| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)) SHOSTAK)) (|conjunct_truth_prop| 0 (|conjunct_truth_prop-2| "" 3884555765 ("" (INDUCT "p1") (("1" (TYPEPRED "p1!1") (("1" (PROPAX) NIL NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (SKEEP) (("3" (CASE "cons2_var = null") (("1" (REPLACE -1 1) (("1" (REPLACE -1 -2) (("1" (REPLACE -1 -3) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (SKEEP) (("1" (EXPAND "conjunct_lists") (("1" (EXPAND "conjunct_lists") (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (INST?) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (CASE "( eval(cons1_var)(x)
        AND EXISTS (b: NNF_expr): member(b, p2) AND eval(b)(x))") (("1" (SPLIT 1) (("1" (INST 1 "cons1_var") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "conjunct_elements_truth_prop") (("2" (INST?) (("2" (FLATTEN -1) (("2" (ASSERT) (("2" (CASE "(eval(cons1_var)(x) AND
         EXISTS (b: NNF_expr): member(b, p2) AND eval(b)(x))") (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (INST 1 "p") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 1) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "member" -1) (("2" (SPLIT -1) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (EXPAND "conjunct_lists" 1) (("1" (EXPAND "conjunct_lists" 1) (("1" (LEMMA "conjunct_elements_truth_prop") (("1" (INST?) (("1" (INST -1 "x") (("1" (CASE "append(conjunct_element(cons1_var, p2), null) = conjunct_element(cons1_var, p2)") (("1" (REPLACE -1 1) (("1" (FLATTEN -2) (("1" (SPLIT -3) (("1" (SKEEP -1) (("1" (INST 1 "a!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (INST 1 "b") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -1) (("2" (HIDE -1) (("2" (SPLIT -1) (("1" (SKEEP -1) (("1" (INST 2 "a!1") (("1" (ASSERT) (("1" (HIDE 1) (("1" (LEMMA "member_append_l[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (INST 1 "b") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 -5 1) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 0") (("1" (ASSERT) (("1" (INST -2 "p2") (("1" (INST -2 "x") (("1" (SPLIT 2) (("1" (FLATTEN 1) (("1" (SKEEP -1) (("1" (SPLIT -4) (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 -6 2) (("1" (SPLIT 1) (("1" (FLATTEN -1) (("1" (SKEEP -1) (("1" (INST 1 "a") (("1" (ASSERT) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -1) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "conjunct_lists" -1) (("2" (LEMMA "member_append_fi[NNF_expr]") (("2" (INST?) (("2" (SPLIT -1) (("1" (LEMMA "conjunct_elements_truth_prop") (("1" (INST?) (("1" (INST -1 "x") (("1" (FLATTEN -1) (("1" (SPLIT -1) (("1" (HIDE -2 -3 -4 -5 -6 -7 -8) (("1" (HIDE 1 3) (("1" (SPLIT 1) (("1" (FLATTEN -1) (("1" (INST 1 "cons1_var") (("1" (ASSERT) (("1" (EXPAND "member" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -1) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 4 -7) (("2" (HIDE -2 -3) (("2" (HIDE -2) (("2" (HIDE -2) (("2" (REVEAL -2 -3 -4) (("2" (INST 1 "p") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "p") (("2" (ASSERT) NIL NIL)) NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (EXPAND "conjunct_lists" 1) (("2" (EXPAND "member" -1) (("2" (SKEEP -1) (("2" (SPLIT -1) (("1" (SKEEP -3) (("1" (HIDE -6 -7 -8) (("1" (LEMMA "conjunct_elements_truth_prop") (("1" (INST?) (("1" (INST -1 "x") (("1" (FLATTEN -1) (("1" (ASSERT) (("1" (SPLIT -2) (("1" (ASSERT) (("1" (SKEEP -1) (("1" (INST 1 "a!1") (("1" (SPLIT 1) (("1" (LEMMA "member_append_l[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "b") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "((EXISTS (a: NNF_expr): member(a, cons2_var) AND eval(a)(x)) AND
        EXISTS (b: NNF_expr): member(b, p2) AND eval(b)(x))") (("1" (HIDE -2 -3 -4 -5 -6) (("1" (ASSERT) (("1" (FLATTEN -1) (("1" (CASE "EXISTS (p: NNF_expr):
         member(p, conjunct_lists(cons2_var, p2)) AND eval(p)(x)") (("1" (SKEEP -1) (("1" (INST 1 "p") (("1" (ASSERT) (("1" (LEMMA "member_append_r[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (SPLIT 1) (("1" (INST 1 "a") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|conjunct_truth_prop-1| |nil| 3770384821 ("" (INDUCT "p1") (("1" (TYPEPRED "p1!1") (("1" (PROPAX) NIL NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (SKEEP) (("3" (CASE "cons2_var = null") (("1" (REPLACE -1 1) (("1" (REPLACE -1 -2) (("1" (REPLACE -1 -3) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (SKEEP) (("1" (EXPAND "conjunct_lists") (("1" (EXPAND "conjunct_lists") (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (INST?) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (CASE "( eval(cons1_var)(x)
        AND EXISTS (b: NNF_expr): member(b, p2) AND eval(b)(x))") (("1" (SPLIT 1) (("1" (INST 1 "cons1_var") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA CONJUNCT_ELEMENTS_TRUTH_PROP) (("2" (INST?) (("2" (FLATTEN -1) (("2" (ASSERT) (("2" (CASE "(eval(cons1_var)(x) AND
         EXISTS (b: NNF_expr): member(b, p2) AND eval(b)(x))") (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (INST 1 "p") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 1) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "member" -1) (("2" (SPLIT -1) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (EXPAND "conjunct_lists" 1) (("1" (EXPAND "conjunct_lists" 1) (("1" (LEMMA CONJUNCT_ELEMENTS_TRUTH_PROP) (("1" (INST?) (("1" (INST -1 "x") (("1" (CASE "append(conjunct_element(cons1_var, p2), null) = conjunct_element(cons1_var, p2)") (("1" (REPLACE -1 1) (("1" (FLATTEN -2) (("1" (SPLIT -3) (("1" (SKEEP -1) (("1" (INST 1 "a!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (INST 1 "b") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -1) (("2" (HIDE -1) (("2" (SPLIT -1) (("1" (SKEEP -1) (("1" (INST 2 "a!1") (("1" (ASSERT) (("1" (HIDE 1) (("1" (LEMMA MEMBER_APPEND_L[NNF_EXPR]) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (INST 1 "b") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 -5 1) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 0") (("1" (ASSERT) (("1" (INST -2 "p2") (("1" (INST -2 "x") (("1" (SPLIT 2) (("1" (FLATTEN 1) (("1" (SKEEP -1) (("1" (SPLIT -4) (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 -6 2) (("1" (SPLIT 1) (("1" (FLATTEN -1) (("1" (SKEEP -1) (("1" (INST 1 "a") (("1" (ASSERT) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -1) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "conjunct_lists" -1) (("2" (LEMMA "member_append_fi[NNF_expr]") (("2" (INST?) (("2" (SPLIT -1) (("1" (LEMMA CONJUNCT_ELEMENTS_TRUTH_PROP) (("1" (INST?) (("1" (INST -1 "x") (("1" (FLATTEN -1) (("1" (SPLIT -1) (("1" (HIDE -2 -3 -4 -5 -6 -7 -8) (("1" (HIDE 1 3) (("1" (SPLIT 1) (("1" (FLATTEN -1) (("1" (INST 1 "cons1_var") (("1" (ASSERT) (("1" (EXPAND "member" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -1) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 4 -7) (("2" (HIDE -2 -3) (("2" (HIDE -2) (("2" (HIDE -2) (("2" (REVEAL -2 -3 -4) (("2" (INST 1 "p") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "p") (("2" (ASSERT) NIL NIL)) NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (EXPAND "conjunct_lists" 1) (("2" (EXPAND "member" -1) (("2" (SKEEP -1) (("2" (SPLIT -1) (("1" (SKEEP -3) (("1" (HIDE -6 -7 -8) (("1" (LEMMA "conjunct_elements_truth_prop") (("1" (INST?) (("1" (INST -1 "x") (("1" (FLATTEN -1) (("1" (ASSERT) (("1" (SPLIT -2) (("1" (ASSERT) (("1" (SKEEP -1) (("1" (INST 1 "a!1") (("1" (SPLIT 1) (("1" (LEMMA "member_append_l[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "b") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "((EXISTS (a: NNF_expr): member(a, cons2_var) AND eval(a)(x)) AND
        EXISTS (b: NNF_expr): member(b, p2) AND eval(b)(x))") (("1" (HIDE -2 -3 -4 -5 -6) (("1" (ASSERT) (("1" (FLATTEN -1) (("1" (CASE "EXISTS (p: NNF_expr):
         member(p, conjunct_lists(cons2_var, p2)) AND eval(p)(x)") (("1" (SKEEP -1) (("1" (INST 1 "p") (("1" (ASSERT) (("1" (LEMMA "member_append_r[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (SPLIT 1) (("1" (INST 1 "a") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|member_append_r| FORMULA-DECL NIL |more_list_props| |structures|) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|member_append_l| FORMULA-DECL NIL |more_list_props| |structures|) (|member_append_fi| FORMULA-DECL NIL |more_list_props| |structures|) (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|conjunct_elements_truth_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|conjunct_element| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|conjunct_lists| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)) SHOSTAK)) (|form_disjunction_prop| 0 (|form_disjunction_prop-4| "" 3884556688 ("" (INDUCT "a") (("1" (TYPEPRED "a!1") (("1" (PROPAX) NIL NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (CASE "cons2_var = null") (("1" (REPLACE -1 1) (("1" (REPLACE -1 -3) (("1" (HIDE -1 -2) (("1" (CASE "length(cons(cons1_var, null)) = 1") (("1" (EXPAND "form_disjunction") (("1" (ASSERT) (("1" (EXPAND "pull_out_conjunctions") (("1" (CASE "cons(cons1_var, null) = (: cons1_var :)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (REVEAL -1) (("4" (HIDE -3) (("4" (INST -1 "cons1_var") (("4" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (APPLY-EXTENSIONALITY) NIL NIL) ("6" (APPLY-EXTENSIONALITY) NIL NIL) ("7" (APPLY-EXTENSIONALITY) NIL NIL) ("8" (REVEAL -1) (("8" (INST -1 "cons1_var") (("8" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (APPLY-EXTENSIONALITY) NIL NIL) ("10" (APPLY-EXTENSIONALITY) NIL NIL) ("11" (APPLY-EXTENSIONALITY) NIL NIL) ("12" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 0") (("1" (ASSERT) (("1" (INST -2 "p") (("1" (SPLIT -2) (("1" (INST -4 "p") (("1" (CASE "(member(p,
                                            pull_out_conjunctions(form_disjunction
                                                                  (cons(cons1_var, cons2_var))))
                                      IFF (p = cons1_var OR member(p, cons2_var)))") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 1) (("1" (EXPAND "member") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (EXPAND "form_disjunction" 1) (("2" (CASE "length(cons(cons1_var, cons2_var)) = 1") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "pull_out_conjunctions" 2) (("2" (SPLIT 2) (("1" (FLATTEN 1) (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (INST?) (("1" (SPLIT -1) (("1" (HIDE -2 -3 -4 -5 -6) (("1" (HIDE 2 3 4) (("1" (EXPAND "pull_out_conjunctions") (("1" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (CASE "POR?(cons1_var)") (("1" (REVEAL -7) (("1" (INST -1 "cons1_var") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SPLIT -1) (("1" (CASE "member(p, pull_out_conjunctions(cons1_var))") (("1" (LEMMA "member_append_l[NNF_expr]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (HIDE -2) (("2" (HIDE -2 -3) (("2" (EXPAND "pull_out_conjunctions") (("2" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "member(p, pull_out_conjunctions(form_disjunction(cons2_var)))") (("1" (LEMMA "member_append_r[NNF_expr]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP 1) (("2" (HIDE 2 3) (("2" (INST -4 "q") (("2" (EXPAND "member" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|form_disjunction_prop-3| |nil| 3770464018 ("" (INDUCT "a") (("1" (TYPEPRED "a!1") (("1" (PROPAX) NIL NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (CASE "cons2_var = null") (("1" (REPLACE -1 1) (("1" (REPLACE -1 -3) (("1" (HIDE -1 -2) (("1" (CASE "length(cons(cons1_var, null)) = 1") (("1" (EXPAND "form_disjunction") (("1" (ASSERT) (("1" (EXPAND "pull_out_conjunctions") (("1" (CASE "cons(cons1_var, null) = (: cons1_var :)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (REVEAL -1) (("4" (HIDE -3) (("4" (INST -1 "cons1_var") (("4" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (APPLY-EXTENSIONALITY) NIL NIL) ("6" (APPLY-EXTENSIONALITY) NIL NIL) ("7" (APPLY-EXTENSIONALITY) NIL NIL) ("8" (REVEAL -1) (("8" (INST -1 "cons1_var") (("8" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (APPLY-EXTENSIONALITY) NIL NIL) ("10" (APPLY-EXTENSIONALITY) NIL NIL) ("11" (APPLY-EXTENSIONALITY) NIL NIL) ("12" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 0") (("1" (ASSERT) (("1" (INST -2 "p") (("1" (SPLIT -2) (("1" (INST -4 "p") (("1" (CASE "(member(p,
                                            pull_out_conjunctions(form_disjunction
                                                                  (cons(cons1_var, cons2_var))))
                                      IFF (p = cons1_var OR member(p, cons2_var)))") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 1) (("1" (EXPAND "member") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (EXPAND "form_disjunction" 1) (("2" (CASE "length(cons(cons1_var, cons2_var)) = 1") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "pull_out_conjunctions" 2) (("2" (SPLIT 2) (("1" (FLATTEN 1) (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (INST?) (("1" (SPLIT -1) (("1" (HIDE -2 -3 -4 -5 -6) (("1" (HIDE 2 3 4) (("1" (EXPAND "pull_out_conjunctions") (("1" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (CASE "POR?(cons1_var)") (("1" (REVEAL -7) (("1" (INST -1 "cons1_var") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SPLIT -1) (("1" (CASE "member(p, pull_out_conjunctions(cons1_var))") (("1" (LEMMA MEMBER_APPEND_L[NNF_EXPR]) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (HIDE -2) (("2" (HIDE -2 -3) (("2" (EXPAND "pull_out_conjunctions") (("2" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "member(p, pull_out_conjunctions(form_disjunction(cons2_var)))") (("1" (LEMMA MEMBER_APPEND_R[NNF_EXPR]) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP 1) (("2" (HIDE 2 3) (("2" (INST -4 "q") (("2" (EXPAND "member" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|) (PAND ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PAND?)]" |PolyRelExpr_adt| NIL) (POR? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PIMPLIES? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PIFF? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PWHEN? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PITE? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|pe1| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr |
         PAND?(x) OR POR?(x) OR PIMPLIES?(x) OR PIFF?(x) OR PWHEN?(x)
     OR PITE?(x)} ->
   PolyRelExpr]" |PolyRelExpr_adt| NIL) (|pe2| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr |
         PAND?(x) OR POR?(x) OR PIMPLIES?(x) OR PIFF?(x) OR PWHEN?(x)
     OR PITE?(x)} ->
   PolyRelExpr]" |PolyRelExpr_adt| NIL) (|PolyRelExpr_PAND_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (PAND? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (PREL ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PREL?)]" |PolyRelExpr_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PABS? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|pn| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> [nat -> rat]]" |PolyRelExpr_adt| NIL) (|d| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> nat]" |PolyRelExpr_adt| NIL) (|rel| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> TarskiRel]" |PolyRelExpr_adt| NIL) (|r| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> rat]" |PolyRelExpr_adt| NIL) (|PolyRelExpr_PREL_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (PREL? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PCONST ADT-CONSTRUCTOR-DECL "[bool -> (PCONST?)]" |PolyRelExpr_adt| NIL) (|pb| ADT-ACCESSOR-DECL "[(PCONST?) -> bool]" |PolyRelExpr_adt| NIL) (|PolyRelExpr_PCONST_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (PCONST? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|member_append_fi| FORMULA-DECL NIL |more_list_props| |structures|) (|member_append_l| FORMULA-DECL NIL |more_list_props| |structures|) (|member_append_r| FORMULA-DECL NIL |more_list_props| |structures|) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|form_disjunction| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|has_no_ors| DEF-DECL "bool" |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)) NIL) (|form_disjunction_prop-2| |nil| 3770463820 ("" (INDUCT "a") (("1" (TYPEPRED "a!1") (("1" (PROPAX) NIL))) ("2" (GRIND) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (CASE "cons2_var = null") (("1" (REPLACE -1 1) (("1" (REPLACE -1 -3) (("1" (HIDE -1 -2) (("1" (CASE "length(cons(cons1_var, null)) = 1") (("1" (EXPAND "form_disjunction") (("1" (ASSERT) (("1" (EXPAND "pull_out_conjunctions") (("1" (CASE "cons(cons1_var, null) = (: cons1_var :)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL) ("2" (APPLY-EXTENSIONALITY) NIL) ("3" (APPLY-EXTENSIONALITY) NIL) ("4" (REVEAL -1) (("4" (HIDE -3) (("4" (INST -1 "cons1_var") (("4" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (ASSERT) (("2" (GRIND) NIL))))))))))))))) ("5" (APPLY-EXTENSIONALITY) NIL) ("6" (APPLY-EXTENSIONALITY) NIL) ("7" (APPLY-EXTENSIONALITY) NIL) ("8" (REVEAL -1) (("8" (INST -1 "cons1_var") (("8" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL))))))))))) ("9" (APPLY-EXTENSIONALITY) NIL) ("10" (APPLY-EXTENSIONALITY) NIL) ("11" (APPLY-EXTENSIONALITY) NIL) ("12" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL))))))))))))) ("2" (PROPAX) NIL))))))))) ("2" (ASSERT) NIL))))))))) ("2" (CASE "length(cons2_var) > 0") (("1" (ASSERT) (("1" (INST -2 "p") (("1" (SPLIT -2) (("1" (INST -4 "p") (("1" (CASE "(member(p,
                             pull_out_conjunctions(form_disjunction
                                                   (cons(cons1_var, cons2_var))))
                       IFF (p = cons1_var OR member(p, cons2_var)))") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 1) (("1" (EXPAND "member") (("1" (GRIND) NIL))))))) ("2" (HIDE 3) (("2" (EXPAND "form_disjunction" 1) (("2" (CASE "length(cons(cons1_var, cons2_var)) = 1") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 1) (("1" (GRIND) NIL))))) ("2" (ASSERT) (("2" (EXPAND "pull_out_conjunctions" 2) (("2" (SPLIT 2) (("1" (FLATTEN 1) (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (INST?) (("1" (SPLIT -1) (("1" (HIDE -2 -3 -4 -5 -6) (("1" (HIDE 2 3 4) (("1" (EXPAND "pull_out_conjunctions") (("1" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL) ("2" (APPLY-EXTENSIONALITY) NIL) ("3" (APPLY-EXTENSIONALITY) NIL) ("4" (APPLY-EXTENSIONALITY) NIL) ("5" (CASE "POR?(cons1_var)") (("1" (REVEAL -7) (("1" (INST -1 "cons1_var") (("1" (ASSERT) NIL))))) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL))))))))))))))) ("2" (ASSERT) NIL) ("3" (PROPAX) NIL))))))))) ("2" (FLATTEN 1) (("2" (SPLIT -1) (("1" (CASE "member(p, pull_out_conjunctions(cons1_var))") (("1" (LEMMA MEMBER_APPEND_L[NNF_EXPR]) (("1" (INST?) (("1" (ASSERT) NIL))))) ("2" (HIDE 2 3) (("2" (HIDE -2) (("2" (HIDE -2 -3) (("2" (EXPAND "pull_out_conjunctions") (("2" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL) ("2" (APPLY-EXTENSIONALITY) NIL) ("3" (APPLY-EXTENSIONALITY) NIL) ("4" (APPLY-EXTENSIONALITY) NIL) ("5" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL))))))))))))))))))) ("2" (CASE "member(p, pull_out_conjunctions(form_disjunction(cons2_var)))") (("1" (LEMMA MEMBER_APPEND_R[NNF_EXPR]) (("1" (INST?) (("1" (ASSERT) NIL))))) ("2" (ASSERT) NIL))))))))))))))))))))))) ("2" (SKEEP 1) (("2" (HIDE 2 3) (("2" (INST -4 "q") (("2" (EXPAND "member" -4) (("2" (ASSERT) NIL))))))))))))))) ("2" (HIDE 3) (("2" (GRIND) NIL)))))))))))) NIL) NIL NIL) (|form_disjunction_prop-1| |nil| 3770373711 ("" (INDUCT "a") (("1" (TYPEPRED "a!1") (("1" (PROPAX) NIL NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (CASE "cons2_var = null") (("1" (REPLACE -1 1) (("1" (REPLACE -1 -3) (("1" (HIDE -1 -2) (("1" (CASE "length(cons(cons1_var, null)) = 1") (("1" (EXPAND "form_disjunction") (("1" (ASSERT) (("1" (EXPAND "pull_out_conjunctions") (("1" (CASE "cons(cons1_var, null) = (: cons1_var :)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (APPLY-EXTENSIONALITY) NIL NIL) ("5" (REVEAL -1) (("5" (HIDE -3) (("5" (INST -1 "cons1_var") (("5" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (APPLY-EXTENSIONALITY) NIL NIL) ("7" (APPLY-EXTENSIONALITY) NIL NIL) ("8" (APPLY-EXTENSIONALITY) NIL NIL) ("9" (APPLY-EXTENSIONALITY) NIL NIL) ("10" (REVEAL -1) (("10" (INST -1 "cons1_var") (("10" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("11" (APPLY-EXTENSIONALITY) NIL NIL) ("12" (APPLY-EXTENSIONALITY) NIL NIL) ("13" (APPLY-EXTENSIONALITY) NIL NIL) ("14" (APPLY-EXTENSIONALITY) NIL NIL) ("15" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 0") (("1" (ASSERT) (("1" (INST -2 "p") (("1" (SPLIT -2) (("1" (INST -4 "p") (("1" (CASE "(member(p,
              pull_out_conjunctions(form_disjunction
                                    (cons(cons1_var, cons2_var))))
        IFF (p = cons1_var OR member(p, cons2_var)))") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 1) (("1" (EXPAND "member") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (EXPAND "form_disjunction" 1) (("2" (CASE "length(cons(cons1_var, cons2_var)) = 1") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "pull_out_conjunctions" 2) (("2" (SPLIT 2) (("1" (FLATTEN 1) (("1" (LEMMA "member_append_fi[NNF_expr]") (("1" (INST?) (("1" (SPLIT -1) (("1" (HIDE -2 -3 -4 -5 -6) (("1" (HIDE 2 3 4) (("1" (EXPAND "pull_out_conjunctions") (("1" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (APPLY-EXTENSIONALITY) NIL NIL) ("5" (CASE "POR?(cons1_var)") (("1" (REVEAL -7) (("1" (INST -1 "cons1_var") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SPLIT -1) (("1" (CASE "member(p, pull_out_conjunctions(cons1_var))") (("1" (LEMMA MEMBER_APPEND_L[NNF_EXPR]) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (HIDE -2) (("2" (HIDE -2 -3) (("2" (EXPAND "pull_out_conjunctions") (("2" (GRIND) (("1" (APPLY-EXTENSIONALITY) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (APPLY-EXTENSIONALITY) NIL NIL) ("4" (APPLY-EXTENSIONALITY) NIL NIL) ("5" (CASE "POR?(cons1_var)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "cons1_var") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "member(p, pull_out_conjunctions(form_disjunction(cons2_var)))") (("1" (LEMMA MEMBER_APPEND_R[NNF_EXPR]) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP 1) (("2" (HIDE 2 3) (("2" (INST -4 "q") (("2" (EXPAND "member" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|distrib_ands_special_form| 0 (|distrib_ands_special_form-1| |nil| 3770377256 ("" (INDUCT "a") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (INST -1 "q") (("5" (INST -2 "q") (("5" (EXPAND "distribute_ands" -5) (("5" (LEMMA "form_disjunction_prop") (("5" (INST?) (("5" (SPLIT -1) (("1" (CASE "member(q,
               conjunct_lists(pull_out_conjunctions(distribute_ands
                                                    (PAND1_var)),
                              pull_out_conjunctions(distribute_ands
                                                    (PAND2_var))))") (("1" (HIDE -2 -7) (("1" (LEMMA "conjunct_lists_prop") (("1" (INST?) (("1" (SPLIT -1) (("1" (INST -1 "q") (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL -6) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -5) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (SKEEP) (("2" (HIDE -2 -3 -4 -5 -6 2) (("2" (REVEAL -7 -8) (("2" (LEMMA CONJUNCT_LISTS_PROP) (("2" (INST?) (("2" (SPLIT -1) (("1" (INST -1 "q!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "distribute_ands" 1) (("6" (EXPAND "pull_out_conjunctions" 1) (("6" (SKEEP) (("6" (EXPAND "has_special_form" -3) (("6" (FLATTEN -3) (("6" (ASSERT) (("6" (INST -1 "q") (("6" (INST -2 "q") (("6" (LEMMA "member_append_fi[NNF_expr]") (("6" (INST?) (("6" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) ((|member_append_fi| FORMULA-DECL NIL |more_list_props| |structures|) (|form_disjunction_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|conjunct_lists_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|conjunct_lists| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (> CONST-DECL "bool" |reals| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|has_no_ors| DEF-DECL "bool" |dnf_polynomials| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) SHOSTAK)) (|special_form_conjunct| 0 (|special_form_conjunct-1| |nil| 3770377098 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (LEMMA CONJUNCT_LISTS_PROP) (("" (INST?) (("" (SPLIT -1) (("1" (INST -1 "q") (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (SKEEP) (("2" (HIDE 2) (("2" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("2" (INST -1 "a" "q!1") (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 2) (("3" (SKEEP) (("3" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("3" (INST -1 "b" "q!1") (("3" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|conjunct_lists_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|distrib_ands_special_form| FORMULA-DECL NIL |dnf_polynomials| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) SHOSTAK)) (|form_disjunction_eval| 0 (|form_disjunction_eval-1| |nil| 3770136998 ("" (INDUCT "a") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (CASE "cons2_var = null") (("1" (GRIND) NIL NIL) ("2" (CASE "length(cons2_var) > 0") (("1" (ASSERT) (("1" (SKEEP) (("1" (EXPAND "member" 2) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "form_disjunction" -1) (("1" (CASE "length(cons(cons1_var, cons2_var)) > 1") (("1" (ASSERT) (("1" (EXPAND "eval" -2) (("1" (SPLIT -2) (("1" (GRIND) NIL NIL) ("2" (INST -4 "x") (("2" (ASSERT) (("2" (SKEEP) (("2" (INST 1 "p") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP) (("2" (TYPEPRED "p") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|form_disjunction| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)) SHOSTAK)) (|pull_out_conjunctions_eval| 0 (|pull_out_conjunctions_eval-4| "" 3884557248 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP*) (("3" (EXPAND "has_special_form") (("3" (ASSERT) (("3" (EXPAND "distribute_ands") (("3" (EXPAND "pull_out_conjunctions") (("3" (SPLIT 1) (("1" (FLATTEN 1) (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "has_special_form") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP) (("2" (EXPAND "member") (("2" (EXPAND "member") (("2" (REPLACE -1 -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form") (("4" (PROPAX) NIL NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (INST -1 "x") (("5" (INST -2 "x") (("5" (CASE "eval(distribute_ands(PAND(PAND1_var, PAND2_var)))(x) = eval(form_disjunction(conjunct_lists(pull_out_conjunctions(distribute_ands(PAND1_var)), pull_out_conjunctions(distribute_ands(PAND2_var)))))(x)") (("1" (LEMMA "form_disjunction_eval") (("1" (INST?) (("1" (REPLACE -2 1) (("1" (HIDE -2) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (SKEEP -1) (("1" (HIDE -7 -8) (("1" (HIDE -6) (("1" (HIDE -5) (("1" (HIDE -4 -3) (("1" (INST 1 "p") (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND "distribute_ands" 1) (("1" (LEMMA "form_disjunction_prop") (("1" (INST?) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (SKEEP) (("2" (LEMMA "special_form_conjunct") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (ASSERT) (("2" (CASE "distribute_ands(PAND(PAND1_var, PAND2_var)) =  form_disjunction(conjunct_lists(pull_out_conjunctions(distribute_ands(PAND1_var)), pull_out_conjunctions(distribute_ands(PAND2_var))))") (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (HIDE 1) (("1" (SKEEP -1) (("1" (HIDE -3 -4 -5 -6 -7 -8) (("1" (INST 1 "p_1") (("1" (ASSERT) (("1" (HIDE -2) (("1" (LEMMA "form_disjunction_prop") (("1" (INST?) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (SKEEP) (("2" (LEMMA "special_form_conjunct") (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2 3) (("3" (EXPAND "has_special_form" 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (HIDE -1 -2) (("3" (LEMMA "length_pull_out_conjunctions") (("3" (INST?) (("3" (LEMMA "length_pull_out_conjunctions") (("3" (INST -1 "distribute_ands(PAND2_var)") (("3" (LEMMA "length_conjunct_lists") (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "has_special_form" -3) (("6" (FLATTEN -3) (("6" (ASSERT) (("6" (SKEEP) (("6" (INST -1 "x") (("6" (INST -2 "x") (("6" (EXPAND "distribute_ands" 1) (("6" (CASE " eval(POR(distribute_ands(POR1_var), distribute_ands(POR2_var)))(x) =  (eval(distribute_ands(POR2_var))(x) OR  eval(distribute_ands(POR1_var))(x))") (("1" (REPLACE -1 1) (("1" (EXPAND "pull_out_conjunctions" 1) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (SPLIT -1) (("1" (ASSERT) (("1" (HIDE -3) (("1" (HIDE -2) (("1" (SKEEP -2) (("1" (INST 1 "p_1") (("1" (ASSERT) (("1" (LEMMA "member_append_r[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -4) (("2" (SKEEP -3) (("2" (INST 1 "p_1") (("2" (ASSERT) (("2" (LEMMA "member_append_l[NNF_expr]") (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP -1) (("2" (CASE "member(p_1,pull_out_conjunctions(distribute_ands(POR2_var))) OR member(p_1, pull_out_conjunctions(distribute_ands(POR1_var)))") (("1" (HIDE -4 -5) (("1" (HIDE -5) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (INST 1 "p_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (INST 1 "p_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (HIDE -5 -6 -7 -8 -9) (("2" (HIDE -2 -3 -4) (("2" (LEMMA "member_append_fi[NNF_expr]") (("2" (INST -1 "p_1" "pull_out_conjunctions(distribute_ands(POR1_var))" " pull_out_conjunctions(distribute_ands(POR2_var))") (("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) NIL SHOSTAK) (|pull_out_conjunctions_eval-3| |nil| 3772555117 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP*) (("3" (EXPAND "has_special_form") (("3" (ASSERT) (("3" (EXPAND "distribute_ands") (("3" (EXPAND "pull_out_conjunctions") (("3" (SPLIT 1) (("1" (FLATTEN 1) (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "has_special_form") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP) (("2" (EXPAND "member") (("2" (EXPAND "member") (("2" (REPLACE -1 -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form") (("4" (PROPAX) NIL NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (INST -1 "x") (("5" (INST -2 "x") (("5" (CASE "eval(distribute_ands(PAND(PAND1_var, PAND2_var)))(x) = eval(form_disjunction(conjunct_lists(pull_out_conjunctions(distribute_ands(PAND1_var)), pull_out_conjunctions(distribute_ands(PAND2_var)))))(x)") (("1" (LEMMA FORM_DISJUNCTION_EVAL) (("1" (INST?) (("1" (REPLACE -2 1) (("1" (HIDE -2) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (SKEEP -1) (("1" (HIDE -7 -8) (("1" (HIDE -6) (("1" (HIDE -5) (("1" (HIDE -4 -3) (("1" (INST 1 P) (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND "distribute_ands" 1) (("1" (LEMMA FORM_DISJUNCTION_PROP) (("1" (INST?) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (SKEEP) (("2" (LEMMA "special_form_conjunct") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (ASSERT) (("2" (CASE "distribute_ands(PAND(PAND1_var, PAND2_var)) =  form_disjunction(conjunct_lists(pull_out_conjunctions(distribute_ands(PAND1_var)), pull_out_conjunctions(distribute_ands(PAND2_var))))") (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (HIDE 1) (("1" (SKEEP -1) (("1" (HIDE -3 -4 -5 -6 -7 -8) (("1" (INST 1 "p_1") (("1" (ASSERT) (("1" (HIDE -2) (("1" (LEMMA FORM_DISJUNCTION_PROP) (("1" (INST?) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (SKEEP) (("2" (LEMMA SPECIAL_FORM_CONJUNCT) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2 3) (("3" (EXPAND "has_special_form" 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (HIDE -1 -2) (("3" (LEMMA "length_pull_out_conjunctions") (("3" (INST?) (("3" (LEMMA "length_pull_out_conjunctions") (("3" (INST -1 "distribute_ands(PAND2_var)") (("3" (LEMMA LENGTH_CONJUNCT_LISTS) (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "has_special_form" -3) (("6" (FLATTEN -3) (("6" (ASSERT) (("6" (SKEEP) (("6" (INST -1 "x") (("6" (INST -2 "x") (("6" (EXPAND "distribute_ands" 1) (("6" (CASE " eval(POR(distribute_ands(POR1_var), distribute_ands(POR2_var)))(x) =  (eval(distribute_ands(POR2_var))(x) OR  eval(distribute_ands(POR1_var))(x))") (("1" (REPLACE -1 1) (("1" (EXPAND "pull_out_conjunctions" 1) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (SPLIT -1) (("1" (ASSERT) (("1" (HIDE -3) (("1" (HIDE -2) (("1" (SKEEP -2) (("1" (INST 1 "p_1") (("1" (ASSERT) (("1" (LEMMA "member_append_r[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -4) (("2" (SKEEP -3) (("2" (INST 1 "p_1") (("2" (ASSERT) (("2" (LEMMA "member_append_l[NNF_expr]") (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP -1) (("2" (CASE "member(p_1,pull_out_conjunctions(distribute_ands(POR2_var))) OR member(p_1, pull_out_conjunctions(distribute_ands(POR1_var)))") (("1" (HIDE -4 -5) (("1" (HIDE -5) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (INST 1 "p_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (INST 1 "p_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (HIDE -5 -6 -7 -8 -9) (("2" (HIDE -2 -3 -4) (("2" (LEMMA "member_append_fi[NNF_expr]") (("2" (INST -1 "p_1" "pull_out_conjunctions(distribute_ands(POR1_var))" " pull_out_conjunctions(distribute_ands(POR2_var))") (("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) ((OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (POR ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (POR?)]" |PolyRelExpr_adt| NIL) (POR? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|member_append_fi| FORMULA-DECL NIL |more_list_props| |structures|) (|member_append_l| FORMULA-DECL NIL |more_list_props| |structures|) (|member_append_r| FORMULA-DECL NIL |more_list_props| |structures|) (|length_pull_out_conjunctions| FORMULA-DECL NIL |dnf_polynomials| NIL) (|length_conjunct_lists| FORMULA-DECL NIL |dnf_polynomials| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|form_disjunction_eval| FORMULA-DECL NIL |dnf_polynomials| NIL) (|special_form_conjunct| FORMULA-DECL NIL |dnf_polynomials| NIL) (|form_disjunction_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (PAND? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PAND ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PAND?)]" |PolyRelExpr_adt| NIL) (> CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|form_disjunction| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|conjunct_lists| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (PREL? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PREL ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PREL?)]" |PolyRelExpr_adt| NIL) (|PREL1_var| SKOLEM-CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (|PREL2_var| SKOLEM-CONST-DECL "nat" |dnf_polynomials| NIL) (|PREL3_var| SKOLEM-CONST-DECL "TarskiRel" |dnf_polynomials| NIL) (|PREL4_var| SKOLEM-CONST-DECL "rat" |dnf_polynomials| NIL) (PCONST ADT-CONSTRUCTOR-DECL "[bool -> (PCONST?)]" |PolyRelExpr_adt| NIL) (PCONST? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) NIL) (|pull_out_conjunctions_eval-2| |nil| 3772554582 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP*) (("3" (EXPAND "has_special_form") (("3" (ASSERT) (("3" (EXPAND "distribute_ands") (("3" (EXPAND "pull_out_conjunctions") (("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "distribute_ands") (("4" (SKEEP) (("4" (EXPAND "has_special_form") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (INST -1 "x") (("5" (INST -2 "x") (("5" (CASE "eval(distribute_ands(PAND(PAND1_var, PAND2_var)))(x) = eval(form_disjunction(conjunct_lists(pull_out_conjunctions(distribute_ands(PAND1_var)), pull_out_conjunctions(distribute_ands(PAND2_var)))))(x)") (("1" (LEMMA FORM_DISJUNCTION_EVAL) (("1" (INST?) (("1" (REPLACE -2 1) (("1" (HIDE -2) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (SKEEP -1) (("1" (HIDE -7 -8) (("1" (HIDE -6) (("1" (HIDE -5) (("1" (HIDE -4 -3) (("1" (INST 1 P) (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND "distribute_ands" 1) (("1" (LEMMA FORM_DISJUNCTION_PROP) (("1" (INST?) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (SKEEP) (("2" (LEMMA "special_form_conjunct") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (ASSERT) (("2" (CASE "distribute_ands(PAND(PAND1_var, PAND2_var)) =  form_disjunction(conjunct_lists(pull_out_conjunctions(distribute_ands(PAND1_var)), pull_out_conjunctions(distribute_ands(PAND2_var))))") (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (HIDE 1) (("1" (SKEEP -1) (("1" (HIDE -3 -4 -5 -6 -7 -8) (("1" (INST 1 "p_1") (("1" (ASSERT) (("1" (HIDE -2) (("1" (LEMMA FORM_DISJUNCTION_PROP) (("1" (INST?) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (SKEEP) (("2" (LEMMA SPECIAL_FORM_CONJUNCT) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2 3) (("3" (EXPAND "has_special_form" 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (HIDE -1 -2) (("3" (LEMMA "length_pull_out_conjunctions") (("3" (INST?) (("3" (LEMMA "length_pull_out_conjunctions") (("3" (INST -1 "distribute_ands(PAND2_var)") (("3" (LEMMA LENGTH_CONJUNCT_LISTS) (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "has_special_form" -3) (("6" (FLATTEN -3) (("6" (ASSERT) (("6" (SKEEP) (("6" (INST -1 "x") (("6" (INST -2 "x") (("6" (EXPAND "distribute_ands" 1) (("6" (CASE " eval(POR(distribute_ands(POR1_var), distribute_ands(POR2_var)))(x) =  (eval(distribute_ands(POR2_var))(x) OR  eval(distribute_ands(POR1_var))(x))") (("1" (REPLACE -1 1) (("1" (EXPAND "pull_out_conjunctions" 1) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (SPLIT -1) (("1" (ASSERT) (("1" (HIDE -3) (("1" (HIDE -2) (("1" (SKEEP -2) (("1" (INST 1 "p_1") (("1" (ASSERT) (("1" (LEMMA "member_append_r[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -4) (("2" (SKEEP -3) (("2" (INST 1 "p_1") (("2" (ASSERT) (("2" (LEMMA "member_append_l[NNF_expr]") (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP -1) (("2" (CASE "member(p_1,pull_out_conjunctions(distribute_ands(POR2_var))) OR member(p_1, pull_out_conjunctions(distribute_ands(POR1_var)))") (("1" (HIDE -4 -5) (("1" (HIDE -5) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (INST 1 "p_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (INST 1 "p_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (HIDE -5 -6 -7 -8 -9) (("2" (HIDE -2 -3 -4) (("2" (LEMMA "member_append_fi[NNF_expr]") (("2" (INST -1 "p_1" "pull_out_conjunctions(distribute_ands(POR1_var))" " pull_out_conjunctions(distribute_ands(POR2_var))") (("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) NIL NIL) (|pull_out_conjunctions_eval-1| |nil| 3770137743 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (INST -1 "x") (("5" (INST -2 "x") (("5" (CASE "eval(distribute_ands(PAND(PAND1_var, PAND2_var)))(x) = eval(form_disjunction(conjunct_lists(pull_out_conjunctions(distribute_ands(PAND1_var)), pull_out_conjunctions(distribute_ands(PAND2_var)))))(x)") (("1" (LEMMA FORM_DISJUNCTION_EVAL) (("1" (INST?) (("1" (REPLACE -2 1) (("1" (HIDE -2) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (SKEEP -1) (("1" (HIDE -7 -8) (("1" (HIDE -6) (("1" (HIDE -5) (("1" (HIDE -4 -3) (("1" (INST 1 P) (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND "distribute_ands" 1) (("1" (LEMMA FORM_DISJUNCTION_PROP) (("1" (INST?) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (SKEEP) (("2" (LEMMA "special_form_conjunct") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (ASSERT) (("2" (CASE "distribute_ands(PAND(PAND1_var, PAND2_var)) =  form_disjunction(conjunct_lists(pull_out_conjunctions(distribute_ands(PAND1_var)), pull_out_conjunctions(distribute_ands(PAND2_var))))") (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (HIDE 1) (("1" (SKEEP -1) (("1" (HIDE -3 -4 -5 -6 -7 -8) (("1" (INST 1 "p_1") (("1" (ASSERT) (("1" (HIDE -2) (("1" (LEMMA FORM_DISJUNCTION_PROP) (("1" (INST?) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (SKEEP) (("2" (LEMMA SPECIAL_FORM_CONJUNCT) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2 3) (("3" (EXPAND "has_special_form" 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (HIDE -1 -2) (("3" (LEMMA "length_pull_out_conjunctions") (("3" (INST?) (("3" (LEMMA "length_pull_out_conjunctions") (("3" (INST -1 "distribute_ands(PAND2_var)") (("3" (LEMMA LENGTH_CONJUNCT_LISTS) (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "has_special_form" -3) (("6" (FLATTEN -3) (("6" (ASSERT) (("6" (SKEEP) (("6" (INST -1 "x") (("6" (INST -2 "x") (("6" (EXPAND "distribute_ands" 1) (("6" (CASE " eval(POR(distribute_ands(POR1_var), distribute_ands(POR2_var)))(x) =  (eval(distribute_ands(POR2_var))(x) OR  eval(distribute_ands(POR1_var))(x))") (("1" (REPLACE -1 1) (("1" (EXPAND "pull_out_conjunctions" 1) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (SPLIT -1) (("1" (ASSERT) (("1" (HIDE -3) (("1" (HIDE -2) (("1" (SKEEP -2) (("1" (INST 1 "p_1") (("1" (ASSERT) (("1" (LEMMA "member_append_r[NNF_expr]") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -4) (("2" (SKEEP -3) (("2" (INST 1 "p_1") (("2" (ASSERT) (("2" (LEMMA "member_append_l[NNF_expr]") (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SKEEP -1) (("2" (CASE "member(p_1,pull_out_conjunctions(distribute_ands(POR2_var))) OR member(p_1, pull_out_conjunctions(distribute_ands(POR1_var)))") (("1" (HIDE -4 -5) (("1" (HIDE -5) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (SPLIT -4) (("1" (PROPAX) NIL NIL) ("2" (INST 1 "p_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (INST 1 "p_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (HIDE -5 -6 -7 -8 -9) (("2" (HIDE -2 -3 -4) (("2" (LEMMA "member_append_fi[NNF_expr]") (("2" (INST -1 "p_1" "pull_out_conjunctions(distribute_ands(POR1_var))" " pull_out_conjunctions(distribute_ands(POR2_var))") (("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) NIL SHOSTAK)) (|form_disjunction_truth_TCC1| 0 (|form_disjunction_truth_TCC1-1| |nil| 3770133875 ("" (SKEEP) (("" (LEMMA LENGTH_PULL_OUT_CONJUNCTIONS) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|length_pull_out_conjunctions| FORMULA-DECL NIL |dnf_polynomials| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) NIL (|form_disjunction_truth| SUBTYPE "dnf_polynomials.pull_out_conjunctions(dnf_polynomials.distribute_ands(dnf_polynomials.p))" "{a: list_adt[NNF_expr].list | reals.>(list_props[NNF_expr].length(a), 0)}"))) (|form_disjunction_truth| 0 (|form_disjunction_truth-1| |nil| 3770133878 ("" (SKEEP) (("" (SKEEP) (("" (SPLIT) (("1" (FLATTEN) (("1" (LEMMA FORM_DISJUNCTION_EVAL) (("1" (INST?) (("1" (FLATTEN -1) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (LEMMA "pull_out_conjunctions_eval") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LEMMA FORM_DISJUNCTION_EVAL) (("2" (INST?) (("2" (FLATTEN -1) (("2" (SPLIT -1) (("1" (HIDE -2) (("1" (SKEEP) (("1" (LEMMA "pull_out_conjunctions_eval") (("1" (INST?) (("1" (ASSERT) (("1" (INST 1 "p_1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|pull_out_conjunctions_eval| FORMULA-DECL NIL |dnf_polynomials| NIL) (|form_disjunction_eval| FORMULA-DECL NIL |dnf_polynomials| NIL)) SHOSTAK)) (|dnf_TCC1| 0 (|dnf_TCC1-1| |nil| 3769959782 ("" (LEMMA "nnf_has_special_form") (("" (PROPAX) NIL NIL)) NIL) ((|nnf_has_special_form| FORMULA-DECL NIL |dnf_polynomials| NIL)) NIL (|dnf| SUBTYPE "dnf_polynomials.nnf(dnf_polynomials.p)" "NNF_expr"))) (|nnf_pnot_preserves_truth| 0 (|nnf_pnot_preserves_truth-27| |nil| 3772558018 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (EXPAND "eval" 1) (("3" (EXPAND "eval" 1) (("3" (HIDE -2 -3) (("3" (CASE "eval(abs_nnf_rel(PABS1_var, PABS2_var, PABS3_var, PABS4_var))(x) = eval_rel(PABS3_var)
                                                                     (abs(polynomial(PABS1_var, PABS2_var)(x)), PABS4_var)") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs_nnf_rel") (("2" (CASE "PABS3_var = plt") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "PABS4_var <= 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = ple") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pgt") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pge") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "PABS4_var <= 0 ") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE " PABS4_var <= 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = peq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) = -1 * PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pneq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "-polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2 -3) (("4" (INST -1 "PNOT(PAND1_var)") (("4" (REVEAL -1) (("4" (INST -1 "PNOT(PAND2_var)") (("4" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2 -3) (("5" (INST -1 "PNOT(POR1_var)") (("5" (REVEAL -1) (("5" (INST -1 "PNOT(POR2_var)") (("5" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (INST -3 "PNOT1_var_1") (("6" (HIDE -1 -2) (("6" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2 -3) (("7" (INST -1 "PIMPLIES1_var") (("7" (REVEAL -1) (("7" (INST -1 "PNOT(PIMPLIES2_var)") (("7" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (EXPAND "eval" 1) (("8" (HIDE -1 -2 -3) (("8" (INST -1 "PIFF1_var") (("8" (REVEAL -1) (("8" (INST -1 "PIFF2_var") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF1_var)") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF2_var)") (("8" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (HIDE -1 -2) (("9" (HIDE -1) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (INST -1 "PNOT(PWHEN1_var)") (("9" (REVEAL -1) (("9" (INST -1 "PWHEN2_var") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "eval" 1) (("10" (EXPAND "eval" 1) (("10" (HIDE -1 -2 -3) (("10" (HIDE -1) (("10" (INST -1 "PITE1_var") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE2_var)") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE3_var)") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -2) (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (SKEEP) (("7" (HIDE -1 -2) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "eval" 1) (("7" (INST -1 "PNOT(PIMPLIES1_var)") (("7" (REVEAL -1) (("7" (INST -1 "PIMPLIES2_var") (("7" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (HIDE -1 -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (EXPAND "eval" 1) (("8" (HIDE -1 -2) (("8" (INST -1 "PIFF1_var") (("8" (REVEAL -1) (("8" (INST -1 "PIFF2_var") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF2_var)") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF1_var)") (("8" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (HIDE -1 -2 -3 -4) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (HIDE -1 -2) (("9" (INST -1 "PWHEN1_var") (("9" (REVEAL -1) (("9" (INST -1 "PNOT(PWHEN2_var)") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (SKEEP) (("10" (HIDE -1 -2 -3) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "eval" 1) (("10" (EXPAND "eval" 1) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PITE2_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE3_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE1_var") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|not_eval_rel| CONST-DECL "TarskiRel" |dnf_polynomials| NIL) (|plt| ADT-CONSTRUCTOR-DECL "(plt?)" |poly_system_strategy| NIL) (|plt?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|ple| ADT-CONSTRUCTOR-DECL "(ple?)" |poly_system_strategy| NIL) (|ple?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|peq| ADT-CONSTRUCTOR-DECL "(peq?)" |poly_system_strategy| NIL) (|peq?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|pneq?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|pneq| ADT-CONSTRUCTOR-DECL "(pneq?)" |poly_system_strategy| NIL) (|pgt?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|pgt| ADT-CONSTRUCTOR-DECL "(pgt?)" |poly_system_strategy| NIL) (|pge?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|pge| ADT-CONSTRUCTOR-DECL "(pge?)" |poly_system_strategy| NIL) (|abs_nnf_rel_preserves_truth| FORMULA-DECL NIL |dnf_polynomials| NIL) (|abs_nnf_rel_pnot_preserves_truth| FORMULA-DECL NIL |dnf_polynomials| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|abs_nnf_rel| CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|sequence| TYPE-EQ-DECL NIL |sequences| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|sigma| DEF-DECL "real" |sigma| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (PNOT ADT-CONSTRUCTOR-DECL "[PolyRelExpr -> (PNOT?)]" |PolyRelExpr_adt| NIL) (PNOT? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) NIL) (|nnf_pnot_preserves_truth-26| |nil| 3772557916 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (EXPAND "eval" 1) (("3" (EXPAND "eval" 1) (("3" (HIDE -2 -3) (("3" (CASE "eval(abs_nnf_rel(PABS1_var, PABS2_var, PABS3_var, PABS4_var))(x) = eval_rel(PABS3_var)
                                                          (abs(polynomial(PABS1_var, PABS2_var)(x)), PABS4_var)") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs_nnf_rel") (("2" (CASE "PABS3_var = plt") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "PABS4_var <= 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = ple") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pgt") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pge") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "PABS4_var <= 0 ") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE " PABS4_var <= 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = peq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) = -1 * PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pneq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "-polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2 -3) (("4" (INST -1 "PNOT(PAND1_var)") (("4" (REVEAL -1) (("4" (INST -1 "PNOT(PAND2_var)") (("4" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2 -3) (("5" (INST -1 "PNOT(POR1_var)") (("5" (REVEAL -1) (("5" (INST -1 "PNOT(POR2_var)") (("5" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (INST -3 "PNOT1_var_1") (("6" (HIDE -1 -2) (("6" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2 -3) (("7" (INST -1 "PIMPLIES1_var") (("7" (REVEAL -1) (("7" (INST -1 "PNOT(PIMPLIES2_var)") (("7" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (EXPAND "eval" 1) (("8" (HIDE -1 -2 -3) (("8" (INST -1 "PIFF1_var") (("8" (REVEAL -1) (("8" (INST -1 "PIFF2_var") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF1_var)") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF2_var)") (("8" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-25| |nil| 3772557821 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (ASSERT) NIL))))))))))))))))))))))))))) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL))))))))))))))) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL) ("2" (GRIND) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (EXPAND "eval" 1) (("3" (EXPAND "eval" 1) (("3" (HIDE -2 -3) (("3" (CASE "eval(abs_nnf_rel(PABS1_var, PABS2_var, PABS3_var, PABS4_var))(x) = eval_rel(PABS3_var)
                                               (abs(polynomial(PABS1_var, PABS2_var)(x)), PABS4_var)") (("1" (ASSERT) (("1" (GROUND) NIL))) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs_nnf_rel") (("2" (CASE "PABS3_var = plt") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "PABS4_var <= 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))))) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))))))))))))))) ("2" (CASE "PABS3_var = ple") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL))))))))))))))))) ("2" (CASE "PABS3_var = pgt") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL))))))))))))))))) ("2" (CASE "PABS3_var = pge") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL) ("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "PABS4_var <= 0 ") (("1" (ASSERT) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL))))))))))) ("2" (ASSERT) (("2" (CASE " PABS4_var <= 0") (("1" (ASSERT) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (PROPAX) NIL))))))))))))))))))))) ("2" (CASE "PABS3_var = peq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (PROPAX) NIL))))) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) = -1 * PABS4_var") (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))) ("2" (ASSERT) NIL))))))))))))))))))))) ("2" (CASE "PABS3_var = pneq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "-polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))))))))))))))))))) ("2" (ASSERT) NIL))))))))))))))))))))))))))))))))))))))))))))) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2 -3) (("4" (INST -1 "PNOT(PAND1_var)") (("4" (REVEAL -1) (("4" (INST -1 "PNOT(PAND2_var)") (("4" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL))))))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))))) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2 -3) (("5" (INST -1 "PNOT(POR1_var)") (("5" (REVEAL -1) (("5" (INST -1 "PNOT(POR2_var)") (("5" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))))) ("6" (POSTPONE) NIL) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL))) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL)))) NIL) NIL NIL) (|nnf_pnot_preserves_truth-24| |nil| 3772557735 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (EXPAND "eval" 1) (("3" (EXPAND "eval" 1) (("3" (HIDE -2 -3) (("3" (CASE "eval(abs_nnf_rel(PABS1_var, PABS2_var, PABS3_var, PABS4_var))(x) = eval_rel(PABS3_var)
                                    (abs(polynomial(PABS1_var, PABS2_var)(x)), PABS4_var)") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs_nnf_rel") (("2" (CASE "PABS3_var = plt") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "PABS4_var <= 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = ple") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pgt") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pge") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "PABS4_var <= 0 ") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE " PABS4_var <= 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = peq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) = -1 * PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pneq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "-polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2 -3) (("4" (INST -1 "PNOT(PAND1_var)") (("4" (REVEAL -1) (("4" (INST -1 "PNOT(PAND2_var)") (("4" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (POSTPONE) NIL NIL)) NIL)) NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-23| |nil| 3772557236 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (EXPAND "eval" 1) (("3" (EXPAND "eval" 1) (("3" (HIDE -2 -3) (("3" (CASE "eval(abs_nnf_rel(PABS1_var, PABS2_var, PABS3_var, PABS4_var))(x) = eval_rel(PABS3_var)
                         (abs(polynomial(PABS1_var, PABS2_var)(x)), PABS4_var)") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs_nnf_rel") (("2" (CASE "PABS3_var = plt") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "PABS4_var <= 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = ple") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pgt") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pge") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "PABS4_var <= 0 ") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE " PABS4_var <= 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = peq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) = -1 * PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pneq") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) (("1" (CASE "-polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) = PABS4_var") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-22| |nil| 3772556716 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (EXPAND "eval" 1) (("3" (EXPAND "eval" 1) (("3" (HIDE -2 -3) (("3" (CASE "eval(abs_nnf_rel(PABS1_var, PABS2_var, PABS3_var, PABS4_var))(x) = eval_rel(PABS3_var)
              (abs(polynomial(PABS1_var, PABS2_var)(x)), PABS4_var)") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "eval_rel") (("2" (EXPAND "abs_nnf_rel") (("2" (CASE "PABS3_var = plt") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "PABS4_var <= 0") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "eval") (("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (CASE "polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = ple") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "abs") (("2" (CASE " polynomial(PABS1_var, PABS2_var)(x) < 0") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "eval") (("2" (EXPAND "eval_rel") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pgt") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_rel") (("1" (EXPAND "abs") (("1" (CASE "PABS4_var < 0") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "PABS3_var = pge") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (CASE "PABS3_var = peq") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (CASE "PABS3_var = pneq") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-21| |nil| 3772556567 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (ASSERT) NIL))))))))))))))))))))))))))) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL))))))))))))))) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL) ("2" (GRIND) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (POSTPONE) NIL))))))))))))))))))) ("4" (POSTPONE) NIL) ("5" (POSTPONE) NIL) ("6" (POSTPONE) NIL) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL))) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2 -3) (("7" (SKEEP) (("7" (INST -1 "PIMPLIES1_var") (("7" (REVEAL -1) (("7" (INST -1 "PNOT(PIMPLIES2_var)") (("7" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))))) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL)))) NIL) NIL NIL) (|nnf_pnot_preserves_truth-20| |nil| 3772556327 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))))) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL))))) ("2" (ASSERT) NIL))))))))))))))))))))))))))) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL))))))))))))))) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))))))))))))) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL) ("2" (GRIND) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (POSTPONE) NIL))))))))))))))))))) ("4" (POSTPONE) NIL) ("5" (POSTPONE) NIL) ("6" (POSTPONE) NIL) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL))) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL)))) NIL) NIL NIL) (|nnf_pnot_preserves_truth-19| |nil| 3772556181 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-18| |nil| 3772556151 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-17| |nil| 3772556118 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-16| |nil| 3772555714 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (CASE "PREL3_var = plt") (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pge") (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pgt") (("1" (REPLACE -1 4) (("1" (ASSERT) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = peq") (("1" (REPLACE -1 5) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL3_var = pneq") (("1" (REPLACE -1 6) (("1" (EXPAND "eval_rel") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST?) (("3" (INST?) (("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-15| |nil| 3772555643 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-14| |nil| 3770462523 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (REPLACE -1 1) (("3" (LEMMA ABS_NNF_REL_PNOT_PRESERVES_TRUTH) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (LEMMA ABS_NNF_REL_PRESERVES_TRUTH) (("3" (INST?) (("3" (INST -1 "x") (("3" (EXPAND "nnf" 1) (("3" (REPLACE -1 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2 -3) (("4" (INST -1 "PNOT(PAND1_var)") (("4" (REVEAL -1) (("4" (INST -1 "PNOT(PAND2_var)") (("4" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2 -3) (("5" (INST -1 "PNOT(POR1_var)") (("5" (REVEAL -1) (("5" (INST -1 "PNOT(POR2_var)") (("5" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (INST -3 "PNOT1_var_1") (("6" (HIDE -1 -2) (("6" (SPLIT) (("1" (SKEEP) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2 -3) (("7" (SKEEP) (("7" (INST -1 "PIMPLIES1_var") (("7" (REVEAL -1) (("7" (INST -1 "PNOT(PIMPLIES2_var)") (("7" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (EXPAND "eval" 1) (("8" (SKEEP) (("8" (HIDE -1 -2 -3) (("8" (INST -1 "PIFF1_var") (("8" (REVEAL -1) (("8" (INST -1 "PIFF2_var") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF1_var)") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF2_var)") (("8" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (HIDE -1 -2) (("9" (HIDE -1) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (INST -1 "PNOT(PWHEN1_var)") (("9" (REVEAL -1) (("9" (INST -1 "PWHEN2_var") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "eval" 1) (("10" (EXPAND "eval" 1) (("10" (HIDE -1 -2 -3) (("10" (HIDE -1) (("10" (INST -1 "PITE1_var") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE2_var)") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE3_var)") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -2) (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (SKEEP) (("7" (HIDE -1 -2) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "eval" 1) (("7" (INST -1 "PNOT(PIMPLIES1_var)") (("7" (REVEAL -1) (("7" (INST -1 "PIMPLIES2_var") (("7" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (HIDE -1 -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (EXPAND "eval" 1) (("8" (HIDE -1 -2) (("8" (INST -1 "PIFF1_var") (("8" (REVEAL -1) (("8" (INST -1 "PIFF2_var") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF2_var)") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF1_var)") (("8" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (HIDE -1 -2 -3 -4) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (HIDE -1 -2) (("9" (INST -1 "PWHEN1_var") (("9" (REVEAL -1) (("9" (INST -1 "PNOT(PWHEN2_var)") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (SKEEP) (("10" (HIDE -1 -2 -3) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "eval" 1) (("10" (EXPAND "eval" 1) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PITE2_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE3_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE1_var") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-13| |nil| 3770462144 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (POSTPONE) NIL NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-12| |nil| 3770047949 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (EXPAND "eval") (("3" (HIDE -1) (("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval" 1) (("3" (GRIND) (("1" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("3" (CASE "PABS2_var = ple") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("4" (CASE "PABS2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("5" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("6" (EXPAND "eval_rel") (("6" (GROUND) NIL NIL)) NIL) ("7" (CASE "PABS2_var = pge") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PABS2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("13" (CASE "PABS2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("14" (CASE "PABS2_var = plt") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("15" (CASE "PABS2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("16" (CASE "PABS2_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("17" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("18" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("19" (CASE "PABS2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("20" (CASE "PABS2_var = pge") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("21" (CASE "PABS2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("22" (CASE "PABS2_var = peq") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("23" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 7) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("24" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 8) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (REVEAL -1) (("4" (INST -1 "PAND2_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (REVEAL -1) (("5" (INST -1 "POR2_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (INDUCT "PNOT1_var") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2 -3) (("4" (INST -1 "PNOT(PAND1_var)") (("4" (REVEAL -1) (("4" (INST -1 "PNOT(PAND2_var)") (("4" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2 -3) (("5" (INST -1 "PNOT(POR1_var)") (("5" (REVEAL -1) (("5" (INST -1 "PNOT(POR2_var)") (("5" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "nnf" 1) (("6" (INST -3 "PNOT1_var_1") (("6" (HIDE -1 -2) (("6" (SPLIT) (("1" (SKEEP) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2 -3) (("7" (SKEEP) (("7" (INST -1 "PIMPLIES1_var") (("7" (REVEAL -1) (("7" (INST -1 "PNOT(PIMPLIES2_var)") (("7" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (EXPAND "eval" 1) (("8" (SKEEP) (("8" (HIDE -1 -2 -3) (("8" (INST -1 "PIFF1_var") (("8" (REVEAL -1) (("8" (INST -1 "PIFF2_var") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF1_var)") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF2_var)") (("8" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (HIDE -1 -2) (("9" (HIDE -1) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (INST -1 "PNOT(PWHEN1_var)") (("9" (REVEAL -1) (("9" (INST -1 "PWHEN2_var") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "eval" 1) (("10" (EXPAND "eval" 1) (("10" (HIDE -1 -2 -3) (("10" (HIDE -1) (("10" (INST -1 "PITE1_var") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE2_var)") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE3_var)") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -2) (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (SKEEP) (("7" (HIDE -1 -2) (("7" (EXPAND "nnf" 1) (("7" (EXPAND "eval" 1) (("7" (INST -1 "PNOT(PIMPLIES1_var)") (("7" (REVEAL -1) (("7" (INST -1 "PIMPLIES2_var") (("7" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (HIDE -1 -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (EXPAND "eval" 1) (("8" (HIDE -1 -2) (("8" (INST -1 "PIFF1_var") (("8" (REVEAL -1) (("8" (INST -1 "PIFF2_var") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF2_var)") (("8" (REVEAL -1) (("8" (INST -1 "PNOT(PIFF1_var)") (("8" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -3) (("1" (EXPAND "nnf" -4) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (HIDE -1 -2 -3 -4) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (HIDE -1 -2) (("9" (INST -1 "PWHEN1_var") (("9" (REVEAL -1) (("9" (INST -1 "PNOT(PWHEN2_var)") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (EXPAND "nnf" -2) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (SKEEP) (("10" (HIDE -1 -2 -3) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "eval" 1) (("10" (EXPAND "eval" 1) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PITE2_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE3_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE1_var") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (EXPAND "nnf" -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-11| |nil| 3770047862 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (EXPAND "eval") (("3" (HIDE -1) (("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval" 1) (("3" (GRIND) (("1" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("3" (CASE "PABS2_var = ple") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("4" (CASE "PABS2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("5" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("6" (EXPAND "eval_rel") (("6" (GROUND) NIL NIL)) NIL) ("7" (CASE "PABS2_var = pge") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PABS2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("13" (CASE "PABS2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("14" (CASE "PABS2_var = plt") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("15" (CASE "PABS2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("16" (CASE "PABS2_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("17" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("18" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("19" (POSTPONE) NIL NIL) ("20" (POSTPONE) NIL NIL) ("21" (POSTPONE) NIL NIL) ("22" (POSTPONE) NIL NIL) ("23" (POSTPONE) NIL NIL) ("24" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-10| |nil| 3770047811 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (EXPAND "eval") (("3" (HIDE -1) (("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval" 1) (("3" (GRIND) (("1" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("3" (CASE "PABS2_var = ple") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("4" (CASE "PABS2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("5" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("6" (EXPAND "eval_rel") (("6" (GROUND) NIL NIL)) NIL) ("7" (CASE "PABS2_var = pge") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PABS2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("13" (CASE "PABS2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("14" (CASE "PABS2_var = plt") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("15" (CASE "PABS2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("16" (CASE "PABS2_var = ple") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("17" (POSTPONE) NIL NIL) ("18" (POSTPONE) NIL NIL) ("19" (POSTPONE) NIL NIL) ("20" (POSTPONE) NIL NIL) ("21" (POSTPONE) NIL NIL) ("22" (POSTPONE) NIL NIL) ("23" (POSTPONE) NIL NIL) ("24" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-9| |nil| 3770047231 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (EXPAND "eval") (("3" (HIDE -1) (("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval" 1) (("3" (GRIND) (("1" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("3" (CASE "PABS2_var = ple") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("4" (CASE "PABS2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("5" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("6" (EXPAND "eval_rel") (("6" (GROUND) NIL NIL)) NIL) ("7" (CASE "PABS2_var = pge") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PABS2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PABS2_var)") (("1" (CASE "PABS2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("13" (CASE "PABS2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("14" (CASE "PABS2_var = plt") (("1" (REPLACE -1 3) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("15" (POSTPONE) NIL NIL) ("16" (POSTPONE) NIL NIL) ("17" (POSTPONE) NIL NIL) ("18" (POSTPONE) NIL NIL) ("19" (POSTPONE) NIL NIL) ("20" (POSTPONE) NIL NIL) ("21" (POSTPONE) NIL NIL) ("22" (POSTPONE) NIL NIL) ("23" (POSTPONE) NIL NIL) ("24" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-8| |nil| 3770047075 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (EXPAND "eval") (("3" (HIDE -1) (("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval" 1) (("3" (GRIND) (("1" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "PABS2_var = ple") (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL) ("2" (CASE "PABS2_var = plt") (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("3" (CASE "PABS2_var = pgt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("4" (CASE "PABS2_var = pge") (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("5" (CASE "PABS2_var = peq") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL) ("13" (POSTPONE) NIL NIL) ("14" (POSTPONE) NIL NIL) ("15" (POSTPONE) NIL NIL) ("16" (POSTPONE) NIL NIL) ("17" (POSTPONE) NIL NIL) ("18" (POSTPONE) NIL NIL) ("19" (POSTPONE) NIL NIL) ("20" (POSTPONE) NIL NIL) ("21" (POSTPONE) NIL NIL) ("22" (POSTPONE) NIL NIL) ("23" (POSTPONE) NIL NIL) ("24" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-7| |nil| 3770046951 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (EXPAND "eval") (("3" (HIDE -1) (("3" (EXPAND "not_eval_rel") (("3" (EXPAND "eval" 1) (("3" (GRIND) (("1" (CASE "PABS2_var = plt") (("1" (REPLACE -1 -5) (("1" (EXPAND "eval_rel") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL) ("13" (POSTPONE) NIL NIL) ("14" (POSTPONE) NIL NIL) ("15" (POSTPONE) NIL NIL) ("16" (POSTPONE) NIL NIL) ("17" (POSTPONE) NIL NIL) ("18" (POSTPONE) NIL NIL) ("19" (POSTPONE) NIL NIL) ("20" (POSTPONE) NIL NIL) ("21" (POSTPONE) NIL NIL) ("22" (POSTPONE) NIL NIL) ("23" (POSTPONE) NIL NIL) ("24" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-6| |nil| 3770046878 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL))))) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL))))) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL))))) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL))))) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL))))) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL))))) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL))))) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL))))) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL))))) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL))))) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL))))) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL))))) ("2" (ASSERT) NIL))) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL))))))) ("2" (ASSERT) NIL))) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL))))))) ("2" (ASSERT) NIL))) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL))))))) ("2" (ASSERT) NIL))) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL))))))) ("2" (ASSERT) NIL))) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL))))))) ("2" (ASSERT) NIL))) ("12" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL))))))) ("2" (ASSERT) NIL))) ("2" (ASSERT) NIL))))))))))))))))))) ("3" (POSTPONE) NIL) ("4" (POSTPONE) NIL) ("5" (POSTPONE) NIL) ("6" (POSTPONE) NIL) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL)))) NIL) NIL NIL) (|nnf_pnot_preserves_truth-5| |nil| 3770046838 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (CASE "PREL2_var = ple") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("9" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("10" (CASE "PREL2_var = pge") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("11" (CASE "PREL2_var = peq") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("12" (CASE "pneq?(PREL2_var)") (("1" (POSTPONE) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-4| |nil| 3770046597 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (CASE "PREL2_var = pneq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (CASE "PREL2_var = plt") (("1" (REPLACE -1 2) (("1" (EXPAND "eval_rel") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-3| |nil| 3770046568 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE "PREL2_var = pgt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (CASE "PREL2_var = pge") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "PREL2_var = peq") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (POSTPONE) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-2| |nil| 3770046496 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "PREL2_var = ple") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (POSTPONE) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_pnot_preserves_truth-1| |nil| 3770043987 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (EXPAND "nnf" 1) (("2" (EXPAND "eval") (("2" (HIDE -1) (("2" (EXPAND "not_eval_rel") (("2" (EXPAND "eval" 1) (("2" (GRIND) (("1" (CASE "PREL2_var = plt") (("1" (REPLACE -1 -4) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (CASE "pneq?(PREL2_var)") (("1" (POSTPONE) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL SHOSTAK)) (|nnf_preserves_truth| 0 (|nnf_preserves_truth-7| |nil| 3770463195 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (LEMMA "abs_nnf_rel_preserves_truth") (("3" (HIDE -2) (("3" (SKEEP) (("3" (EXPAND "nnf" 1) (("3" (INST?) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REVEAL -2) (("1" (INST -1 "PAND2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REVEAL -2) (("1" (INST -1 "POR2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (LEMMA NNF_PNOT_PRESERVES_TRUTH) (("6" (HIDE -2 -3) (("6" (INST?) NIL NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (SKEEP) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2) (("7" (LEMMA NNF_PNOT_PRESERVES_TRUTH) (("7" (INST?) (("7" (REPLACE -1 1) (("7" (HIDE -1) (("7" (INST -1 "PIMPLIES2_var") (("7" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (SKEEP) (("8" (HIDE -1 -2) (("8" (CASE " ((eval(nnf(PNOT(PIFF1_var)))(x) OR eval(nnf(PIFF2_var))(x)) AND
                                   (eval(nnf(PIFF1_var))(x) OR eval(nnf(PNOT(PIFF2_var)))(x)))
                                  =
                                  ((eval(PIFF1_var)(x) AND eval(PIFF2_var)(x)) OR
                                    ((NOT (eval(PIFF1_var)(x))) AND (NOT (eval(PIFF2_var)(x)))))") (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INST -1 "PIFF1_var") (("2" (REVEAL -1) (("2" (INST -1 "PIFF2_var") (("2" (REVEAL -1) (("2" (INST -1 "PNOT(PIFF2_var)") (("2" (REVEAL -1) (("2" (INST -1 "PNOT(PIFF1_var)") (("2" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "eval(PNOT(PIFF1_var))(x) = (NOT (eval(PIFF1_var)(x)))") (("1" (REPLACE -1 1) (("1" (CASE " eval(PNOT(PIFF2_var))(x) = (NOT (eval(PIFF2_var)(x)))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (CASE "(eval(PIFF1_var)(x) AND eval(PIFF2_var)(x))") (("1" (GRIND) NIL NIL) ("2" (CASE " ((NOT (eval(PIFF1_var)(x))) AND (NOT (eval(PIFF2_var)(x))))") (("1" (GRIND) NIL NIL) ("2" (CASE "(NOT (eval(PIFF1_var)(x))) OR (NOT (eval(PIFF2_var)(x)))") (("1" (CASE "(eval(PIFF1_var)(x)) OR (eval(PIFF2_var)(x))") (("1" (CASE "eval(PIFF1_var)(x)") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (HIDE -1 -2) (("9" (INST -1 "PWHEN1_var") (("9" (REVEAL -1) (("9" (INST -1 "PNOT(PWHEN2_var)") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "eval" 1) (("10" (HIDE -1 -2 -3) (("10" (INST -1 "PITE1_var") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PITE2_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE3_var") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (CASE "((eval(nnf(PNOT(PITE1_var)))(x) OR eval(nnf(PITE2_var))(x)) AND
                         (eval(nnf(PITE1_var))(x) OR eval(nnf(PITE3_var))(x))) = (((NOT eval(PITE1_var)(x)) OR eval(PITE2_var)(x)) AND
                          ((eval(PITE1_var)(x)) OR (eval(PITE3_var)(x))))") (("1" (HIDE -2 -3 -4 -5) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE -1 1) (("2" (REPLACE -2 1) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (|sigma| DEF-DECL "real" |sigma| |reals|) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|abs_nnf_rel_preserves_truth| FORMULA-DECL NIL |dnf_polynomials| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnf_pnot_preserves_truth| FORMULA-DECL NIL |dnf_polynomials| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (PNOT ADT-CONSTRUCTOR-DECL "[PolyRelExpr -> (PNOT?)]" |PolyRelExpr_adt| NIL) (PNOT? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|depth| DEF-DECL "nat" |dnf_polynomials| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) NIL) (|nnf_preserves_truth-6| |nil| 3770052166 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REVEAL -2) (("1" (INST -1 "PAND2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REVEAL -2) (("1" (INST -1 "POR2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (LEMMA NNF_PNOT_PRESERVES_TRUTH) (("6" (HIDE -2 -3) (("6" (INST?) NIL NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (SKEEP) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2) (("7" (LEMMA NNF_PNOT_PRESERVES_TRUTH) (("7" (INST?) (("7" (REPLACE -1 1) (("7" (HIDE -1) (("7" (INST -1 "PIMPLIES2_var") (("7" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (SKEEP) (("8" (HIDE -1 -2) (("8" (CASE " ((eval(nnf(PNOT(PIFF1_var)))(x) OR eval(nnf(PIFF2_var))(x)) AND
                          (eval(nnf(PIFF1_var))(x) OR eval(nnf(PNOT(PIFF2_var)))(x)))
                         =
                         ((eval(PIFF1_var)(x) AND eval(PIFF2_var)(x)) OR
                           ((NOT (eval(PIFF1_var)(x))) AND (NOT (eval(PIFF2_var)(x)))))") (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INST -1 "PIFF1_var") (("2" (REVEAL -1) (("2" (INST -1 "PIFF2_var") (("2" (REVEAL -1) (("2" (INST -1 "PNOT(PIFF2_var)") (("2" (REVEAL -1) (("2" (INST -1 "PNOT(PIFF1_var)") (("2" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "eval(PNOT(PIFF1_var))(x) = (NOT (eval(PIFF1_var)(x)))") (("1" (REPLACE -1 1) (("1" (CASE " eval(PNOT(PIFF2_var))(x) = (NOT (eval(PIFF2_var)(x)))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (CASE "(eval(PIFF1_var)(x) AND eval(PIFF2_var)(x))") (("1" (GRIND) NIL NIL) ("2" (CASE " ((NOT (eval(PIFF1_var)(x))) AND (NOT (eval(PIFF2_var)(x))))") (("1" (GRIND) NIL NIL) ("2" (CASE "(NOT (eval(PIFF1_var)(x))) OR (NOT (eval(PIFF2_var)(x)))") (("1" (CASE "(eval(PIFF1_var)(x)) OR (eval(PIFF2_var)(x))") (("1" (CASE "eval(PIFF1_var)(x)") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (HIDE -1 -2) (("9" (INST -1 "PWHEN1_var") (("9" (REVEAL -1) (("9" (INST -1 "PNOT(PWHEN2_var)") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (SKEEP) (("10" (SKEEP) (("10" (EXPAND "nnf" 1) (("10" (EXPAND "eval" 1) (("10" (HIDE -1 -2 -3) (("10" (INST -1 "PITE1_var") (("10" (REVEAL -1) (("10" (INST -1 "PNOT(PITE1_var)") (("10" (REVEAL -1) (("10" (INST -1 "PITE2_var") (("10" (REVEAL -1) (("10" (INST -1 "PITE3_var") (("10" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (CASE "((eval(nnf(PNOT(PITE1_var)))(x) OR eval(nnf(PITE2_var))(x)) AND
        (eval(nnf(PITE1_var))(x) OR eval(nnf(PITE3_var))(x))) = (((NOT eval(PITE1_var)(x)) OR eval(PITE2_var)(x)) AND
         ((eval(PITE1_var)(x)) OR (eval(PITE3_var)(x))))") (("1" (HIDE -2 -3 -4 -5) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE -1 1) (("2" (REPLACE -2 1) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|nnf_preserves_truth-5| |nil| 3770052058 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REVEAL -2) (("1" (INST -1 "PAND2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REVEAL -2) (("1" (INST -1 "POR2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (LEMMA NNF_PNOT_PRESERVES_TRUTH) (("6" (HIDE -2 -3) (("6" (INST?) NIL NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (SKEEP) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2) (("7" (LEMMA NNF_PNOT_PRESERVES_TRUTH) (("7" (INST?) (("7" (REPLACE -1 1) (("7" (HIDE -1) (("7" (INST -1 "PIMPLIES2_var") (("7" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (SKEEP) (("8" (HIDE -1 -2) (("8" (CASE " ((eval(nnf(PNOT(PIFF1_var)))(x) OR eval(nnf(PIFF2_var))(x)) AND
                 (eval(nnf(PIFF1_var))(x) OR eval(nnf(PNOT(PIFF2_var)))(x)))
                =
                ((eval(PIFF1_var)(x) AND eval(PIFF2_var)(x)) OR
                  ((NOT (eval(PIFF1_var)(x))) AND (NOT (eval(PIFF2_var)(x)))))") (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INST -1 "PIFF1_var") (("2" (REVEAL -1) (("2" (INST -1 "PIFF2_var") (("2" (REVEAL -1) (("2" (INST -1 "PNOT(PIFF2_var)") (("2" (REVEAL -1) (("2" (INST -1 "PNOT(PIFF1_var)") (("2" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "eval(PNOT(PIFF1_var))(x) = (NOT (eval(PIFF1_var)(x)))") (("1" (REPLACE -1 1) (("1" (CASE " eval(PNOT(PIFF2_var))(x) = (NOT (eval(PIFF2_var)(x)))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (CASE "(eval(PIFF1_var)(x) AND eval(PIFF2_var)(x))") (("1" (GRIND) NIL NIL) ("2" (CASE " ((NOT (eval(PIFF1_var)(x))) AND (NOT (eval(PIFF2_var)(x))))") (("1" (GRIND) NIL NIL) ("2" (CASE "(NOT (eval(PIFF1_var)(x))) OR (NOT (eval(PIFF2_var)(x)))") (("1" (CASE "(eval(PIFF1_var)(x)) OR (eval(PIFF2_var)(x))") (("1" (CASE "eval(PIFF1_var)(x)") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (SKEEP) (("9" (SKEEP) (("9" (EXPAND "nnf" 1) (("9" (EXPAND "eval" 1) (("9" (HIDE -1 -2) (("9" (INST -1 "PWHEN2_var") (("9" (REVEAL -1) (("9" (INST -1 "PNOT(PWHEN1_var)") (("9" (SPLIT) (("1" (SPLIT) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|nnf_preserves_truth-4| |nil| 3770045979 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REVEAL -2) (("1" (INST -1 "PAND2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (INST -1 "POR1_var") (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REVEAL -2) (("1" (INST -1 "POR2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (LEMMA NNF_PNOT_PRESERVES_TRUTH) (("6" (HIDE -2 -3) (("6" (INST?) NIL NIL)) NIL)) NIL)) NIL) ("7" (SKEEP) (("7" (EXPAND "nnf" 1) (("7" (SKEEP) (("7" (EXPAND "eval" 1) (("7" (HIDE -1 -2) (("7" (LEMMA NNF_PNOT_PRESERVES_TRUTH) (("7" (INST?) (("7" (REPLACE -1 1) (("7" (HIDE -1) (("7" (INST -1 "PIMPLIES2_var") (("7" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (EXPAND "nnf" 1) (("8" (EXPAND "eval" 1) (("8" (SKEEP) (("8" (HIDE -1 -2) (("8" (CASE " (eval(nnf(PNOT(PIFF1_var)))(x) OR eval(nnf(PIFF2_var))(x)) AND
        (eval(nnf(PIFF1_var))(x) OR eval(nnf(PNOT(PIFF2_var)))(x))
       =
       ((eval(PIFF1_var)(x) AND eval(PIFF2_var)(x)) OR
         ((NOT (eval(PIFF1_var)(x))) AND (NOT (eval(PIFF2_var)(x)))))") (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INST -1 "PIFF1_var") (("2" (REVEAL -1) (("2" (INST -1 "PIFF2_var") (("2" (REVEAL -1) (("2" (INST -1 "PNOT(PIFF2_var)") (("2" (REVEAL -1) (("2" (INST -1 "PNOT(PIFF1_var)") (("2" (SPLIT -1) (("1" (SPLIT -2) (("1" (SPLIT -3) (("1" (SPLIT -4) (("1" (INST -1 "x") (("1" (INST -2 "x") (("1" (INST -3 "x") (("1" (INST -4 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "eval(PNOT(PIFF1_var))(x) = (NOT (eval(PIFF1_var)(x)))") (("1" (REPLACE -1 1) (("1" (CASE " eval(PNOT(PIFF2_var))(x) = (NOT (eval(PIFF2_var)(x)))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (CASE "(eval(PIFF1_var)(x) AND eval(PIFF2_var)(x))") (("1" (GRIND) NIL NIL) ("2" (CASE " ((NOT (eval(PIFF1_var)(x))) AND (NOT (eval(PIFF2_var)(x))))") (("1" (GRIND) NIL NIL) ("2" (CASE "(NOT (eval(PIFF1_var)(x))) OR (NOT (eval(PIFF2_var)(x)))") (("1" (CASE "(eval(PIFF1_var)(x)) OR (eval(PIFF2_var)(x))") (("1" (CASE "eval(PIFF1_var)(x)") (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_preserves_truth-3| |nil| 3770045929 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REVEAL -2) (("1" (INST -1 "PAND2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "nnf" 1) (("5" (EXPAND "eval" 1) (("5" (HIDE -1 -2) (("5" (REVEAL -2) (("5" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_preserves_truth-2| |nil| 3770043757 ("" (MEASURE-INDUCT "depth(p)" "p") (("" (INDUCT "x_1") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (EXPAND "nnf" 1) (("4" (EXPAND "eval" 1) (("4" (HIDE -1 -2) (("4" (INST -1 "PAND1_var") (("4" (SPLIT) (("1" (INST -1 "x") (("1" (REVEAL -2) (("1" (INST -1 "PAND2_var") (("1" (SPLIT) (("1" (INST -1 "x") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (POSTPONE) NIL NIL)) NIL)) NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL) (|nnf_preserves_truth-1| |nil| 3770043695 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (INST -1 "x") (("4" (INST -2 "x") (("4" (EXPAND "nnf" 1) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL)) NIL) NIL SHOSTAK)) (|distribute_pand_preserves_truth_new_TCC1| 0 (|distribute_pand_preserves_truth_new_TCC1-1| |nil| 3770382892 ("" (SKEEP) (("" (TYPEPRED "p1") (("" (TYPEPRED "p2") (("" (EXPAND "has_special_form" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL (|distribute_pand_preserves_truth_new| SUBTYPE "PolyRelExpr_adt.PAND(dnf_polynomials.p1, dnf_polynomials.p2)" "NNF_expr"))) (|distribute_pand_preserves_truth_new| 0 (|distribute_pand_preserves_truth_new-1| |nil| 3770382387 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (EXPAND "distribute_ands" 1) (("" (LEMMA "form_disjunction_eval") (("" (INST?) (("" (REPLACE -1 1) (("" (HIDE -1) (("" (SPLIT 1) (("1" (FLATTEN 1) (("1" (EXPAND "eval" 1) (("1" (LEMMA PULL_OUT_CONJUNCTIONS_EVAL) (("1" (INST?) (("1" (CASE "eval(distribute_ands(p1))(x) AND eval(distribute_ands(p2))(x)") (("1" (EXPAND "distribute_ands" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL -1) (("2" (REVEAL -1) (("2" (HIDE -3) (("2" (INST -1 "p1" "x") (("2" (INST -2 "p2" "x") (("2" (REPLACE -1 1) (("2" (REPLACE -2 1) (("2" (HIDE -1 -2) (("2" (LEMMA CONJUNCT_TRUTH_PROP) (("2" (INST?) (("1" (ASSERT) (("1" (FLATTEN -1) (("1" (HIDE -2) (("1" (CASE "((EXISTS (a: NNF_expr):
           member(a, pull_out_conjunctions(distribute_ands(p1))) AND
            eval(a)(x))
         AND
         EXISTS (b: NNF_expr):
           member(b, pull_out_conjunctions(distribute_ands(p2))) AND
            eval(b)(x))") (("1" (PROPAX) NIL NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA LENGTH_PULL_OUT_CONJUNCTIONS) (("2" (INST?) (("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA LENGTH_PULL_OUT_CONJUNCTIONS) (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (CASE "eval(PAND(distribute_ands(p1), distribute_ands(p2)))(x)") (("1" (HIDE -2) (("1" (EXPAND "eval" -1) (("1" (LEMMA PULL_OUT_CONJUNCTIONS_EVAL) (("1" (INST?) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (LEMMA PULL_OUT_CONJUNCTIONS_EVAL) (("1" (INST?) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (FLATTEN -1) (("1" (LEMMA CONJUNCT_TRUTH_PROP) (("1" (INST?) (("1" (CASE " (EXISTS (p: NNF_expr):
          member(p,
                 conjunct_lists(pull_out_conjunctions(distribute_ands(p1)),
                                pull_out_conjunctions(distribute_ands
                                                      (p2))))
           AND eval(p)(x))") (("1" (PROPAX) NIL NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (LEMMA LENGTH_PULL_OUT_CONJUNCTIONS) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (LEMMA LENGTH_PULL_OUT_CONJUNCTIONS) (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "distribute_ands" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|conjunct_lists| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (PAND? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PAND ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PAND?)]" |PolyRelExpr_adt| NIL) (|pull_out_conjunctions_eval| FORMULA-DECL NIL |dnf_polynomials| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|conjunct_truth_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|length_pull_out_conjunctions| FORMULA-DECL NIL |dnf_polynomials| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|p2| SKOLEM-CONST-DECL "NNF_expr" |dnf_polynomials| NIL) (|p1| SKOLEM-CONST-DECL "NNF_expr" |dnf_polynomials| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|form_disjunction_eval| FORMULA-DECL NIL |dnf_polynomials| NIL)) SHOSTAK)) (|distribute_ands_preserves_truth| 0 (|distribute_ands_preserves_truth-1| |nil| 3770131071 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (INST -1 "x") (("5" (INST -2 "x") (("5" (LEMMA DISTRIBUTE_PAND_PRESERVES_TRUTH_NEW) (("5" (INST?) (("5" (REPLACE -1 1) (("5" (HIDE -1) (("5" (EXPAND "eval" 1) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (SKEEP) (("6" (EXPAND "distribute_ands" 1) (("6" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) ((|distribute_pand_preserves_truth_new| FORMULA-DECL NIL |dnf_polynomials| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|sigma| DEF-DECL "real" |sigma| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) SHOSTAK)) (|dnf_const_preserves_truth| 0 (|dnf_const_preserves_truth-1| |nil| 3770465454 ("" (SKEEP*) (("" (CASE "p = PCONST(pb(p))") (("1" (REPLACE -1 1) (("1" (HIDE -2) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_rel") (("1" (CASE "pb(p)") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL) ((|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (PCONST? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PCONST ADT-CONSTRUCTOR-DECL "[bool -> (PCONST?)]" |PolyRelExpr_adt| NIL) (|pb| ADT-ACCESSOR-DECL "[(PCONST?) -> bool]" |PolyRelExpr_adt| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|construct_dnf_bool| CONST-DECL "DNF" |dnf_polynomials| NIL) (|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|sigma| DEF-DECL "real" |sigma| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|change_function| CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|PolyRelExpr_PCONST_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)) SHOSTAK)) (|dnf_const_preserves_truth_1_TCC1| 0 (|dnf_const_preserves_truth_1_TCC1-1| |nil| 3770485608 ("" (GRIND) NIL NIL) ((|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL)) NIL (|dnf_const_preserves_truth_1| SUBTYPE "dnf_polynomials.p" "NNF_expr"))) (|dnf_const_preserves_truth_1| 0 (|dnf_const_preserves_truth_1-2| |nil| 3770485746 ("" (SKEEP*) (("" (CASE "p = PCONST(pb(p))") (("1" (REPLACE -1 1) (("1" (HIDE -2) (("1" (EXPAND "construct_dnf") (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_rel") (("1" (CASE "pb(p)") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL) ((|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (PCONST? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PCONST ADT-CONSTRUCTOR-DECL "[bool -> (PCONST?)]" |PolyRelExpr_adt| NIL) (|pb| ADT-ACCESSOR-DECL "[(PCONST?) -> bool]" |PolyRelExpr_adt| NIL) (|construct_dnf_bool| CONST-DECL "DNF" |dnf_polynomials| NIL) (|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|sigma| DEF-DECL "real" |sigma| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|change_function| CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|PolyRelExpr_PCONST_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)) NIL) (|dnf_const_preserves_truth_1-1| |nil| 3770485609 ("" (SKEEP) (("" (SKEEP) (("" (CASE "p = PCONST(pb(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "eval") (("1" (EXPAND "construct_dnf") (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_rel") (("1" (EXPAND "append") (("1" (EXPAND "append") (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|eval_rel_preserves_truth| 0 (|eval_rel_preserves_truth-1| |nil| 3770483038 ("" (INDUCT "rel") (("1" (SKEEP) (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND "eval_rel") (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (EXPAND "eval_rel") (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "eval_rel") (("5" (GRIND) NIL NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (EXPAND "eval_rel") (("6" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (/= CONST-DECL "boolean" |notequal| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|TarskiRel_induction| FORMULA-DECL NIL |poly_system_strategy| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL)) SHOSTAK)) (|dnf_prel_preserves_truth_len1_TCC1| 0 (|dnf_prel_preserves_truth_len1_TCC1-1| |nil| 3770473166 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|dnf_prel_preserves_truth_len1| SUBTYPE "dnf_polynomials.p" "{x: PolyRelExpr_adt.PolyRelExpr | booleans.OR(PolyRelExpr_adt.PREL?(x), PolyRelExpr_adt.PABS?(x))}"))) (|dnf_prel_preserves_truth_len1| 0 (|dnf_prel_preserves_truth_len1-3| |nil| 3770636010 ("" (SKEEP*) (("" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (EXPAND "construct_record") (("1" (CASE "d(p) = 1") (("1" (REPLACE -1 1) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "polynomial") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "change_function") (("1" (EXPAND "eval_rel") (("1" (GROUND) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL) ((|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (PREL? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PREL ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PREL?)]" |PolyRelExpr_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PABS? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|pn| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> [nat -> rat]]" |PolyRelExpr_adt| NIL) (|d| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> nat]" |PolyRelExpr_adt| NIL) (|rel| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> TarskiRel]" |PolyRelExpr_adt| NIL) (|r| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> rat]" |PolyRelExpr_adt| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|odd_minus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|even_minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|change_function| CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (|sigma| DEF-DECL "real" |sigma| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|PolyRelExpr_PREL_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|p| SKOLEM-CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)) NIL) (|dnf_prel_preserves_truth_len1-2| |nil| 3770635879 ("" (SKEEP) (("" (SKEEP) (("" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "append") (("1" (EXPAND "nth") (("1" (EXPAND "append") (("1" (CASE "cons(1, (: :)) = (: 1 :)") (("1" (HIDE -1) (("1" (CASE "eval_rel(rel(p))(car(plist(p)), r(p))") (("1" (ASSERT) (("1" (CASE "eval_rel(pneq)(polylist((: 1 :))(x), 0) = TRUE") (("1" (HIDE -1) (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (GRIND) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 1) (("2" (CASE "eval_rel(peq)(polylist((: 1 :))(x), 0) = FALSE") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (GRIND) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth_len1-1| |nil| 3770473169 ("" (SKEEP) (("" (SKEEP) (("" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "append") (("1" (EXPAND "nth") (("1" (EXPAND "append") (("1" (CASE "cons(1, (: :)) = (: 1 :)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (CASE "eval_rel(rel(p))(car(plist(p)), r(p))") (("1" (ASSERT) (("1" (CASE "eval_rel(pneq)(polylist((: 1 :))(x), 0) = TRUE") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 1) (("2" (CASE "eval_rel(peq)(polylist((: 1 :))(x), 0) = FALSE") (("1" (REPLACE -1 1) (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|dnf_prel_preserves_truth_len0| 0 (|dnf_prel_preserves_truth_len0-1| |nil| 3770473418 ("" (SKEEP*) (("" (TYPEPRED "d(p)") (("" (ASSERT) (("" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (EXPAND "construct_record") (("1" (REPLACE -4 1) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "polynomial") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "change_function") (("1" (EXPAND "eval_atm") (("1" (EXPAND "polynomial") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "eval_rel") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PREL? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PABS? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|d| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> nat]" |PolyRelExpr_adt| NIL) (|r| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> rat]" |PolyRelExpr_adt| NIL) (|rel| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> TarskiRel]" |PolyRelExpr_adt| NIL) (|pn| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> [nat -> rat]]" |PolyRelExpr_adt| NIL) (PREL ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PREL?)]" |PolyRelExpr_adt| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sigma| DEF-DECL "real" |sigma| |reals|) (|change_function| CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|PolyRelExpr_PREL_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)) SHOSTAK)) (|dnf_prel_preserves_truth| 0 (|dnf_prel_preserves_truth-29| |nil| 3772801740 ("" (SKEEP) (("" (SKEEP) (("" (CASE "d(p) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) > 1") (("1" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (CASE "polynomial(change_function(pn(p), r(p)),
                                         degr_rec(pn(p), d(p)))
                                        (x) = polynomial(change_function(pn(p), r(p)), d(p))(x)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "eval_rel") (("1" (CASE "rel(p) = plt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "rel(p) = ple") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 2) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pgt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (HIDE 1 2) (("1" (CASE "-r(p) > 0 = 0 > r(p)") (("1" (HIDE -2 -3 -4 -5) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3 -4) (("2" (LEMMA "both_sides_plus_lt1") (("2" (INST -1 "0" "-r(p)" "r(p)") (("2" (SIMPLIFY) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -2 -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2 3 4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pge") (("1" (ASSERT) (("1" (HIDE -1 1 2 3) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "change_function") (("1" (CASE "-r(p) >= 0 = 0 >= r(p)") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = peq") (("1" (ASSERT) (("1" (HIDE -1 1 2 3 4) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "change_function") (("1" (HIDE -1 -2 -3) (("1" (CASE "(pn(p)(0) - r(p)) +
                                                                                              x * polynomial(LAMBDA (i: nat): pn(p)(1 + i), d(p) - 1)(x)
                                                                                              = 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pneq") (("1" (ASSERT) (("1" (HIDE -1 1 2 3 4 5) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "change_function") (("1" (CASE "(pn(p)(0) - r(p)) +
                                           x * polynomial(LAMBDA (i: nat): pn(p)(1 + i), d(p) - 1)(x)
                                           = 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2 3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2 3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3) (("2" (LEMMA "degr_rec_lemma") (("2" (INST -1 "change_function(pn(p), r(p))" "d(p)" "x") (("2" (CASE "degr_rec(change_function(pn(p), r(p)), d(p)) = degr_rec(pn(p), d(p))") (("1" (REPLACE -1 -2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2 -1) (("2" (LEMMA "degr_rec_change_function") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|dnf_prel_preserves_truth_len0| FORMULA-DECL NIL |dnf_polynomials| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (PREL ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PREL?)]" |PolyRelExpr_adt| NIL) (|pn| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> [nat -> rat]]" |PolyRelExpr_adt| NIL) (|rel| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> TarskiRel]" |PolyRelExpr_adt| NIL) (|r| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> rat]" |PolyRelExpr_adt| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|degr_rec_lemma| FORMULA-DECL NIL |dnf_polynomials| NIL) (|degr_rec_change_function| FORMULA-DECL NIL |dnf_polynomials| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|pgt| ADT-CONSTRUCTOR-DECL "(pgt?)" |poly_system_strategy| NIL) (|pgt?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|both_sides_plus_lt1| FORMULA-DECL NIL |real_props| NIL) (|peq| ADT-CONSTRUCTOR-DECL "(peq?)" |poly_system_strategy| NIL) (|peq?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|pneq?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|pneq| ADT-CONSTRUCTOR-DECL "(pneq?)" |poly_system_strategy| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|pge?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|pge| ADT-CONSTRUCTOR-DECL "(pge?)" |poly_system_strategy| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|ple?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|ple| ADT-CONSTRUCTOR-DECL "(ple?)" |poly_system_strategy| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|polynomial_eq_a0_plus| FORMULA-DECL NIL |polynomials| |reals|) (|plt?| ADT-RECOGNIZER-DECL "[TarskiRel -> boolean]" |poly_system_strategy| NIL) (|plt| ADT-CONSTRUCTOR-DECL "(plt?)" |poly_system_strategy| NIL) (|sequence| TYPE-EQ-DECL NIL |sequences| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|change_function| CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (<= CONST-DECL "bool" |reals| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|PolyRelExpr_PREL_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|p| SKOLEM-CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (> CONST-DECL "bool" |reals| NIL) (|dnf_prel_preserves_truth_len1| FORMULA-DECL NIL |dnf_polynomials| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PREL? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PABS? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|d| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> nat]" |PolyRelExpr_adt| NIL)) NIL) (|dnf_prel_preserves_truth-28| |nil| 3772790342 ("" (SKEEP) (("" (SKEEP) (("" (CASE "d(p) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) > 1") (("1" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (CASE "polynomial(change_function(pn(p), r(p)),
                          degr_rec(pn(p), d(p)))
                         (x) = polynomial(change_function(pn(p), r(p)), d(p))(x)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-27| |nil| 3772790208 ("" (SKEEP) (("" (SKEEP) (("" (CASE "d(p) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) > 1") (("1" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_rel") (("1" (CASE "rel(p) = plt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "rel(p) = ple") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 2) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pgt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (HIDE 1 2) (("1" (CASE "-r(p) > 0 = 0 > r(p)") (("1" (HIDE -2 -3 -4 -5) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3 -4) (("2" (LEMMA "both_sides_plus_lt1") (("2" (INST -1 "0" "-r(p)" "r(p)") (("2" (SIMPLIFY) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -2 -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2 3 4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pge") (("1" (ASSERT) (("1" (HIDE -1 1 2 3) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "change_function") (("1" (CASE "-r(p) >= 0 = 0 >= r(p)") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = peq") (("1" (ASSERT) (("1" (HIDE -1 1 2 3 4) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "change_function") (("1" (HIDE -1 -2 -3) (("1" (CASE "(pn(p)(0) - r(p)) +
                                    x * polynomial(LAMBDA (i: nat): pn(p)(1 + i), d(p) - 1)(x)
                                    = 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pneq") (("1" (ASSERT) (("1" (HIDE -1 1 2 3 4 5) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (HIDE -1 -2) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (HIDE -1 -2 -4 2 3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2 3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-26| |nil| 3772789878 ("" (SKEEP) (("" (SKEEP) (("" (CASE "d(p) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) > 1") (("1" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_rel") (("1" (CASE "rel(p) = plt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "rel(p) = ple") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 2) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pgt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (HIDE 1 2) (("1" (CASE "-r(p) > 0 = 0 > r(p)") (("1" (HIDE -2 -3 -4 -5) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3 -4) (("2" (LEMMA "both_sides_plus_lt1") (("2" (INST -1 "0" "-r(p)" "r(p)") (("2" (SIMPLIFY) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -2 -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2 3 4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pge") (("1" (ASSERT) (("1" (HIDE -1 1 2 3) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "change_function") (("1" (CASE "-r(p) >= 0 = 0 >= r(p)") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = peq") (("1" (ASSERT) (("1" (HIDE -1 1 2 3 4) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "change_function") (("1" (HIDE -1 -2 -3) (("1" (CASE "(pn(p)(0) - r(p)) +
       x * polynomial(LAMBDA (i: nat): pn(p)(1 + i), d(p) - 1)(x)
       = 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pneq") (("1" (ASSERT) (("1" (HIDE -1 1 2 3 4) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (HIDE -1 -2) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (HIDE -1 -2 -4 2 3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2 3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-25| |nil| 3772789681 ("" (SKEEP) (("" (SKEEP) (("" (CASE "d(p) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) > 1") (("1" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_rel") (("1" (CASE "rel(p) = plt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "rel(p) = ple") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 2) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pgt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (HIDE 1 2) (("1" (CASE "-r(p) > 0 = 0 > r(p)") (("1" (HIDE -2 -3 -4 -5) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3 -4) (("2" (LEMMA "both_sides_plus_lt1") (("2" (INST -1 "0" "-r(p)" "r(p)") (("2" (SIMPLIFY) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -2 -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2 3 4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pge") (("1" (ASSERT) (("1" (HIDE -1 1 2 3) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "change_function") (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = peq") (("1" (ASSERT) (("1" (HIDE -1 1 2 3 4) (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pneq") (("1" (ASSERT) (("1" (HIDE -1 1 2 3 4) (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-24| |nil| 3772789630 ("" (SKEEP) (("" (SKEEP) (("" (CASE "d(p) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "d(p) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "d(p) > 1") (("1" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_rel") (("1" (CASE "rel(p) = plt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL))))))) ("2" (HIDE 2) (("2" (ASSERT) NIL))))))))))))) ("2" (ASSERT) NIL))))))))) ("2" (ASSERT) (("2" (CASE "rel(p) = ple") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 2) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL))) ("2" (GRIND) NIL))))))))) ("2" (ASSERT) NIL))))))))) ("2" (CASE "rel(p) = pgt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (HIDE 1 2) (("1" (CASE "-r(p) > 0 = 0 > r(p)") (("1" (HIDE -2 -3 -4 -5) (("1" (ASSERT) NIL))) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3 -4) (("2" (LEMMA "both_sides_plus_lt1") (("2" (INST -1 "0" "-r(p)" "r(p)") (("2" (SIMPLIFY) (("2" (GROUND) NIL))))))))))))))))))))) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -2 -4) (("2" (ASSERT) NIL))))))))))))))) ("2" (HIDE -1 -2 -4 2 3 4) (("2" (ASSERT) NIL))))))))))) ("2" (CASE "rel(p) = pge") (("1" (ASSERT) (("1" (POSTPONE) NIL))) ("2" (CASE "rel(p) = peq") (("1" (ASSERT) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (POSTPONE) NIL))))))))))))))))))) ("2" (CASE "rel(p) = pneq") (("1" (ASSERT) (("1" (POSTPONE) NIL))) ("2" (ASSERT) NIL))))))))))))))))))))))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (ASSERT) NIL))))) ("3" (ASSERT) NIL)))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-23| |nil| 3772559049 ("" (SKEEP) (("" (SKEEP) (("" (CASE "d(p) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d(p) > 1") (("1" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_rel") (("1" (CASE "rel(p) = plt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "rel(p) = ple") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 2) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (EXPAND "change_function") (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pgt") (("1" (ASSERT) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST?) (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (LEMMA "polynomial_eq_a0_plus") (("1" (INST -1 "pn(p)" "d(p)" "x") (("1" (SPLIT -1) (("1" (REPLACE -1 3) (("1" (HIDE -1) (("1" (EXPAND "change_function") (("1" (HIDE 1 2) (("1" (CASE "-r(p) > 0 = 0 > r(p)") (("1" (HIDE -2 -3 -4 -5) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3 -4) (("2" (LEMMA "both_sides_plus_lt1") (("2" (INST -1 "0" "-r(p)" "r(p)") (("2" (SIMPLIFY) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -2 -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 2 3 4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "rel(p) = pge") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (CASE "rel(p) = peq") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (CASE "rel(p) = pneq") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-22| |nil| 3770484430 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                                                                     cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                                                                                               cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): FORALL(a,b: rat): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                                                                                                                                                                                                                                                                                 (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                                                                                                                                                                a - b)
                                                                                                                                                                                                                                                                                                                                                                               (x),
                                                                                                                                                                                                                                                                                                                                                                  0)
                                                                                                                                                                                                                                                                                                                                                          =
                                                                                                                                                                                                                                                                                                                                                          eval_rel(rel(p))
                                                                                                                                                                                                                                                                                                                                                                  (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                                                                                                                                                                 a)
                                                                                                                                                                                                                                                                                                                                                                                (x),
                                                                                                                                                                                                                                                                                                                                                                   b)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "length(cons2_var) = 1") (("1" (EXPAND "eval_polylist") (("1" (GRIND) (("1" (HIDE -1 -2 -4 -5 -6) (("1" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("1" (INST -1 "rel(p)" "car(cons2_var) * x + a" "b") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 -5 -6) (("2" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("2" (INST -1 "rel(p)" "car(cons2_var) * x + a" "b") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 1") (("1" (EXPAND "eval_polylist" 2) (("1" (CASE "null?(cdr(cons2_var))") (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 1 2) (("2" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("2" (HIDE -2 -3 -4 -5 -6 -7 -8) (("2" (LEMMA EVAL_POLYLIST_REMOVE_ACC) (("2" (INST?) (("2" (REPLACE -1 1) (("2" (HIDE -1) (("2" (LEMMA EVAL_POLYLIST_REMOVE_ACC) (("2" (INST -1 "car(cons2_var) *
                                                                                                                                   x ^
                                                                                                                                    (length(cons(cons1_var, cons2_var)) -
                                                                                                                                      length(cons2_var))
                                                                                                                                   + a" "cdr(cons2_var)" "x" "length(cons2_var) - 1") (("1" (HIDE -1) (("1" (INST -1 "rel(p)" "eval_polylist(cdr(cons2_var), length(cons2_var) - 1, 0)(x)
                                                                                                                       +
                                                                                                                       (car(cons2_var) *
                                                                                                                         x ^
                                                                                                                          (length(cons(cons1_var, cons2_var)) -
                                                                                                                            length(cons2_var))
                                                                                                                         + a)" "b") (("1" (ASSERT) (("1" (GROUND) (("1" (LEMMA EVAL_POLYLIST_REMOVE_ACC) (("1" (INST -1 "car(cons2_var) * x ^ (length(cons(cons1_var, cons2_var)) -
                                  length(cons2_var)) + a" "cdr(cons2_var)" "x" "length(cons(cons1_var, cons2_var)) - 1") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3) (("1" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("1" (INST -1 "rel(p)" "eval_polylist(cdr(cons2_var),
                              length(cons(cons1_var, cons2_var)) - 1, 0)
                             (x)
                 +
                 (car(cons2_var) *
                   x ^
                    (length(cons(cons1_var, cons2_var)) -
                      length(cons2_var))
                   + a)" "b") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 1 2) (("2" (LEMMA EVAL_POLYLIST_REMOVE_ACC) (("2" (INST -1 "car(cons2_var) * x ^ (length(cons(cons1_var, cons2_var)) -
                                  length(cons2_var)) + a" "cdr(cons2_var)" "x" "length(cons(cons1_var, cons2_var)) - 1") (("2" (REPLACE -1 1) (("2" (HIDE -1) (("2" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("2" (INST -1 "rel(p)" "eval_polylist(cdr(cons2_var),
                              length(cons(cons1_var, cons2_var)) - 1, 0)
                             (x)
                 +
                 (car(cons2_var) *
                   x ^
                    (length(cons(cons1_var, cons2_var)) -
                      length(cons2_var))
                   + a)" "b") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 3) (("3" (TYPEPRED "cons2_var") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-21| |nil| 3770484245 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                                       cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                                                             cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): FORALL(a,b: rat): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                                                                                                                                                                                                                           (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                                                                                                          a - b)
                                                                                                                                                                                                                                                                                                                         (x),
                                                                                                                                                                                                                                                                                                            0)
                                                                                                                                                                                                                                                                                                    =
                                                                                                                                                                                                                                                                                                    eval_rel(rel(p))
                                                                                                                                                                                                                                                                                                            (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                                                                                                           a)
                                                                                                                                                                                                                                                                                                                          (x),
                                                                                                                                                                                                                                                                                                             b)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "length(cons2_var) = 1") (("1" (EXPAND "eval_polylist") (("1" (GRIND) (("1" (HIDE -1 -2 -4 -5 -6) (("1" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("1" (INST -1 "rel(p)" "car(cons2_var) * x + a" "b") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 -5 -6) (("2" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("2" (INST -1 "rel(p)" "car(cons2_var) * x + a" "b") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 1") (("1" (EXPAND "eval_polylist" 2) (("1" (CASE "null?(cdr(cons2_var))") (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 1 2) (("2" (CASE "length(cons(cons1_var, cons2_var)) - 1 = length(cons2_var) -1") (("1" (REPLACE -1 1) (("1" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("1" (HIDE -2 -3 -4 -5 -6 -7 -8) (("1" (LEMMA EVAL_POLYLIST_REMOVE_ACC) (("1" (INST?) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA EVAL_POLYLIST_REMOVE_ACC) (("1" (INST -1 "car(cons2_var) *
                                                                 x ^
                                                                  (length(cons(cons1_var, cons2_var)) -
                                                                    length(cons2_var))
                                                                 + a" "cdr(cons2_var)" "x" "length(cons2_var) - 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (INST -1 "rel(p)" "eval_polylist(cdr(cons2_var), length(cons2_var) - 1, 0)(x)
                                                   +
                                                   (car(cons2_var) *
                                                     x ^
                                                      (length(cons(cons1_var, cons2_var)) -
                                                        length(cons2_var))
                                                     + a)" "b") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2 3) (("3" (TYPEPRED "cons2_var") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-20| |nil| 3770483859 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                                                      cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                                                                              cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-19| |nil| 3770482754 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                        cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                                            cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): FORALL(a,b: rat): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                                                                                                                                                                                                (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                                                                               a - b)
                                                                                                                                                                                                                                                                                              (x),
                                                                                                                                                                                                                                                                                 0)
                                                                                                                                                                                                                                                                         =
                                                                                                                                                                                                                                                                         eval_rel(rel(p))
                                                                                                                                                                                                                                                                                 (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                                                                                a)
                                                                                                                                                                                                                                                                                               (x),
                                                                                                                                                                                                                                                                                  b)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "length(cons2_var) = 1") (("1" (EXPAND "eval_polylist") (("1" (GRIND) (("1" (HIDE -1 -2 -4 -5 -6) (("1" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("1" (INST -1 "rel(p)" "car(cons2_var) * x + a" "b") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 -5 -6) (("2" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("2" (INST -1 "rel(p)" "car(cons2_var) * x + a" "b") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 1") (("1" (EXPAND "eval_polylist" 2) (("1" (CASE "null?(cdr(cons2_var))") (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 1 2) (("2" (CASE "length(cons(cons1_var, cons2_var)) - 1 = length(cons2_var) -1") (("1" (REPLACE -1 1) (("1" (LEMMA EVAL_REL_PRESERVES_TRUTH) (("1" (HIDE -2 -3 -4 -5 -6 -7 -8) (("1" (LEMMA EVAL_POLYLIST_REMOVE_ACC) (("1" (INST?) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA EVAL_POLYLIST_REMOVE_ACC) (("1" (INST -1 "car(cons2_var) *
                               x ^
                                (length(cons(cons1_var, cons2_var)) -
                                  length(cons2_var))
                               + a" "cdr(cons2_var)" "x" "length(cons2_var) - 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (INST -1 "rel(p)" "eval_polylist(cdr(cons2_var), length(cons2_var) - 1, 0)(x)
                 +
                 (car(cons2_var) *
                   x ^
                    (length(cons(cons1_var, cons2_var)) -
                      length(cons2_var))
                   + a)" "b") (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-18| |nil| 3770482404 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                         cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                                           cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): FORALL(k: rat): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                                                                                                                                                                     (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                                                    car(pl) - k)
                                                                                                                                                                                                                                                                   (x),
                                                                                                                                                                                                                                                      0)
                                                                                                                                                                                                                                              =
                                                                                                                                                                                                                                              eval_rel(rel(p))
                                                                                                                                                                                                                                                      (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                                                     car(pl))
                                                                                                                                                                                                                                                                    (x),
                                                                                                                                                                                                                                                       k)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "length(cons2_var) = 1") (("1" (EXPAND "eval_polylist") (("1" (GRIND) (("1" (HIDE -1 -2 -4 -5 -6) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (HIDE -1 -2 -4 -5 -6) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 1") (("1" (EXPAND "eval_polylist" 2) (("1" (CASE "null?(cdr(cons2_var))") (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (POSTPONE) NIL NIL)) NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-17| |nil| 3770482340 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                          cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                                          cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): FORALL(k: real): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                                                                                                                                          (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                         car(pl) - k)
                                                                                                                                                                                                                                        (x),
                                                                                                                                                                                                                           0)
                                                                                                                                                                                                                   =
                                                                                                                                                                                                                   eval_rel(rel(p))
                                                                                                                                                                                                                           (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                                                          car(pl))
                                                                                                                                                                                                                                         (x),
                                                                                                                                                                                                                            k)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) (("3" (TYPEPRED "k") (("3" (GRIND) (("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL) ("6" (POSTPONE) NIL NIL)) NIL)) NIL) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) (("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL) ("6" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-16| |nil| 3770481639 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                           cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                                         cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL))) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                                                                                                               (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                              car(pl) - r(p))
                                                                                                                                                                                                             (x),
                                                                                                                                                                                                0)
                                                                                                                                                                                        =
                                                                                                                                                                                        eval_rel(rel(p))
                                                                                                                                                                                                (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                                               car(pl))
                                                                                                                                                                                                              (x),
                                                                                                                                                                                                 r(p))") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL))))) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL))) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL))))))))) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))) ("3" (HIDE 2) (("3" (GRIND) NIL))) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL))))))))) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL))))))))))))))))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (ASSERT) NIL))))) ("3" (ASSERT) NIL)))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-15| |nil| 3770481603 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (ASSERT) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                            cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                                        cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL))) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                                                                                    (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                   car(pl) - r(p))
                                                                                                                                                                                  (x),
                                                                                                                                                                     0)
                                                                                                                                                             =
                                                                                                                                                             eval_rel(rel(p))
                                                                                                                                                                     (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                                                    car(pl))
                                                                                                                                                                                   (x),
                                                                                                                                                                      r(p))") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL))))) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL))) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL))))))))) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))) ("3" (HIDE 2) (("3" (GRIND) NIL))) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL))))))))) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL))))))))))))))))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (ASSERT) NIL))))) ("3" (ASSERT) NIL)))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-14| |nil| 3770481526 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                                             cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                                       cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL))) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                                                         (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                        car(pl) - r(p))
                                                                                                                                                       (x),
                                                                                                                                          0)
                                                                                                                                  =
                                                                                                                                  eval_rel(rel(p))
                                                                                                                                          (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                                                         car(pl))
                                                                                                                                                        (x),
                                                                                                                                           r(p))") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL))))) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL))) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL))))))))) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))) ("3" (HIDE 2) (("3" (GRIND) NIL))) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL))))))))) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL))))))))))))))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (ASSERT) NIL))))) ("3" (ASSERT) NIL)))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-13| |nil| 3770481368 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                                              cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                                      cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL))) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                                              (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                             car(pl) - r(p))
                                                                                                                            (x),
                                                                                                               0)
                                                                                                       =
                                                                                                       eval_rel(rel(p))
                                                                                                               (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                                              car(pl))
                                                                                                                             (x),
                                                                                                                r(p))") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL))))) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL))) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL))))))))) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))) ("3" (HIDE 2) (("3" (GRIND) NIL))) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL))))))))) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL))))))))))))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (ASSERT) NIL))))) ("3" (ASSERT) NIL)))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-12| |nil| 3770480746 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (CASE " length(plist(p)) > 1") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                                               cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                                                     cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL))) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                                                                   (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                  car(pl) - r(p))
                                                                                                 (x),
                                                                                    0)
                                                                            =
                                                                            eval_rel(rel(p))
                                                                                    (eval_polylist(cdr(pl), length(pl) - 1,
                                                                                                   car(pl))
                                                                                                  (x),
                                                                                     r(p))") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL))))) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL))) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL))))))))) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL))))) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL))))) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL))))))))))))))))) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))) ("3" (HIDE 2) (("3" (GRIND) NIL))) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL))))))))) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL))))))))))))))))))))))))))))))))))) ("2" (APPLY-EXTENSIONALITY) NIL))) ("2" (ASSERT) NIL))))) ("3" (ASSERT) NIL)))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-11| |nil| 3770474623 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (REPLACE -1 1) (("1" (HIDE -3) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (ASSERT) (("1" (CASE "FORALL (pl: list[rat]): length(pl) > 1 IMPLIES eval((: (: construct_record(pl, rel(p), r(p)) :) :))(x) =
       eval(PREL(pl, rel(p), r(p)))(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (INDUCT "pl") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (CASE "length(cons2_var) = 0") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (CASE "length(cons2_var) = 1") (("1" (HIDE 1 -2) (("1" (HIDE -2) (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (CASE "length(cons2_var) > 1") (("1" (ASSERT) (("1" (HIDE 1 2) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (CASE "nth(cons(cons1_var, cons2_var), 0) = cons1_var") (("1" (REPLACE -1 1) (("1" (EXPAND "polylist" 1) (("1" (EXPAND "eval_polylist" 1) (("1" (CASE "length(cons(cons1_var, cons2_var)) - 1 = length(cons2_var)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (HIDE -2) (("1" (CASE "car(append((: cons1_var - r(p) :), cons2_var)) = cons1_var - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "cdr(append
                                      ((: cons1_var - r(p) :), cons2_var)) = cons2_var") (("1" (REPLACE -1 1) (("1" (CASE "length(append
                                         ((: cons1_var - r(p) :),
                                          cons2_var))
                                   - 1 = length(cons2_var)") (("1" (REPLACE -1 1) (("1" (CASE "null?(cons2_var)") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 1) (("2" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (SIMPLIFY) (("1" (HIDE -1 -2 -3) (("1" (HIDE -1 -2) (("1" (EXPAND "polylist" -1) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "append") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "append") (("2" (EXPAND "append") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "append") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (ASSERT) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "nth") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2 3 4) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-10| |nil| 3770474503 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) > 1") (("1" (POSTPONE) NIL) ("2" (ASSERT) NIL))))) ("3" (CASE "p = PREL(plist(p),rel(p),r(p))") (("3" (EXPAND "nnf") (("3" (EXPAND "distribute_ands") (("3" (EXPAND "construct_dnf") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval_atm_list") (("3" (EXPAND "eval_atm_list") (("3" (EXPAND "eval_atm") (("3" (EXPAND "construct_record") (("3" (EXPAND "polylist") (("3" (EXPAND "eval_polylist") NIL)))))))))))))))))))))))))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-9| |nil| 3770474356 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) > 1") (("1" (POSTPONE) NIL) ("2" (ASSERT) NIL))))) ("3" (EXPAND "nnf") (("3" (EXPAND "distribute_ands") (("3" (EXPAND "construct_dnf") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval_atm_list") (("3" (EXPAND "eval_atm_list") (("3" (EXPAND "eval_atm") (("3" (EXPAND "construct_record") (("3" (EXPAND "polylist") (("3" (EXPAND "eval_polylist") NIL)))))))))))))))))))))))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-8| |nil| 3770474239 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (POSTPONE) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (EXPAND "nnf") (("3" (EXPAND "distribute_ands") (("3" (EXPAND "construct_dnf") (("3" (CASE " length(plist(p)) > 1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-7| |nil| 3770474194 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL) ("3" (PROPAX) NIL))))))) ("2" (CASE "length(plist(p)) > 1") (("1" (POSTPONE) NIL) ("2" (ASSERT) NIL))))) ("3" (POSTPONE) NIL)))))) NIL) NIL NIL) (|dnf_prel_preserves_truth-6| |nil| 3770473991 ("" (SKEEP) (("" (SKEEP) (("" (CASE "length(plist(p)) = 1") (("1" (LEMMA "dnf_prel_preserves_truth_len1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) = 0") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN0) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "length(plist(p)) > 1") (("1" (POSTPONE) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-5| |nil| 3770473855 ("" (SKEEP) (("" (SKEEP) (("" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE -2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (CASE " length(plist(p)) > 1") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                                         cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                                           cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): length(pl) > 1 IMPLIES eval_rel(rel(p))
                                     (eval_polylist(cdr(pl), length(pl) - 1,
                                                    car(pl) - r(p))
                                                   (x),
                                      0)
                              =
                              eval_rel(rel(p))
                                      (eval_polylist(cdr(pl), length(pl) - 1,
                                                     car(pl))
                                                    (x),
                                       r(p))") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "length(plist(p)) = 1") (("1" (LEMMA DNF_PREL_PRESERVES_TRUTH_LEN1) (("1" (INST?) (("1" (INST -1 "x") (("1" (SPLIT) (("1" (ASSERT) (("1" (REPLACE -3 -1) (("1" (EXPAND "nnf" -1) (("1" (EXPAND "distribute_ands") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-4| |nil| 3770472259 ("" (SKEEP) (("" (SKEEP) (("" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE -2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (CASE " length(plist(p)) > 1") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                              cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                              cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (CASE "null?(cdr(plist(p))) ") (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE "FORALL (pl: list[rat]): length(pl) > 1 IMPLIES eval_rel(rel(p))
              (eval_polylist(cdr(pl), length(pl) - 1,
                             car(pl) - r(p))
                            (x),
               0)
       =
       eval_rel(rel(p))
               (eval_polylist(cdr(pl), length(pl) - 1,
                              car(pl))
                             (x),
                r(p))") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (INDUCT "pl") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (POSTPONE) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2 3) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE 2 3) (("4" (SKEEP) (("4" (GRIND) NIL NIL)) NIL)) NIL) ("5" (HIDE 2 3) (("5" (SKEEP) (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length( plist(p)) = 1") (("1" (ASSERT) (("1" (HIDE 1) (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "append") (("1" (EXPAND "nth") (("1" (EXPAND "append") (("1" (CASE "cons(1, (: :)) = (: 1 :)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (CASE "eval_rel(rel(p))(car(plist(p)), r(p))") (("1" (ASSERT) (("1" (CASE "eval_rel(pneq)(polylist((: 1 :))(x), 0) = TRUE") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 1) (("2" (CASE "eval_rel(peq)(polylist((: 1 :))(x), 0) = FALSE") (("1" (REPLACE -1 1) (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "length(plist(p)) = 0") (("1" (CASE "plist(p) = null") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_atm_list") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 2 3 4) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-3| |nil| 3770471358 ("" (SKEEP) (("" (SKEEP) (("" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (CASE "FORALL (pl:list[rat]): eval(construct_dnf(PREL(pl, rel(p), r(p))))(x) =
                         eval(PREL(pl, rel(p), r(p)))(x)") (("1" (INST?) (("1" (EXPAND "construct_dnf") (("1" (EXPAND "construct_dnf_bool") (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (SKEEP) (("3" (EXPAND "has_special_form") (("3" (PROPAX) NIL NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (TYPEPRED "pl") (("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-2| |nil| 3770469407 ("" (SKEEP) (("" (SKEEP) (("" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE -2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (CASE " length(plist(p)) > 1") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (CASE "cdr(append((: nth(plist(p), 0) - r(p) :),
                                   cdr(plist(p)))) = cdr(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "car(append((: nth(plist(p), 0) - r(p) :),
                                 cdr(plist(p)))) = nth(plist(p), 0) - r(p)") (("1" (REPLACE -1 1) (("1" (CASE "nth(plist(p), 0) = car(plist(p))") (("1" (REPLACE -1 1) (("1" (CASE "length(append((: car(plist(p)) - r(p) :),cdr(plist(p)))) = length(plist(p))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2 -3 -4) (("1" (CASE "x^0 = 1") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SIMPLIFY) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (EXPAND "length") (("2" (EXPAND "append") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (TYPEPRED "plist(p)") (("4" (GRIND) (("4" (TYPEPRED "cdr(cdr(plist(p)))") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (TYPEPRED "plist(p)") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length( plist(p)) = 1") (("1" (ASSERT) (("1" (HIDE 1) (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "append") (("1" (EXPAND "nth") (("1" (EXPAND "append") (("1" (CASE "cons(1, (: :)) = (: 1 :)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (CASE "eval_rel(rel(p))(car(plist(p)), r(p))") (("1" (ASSERT) (("1" (CASE "eval_rel(pneq)(polylist((: 1 :))(x), 0) = TRUE") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 1) (("2" (CASE "eval_rel(peq)(polylist((: 1 :))(x), 0) = FALSE") (("1" (REPLACE -1 1) (("1" (EXPAND "polylist") (("1" (EXPAND "eval_polylist") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "eval_rel") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "length(plist(p)) = 0") (("1" (CASE "plist(p) = null") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_atm_list") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 2 3 4) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_prel_preserves_truth-1| |nil| 3770468814 ("" (SKEEP) (("" (SKEEP) (("" (CASE "p = PREL(plist(p),rel(p),r(p))") (("1" (HIDE -2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf") (("1" (EXPAND "distribute_ands") (("1" (EXPAND "construct_dnf") (("1" (CASE " length(plist(p)) > 1") (("1" (ASSERT) (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (CASE "rel(p) = plt OR rel(p) = ple OR rel(p) = pgt OR rel(p) = pge OR rel(p) = peq OR rel(p) = pneq") (("1" (POSTPONE) NIL NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "length( plist(p)) = 1") (("1" (ASSERT) (("1" (HIDE 1) (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "length(plist(p)) = 0") (("1" (CASE "plist(p) = null") (("1" (HIDE 1 2) (("1" (REPLACE -1 1) (("1" (EXPAND "construct_dnf_bool") (("1" (EXPAND "eval") (("1" (EXPAND "eval") (("1" (EXPAND "eval_atm_list") (("1" (EXPAND "eval_atm") (("1" (EXPAND "construct_record") (("1" (EXPAND "eval_atm_list") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 2 3 4) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|dnf_prel_preserves_truth2_TCC1| 0 (|dnf_prel_preserves_truth2_TCC1-1| |nil| 3770485855 ("" (GRIND) NIL NIL) ((|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL)) NIL (|dnf_prel_preserves_truth2| SUBTYPE "dnf_polynomials.p" "NNF_expr"))) (|dnf_prel_preserves_truth2| 0 (|dnf_prel_preserves_truth2-1| |nil| 3770485856 ("" (SKEEP*) (("" (CASE "eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (CASE "p = PREL(pn(p),d(p),rel(p),r(p))") (("1" (REPLACE -1 -2) (("1" (REPLACE -1 1) (("1" (EXPAND "nnf" -2) (("1" (EXPAND "distribute_ands" -2) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA DNF_PREL_PRESERVES_TRUTH) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|p| SKOLEM-CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|PolyRelExpr_PREL_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (PREL? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PREL ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PREL?)]" |PolyRelExpr_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PABS? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|pn| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> [nat -> rat]]" |PolyRelExpr_adt| NIL) (|d| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> nat]" |PolyRelExpr_adt| NIL) (|rel| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> TarskiRel]" |PolyRelExpr_adt| NIL) (|r| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr | PREL?(x) OR PABS?(x)} -> rat]" |PolyRelExpr_adt| NIL) (|dnf_prel_preserves_truth| FORMULA-DECL NIL |dnf_polynomials| NIL) (|nnf_has_special_form| FORMULA-DECL NIL |dnf_polynomials| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)) SHOSTAK)) (|dnf_special_form| 0 (|dnf_special_form-2| |nil| 3770546399 ("" (SKEEP) (("" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("" (INST?) (("" (INST -1 "nnf(p)") (("" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (CASE "distribute_ands(nnf(p)) = PAND(pe1(distribute_ands(nnf(p))), pe2(distribute_ands(nnf(p))))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "pull_out_conjunctions") (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|distrib_ands_special_form| FORMULA-DECL NIL |dnf_polynomials| NIL) (|PolyRelExpr_PAND_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|p| SKOLEM-CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|pe2| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr |
         PAND?(x) OR POR?(x) OR PIMPLIES?(x) OR PIFF?(x) OR PWHEN?(x)
     OR PITE?(x)} ->
   PolyRelExpr]" |PolyRelExpr_adt| NIL) (|pe1| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr |
         PAND?(x) OR POR?(x) OR PIMPLIES?(x) OR PIFF?(x) OR PWHEN?(x)
     OR PITE?(x)} ->
   PolyRelExpr]" |PolyRelExpr_adt| NIL) (PITE? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PWHEN? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PIFF? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PIMPLIES? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (POR? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PAND ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PAND?)]" |PolyRelExpr_adt| NIL) (PAND? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) NIL) (|dnf_special_form-1| |nil| 3770545022 ("" (SKEEP) (("" (CASE "has_no_ors(distribute_ands(nnf(p)))") (("1" (CASE "distribute_ands(nnf(p)) = PAND(pe1(distribute_ands(nnf(p))), pe2(distribute_ands(nnf(p))))") (("1" (REPLACE -1 -2) (("1" (EXPAND "has_no_ors" -2) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("2" (INST?) (("2" (INST -1 "nnf(p)") (("2" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (CASE "distribute_ands(nnf(p)) = PAND(pe1(distribute_ands(nnf(p))), pe2(distribute_ands(nnf(p))))") (("1" (REPLACE -1 1) (("1" (HIDE -1 -2) (("1" (EXPAND "pull_out_conjunctions") (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|construct_dnf_length| 0 (|construct_dnf_length-1| |nil| 3770548295 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) (("6" (GRIND) (("6" (EXPAND "append") (("6" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)) NIL) ((|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|construct_dnf_bool| CONST-DECL "DNF" |dnf_polynomials| NIL) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) SHOSTAK)) (|construct_dnf_car_length_TCC1| 0 (|construct_dnf_car_length_TCC1-1| |nil| 3770548762 ("" (LEMMA "construct_dnf_length") (("" (SKEEP) (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|length| DEF-DECL "nat" |list_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|construct_dnf_length| FORMULA-DECL NIL |dnf_polynomials| NIL)) NIL (|construct_dnf_car_length| SUBTYPE "dnf_polynomials.construct_dnf(dnf_polynomials.p)" "(list_adt[list[DNF_Atom]].cons?)"))) (|construct_dnf_car_length| 0 (|construct_dnf_car_length-1| |nil| 3770548763 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) (("5" (EXPAND "append") (("5" (GRIND) NIL NIL)) NIL)) NIL) ("6" (GRIND) (("6" (EXPAND "append") (("6" (GRIND) NIL NIL)) NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL) ("12" (GRIND) (("12" (LEMMA CONSTRUCT_DNF_LENGTH) (("12" (INST?) (("12" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|construct_dnf_length| FORMULA-DECL NIL |dnf_polynomials| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|construct_dnf_bool| CONST-DECL "DNF" |dnf_polynomials| NIL) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)) SHOSTAK)) (|has_no_ors_prop_TCC1| 0 (|has_no_ors_prop_TCC2-1| |nil| 3770547673 ("" (SKEEP) (("" (LEMMA "construct_dnf_length") (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|construct_dnf_length| FORMULA-DECL NIL |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) NIL (|has_no_ors_prop| SUBTYPE "dnf_polynomials.construct_dnf(dnf_polynomials.p)" "(list_adt[list[DNF_Atom]].cons?)"))) (|has_no_ors_prop| 0 (|has_no_ors_prop-1| |nil| 3770547674 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (ASSERT) (("4" (EXPAND "construct_dnf" 1) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL) ("11" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|sigma| DEF-DECL "real" |sigma| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|change_function| CONST-DECL "[nat -> rat]" |dnf_polynomials| NIL) (|construct_dnf_bool| CONST-DECL "DNF" |dnf_polynomials| NIL) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|has_no_ors| DEF-DECL "bool" |dnf_polynomials| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL) (|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)) SHOSTAK)) (|eval_atm_list_truth| 0 (|eval_atm_list_truth-1| |nil| 3770549775 ("" (INDUCT "lst") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (INST -1 "x") (("2" (CASE " eval_atm_list(cons(cons1_var, cons2_var))(x) = (eval_atm(cons1_var)(x) AND eval_atm_list(cons2_var)(x))") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (ASSERT) (("1" (SKEEP) (("1" (TYPEPRED "i") (("1" (CASE "i = 0") (("1" (REPLACE -1 1) (("1" (EXPAND "nth") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (CASE "i > 0") (("1" (HIDE -2 1) (("1" (INST -5 "i - 1") (("1" (SPLIT -5) (("1" (EXPAND "nth" 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "length" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SPLIT 1) (("1" (INST -1 "0") (("1" (SPLIT -1) (("1" (EXPAND "nth") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -2) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (INST -2 "i+1") (("2" (SPLIT -2) (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|i| SKOLEM-CONST-DECL "nat" |dnf_polynomials| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)) SHOSTAK)) (|eval_atm_list_prop| 0 (|eval_atm_list_prop-1| |nil| 3770548616 ("" (SKEEP) (("" (INDUCT "l1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (INST -1 "l2") (("2" (CASE "eval_atm_list(append(cons(cons1_var, cons2_var), l2))(x) IFF
       (eval_atm(cons1_var)(x) AND eval_atm_list(cons2_var)(x) AND
         eval_atm_list(l2)(x))") (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "append(cons(cons1_var, cons2_var), l2) = cons(cons1_var, append(cons2_var, l2))") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (CASE "eval_atm_list(cons(cons1_var, append(cons2_var, l2)))(x) = (eval_atm(cons1_var)(x) AND eval_atm_list(append(cons2_var, l2))(x))") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (REPLACE -1 1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "append") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|eval_atm| CONST-DECL "bool" |dnf_polynomials| NIL) (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)) SHOSTAK)) (|has_no_ors_dnf_prop| 0 (|has_no_ors_dnf_prop-1| |nil| 3770558138 ("" (INDUCT "p") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL) ((|construct_dnf_bool| CONST-DECL "DNF" |dnf_polynomials| NIL) (|construct_record| CONST-DECL "DNF_Atom" |dnf_polynomials| NIL) (|degr_rec| DEF-DECL "upto(deg)" |dnf_polynomials| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|has_no_ors| DEF-DECL "bool" |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL)) SHOSTAK)) (|construction_lemma_1| 0 (|construction_lemma_1-1| |nil| 3770557319 ("" (SKEEP*) (("" (LEMMA "has_no_ors_dnf_prop") (("" (INST -1 "p1") (("" (CASE "length(construct_dnf(p1)) = 1") (("1" (HIDE -2) (("1" (LEMMA "has_no_ors_dnf_prop") (("1" (INST -1 "p2") (("1" (CASE "length(construct_dnf(p2)) = 1") (("1" (HIDE -2) (("1" (SPLIT 1) (("1" (FLATTEN 1) (("1" (EXPAND "construct_dnf" -1) (("1" (EXPAND "eval" -1) (("1" (EXPAND "eval" -1) (("1" (LEMMA EVAL_ATM_LIST_PROP) (("1" (INST?) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (EXPAND "eval" 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (EXPAND "construct_dnf" 1) (("2" (EXPAND "eval" 1) (("2" (EXPAND "eval" 1) (("2" (LEMMA EVAL_ATM_LIST_PROP) (("2" (INST?) (("2" (REPLACE -1 1) (("2" (HIDE -1) (("2" (EXPAND "eval" -1) (("2" (EXPAND "eval" -2) (("2" (SPLIT 1) (("1" (HIDE -2) (("1" (HIDE -2 -4 -5) (("1" (CASE "cdr(construct_dnf(p1)) = null") (("1" (REPLACE -1 -2) (("1" (EXPAND "eval" -2) (("1" (HIDE -1) (("1" (CASE "null?(construct_dnf(p1))") (("1" (HIDE -2 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (GRIND) (("2" (EXPAND "length") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -4 -5 -6) (("2" (CASE "cdr(construct_dnf(p2)) = null") (("1" (REPLACE -1 -2) (("1" (EXPAND "eval" -2) (("1" (CASE "null?(construct_dnf(p2))") (("1" (HIDE -2 -3 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (EXPAND "length") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "p2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "p1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|has_no_ors_dnf_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|eval_atm_list_prop| FORMULA-DECL NIL |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)) SHOSTAK)) (|construction_lemma_2| 0 (|construction_lemma_2-1| |nil| 3770557509 ("" (INDUCT "d1") (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (INST -1 "d2") (("2" (SKEEP) (("2" (INST -1 "x") (("2" (CASE "append(cons(cons1_var, cons2_var), d2) = cons(cons1_var, append(cons2_var, d2))") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (CASE "eval(cons(cons1_var, append(cons2_var, d2)))(x) = (eval_atm_list(cons1_var)(x) OR eval(append(cons2_var, d2))(x))") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (CASE "eval(cons(cons1_var, cons2_var))(x) = (eval_atm_list(cons1_var)(x) OR eval(cons2_var)(x))") (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "append") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|eval_atm_list| DEF-DECL "bool" |dnf_polynomials| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|DNF_Atom| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL)) SHOSTAK)) (|dnf_preserves_truth| 0 (|dnf_preserves_truth-17| |nil| 3770556017 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                                                                          FORALL (x: real):
                                                                                                            eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): ((has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p))) AND (POR?(p) IMPLIES (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(p)) IMPLIES has_no_ors(q)))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("4" (INST?) (("4" (FLATTEN 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (CASE "((PAND?(PAND2_var) IMPLIES has_no_ors(PAND2_var)) AND
                                  (POR?(PAND2_var) IMPLIES
                                    FORALL (q: NNF_expr):
                                      member(q, pull_out_conjunctions(PAND2_var))
                                       IMPLIES has_no_ors(q)))") (("1" (CASE "eval(construct_dnf(PAND2_var))(x) = eval(PAND2_var)(x)") (("1" (HIDE -4) (("1" (HIDE -2) (("1" (CASE "((PAND?(PAND1_var) IMPLIES has_no_ors(PAND1_var)) AND
                                          (POR?(PAND1_var) IMPLIES
                                            FORALL (q: NNF_expr):
                                              member(q, pull_out_conjunctions(PAND1_var))
                                               IMPLIES has_no_ors(q)))") (("1" (CASE "eval(construct_dnf(PAND1_var))(x) = eval(PAND1_var)(x)") (("1" (HIDE -4 -2) (("1" (LEMMA "construction_lemma_1") (("1" (EXPAND "has_no_ors" -6) (("1" (FLATTEN -6) (("1" (INST?) (("1" (CASE "(eval(construct_dnf(PAND(PAND1_var, PAND2_var)))(x) IFF
         (eval(construct_dnf(PAND1_var))(x) AND
           eval(construct_dnf(PAND2_var))(x)))") (("1" (HIDE -2) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (CASE "eval(PAND(PAND1_var, PAND2_var))(x) = (eval(PAND1_var)(x) AND eval(PAND2_var)(x))") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REPLACE -3 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4 -5 -6 -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT 1) (("1" (HIDE -1 -2 -3 -4) (("1" (EXPAND "has_no_ors" -1) (("1" (FLATTEN -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (HIDE -2) (("2" (EXPAND "has_no_ors" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4 -5 -6) (("2" (HIDE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT 1) (("1" (EXPAND "has_no_ors" -5) (("1" (FLATTEN -5) (("1" (HIDE -1 -2 -3 -4 -5) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (EXPAND "has_no_ors" -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (EXPAND "pull_out_conjunctions" -5) (("5" (CASE "FORALL (q: NNF_expr):
            member(q, pull_out_conjunctions(POR2_var)) IMPLIES
             has_no_ors(q)") (("1" (CASE "FORALL (q: NNF_expr):
            member(q, pull_out_conjunctions(POR1_var)) IMPLIES
             has_no_ors(q)") (("1" (CASE "((PAND?(POR1_var) IMPLIES has_no_ors(POR1_var)) AND
        (POR?(POR1_var) IMPLIES FORALL (q: NNF_expr): member(q, pull_out_conjunctions(POR1_var)) IMPLIES has_no_ors(q)))") (("1" (CASE "eval(construct_dnf(POR1_var))(x) = eval(POR1_var)(x)") (("1" (HIDE -2 -5) (("1" (HIDE -2 -7) (("1" (CASE " ((PAND?(POR2_var) IMPLIES has_no_ors(POR2_var)) AND
        (POR?(POR2_var) IMPLIES
          FORALL (q: NNF_expr):
            member(q, pull_out_conjunctions(POR2_var)) IMPLIES
             has_no_ors(q)))") (("1" (CASE " eval(construct_dnf(POR2_var))(x) = eval(POR2_var)(x)") (("1" (HIDE -4 -5 -2) (("1" (LEMMA CONSTRUCTION_LEMMA_2) (("1" (INST?) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (CASE "eval(POR(POR1_var, POR2_var))(x) = (eval(POR1_var)(x) OR eval(POR2_var)(x))") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -2 -3 -5 -6) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE-ALL-BUT 1) (("2" (REVEAL -2) (("2" (SPLIT 1) (("1" (FLATTEN 1) (("1" (CASE "POR2_var = PAND(pe1(POR2_var), pe2(POR2_var))") (("1" (REPLACE -1 -3) (("1" (INST -3 "POR2_var") (("1" (EXPAND "pull_out_conjunctions" -3) (("1" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) (("2" (REVEAL -2) (("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -2 -3 -5 -6 -7 -8) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT 1) (("1" (HIDE -7) (("1" (HIDE -3 -4 -5 -6) (("1" (HIDE -2) (("1" (FLATTEN 1) (("1" (CASE "POR1_var = PAND(pe1(POR1_var), pe2(POR1_var))") (("1" (REPLACE -1 -3) (("1" (EXPAND "pull_out_conjunctions" -3) (("1" (INST -3 "POR1_var") (("1" (SPLIT -3) (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -5 -6 -7) (("2" (HIDE -3 -4) (("2" (HIDE -2) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3 -4 -5) (("2" (SKEEP) (("2" (INST -2 "q") (("2" (SPLIT -2) (("1" (PROPAX) NIL NIL) ("2" (LEMMA "member_append_l[PolyRelExpr]") (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2 -3 -4) (("2" (SKEEP) (("2" (INST -2 "q") (("2" (SPLIT -2) (("1" (PROPAX) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "member_append_r[PolyRelExpr]") (("2" (INST?) (("2" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ((|PolyRelExpr| TYPE-DECL NIL |PolyRelExpr_adt| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|TarskiRel| TYPE-DECL NIL |poly_system_strategy| NIL) (|DNF_At| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (DNF TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|has_special_form| DEF-DECL "bool" |dnf_polynomials| NIL) (|NNF_expr| TYPE-EQ-DECL NIL |dnf_polynomials| NIL) (|construct_dnf| DEF-DECL "DNF" |dnf_polynomials| NIL) (|distribute_ands| DEF-DECL "NNF_expr" |dnf_polynomials| NIL) (|nnf| DEF-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|eval| DEF-DECL "bool" |dnf_polynomials| NIL) (|distribute_ands_preserves_truth| FORMULA-DECL NIL |dnf_polynomials| NIL) (|nnf_preserves_truth| FORMULA-DECL NIL |dnf_polynomials| NIL) (|pull_out_conjunctions| DEF-DECL "list[NNF_expr]" |dnf_polynomials| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (POR? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|has_no_ors| DEF-DECL "bool" |dnf_polynomials| NIL) (PAND? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|dnf_special_form| FORMULA-DECL NIL |dnf_polynomials| NIL) (|distrib_ands_special_form| FORMULA-DECL NIL |dnf_polynomials| NIL) (|PolyRelExpr_induction| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|dnf_const_preserves_truth_1| FORMULA-DECL NIL |dnf_polynomials| NIL) (PCONST ADT-CONSTRUCTOR-DECL "[bool -> (PCONST?)]" |PolyRelExpr_adt| NIL) (PCONST? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|dnf_prel_preserves_truth2| FORMULA-DECL NIL |dnf_polynomials| NIL) (PREL ADT-CONSTRUCTOR-DECL "[[[nat -> rat], nat, TarskiRel, rat] -> (PREL?)]" |PolyRelExpr_adt| NIL) (PREL? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (|sigma| DEF-DECL "real" |sigma| |reals|) (|polynomial| CONST-DECL "[real -> real]" |polynomials| |reals|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|eval_rel| CONST-DECL "bool" |dnf_polynomials| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|construction_lemma_1| FORMULA-DECL NIL |dnf_polynomials| NIL) (PAND ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (PAND?)]" |PolyRelExpr_adt| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|member_append_r| FORMULA-DECL NIL |more_list_props| |structures|) (|POR1_var| SKOLEM-CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (|PolyRelExpr_PAND_extensionality| FORMULA-DECL NIL |PolyRelExpr_adt| NIL) (|POR2_var| SKOLEM-CONST-DECL "PolyRelExpr" |dnf_polynomials| NIL) (PIMPLIES? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PIFF? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PWHEN? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (PITE? ADT-RECOGNIZER-DECL "[PolyRelExpr -> boolean]" |PolyRelExpr_adt| NIL) (|pe1| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr |
         PAND?(x) OR POR?(x) OR PIMPLIES?(x) OR PIFF?(x) OR PWHEN?(x)
     OR PITE?(x)} ->
   PolyRelExpr]" |PolyRelExpr_adt| NIL) (|pe2| SHARED-ADT-ACCESSOR-DECL "[{x: PolyRelExpr |
         PAND?(x) OR POR?(x) OR PIMPLIES?(x) OR PIFF?(x) OR PWHEN?(x)
     OR PITE?(x)} ->
   PolyRelExpr]" |PolyRelExpr_adt| NIL) (|construction_lemma_2| FORMULA-DECL NIL |dnf_polynomials| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (POR ADT-CONSTRUCTOR-DECL "[[PolyRelExpr, PolyRelExpr] -> (POR?)]" |PolyRelExpr_adt| NIL) (|member_append_l| FORMULA-DECL NIL |more_list_props| |structures|) (|nnf_has_special_form| FORMULA-DECL NIL |dnf_polynomials| NIL) (|dnf| CONST-DECL "DNF" |dnf_polynomials| NIL)) NIL) (|dnf_preserves_truth-16| |nil| 3770555951 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                                                                   FORALL (x: real):
                                                                                                     eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): ((has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p))) AND (POR?(p) IMPLIES (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(p)) IMPLIES has_no_ors(q)))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("4" (INST?) (("4" (FLATTEN 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (CASE "((PAND?(PAND2_var) IMPLIES has_no_ors(PAND2_var)) AND
                     (POR?(PAND2_var) IMPLIES
                       FORALL (q: NNF_expr):
                         member(q, pull_out_conjunctions(distribute_ands(PAND2_var)))
                          IMPLIES has_no_ors(q)))") (("1" (CASE "eval(construct_dnf(PAND2_var))(x) = eval(PAND2_var)(x)") (("1" (HIDE -4) (("1" (HIDE -2) (("1" (CASE "((PAND?(PAND1_var) IMPLIES has_no_ors(PAND1_var)) AND
                         (POR?(PAND1_var) IMPLIES
                           FORALL (q: NNF_expr):
                             member(q, pull_out_conjunctions(distribute_ands(PAND1_var)))
                              IMPLIES has_no_ors(q)))") (("1" (CASE "eval(construct_dnf(PAND1_var))(x) = eval(PAND1_var)(x)") (("1" (HIDE -4 -2) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4 -5 -6 -2) (("2" (ASSERT) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT 1) (("1" (HIDE -1 -2 -3 -4) (("1" (EXPAND "has_no_ors" -1) (("1" (FLATTEN -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (HIDE -2) (("2" (EXPAND "has_no_ors" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4 -5 -6) (("2" (HIDE -2) (("2" (ASSERT) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT 1) (("1" (EXPAND "has_no_ors" -5) (("1" (FLATTEN -5) (("1" (HIDE -1 -2 -3 -4 -5) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (EXPAND "has_no_ors" -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (EXPAND "pull_out_conjunctions" -5) (("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-15| |nil| 3770555185 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                                                            FORALL (x: real):
                                                                                              eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): ((has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p))) AND (POR?(p) IMPLIES (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(distribute_ands(p))) IMPLIES has_no_ors(q)))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("4" (INST?) (("4" (FLATTEN 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (CASE "((PAND?(PAND2_var) IMPLIES has_no_ors(PAND2_var)) AND
        (POR?(PAND2_var) IMPLIES
          FORALL (q: NNF_expr):
            member(q, pull_out_conjunctions(distribute_ands(PAND2_var)))
             IMPLIES has_no_ors(q)))") (("1" (CASE "eval(construct_dnf(PAND2_var))(x) = eval(PAND2_var)(x)") (("1" (HIDE -4) (("1" (HIDE -2) (("1" (CASE "((PAND?(PAND1_var) IMPLIES has_no_ors(PAND1_var)) AND
        (POR?(PAND1_var) IMPLIES
          FORALL (q: NNF_expr):
            member(q, pull_out_conjunctions(distribute_ands(PAND1_var)))
             IMPLIES has_no_ors(q)))") (("1" (CASE "eval(construct_dnf(PAND1_var))(x) = eval(PAND1_var)(x)") (("1" (HIDE -4 -2) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4 -5 -6 -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT 1) (("1" (HIDE -1 -2 -3 -4) (("1" (EXPAND "has_no_ors" -1) (("1" (FLATTEN -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (HIDE -2) (("2" (EXPAND "has_no_ors" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4 -5 -6) (("2" (HIDE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT 1) (("1" (EXPAND "has_no_ors" -5) (("1" (FLATTEN -5) (("1" (HIDE -1 -2 -3 -4 -5) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (EXPAND "has_no_ors" -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (EXPAND "distribute_ands" -5) (("5" (EXPAND "pull_out_conjunctions" -5) (("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-14| |nil| 3770555115 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                                                     FORALL (x: real):
                                                                                       eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): ((has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p))) AND (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(distribute_ands(p))) IMPLIES has_no_ors(q))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("4" (SKEEP) (("4" (INST?) (("4" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (EXPAND "distribute_ands" -5) (("5" (EXPAND "pull_out_conjunctions" -5) (("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-13| |nil| 3770555058 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                                              FORALL (x: real):
                                                                                eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): ((has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p))) AND (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(distribute_ands(p))) IMPLIES has_no_ors(q))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("4" (SKEEP) (("4" (INST?) (("4" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (EXPAND "distribute_ands" -5) (("5" (EXPAND "pull_out_conjunctions" -5) (("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-12| |nil| 3770554967 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                                       FORALL (x: real):
                                                                         eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): (has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p)) AND (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(distribute_ands(p))) IMPLIES has_no_ors(q))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("4" (SKEEP) (("4" (INST?) (("4" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (EXPAND "distribute_ands" -5) (("5" (EXPAND "pull_out_conjunctions" -5) (("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-11| |nil| 3770554947 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                                FORALL (x: real):
                                                                  eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL))))))))))))))))) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): (has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p))) AND (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(distribute_ands(p))) IMPLIES has_no_ors(q))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL))) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) (("3" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("3" (SKEEP) (("3" (INST?) (("3" (SPLIT -1) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL))))))))))))))))))) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (ASSERT) NIL))))))))) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL) ("2" (ASSERT) NIL))))))))) ("3" (GRIND) NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (POSTPONE) NIL))))))))) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (EXPAND "distribute_ands" -5) (("5" (EXPAND "pull_out_conjunctions" -5) (("5" (POSTPONE) NIL))))))))))))))) ("6" (GRIND) NIL) ("7" (GRIND) NIL) ("8" (GRIND) NIL) ("9" (GRIND) NIL) ("10" (GRIND) NIL))))))))))))) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL)))))) NIL) NIL NIL) (|dnf_preserves_truth-10| |nil| 3770554727 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                         FORALL (x: real):
                                                           eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): (has_special_form(p) AND (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(distribute_ands(p))) IMPLIES has_no_ors(q))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) (("3" (LEMMA DISTRIB_ANDS_SPECIAL_FORM) (("3" (SKEEP) (("3" (INST?) (("3" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (EXPAND "distribute_ands" -5) (("5" (EXPAND "pull_out_conjunctions" -5) (("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-9| |nil| 3770554590 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                                  FORALL (x: real):
                                                    eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL))))))))))))))))) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): (has_special_form(p) AND (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(distribute_ands(p))) IMPLIES has_no_ors(q))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL))) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL))))))))) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (ASSERT) NIL))))))))) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL) ("2" (ASSERT) NIL))))))))) ("3" (GRIND) NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (CASE "(PAND?(PAND1_var) IMPLIES has_no_ors(PAND1_var))") (("1" (CASE "(PAND?(PAND2_var) IMPLIES has_no_ors(PAND2_var))") (("1" (CASE "eval(construct_dnf(PAND1_var))(x) = eval(PAND1_var)(x)") (("1" (HIDE -4) (("1" (HIDE -3) (("1" (CASE "eval(construct_dnf(PAND2_var))(x) = eval(PAND2_var)(x)") (("1" (HIDE -3 -4) (("1" (EXPAND "eval" 1) (("1" (EXPAND "construct_dnf" 1) (("1" (CASE "(eval_atm_list(append(car(construct_dnf(PAND1_var)),
                                                                                           car(construct_dnf(PAND2_var)))) (x)
                                                                       OR eval((: :))(x)) = eval_atm_list(append(car(construct_dnf(PAND1_var)),
                                                                                           car(construct_dnf(PAND2_var))))(x)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "has_no_ors" -5) (("1" (FLATTEN -5) (("1" (HIDE -3 -4) (("1" (LEMMA HAS_NO_ORS_PROP) (("1" (INST?) (("1" (ASSERT) (("1" (INST -1 "x") (("1" (LEMMA HAS_NO_ORS_PROP) (("1" (INST -1 "PAND1_var") (("1" (ASSERT) (("1" (INST -1 "x") (("1" (ASSERT) (("1" (POSTPONE) NIL))))))))))))))))))))))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))) ("2" (HIDE -4 -5 -6 2) (("2" (ASSERT) NIL))))))))) ("2" (HIDE 2) (("2" (HIDE -5 -6 -7) (("2" (ASSERT) NIL))))))) ("2" (HIDE -1 -2 -3 -4 -5 2) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (ASSERT) NIL))))))))) ("2" (HIDE -1 -2 -3 -4 2) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (ASSERT) NIL))))))))))))))))) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (POSTPONE) NIL))))))))))) ("6" (GRIND) NIL) ("7" (GRIND) NIL) ("8" (GRIND) NIL) ("9" (GRIND) NIL) ("10" (GRIND) NIL))))))))))))) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL)))))) NIL) NIL NIL) (|dnf_preserves_truth-8| |nil| 3770554573 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                           FORALL (x: real):
                                             eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL))))))))))))))))) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): (has_special_form(p) AND (FORALL (q:NNF_expr): member(q, pull_out_conjunctions(distribute_ands(a))) IMPLIES has_no_ors(q))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL))) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL))))))))) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (ASSERT) NIL))))))))) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL) ("2" (ASSERT) NIL))))))))) ("3" (GRIND) NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (CASE "(PAND?(PAND1_var) IMPLIES has_no_ors(PAND1_var))") (("1" (CASE "(PAND?(PAND2_var) IMPLIES has_no_ors(PAND2_var))") (("1" (CASE "eval(construct_dnf(PAND1_var))(x) = eval(PAND1_var)(x)") (("1" (HIDE -4) (("1" (HIDE -3) (("1" (CASE "eval(construct_dnf(PAND2_var))(x) = eval(PAND2_var)(x)") (("1" (HIDE -3 -4) (("1" (EXPAND "eval" 1) (("1" (EXPAND "construct_dnf" 1) (("1" (CASE "(eval_atm_list(append(car(construct_dnf(PAND1_var)),
                                                                      car(construct_dnf(PAND2_var)))) (x)
                                                  OR eval((: :))(x)) = eval_atm_list(append(car(construct_dnf(PAND1_var)),
                                                                      car(construct_dnf(PAND2_var))))(x)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "has_no_ors" -5) (("1" (FLATTEN -5) (("1" (HIDE -3 -4) (("1" (LEMMA HAS_NO_ORS_PROP) (("1" (INST?) (("1" (ASSERT) (("1" (INST -1 "x") (("1" (LEMMA HAS_NO_ORS_PROP) (("1" (INST -1 "PAND1_var") (("1" (ASSERT) (("1" (INST -1 "x") (("1" (ASSERT) (("1" (POSTPONE) NIL))))))))))))))))))))))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))) ("2" (HIDE -4 -5 -6 2) (("2" (ASSERT) NIL))))))))) ("2" (HIDE 2) (("2" (HIDE -5 -6 -7) (("2" (ASSERT) NIL))))))) ("2" (HIDE -1 -2 -3 -4 -5 2) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (ASSERT) NIL))))))))) ("2" (HIDE -1 -2 -3 -4 2) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (ASSERT) NIL))))))))))))))))) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (POSTPONE) NIL))))))))))) ("6" (GRIND) NIL) ("7" (GRIND) NIL) ("8" (GRIND) NIL) ("9" (GRIND) NIL) ("10" (GRIND) NIL))))))))))))) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL)))))) NIL) NIL NIL) (|dnf_preserves_truth-7| |nil| 3770554497 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                                    FORALL (x: real):
                                      eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL))))))))))))))))) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): (has_special_form(p) AND (has_no_ors(pull_out_conjunctions(p)))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL))) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL))))))))) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL) ("2" (ASSERT) NIL))))))))) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL) ("2" (ASSERT) NIL))))))))) ("3" (GRIND) NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (CASE "(PAND?(PAND1_var) IMPLIES has_no_ors(PAND1_var))") (("1" (CASE "(PAND?(PAND2_var) IMPLIES has_no_ors(PAND2_var))") (("1" (CASE "eval(construct_dnf(PAND1_var))(x) = eval(PAND1_var)(x)") (("1" (HIDE -4) (("1" (HIDE -3) (("1" (CASE "eval(construct_dnf(PAND2_var))(x) = eval(PAND2_var)(x)") (("1" (HIDE -3 -4) (("1" (EXPAND "eval" 1) (("1" (EXPAND "construct_dnf" 1) (("1" (CASE "(eval_atm_list(append(car(construct_dnf(PAND1_var)),
                                                 car(construct_dnf(PAND2_var)))) (x)
                             OR eval((: :))(x)) = eval_atm_list(append(car(construct_dnf(PAND1_var)),
                                                 car(construct_dnf(PAND2_var))))(x)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "has_no_ors" -5) (("1" (FLATTEN -5) (("1" (HIDE -3 -4) (("1" (LEMMA HAS_NO_ORS_PROP) (("1" (INST?) (("1" (ASSERT) (("1" (INST -1 "x") (("1" (LEMMA HAS_NO_ORS_PROP) (("1" (INST -1 "PAND1_var") (("1" (ASSERT) (("1" (INST -1 "x") (("1" (ASSERT) (("1" (POSTPONE) NIL))))))))))))))))))))))))))))) ("2" (HIDE 2) (("2" (GRIND) NIL))))))))))) ("2" (HIDE -4 -5 -6 2) (("2" (ASSERT) NIL))))))))) ("2" (HIDE 2) (("2" (HIDE -5 -6 -7) (("2" (ASSERT) NIL))))))) ("2" (HIDE -1 -2 -3 -4 -5 2) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (ASSERT) NIL))))))))) ("2" (HIDE -1 -2 -3 -4 2) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (ASSERT) NIL))))))))))))))))) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (POSTPONE) NIL))))))))))) ("6" (GRIND) NIL) ("7" (GRIND) NIL) ("8" (GRIND) NIL) ("9" (GRIND) NIL) ("10" (GRIND) NIL))))))))))))) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL)))))) NIL) NIL NIL) (|dnf_preserves_truth-6| |nil| 3770546625 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                             FORALL (x: real):
                               eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): (has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH_1) (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (SKEEP) (("4" (EXPAND "has_special_form" -3) (("4" (FLATTEN -3) (("4" (ASSERT) (("4" (CASE "(PAND?(PAND1_var) IMPLIES has_no_ors(PAND1_var))") (("1" (CASE "(PAND?(PAND2_var) IMPLIES has_no_ors(PAND2_var))") (("1" (CASE "eval(construct_dnf(PAND1_var))(x) = eval(PAND1_var)(x)") (("1" (HIDE -4) (("1" (HIDE -3) (("1" (CASE "eval(construct_dnf(PAND2_var))(x) = eval(PAND2_var)(x)") (("1" (HIDE -3 -4) (("1" (EXPAND "eval" 1) (("1" (EXPAND "construct_dnf" 1) (("1" (CASE "(eval_atm_list(append(car(construct_dnf(PAND1_var)),
                            car(construct_dnf(PAND2_var)))) (x)
        OR eval((: :))(x)) = eval_atm_list(append(car(construct_dnf(PAND1_var)),
                            car(construct_dnf(PAND2_var))))(x)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "has_no_ors" -5) (("1" (FLATTEN -5) (("1" (HIDE -3 -4) (("1" (LEMMA HAS_NO_ORS_PROP) (("1" (INST?) (("1" (ASSERT) (("1" (INST -1 "x") (("1" (LEMMA HAS_NO_ORS_PROP) (("1" (INST -1 "PAND1_var") (("1" (ASSERT) (("1" (INST -1 "x") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -4 -5 -6 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -5 -6 -7) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 -5 2) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 2) (("2" (EXPAND "has_no_ors" -1) (("2" (FLATTEN -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (EXPAND "has_special_form" -3) (("5" (FLATTEN -3) (("5" (ASSERT) (("5" (EXPAND "construct_dnf" 1) (("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-5| |nil| 3770546141 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
                      FORALL (x: real):
                        eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "FORALL (p:PolyRelExpr): (has_special_form(p) AND (PAND?(p) IMPLIES has_no_ors(p))) IMPLIES eval(construct_dnf(p))(x) = eval(p)(x)") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA DNF_SPECIAL_FORM) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (SKEEP) (("1" (LEMMA DNF_CONST_PRESERVES_TRUTH) (("1" (INST?) (("1" (INST -1 "x") (("1" (SPLIT -1) (("1" (EXPAND "nnf" -1) (("1" (EXPAND "distribute_ands" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-4| |nil| 3770464575 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
               FORALL (x: real):
                 eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (CASE "PCONST?(distribute_ands(nnf(p))) OR PREL?(distribute_ands(nnf(p))) OR PAND?(distribute_ands(nnf(p))) OR POR?(distribute_ands(nnf(p)))") (("1" (SPLIT -1) (("1" (LEMMA "dnf_const_preserves_truth_1") (("1" (INST?) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA DNF_PREL_PRESERVES_TRUTH2) (("2" (INST?) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "eval") (("3" (ASSERT) (("3" (EXPAND "construct_dnf") (("3" (CASE "eval_atm_list(append(car(construct_dnf(pe1
                                              (distribute_ands(nnf(p))))),
                            car(construct_dnf(pe2
                                              (distribute_ands(nnf(p)))))))
                    (x) = (eval(pe1(distribute_ands(nnf(p))))(x) AND
         eval(pe2(distribute_ands(nnf(p))))(x))") (("1" (GRIND) NIL NIL) ("2" (HIDE 2) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (CASE "eval(construct_dnf(POR(pe1(distribute_ands(nnf(p))), pe2(distribute_ands(nnf(p))))))(x) =
       eval(distribute_ands(nnf(p)))(x)") (("1" (ASSERT) (("1" (CASE "distribute_ands(nnf(p)) = POR(pe1(distribute_ands(nnf(p))),
                           pe2(distribute_ands(nnf(p))))") (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "construct_dnf") (("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (TYPEPRED "distribute_ands(nnf(p))") (("3" (CASE "distribute_ands(nnf(p)) = POR(pe1(distribute_ands(nnf(p))),
                           pe2(distribute_ands(nnf(p))))") (("1" (REPLACE -1 -2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "distribute_ands(nnf(p))") (("2" (EXPAND "has_special_form" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|dnf_preserves_truth-3| |nil| 3770464524 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
               FORALL (x: real):
                 eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL))))))))))))))))) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (EXPAND "construct_dnf") (("1" (GRIND) (("1" (EXPAND "eval_rel") (("1" (POSTPONE) NIL))) ("2" (EXPAND "eval_rel") (("2" (POSTPONE) NIL))))))) ("2" (POSTPONE) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf") (("3" (EXPAND "distribute_ands") (("3" (EXPAND "construct_dnf") (("3" (EXPAND "construct_record") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (POSTPONE) NIL))))))))))))))))))) ("4" (POSTPONE) NIL) ("5" (POSTPONE) NIL) ("6" (POSTPONE) NIL) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL))))) ("3" (HIDE 2) (("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (POSTPONE) NIL)))))))) NIL) NIL NIL) (|dnf_preserves_truth-2| |nil| 3770464477 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
               FORALL (x: real):
                 eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL))))))))))))))))) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (EXPAND "construct_dnf") (("1" (GRIND) (("1" (EXPAND "eval_rel") (("1" (POSTPONE) NIL))) ("2" (EXPAND "eval_rel") (("2" (POSTPONE) NIL))))))) ("2" (POSTPONE) NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf") (("3" (EXPAND "distribute_ands") (("3" (EXPAND "construct_dnf") (("3" (EXPAND "construct_record") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (POSTPONE) NIL))))))))))))))))))) ("4" (POSTPONE) NIL) ("5" (POSTPONE) NIL) ("6" (POSTPONE) NIL) ("7" (POSTPONE) NIL) ("8" (POSTPONE) NIL) ("9" (POSTPONE) NIL) ("10" (POSTPONE) NIL))))) ("3" (HIDE 2) (("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL)))))))) NIL) NIL NIL) (|dnf_preserves_truth-1| |nil| 3770392115 ("" (EXPAND "dnf") (("" (CASE "FORALL (p: PolyRelExpr):
        FORALL (x: real):
          eval(construct_dnf(distribute_ands(nnf(p))))(x) = eval(distribute_ands(nnf(p)))(x)") (("1" (SKEEP) (("1" (SKEEP) (("1" (INST -1 "p") (("1" (INST -1 "x") (("1" (LEMMA NNF_PRESERVES_TRUTH) (("1" (INST -1 "p" "x") (("1" (LEMMA "distribute_ands_preserves_truth") (("1" (INST -1 "nnf(p)" "x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "p") (("1" (EXPAND "construct_dnf") (("1" (GRIND) (("1" (EXPAND "eval_rel") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "eval_rel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (SKEEP) (("3" (SKEEP) (("3" (EXPAND "nnf") (("3" (EXPAND "distribute_ands") (("3" (EXPAND "construct_dnf") (("3" (EXPAND "construct_record") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (EXPAND "eval") (("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA NNF_HAS_SPECIAL_FORM) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)))
