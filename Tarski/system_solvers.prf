(|system_solvers| (|rows_fun_TCC1| 0 (|rows_fun_TCC1-1| |nil| 3621776159 ("" (SKEEP) (("" (CASE "RelF6(j) = 0 OR RelF6(j) =  1 OR RelF6(j) =  2 or RelF6(j) = 3 OR RelF6(j) = 4 or RelF6(j) = 5") (("1" (SPLIT) (("1" (REPLACE -1) (("1" (EVAL-FORMULA 1) NIL NIL)) NIL) ("2" (REPLACE -1) (("2" (EVAL-FORMULA 1) NIL NIL)) NIL) ("3" (REPLACE -1) (("3" (EVAL-FORMULA 1) NIL NIL)) NIL) ("4" (REPLACE -1) (("4" (EVAL-FORMULA 1) NIL NIL)) NIL) ("5" (REPLACE -1) (("5" (EVAL-FORMULA 1) NIL NIL)) NIL) ("6" (REPLACE -1) (("6" (EVAL-FORMULA 1) NIL NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ((|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL)) NIL (|rows_fun| SUBTYPE "matrices.row(tarski_query_matrix.A63)(system_solvers.RelF6(system_solvers.j))" "{V: matrices.Vector | booleans.AND(V = matrices.row(tarski_query_matrix.A63)(system_solvers.RelF6(system_solvers.j)), list_props[real].length(V) = 3)}"))) (|entry_fun_TCC1| 0 (|entry_fun_TCC1-1| |nil| 3621776159 ("" (SUBTYPE-TCC) NIL NIL) ((|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (|listn| TYPE-EQ-DECL NIL |listn| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|entry_fun| SUBTYPE "system_solvers.i" "below[length[below(3)](L)]"))) (|entry_fun_TCC2| 0 (|entry_fun_TCC2-1| |nil| 3621776159 ("" (SUBTYPE-TCC) NIL NIL) ((|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (|listn| TYPE-EQ-DECL NIL |listn| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)) NIL (|entry_fun| SUBTYPE "list_props[below(3)].nth(system_solvers.L, system_solvers.i)" "below[length[real](RowF(i))]"))) (|entry_is| 0 (|entry_is-1| |nil| 3621776387 ("" (SKEEP) (("" (EXPAND "entry_fun") (("" (LEMMA "tensor_entry") (("" (INST -1 "A63" "1+k" " base_n_to_nat(6, RelF6, k)" "i") (("1" (GROUND) (("1" (CASE "rows(A63) = 6 AND columns(A63) = 3") (("1" (FLATTEN) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (REWRITE "product_eq") (("1" (HIDE 2) (("1" (SKEEP) (("1" (EXPAND "entry_pick") (("1" (LEMMA "base_n_base_n_to_nat") (("1" (INST -1 "6" "RelF6" "k") (("1" (GROUND) (("1" (INST -1 "n") (("1" (REPLACE -1) (("1" (EXPAND "rows_fun") (("1" (EXPAND "base_list") (("1" (TYPEPRED "array2list[below(3)](1+k)(base_n(3, i))") (("1" (INST -3 "n") (("1" (REPLACE -3 :DIR RL) (("1" (GROUND) (("1" (EXPAND "entry") (("1" (EXPAND "access") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "0") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE 2) (("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (HIDE 2) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EVAL-FORMULA 1) NIL NIL)) NIL)) NIL) ("2" (CASE-REPLACE "columns(A63) = 3") (("1" (GROUND) NIL NIL) ("2" (EVAL-FORMULA 1) NIL NIL)) NIL) ("3" (LEMMA "base_n_to_nat_lt") (("3" (INST -1 "RelF6" "k" "6") (("3" (SPLIT -1) (("1" (CASE-REPLACE "rows(A63) = 6") (("1" (GROUND) NIL NIL) ("2" (EVAL-FORMULA 1) NIL NIL)) NIL) ("2" (SKEEP) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|entry_fun| CONST-DECL "real" |system_solvers| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|i| SKOLEM-CONST-DECL "below(3 ^ (1 + k))" |system_solvers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|k| SKOLEM-CONST-DECL "nat" |system_solvers| NIL) (|RelF6| SKOLEM-CONST-DECL "[nat -> subrange(0, 5)]" |system_solvers| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|base_n_to_nat| CONST-DECL "nat" |base_repr| |reals|) (A63 CONST-DECL "{M: PosFullMatrix | rows(M) = 6 AND columns(M) = 3}" |tarski_query_matrix| NIL) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| |matrices|) (<= CONST-DECL "bool" |reals| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|rows| CONST-DECL "nat" |matrices| |matrices|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat_exp| APPLICATION-JUDGEMENT "nat" |exponentiation| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|array2list| CONST-DECL "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list| |structures|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|entry| CONST-DECL "real" |matrices| |matrices|) (|access| CONST-DECL "real" |matrices| |matrices|) (|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (|base_n_base_n_to_nat| FORMULA-DECL NIL |base_repr| |reals|) (|T_low| TYPE-EQ-DECL NIL |product| |reals|) (|T_high| TYPE-EQ-DECL NIL |product| |reals|) (|base_n| DEF-DECL "nat" |base_repr| |reals|) (|entry_pick| CONST-DECL "real" |tensor_product| |matrices|) (|base_list| CONST-DECL "listn[below(n)](digits)" |base_repr| |reals|) (|listn| TYPE-EQ-DECL NIL |listn| |structures|) (|rows_fun| CONST-DECL "{V: Vector | V = row(A63)(RelF6(j)) AND length(V) = 3}" |system_solvers| NIL) (|row| CONST-DECL "Vector" |matrices| |matrices|) (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|product_eq| FORMULA-DECL NIL |product| |reals|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|base_n_to_nat_lt| FORMULA-DECL NIL |base_repr| |reals|) (|tensor_entry| FORMULA-DECL NIL |tensor_product| |matrices|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|TQlist_fun_TCC1| 0 (|TQlist_fun_TCC1-1| |nil| 3621782555 ("" (SKEEP) (("" (INST 1 "0") NIL NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|TQlist_fun| EXISTENCE "" "below(3)"))) (|TQlist_fun_TCC2| 0 (|TQlist_fun_TCC2-1| |nil| 3621782555 ("" (SUBTYPE-TCC) NIL NIL) ((|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (|listn| TYPE-EQ-DECL NIL |listn| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (<= CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|k!1| SKOLEM-CONST-DECL "nat" |system_solvers| NIL) (|x1!1| SKOLEM-CONST-DECL "nat" |system_solvers| NIL)) NIL (|TQlist_fun| SUBTYPE "array2list[below(3)].list2array(0)(system_solvers.L)" "[nat -> subrange(0, 2)]"))) (|TQlist_lem_TCC1| 0 (|TQlist_lem_TCC1-1| |nil| 3621782865 ("" (SKEEP) (("" (SKEEP) (("" (LEMMA "base_n_lt_n") (("" (INST?) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|base_n_lt_n| FORMULA-DECL NIL |base_repr| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|TQlist_lem| SUBTYPE "base_repr.base_n(3, system_solvers.j)" "[nat -> subrange(0, 2)]"))) (|TQlist_lem| 0 (|TQlist_lem-2| "" 3884557590 ("" (EXPAND "TQlist_fun") (("" (SKEEP) (("" (TYPEPRED ("j")) (("" (EXPAND "base_list") (("" (LEMMA "array2list_inv[below(3)]") (("" (INST -1 "base_n(3, j)" "0" "1+k" "_") (("" (CASE-REPLACE "list2array[below(3)]
                   (0)(array2list[below(3)](1 + k)(base_n(3, j)))=base_n(3, j)") (("" (HIDE 2) (("" (DECOMPOSE-EQUALITY 1) (("" (CASE "x!1<1+k") (("1" (INST?) NIL NIL) ("2" (LEMMA "list2array_sound[below(3)]") (("2" (HIDE -2) (("2" (EXPAND "length") (("2" (INST -1 "array2list[below(3)](1 + k)(base_n(3, j))" "0" "x!1") (("2" (TYPEPRED "array2list[below(3)](1 + k)(base_n(3, j))") (("2" (EXPAND "length" -2) (("2" (LIFT-IF -4) (("2" (GROUND) (("2" (REPLACE -1) (("2" (LEMMA "base_n_0") (("2" (INST?) (("2" (LEMMA "both_sides_expt_gt1_le") (("2" (INST -1 "3" "1+k" "x!1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|TQlist_lem-1| |nil| 3621782966 ("" (EXPAND "TQlist_fun") (("" (SKEEP) (("" (TYPEPRED (J)) (("" (EXPAND "base_list") (("" (LEMMA "array2list_inv[below(3)]") (("1" (INST -1 "base_n(3, j)" "0" "1+k" "_") (("1" (CASE-REPLACE "list2array[below(3)]
                   (0)(array2list[below(3)](1 + k)(base_n(3, j)))=base_n(3, j)") (("1" (HIDE 2) (("1" (DECOMPOSE-EQUALITY 1) (("1" (CASE "x!1<1+k") (("1" (INST?) NIL NIL) ("2" (LEMMA "list2array_sound[below(3)]") (("2" (HIDE -2) (("2" (EXPAND "length") (("2" (INST -1 "array2list[below(3)](1 + k)(base_n(3, j))" "0" "x!1") (("1" (TYPEPRED "array2list[below(3)](1 + k)(base_n(3, j))") (("1" (EXPAND "length" -2) (("1" (LIFT-IF -4) (("1" (GROUND) (("1" (REPLACE -1) (("1" (LEMMA "base_n_0") (("1" (INST?) (("1" (LEMMA "both_sides_expt_gt1_le") (("1" (INST -1 "3" "1+k" "x!1") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "2") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "2") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "2") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|base_list| CONST-DECL "listn[below(n)](digits)" |base_repr| |reals|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|base_n| DEF-DECL "nat" |base_repr| |reals|) (|k| SKOLEM-CONST-DECL "nat" |system_solvers| NIL) (|x!1| SKOLEM-CONST-DECL "nat" |system_solvers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|base_n_0| FORMULA-DECL NIL |base_repr| |reals|) (|both_sides_expt_gt1_le| FORMULA-DECL NIL |exponentiation| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|list2array_sound| FORMULA-DECL NIL |array2list| |structures|) (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (|array2list| CONST-DECL "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list| |structures|) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|listn| TYPE-EQ-DECL NIL |listn| |structures|) (|length| DEF-DECL "nat" |list_props| NIL) (|list2array| DEF-DECL "T" |array2list| |structures|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|array2list_inv| FORMULA-DECL NIL |array2list| |structures|) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (< CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|TQlist_fun| CONST-DECL "real" |system_solvers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|sturm_tarski_faster_TCC1| 0 (|sturm_tarski_faster_TCC1-1| |nil| 3621782555 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (<= CONST-DECL "bool" |reals| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) NIL (|sturm_tarski_faster| SUBTYPE "(number_fields.+)(system_solvers.k, 1)" "{x: naturalnumbers.nat | reals.>(x, 1)}"))) (|sturm_tarski_faster_TCC2| 0 (|sturm_tarski_faster_TCC2-1| |nil| 3621782555 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (<= CONST-DECL "bool" |reals| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|sturm_tarski_faster| SUBTYPE "0" "upto(exponentiation.^(3, (number_fields.+)(1, system_solvers.k)))"))) (|sturm_tarski_faster_TCC3| 0 (|sturm_tarski_faster_TCC3-1| |nil| 3621782555 ("" (SUBTYPE-TCC) NIL NIL) ((|array2list| CONST-DECL "{l: listn(n) | FORALL (i: below(n)): a(i) = nth(l, i)}" |array2list| |structures|) (|base_list| CONST-DECL "listn[below(n)](digits)" |base_repr| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|sturm_tarski_faster| SUBTYPE "base_repr.base_list(3, 0, (number_fields.+)(system_solvers.k, 1))" "{ll: list_adt[below(3)].list | ll = base_repr.base_list(3, 0, (number_fields.+)(1, system_solvers.k))}"))) (|sturm_tarski_faster_TCC4| 0 (|sturm_tarski_faster_TCC4-1| |nil| 3621782555 ("" (SKEEP) (("" (CASE-REPLACE "dot_tail_sum2plus(k + 1, EntFun, TQlist_fun(k, a, m, p, n), 0, 0,
                        base_list(3, 0, k + 1)) = sturm_tarski_solver_slow_basic(k,a,m,p,n,RelF6)") (("1" (GROUND) NIL NIL) ("2" (HIDE 3) (("2" (LEMMA "dot_tail_sum_lem") (("2" (INST?) (("2" (REPLACE -1) (("2" (SIMPLIFY) (("2" (EXPAND "sturm_tarski_solver_slow_basic") (("2" (TYPEPRED "super_dot(row(A63_tensor_power_mat_row(1 + k)(RelF6))(0),
                 col(TQ_vect3k(k, a, m, p, n))(0))") (("2" (REPLACE -1) (("2" (HIDE (-1 -2)) (("2" (REWRITE "dot_eq_sigma") (("2" (TYPEPRED "A63_tensor_power_mat_row(1 + k)(RelF6)") (("2" (REWRITE "length_row") (("1" (REWRITE "length_col") (("1" (REPLACE -6) (("1" (TYPEPRED "TQ_vect3k(k, a, m, p, n)") (("1" (REPLACE -5) (("1" (HIDE-ALL-BUT (-13 1 2)) (("1" (GROUND) (("1" (REWRITE "sigma_eq") (("1" (HIDE 2) (("1" (SKEEP) (("1" (REPLACE -1) (("1" (REWRITE "entry_is") (("1" (REWRITE "TQlist_lem") (("1" (REWRITE "access_col") (("1" (REWRITE "access_row") (("1" (LEMMA "A63_tensor_power_mat_row_def") (("1" (INST -1 "RelF6" "k") (("1" (GROUND) (("1" (REPLACE -1) (("1" (EXPAND "vect2matrix") (("1" (LEMMA "entry_form_matrix") (("1" (INST?) (("1" (GROUND) (("1" (REPLACE -1) (("1" (REWRITE "access_row") (("1" (HIDE -1) (("1" (EXPAND "TQ_vect3k") (("1" (LEMMA "entry_form_matrix") (("1" (INST -1 "LAMBDA (i_1: nat, j_1: nat):
                            IF i_1 >= 3 ^ (1 + k) OR j_1 >= 1 THEN 0
                            ELSE TQ_fam(k, a, m, p, n, base_n(3, i_1))
                            ENDIF" "_" "_" "_" "_") (("1" (INST?) (("1" (REPLACE -1) (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (SKEEP) (("2" (LEMMA "base_n_lt_n") (("2" (INST?) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "rows") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GROUND) NIL NIL) ("4" (GROUND) NIL NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (> CONST-DECL "bool" |reals| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|listn| TYPE-EQ-DECL NIL |listn| |structures|) (|base_list| CONST-DECL "listn[below(n)](digits)" |base_repr| |reals|) (<= CONST-DECL "bool" |reals| NIL) (|dot_tail_sum2plus| DEF-DECL "real" |query_coeff| |matrices|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|TQlist_fun| CONST-DECL "real" |system_solvers| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|NSol_all| CONST-DECL "nat" |poly_families| NIL) (|sturm_tarski_solver_slow_basic| CONST-DECL "{r: real |
   r = NSol_all(k, a, m, p, n, RelF6) AND
    rational_pred(r) AND integer_pred(r)}" |poly_systems| NIL) (|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|le_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|dot_tail_sum_lem| FORMULA-DECL NIL |query_coeff| |matrices|) (|dot_eq_sigma| FORMULA-DECL NIL |matrices| |matrices|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|length_row| FORMULA-DECL NIL |matrices| |matrices|) (|min_id| FORMULA-DECL NIL |min_max| |reals|) (|TQlist_lem| FORMULA-DECL NIL |system_solvers| NIL) (|access_row| FORMULA-DECL NIL |matrices| |matrices|) (|entry_form_matrix| FORMULA-DECL NIL |matrices| |matrices|) (|form_matrix_square| APPLICATION-JUDGEMENT "FullMatrix" |matrices| |matrices|) (|base_n| DEF-DECL "nat" |base_repr| |reals|) (|k| SKOLEM-CONST-DECL "nat" |system_solvers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|TQ_fam| CONST-DECL "int" |poly_families| NIL) (|base_n_lt_n| FORMULA-DECL NIL |base_repr| |reals|) (|base_n_to_nat| CONST-DECL "nat" |base_repr| |reals|) (A63 CONST-DECL "{M: PosFullMatrix | rows(M) = 6 AND columns(M) = 3}" |tarski_query_matrix| NIL) (|tensor_power_alt| DEF-DECL "PosFullMatrix" |tensor_product| |matrices|) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|vect2matrix| CONST-DECL "{PFM | rows(PFM) = 1 AND columns(PFM) = length(v)}" |matrices| |matrices|) (|A63_tensor_power_mat_row_def| FORMULA-DECL NIL |poly_systems| NIL) (|access_col| FORMULA-DECL NIL |matrices| |matrices|) (|entry_is| FORMULA-DECL NIL |system_solvers| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|access| CONST-DECL "real" |matrices| |matrices|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|sigma_eq| FORMULA-DECL NIL |sigma| |reals|) (|length_col| FORMULA-DECL NIL |matrices| |matrices|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|) (|dot| DEF-DECL "real" |matrices| |matrices|) (|super_dot| DEF-DECL "{rr: real | rr = dot(v1, v2)}" |matrices| |matrices|) (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (|row| CONST-DECL "Vector" |matrices| |matrices|) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (|rows| CONST-DECL "nat" |matrices| |matrices|) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| |matrices|) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (|A63_tensor_power_mat_row| DEF-DECL "{M: PosFullMatrix | rows(M) = 1 AND columns(M) = 3 ^ m}" |poly_systems| NIL) (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) (|col| DEF-DECL "VectorN(rows(M))" |matrices| |matrices|) (|TQ_vect3k| CONST-DECL "{v: PosFullMatrix | rows(v) = 3 ^ (k + 1) AND columns(v) = 1}" |tarski_query_matrix| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|sturm_tarski_faster| SUBTYPE "query_coeff.dot_tail_sum2plus((number_fields.+)(system_solvers.k, 1), system_solvers.EntFun, system_solvers.TQlist_fun(system_solvers.k, system_solvers.a, system_solvers.m, system_solvers.p, system_solvers.n), 0, 0, base_repr.base_list(3, 0, (number_fields.+)(system_solvers.k, 1)))" "{r: reals.real | booleans.AND(r = poly_families.NSol_all(system_solvers.k, system_solvers.a, system_solvers.m, system_solvers.p, system_solvers.n, system_solvers.RelF6), booleans.AND(rationals.rational_pred(r), integers.integer_pred(r)))}"))) (|Test1_TCC1| 0 (|Test1_TCC1-1| |nil| 3621776159 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (A63 CONST-DECL "{M: PosFullMatrix | rows(M) = 6 AND columns(M) = 3}" |tarski_query_matrix| NIL) (|entry| CONST-DECL "real" |matrices| |matrices|) (T1 CONST-DECL "real" |system_solvers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|Test1| SUBTYPE "(number_fields.-)(system_solvers.j, 1)" "nat"))) (|Test1_TCC2| 0 (|Test1_TCC2-1| |nil| 3621776159 ("" (TERMINATION-TCC) NIL NIL) ((A63 CONST-DECL "{M: PosFullMatrix | rows(M) = 6 AND columns(M) = 3}" |tarski_query_matrix| NIL) (|row| CONST-DECL "Vector" |matrices| |matrices|) (|length| DEF-DECL "nat" |list_props| NIL) (|access| CONST-DECL "real" |matrices| |matrices|) (|entry| CONST-DECL "real" |matrices| |matrices|) (T1 CONST-DECL "real" |system_solvers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) NIL (|Test1| TERMINATION "system_solvers.Test1(system_solvers.n, (number_fields.-)(system_solvers.j, 1))" "NIL"))) (|Test2recurse_TCC1| 0 (|Test2recurse_TCC1-1| |nil| 3621776159 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|FullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (> CONST-DECL "bool" |reals| NIL) (|rows| CONST-DECL "nat" |matrices| |matrices|) (<= CONST-DECL "bool" |reals| NIL) (|columns| DEF-DECL "{c: nat |
   (FORALL (i: below(length(M))): length(nth(M, i)) <= c) AND
    (null?(M) AND c = 0 OR
      EXISTS (i: below(length(M))): length(nth(M, i)) = c)}" |matrices| |matrices|) (|PosFullMatrix| TYPE-EQ-DECL NIL |matrices| |matrices|) (|listn_0| NAME-JUDGEMENT "listn[int](0)" |gcd_coeff| |Sturm|) (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|entry| CONST-DECL "real" |matrices| |matrices|) (T2 CONST-DECL "real" |system_solvers| NIL)) NIL (|Test2recurse| SUBTYPE "(number_fields.-)(system_solvers.j, 1)" "nat"))) (|Test2recurse_TCC2| 0 (|Test2recurse_TCC2-1| |nil| 3621776159 ("" (TERMINATION-TCC) NIL NIL) ((|row| CONST-DECL "Vector" |matrices| |matrices|) (|length| DEF-DECL "nat" |list_props| NIL) (|access| CONST-DECL "real" |matrices| |matrices|) (|entry| CONST-DECL "real" |matrices| |matrices|) (T2 CONST-DECL "real" |system_solvers| NIL)) NIL (|Test2recurse| TERMINATION "system_solvers.Test2recurse(system_solvers.M, (number_fields.-)(system_solvers.j, 1))" "NIL"))))
