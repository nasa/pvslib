(|kinematics_turn| (|linear_preserves_gs| 0 (|linear_preserves_gs-1| |nil| 3578135450 ("" (SKOSIMP*) (("" (EXPAND "linear_traj") (("" (PROPAX) NIL NIL)) NIL)) NIL) ((|linear_traj| CONST-DECL "svpair" |kinematics_turn| NIL)) SHOSTAK)) (|linear_preserves_vs| 0 (|linear_preserves_vs-1| |nil| 3578135535 ("" (SKOSIMP*) (("" (EXPAND "linear_traj") (("" (PROPAX) NIL NIL)) NIL)) NIL) ((|linear_traj| CONST-DECL "svpair" |kinematics_turn| NIL)) SHOSTAK)) (|linear_preserves_track_TCC1| 0 (|linear_preserves_track_TCC1-1| |nil| 3578135599 ("" (SKOSIMP*) (("" (TYPEPRED "sv0!1`vel") (("" (EXPAND "linear_traj") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzh_svpair| TYPE-EQ-DECL NIL |util| NIL) (|nzhVect3| NONEMPTY-TYPE-EQ-DECL NIL |track_3D| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|linear_traj| CONST-DECL "svpair" |kinematics_turn| NIL)) NIL (|linear_preserves_track| SUBTYPE "kinematics_turn.linear_traj(kinematics_turn.sv0, kinematics_turn.t1)`vel" "nzhVect3"))) (|linear_preserves_track| 0 (|linear_preserves_track-1| |nil| 3578135571 ("" (SKOSIMP*) (("" (EXPAND "linear_traj") (("" (PROPAX) NIL NIL)) NIL)) NIL) ((|linear_traj| CONST-DECL "svpair" |kinematics_turn| NIL)) SHOSTAK)) (|turnRadius_TCC1| 0 (|turnRadius_TCC1-1| |nil| 3568737705 ("" (SKOSIMP*) (("" (EXPAND "Tan?") (("" (FLATTEN) (("" (LEMMA "cos_eq_0") (("" (INST?) (("" (ASSERT) (("" (SKOSIMP*) (("" (TYPEPRED "abs(bank!1)") (("" (NAME-REPLACE AA "abs(bank!1)") (("" (CASE "i!1 < 0") (("1" (CANCEL-BY -6 "pi") NIL NIL) ("2" (ASSERT) (("2" (CASE "i!1 = 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -4 -6) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (MULT-BY 3 "2") (("2" (ASSERT) (("2" (ASSERT) (("2" (GRIND-REALS) (("2" (MULT-BY 2 "2*pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|cos_eq_0| FORMULA-DECL NIL |sincos| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (< CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|pi_ub_new| CONST-DECL "posreal" |pi_def| |trig|) (|pi_lb_new| CONST-DECL "posreal" |pi_def| |trig|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (<= CONST-DECL "bool" |reals| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (DIV_20 SKOLEM-CONST-DECL "{x1: {x: real | x > 2 AND x < 4 AND cos(x / 2) = 0} |
   pi_lb_new <= x1 AND x1 <= pi_ub_new}" |kinematics_turn| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|both_sides_times_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|div_cancel2| FORMULA-DECL NIL |real_props| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|neg_times_lt| FORMULA-DECL NIL |real_props| NIL) (|pos_times_ge| FORMULA-DECL NIL |real_props| NIL) (|both_sides_plus_ge1| FORMULA-DECL NIL |real_props| NIL) (|div_cancel1| FORMULA-DECL NIL |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL (|turnRadius| SUBTYPE "real_defs.abs(kinematics_turn.bank)" "(trig_basic.Tan?)"))) (|turnRadius_TCC2| 0 (|turnRadius_TCC2-1| |nil| 3568737705 ("" (SKOSIMP*) (("" (CASE "abs(bank!1) > 0") (("1" (ASSERT) (("1" (MULT-CASES -2) (("1" (LEMMA "tan_gt_0") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ((|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|tan| CONST-DECL "real" |trig_basic| |trig|) (|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|zero_times3| FORMULA-DECL NIL |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|tan_gt_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|turnRadius| SUBTYPE "(number_fields.*(kinematics_turn.g, trig_basic.tan(real_defs.abs(kinematics_turn.bank))))" "nznum"))) (|turnRadius_TCC3| 0 (|turnRadius_TCC3-1| |nil| 3568737705 ("" (SKEEP) (("" (SPLIT) (("1" (CROSS-MULT 1) (("1" (GRIND-REALS) (("1" (LEMMA "tan_gt_0") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (GRIND-REALS) (("2" (LEMMA "tan_gt_0") (("2" (INST?) (("2" (GRIND-REALS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((TRUE CONST-DECL "bool" |booleans| NIL) (|pos_times_gt| FORMULA-DECL NIL |real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|div_mult_pos_ge2| FORMULA-DECL NIL |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|tan_gt_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|tan| CONST-DECL "real" |trig_basic| |trig|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|div_mult_pos_neg_ge1| FORMULA-DECL NIL |extra_real_props| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|div_mult_pos_neg_gt1| FORMULA-DECL NIL |extra_real_props| NIL)) NIL (|turnRadius| SUBTYPE "number_fields./(sq.sq(kinematics_turn.speed), (number_fields.*(kinematics_turn.g, trig_basic.tan(real_defs.abs(kinematics_turn.bank)))))" "posreal"))) (|turnRadius_TCC4| 0 (|turnRadius_TCC4-1| |nil| 3569842357 ("" (SKEEP) (("" (MULT-CASES -1) (("" (LEMMA "tan_gt_0") (("" (INST?) (("" (LEMMA "tan_eq_0") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|zero_times3| FORMULA-DECL NIL |real_props| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|gn| CONST-DECL "posreal" |util| NIL) (|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|tan| CONST-DECL "real" |trig_basic| |trig|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|tan_eq_0| FORMULA-DECL NIL |trig_basic| |trig|) (|tan_gt_0| FORMULA-DECL NIL |trig_ineq| |trig|)) NIL (|turnRadius| SUBTYPE "(number_fields.*(util.gn, trig_basic.tan(real_defs.abs(kinematics_turn.bank))))" "nznum"))) (|turnRadius_TCC5| 0 (|turnRadius_TCC5-1| |nil| 3569842357 ("" (SKEEP) (("" (CASE "abs(bank)>0") (("1" (LEMMA "tan_gt_0") (("1" (INST?) (("1" (GRIND-REALS) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ((|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL) (|neg_times_le| FORMULA-DECL NIL |real_props| NIL) (|neg_times_lt| FORMULA-DECL NIL |real_props| NIL) (|pos_times_ge| FORMULA-DECL NIL |real_props| NIL) (|neg_times_ge| FORMULA-DECL NIL |real_props| NIL) (|pos_div_ge| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_ge2| FORMULA-DECL NIL |real_props| NIL) (|neg_times_gt| FORMULA-DECL NIL |real_props| NIL) (|pos_times_gt| FORMULA-DECL NIL |real_props| NIL) (|pos_div_gt| FORMULA-DECL NIL |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|tan_gt_0| FORMULA-DECL NIL |trig_ineq| |trig|)) NIL (|turnRadius| SUBTYPE "number_fields./(sq.sq(kinematics_turn.speed), (number_fields.*(util.gn, trig_basic.tan(real_defs.abs(kinematics_turn.bank)))))" "posreal"))) (|speedOfTurn_TCC1| 0 (|speedOfTurn_TCC1-1| |nil| 3568998205 ("" (SKOSIMP*) (("" (EXPAND "Tan?") (("" (FLATTEN) (("" (LEMMA "cos_eq_0") (("" (INST?) (("" (ASSERT) (("" (SKOSIMP*) (("" (TYPEPRED "abs(bank!1)") (("" (NAME-REPLACE AB "abs(bank!1)") (("" (CASE "i!1 < 0") (("1" (CANCEL-BY -5 "pi") NIL NIL) ("2" (CASE "i!1 = 0") (("1" (ASSERT) NIL NIL) ("2" (REPLACE -4) (("2" (ASSERT) (("2" (MULT-BY 2 "pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|cos_eq_0| FORMULA-DECL NIL |sincos| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (< CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|pi_ub_new| CONST-DECL "posreal" |pi_def| |trig|) (|pi_lb_new| CONST-DECL "posreal" |pi_def| |trig|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (<= CONST-DECL "bool" |reals| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (> CONST-DECL "bool" |reals| NIL) (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL (|speedOfTurn| SUBTYPE "real_defs.abs(kinematics_turn.bank)" "(trig_basic.Tan?)"))) (|speedOfTurn_TCC2| 0 (|speedOfTurn_TCC2-2| "" 3884830769 ("" (SKOSIMP*) (("" (ASSERT) (("" (MULT-CASES 2) (("" (MULT-CASES 2) (("" (TYPEPRED "abs(bank!1)") (("" (NAME-REPLACE "ab" "abs(bank!1)") (("" (ASSERT) (("" (CASE "ab>0") (("1" (LEMMA "tan_gt_0") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "ab=0") (("1" (REPLACE -1 3) (("1" (LEMMA "tan_0") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|speedOfTurn| SUBTYPE "number_fields.*(number_fields.*(util.gn, trig_basic.tan(real_defs.abs(kinematics_turn.bank))), kinematics_turn.R)" "nonneg_real")) (|speedOfTurn_TCC2-1| |nil| 3568998205 ("" (SKOSIMP*) (("" (ASSERT) (("" (MULT-CASES 2) (("" (MULT-CASES 2) (("" (TYPEPRED "abs(bank!1)") (("" (NAME-REPLACE AB "abs(bank!1)") (("" (ASSERT) (("" (CASE "ab>0") (("1" (LEMMA "tan_gt_0") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "ab=0") (("1" (REPLACE -1 3) (("1" (LEMMA "tan_0") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|tan_gt_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|tan_0| FORMULA-DECL NIL |trig_basic| |trig|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|gn| CONST-DECL "posreal" |util| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|tan| CONST-DECL "real" |trig_basic| |trig|) (|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|pos_times_ge| FORMULA-DECL NIL |real_props| NIL)) NIL (|speedOfTurn| SUBTYPE "number_fields.*(number_fields.*(util.gn, trig_basic.tan(real_defs.abs(kinematics_turn.bank))), kinematics_turn.R)" "nonneg_real"))) (|turnRate_TCC1| 0 (|turnRate_TCC1-1| |nil| 3569070955 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL (|turnRate| SUBTYPE "kinematics_turn.bank" "nzreal"))) (|bankAngle_TCC1| 0 (|bankAngle_TCC1-1| |nil| 3569070955 ("" (SKEEP) (("" (LEMMA "atan_gt_0") (("" (INST?) (("" (ASSERT) (("" (FLATTEN) (("" (GRIND-REALS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|atan_gt_0| FORMULA-DECL NIL |atan| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gn| CONST-DECL "posreal" |util| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) NIL (|bankAngle| SUBTYPE "atan.atan(number_fields./(sq.sq(kinematics_turn.speed), (number_fields.*(kinematics_turn.R, util.gn))))" "posreal_lt_pi2"))) (|bank_radius| 0 (|bank_radius-1| |nil| 3569609444 ("" (SKOSIMP*) (("" (EXPAND "bankAngle") (("" (PROPAX) NIL NIL)) NIL)) NIL) ((|bankAngle| CONST-DECL "posreal_lt_pi2" |kinematics_turn| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|bank_speed_TCC1| 0 (|bank_speed_TCC1-1| |nil| 3576861522 ("" (SKOSIMP*) (("" (EXPAND "speedOfTurn") (("" (LIFT-IF) (("" (GROUND) (("" (TYPEPRED "bank!1") (("" (HIDE -1) (("" (LEMMA "tan_gt_0") (("" (INST?) (("" (ASSERT) (("" (LEMMA "sqrt_eq_0") (("" (INST?) (("" (SPLIT -1) (("1" (REPLACE -1) (("1" (MULT-CASES -1) (("1" (MULT-CASES -1) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|speedOfTurn| CONST-DECL "nnreal" |kinematics_turn| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|sqrt_eq_0| FORMULA-DECL NIL |sqrt| |reals|) (|zero_times3| FORMULA-DECL NIL |real_props| NIL) (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|) (|gn| CONST-DECL "posreal" |util| NIL) (|tan| CONST-DECL "real" |trig_basic| |trig|) (|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|tan_gt_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL (|bank_speed| SUBTYPE "kinematics_turn.s" "posreal"))) (|bank_speed| 0 (|bank_speed-1| |nil| 3576861689 ("" (SKOSIMP*) (("" (EXPAND "speedOfTurn") (("" (ASSERT) (("" (EXPAND "bankAngle") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|speedOfTurn| CONST-DECL "nnreal" |kinematics_turn| NIL) (|bankAngle| CONST-DECL "posreal_lt_pi2" |kinematics_turn| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|delta_clockwise| 0 (|delta_clockwise-3| " " 3578843421 ("" (SKOSIMP*) (("" (CASE "alpha!1 < 2*pi*floor(beta!1/(2*pi))") (("1" (LEMMA "to2pi_near_sep") (("1" (INST -1 "alpha!1" "beta!1") (("1" (SWAP-REL -4) (("1" (EXPAND "TURN_RIGHT") (("1" (EXPAND "util_turnDelta") (("1" (EXPAND "util_turnDelta") (("1" (EXPAND "abs") (("1" (EXPAND "util_clockwise") (("1" (NAME-REPLACE "pfb" "2 * pi * floor(beta!1 / (2 * pi))") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "to2pi_near_same") (("2" (INST -1 "alpha!1" "beta!1") (("2" (EXPAND "TURN_RIGHT") (("2" (EXPAND "util_turnDelta") (("2" (EXPAND "util_turnDelta") (("2" (EXPAND "util_clockwise") (("2" (EXPAND "abs") (("2" (NAME-REPLACE "pfb" "2 * pi * floor(beta!1 / (2 * pi))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (<= CONST-DECL "bool" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|floor| CONST-DECL "{i | i <= x & x < i + 1}" |floor_ceil| NIL) (TURN_RIGHT CONST-DECL "boolean" |util| NIL) (|util_clockwise| CONST-DECL "bool" |util| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|util_turnDelta| CONST-DECL "nnreal_le_pi" |util| NIL) (|util_turnDelta| CONST-DECL "nnreal_le_2pi" |util| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|to2pi_near_sep| FORMULA-DECL NIL |to2pi| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|to2pi_near_same| FORMULA-DECL NIL |to2pi| |trig|)) SHOSTAK) (|delta_clockwise-2| "()" 3570906535 ("" (SKOSIMP*) (("" (EXPAND "TURN_RIGHT") (("" (EXPAND "util_turnDelta") (("" (EXPAND "util_clockwise") (("" (EXPAND "util_turnDelta") (("" (TYPEPRED "to2pi(alpha!1)") (("" (TYPEPRED "to2pi(beta!1)") (("" (TYPEPRED "abs(to2pi(alpha!1) - to2pi(beta!1))") (("" (ASSERT) (("" (MOVE-TERMS -9 L 1) (("" (PERMUTE-TERMS -9 (2 3)) (("" (CASE "to2pi(alpha!1)>to2pi(beta!1)") (("1" (EXPAND "abs") (("1" (ASSERT) (("1" (CASE "to2pi(alpha!1) - to2pi(beta!1) <= pi") (("1" (ASSERT) (("1" (LEMMA "to2pi_neg") (("1" (INST -1 "to2pi(beta!1)-to2pi(alpha!1)") (("1" (ASSERT) (("1" (LEMMA "to2pi_to2pi_sub") (("1" (INST -1 "alpha!1" "to2pi(beta!1)") (("1" (LEMMA "to2pi_pos") (("1" (INST -1 "to2pi(alpha!1)-to2pi(beta!1)") (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|delta_clockwise-1| |nil| 3569847751 ("" (SKEEP) (("" (EXPAND "util_turnDelta") (("" (POSTPONE) NIL NIL)) NIL)) NIL) NIL SHOSTAK)) (|turnTime_TCC1| 0 (|turnTime_TCC1-1| |nil| 3569326947 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzhVect3| NONEMPTY-TYPE-EQ-DECL NIL |track_3D| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (<= CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_le_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|track| CONST-DECL "nnreal_lt_2pi" |track_3D| NIL) (|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|turnTime| SUBTYPE "kinematics_turn.omega" "nznum"))) (|turnTime_TCC2| 0 (|turnTime_TCC2-1| |nil| 3569843856 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzhVect3| NONEMPTY-TYPE-EQ-DECL NIL |track_3D| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (|track| CONST-DECL "nnreal_lt_2pi" |track_3D| NIL) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nonneg_floor_is_nat| APPLICATION-JUDGEMENT "nat" |floor_ceil| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|turnTime| SUBTYPE "kinematics_turn.omega" "nznum"))) (|turnTimeAlt_TCC1| 0 (|turnTimeAlt_TCC1-1| |nil| 3639900982 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_le_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|turnTimeAlt| SUBTYPE "kinematics_turn.omega" "nznum"))) (|turnTimeAlt_def| 0 (|turnTimeAlt_def-1| |nil| 3639900983 ("" (SKEEP) (("" (EXPAND "turnTime") (("" (EXPAND "turnTimeAlt") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ((|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|turnTime| CONST-DECL "nnreal" |kinematics_turn| NIL) (|turnTimeAlt| CONST-DECL "nnreal" |kinematics_turn| NIL)) SHOSTAK)) (|turnOmega_TCC1| 0 (|turnOmega_TCC1-1| |nil| 3610359934 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|turnOmega| SUBTYPE "kinematics_turn.omega" "nznum"))) (|turnOmega_start| 0 (|turnOmega_start-2| "" 3884830844 ("" (SKEEP) (("" (TYPEPRED ("v0")) (("" (EXPAND "turnOmega") (("" (LIFT-IF 1) (("" (SPLIT 1) (("1" (GROUND) NIL NIL) ("2" (FLATTEN) (("2" (CASE "vect2(v0)`x=0 AND vect2(v0)`y=0") (("1" (HIDE (1 2)) (("1" (GRIND) (("1" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL) ("2" (EXPAND "trk") (("2" (REPLACES 1) (("2" (REWRITE "track.sin_track") (("2" (REWRITE "track.cos_track") (("2" (EXPAND "ground_speed") (("2" (SPLIT 2) (("1" (DECOMPOSE-EQUALITY 1) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND "vect2") (("1" (CROSS-MULT) NIL NIL)) NIL) ("2" (CROSS-MULT) (("2" (EXPAND "vect2") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|turnOmega_start-1| |nil| 3635095332 ("" (SKEEP) (("" (TYPEPRED (V0)) (("" (EXPAND "turnOmega") (("" (LIFT-IF 1) (("" (SPLIT 1) (("1" (GROUND) NIL NIL) ("2" (FLATTEN) (("2" (CASE "vect2(v0)`x=0 AND vect2(v0)`y=0") (("1" (HIDE (1 2)) (("1" (GRIND) (("1" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL) ("2" (EXPAND "trk") (("2" (REPLACES 1) (("2" (REWRITE "track.sin_track") (("2" (REWRITE "track.cos_track") (("2" (EXPAND "ground_speed") (("2" (SPLIT 2) (("1" (DECOMPOSE-EQUALITY 1) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND "vect2") (("1" (CROSS-MULT) NIL NIL)) NIL) ("2" (CROSS-MULT) (("2" (EXPAND "vect2") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|ground_speed_nzv| APPLICATION-JUDGEMENT "posreal" |track_3D| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|sin_track| FORMULA-DECL NIL |track| NIL) (|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|times_div1| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|cos_track| FORMULA-DECL NIL |track| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|add_zero_right| FORMULA-DECL NIL |vectors_3D| |vectors|) (|scal_0| FORMULA-DECL NIL |vectors_3D| |vectors|) (|turnOmega| CONST-DECL "[Vect3, Vect3]" |kinematics_turn| NIL)) SHOSTAK)) (|turnOmegaAT_TCC1| 0 (|turnOmegaAT_TCC1-1| |nil| 3635687028 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzhVect3| NONEMPTY-TYPE-EQ-DECL NIL |track_3D| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|)) NIL (|turnOmegaAT| SUBTYPE "vect_3D_2D.vect2(kinematics_turn.v0)" "Nz_vect2"))) (|turnOmegaAT_TCC2| 0 (|turnOmegaAT_TCC2-1| |nil| 3635687028 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzhVect3| NONEMPTY-TYPE-EQ-DECL NIL |track_3D| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|add_track| CONST-DECL "{w: Vect2 | w = trkgs2vect(track(v) + theta, norm(v))}" |track| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|turnOmegaAT| SUBTYPE "kinematics_turn.omega" "nznum"))) (|turnOmega_equal| 0 (|turnOmega_equal-3| "" 3884830887 ("" (SKEEP) (("" (EXPAND "turnOmega") (("" (EXPAND "turnOmegaAT") (("" (LIFT-IF 1) (("" (GROUND) (("" (TYPEPRED "add_track(vect2(v0), omega * t)") (("" (REPLACES -1) (("" (EXPAND "trkgs2vect") (("" (SIMPLIFY 2) (("" (EXPAND "ground_speed") (("" (CASE-REPLACE "trk(vect2(v0)) = track(vect2(v0))") (("1" (REWRITE "track.cos_track") (("1" (REWRITE "track.sin_track") (("1" (GROUND) (("1" (FIELD 1) (("1" (EXPAND "vect2" 1 1) (("1" (GROUND) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (FIELD 1) (("2" (EXPAND "vect2" 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED ("v0")) (("2" (EXPAND "trk") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (HIDE 4) (("1" (EXPAND "zero") (("1" (GROUND) (("1" (DECOMPOSE-EQUALITY 2) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|turnOmega_equal-2| |nil| 3708426211 ("" (SKEEP) (("" (EXPAND "turnOmega") (("" (EXPAND "turnOmegaAT") (("" (LIFT-IF 1) (("" (GROUND) (("" (TYPEPRED "add_track(vect2(v0), omega * t)") (("" (REPLACES -1) (("" (EXPAND "trkgs2vect") (("" (SIMPLIFY 2) (("" (EXPAND "ground_speed") (("" (CASE-REPLACE "trk(vect2(v0)) = track(vect2(v0))") (("1" (REWRITE "track.cos_track") (("1" (REWRITE "track.sin_track") (("1" (GROUND) (("1" (FIELD 1) (("1" (EXPAND "vect2" 1 1) (("1" (GROUND) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (FIELD 1) (("2" (EXPAND "vect2" 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED (V0)) (("2" (EXPAND "trk") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (HIDE 4) (("1" (EXPAND "zero") (("1" (GROUND) (("1" (DECOMPOSE-EQUALITY 2) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|ground_speed_nzv| APPLICATION-JUDGEMENT "posreal" |track_3D| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|turnOmega| CONST-DECL "[Vect3, Vect3]" |kinematics_turn| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|add_track| CONST-DECL "{w: Vect2 | w = trkgs2vect(track(v) + theta, norm(v))}" |track| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|nzhVect3| NONEMPTY-TYPE-EQ-DECL NIL |track_3D| NIL) (|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (|cos_track| FORMULA-DECL NIL |track| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|div_cancel2| FORMULA-DECL NIL |real_props| NIL) (|sin| CONST-DECL "real" |sincos_def| |trig|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|sin_track| FORMULA-DECL NIL |track| NIL) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|turnOmegaAT| CONST-DECL "[Vect3, Vect3]" |kinematics_turn| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL) (|turnOmega_equal-1| |nil| 3635687091 ("" (SKEEP) (("" (EXPAND "turnOmega") (("" (EXPAND "turnOmegaAT") (("" (LIFT-IF 1) (("" (GROUND) (("" (TYPEPRED "add_track(vect2(v0), omega * t)") (("" (REPLACES -1) (("" (EXPAND "trkgs2vect") (("" (SIMPLIFY 2) (("" (EXPAND "ground_speed") (("" (CASE-REPLACE "trk(vect2(v0)) = track(vect2(v0))") (("1" (REWRITE "cos_track") (("1" (REWRITE "sin_track") (("1" (GROUND) (("1" (FIELD 1) (("1" (EXPAND "vect2" 1 1) (("1" (GROUND) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (FIELD 1) (("2" (EXPAND "vect2" 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED (V0)) (("2" (EXPAND "trk") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (HIDE 4) (("1" (EXPAND "zero") (("1" (GROUND) (("1" (DECOMPOSE-EQUALITY 2) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|center_test_3| 0 (|center_test_3-1| |nil| 3603618218 ("" (EXPAND "center") (("" (EXPAND "zero") (("" (REWRITE "cos_pi4") (("" (REWRITE "sin_pi4") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|sin_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|cos_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|center| CONST-DECL "Vect2" |kinematics_turn| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|center_test_4| 0 (|center_test_4-1| |nil| 3603618290 ("" (EXPAND "zero") (("" (EXPAND "center") (("" (REWRITE "cos_pi4") (("" (REWRITE "sin_pi4") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|center| CONST-DECL "Vect2" |kinematics_turn| NIL) (|sin_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|cos_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)) SHOSTAK)) (|center_test_TCC1| 0 (|center_test_TCC1-1| |nil| 3603613458 ("" (EXPAND "zero") (("" (GRIND) NIL NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)) NIL (|center_test| SUBTYPE "(# x := 0, y := 1, z := 0 #)" "nzhVect3"))) (|center_test| 0 (|center_test-1| |nil| 3603613459 ("" (EXPAND "center") (("" (EXPAND "ground_speed") (("" (EXPAND "trk") (("" (CASE "vect2((# x := 0, y := 1, z := 0 #))`x = 0 AND
              vect2((# x := 0, y := 1, z := 0 #))`y = 0") (("1" (HIDE +) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACES 1) (("2" (GRIND) (("1" (REWRITE "sin_0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "cos_0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|atan_0| FORMULA-DECL NIL |atan| |trig|) (|atan2| CONST-DECL "real" |atan2| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|) (TRUE CONST-DECL "bool" |booleans| NIL) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|center| CONST-DECL "Vect2" |kinematics_turn| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|center_test2| 0 (|center_test2-1| |nil| 3603613601 ("" (EXPAND "center") (("" (EXPAND "ground_speed") (("" (EXPAND "trk") (("" (CASE "vect2((# x := 0, y := 1, z := 0 #))`x = 0 AND
                     vect2((# x := 0, y := 1, z := 0 #))`y = 0") (("1" (HIDE +) (("1" (GRIND) NIL NIL)) NIL) ("2" (REWRITE "cos_0") (("2" (REWRITE "sin_0") (("2" (ASSERT) (("2" (GRIND) (("1" (REWRITE "sin_0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "cos_0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|atan_0| FORMULA-DECL NIL |atan| |trig|) (|atan2| CONST-DECL "real" |atan2| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|center| CONST-DECL "Vect2" |kinematics_turn| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) NIL)) (|turnOmega_thm| 0 (|turnOmega_thm-1| |nil| 3601310254 ("" (SKOSIMP*) (("" (REWRITE "dist_norm") (("" (EXPAND "turnOmega") (("" (EXPAND "vect2") (("" (EXPAND "center") (("" (EXPAND "-") (("" (EXPAND "vect2") (("" (NAME-REPLACE "v" "groundSpeed(v0!1) / omega!1") (("" (ASSERT) (("" (NAME-REPLACE "trk" "track(v0!1)") (("" (CASE-REPLACE "cos(trk) * v - cos(trk + omega!1 * t!1) * v -  v * cos(trk) = - cos(trk + omega!1 * t!1) * v ") (("1" (HIDE -1) (("1" (CASE-REPLACE "sin(trk + omega!1 * t!1) * v - sin(trk) * v + v * sin(trk) = sin(trk + omega!1 * t!1) * v ") (("1" (NAME "A" "trk + omega!1 * t!1") (("1" (REPLACE -1) (("1" (HIDE -1 -2) (("1" (LEMMA "sqv_eq_norm_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (LEMMA "sin2_cos2") (("1" (INST?) (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|dist_norm| FORMULA-DECL NIL |distance_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|turnOmega| CONST-DECL "[Vect3, Vect3]" |kinematics_turn| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzhVect3| NONEMPTY-TYPE-EQ-DECL NIL |track_3D| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|center| CONST-DECL "Vect2" |kinematics_turn| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track_3D| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sq_abs| FORMULA-DECL NIL |sq| |reals|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|sqv_eq_norm_eq| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|ground_speed_nzv| APPLICATION-JUDGEMENT "posreal" |track_3D| NIL)) SHOSTAK)) (|turnOmega_vel| 0 (|turnOmega_vel-1| |nil| 3630761663 ("" (SKEEP) (("" (SPLIT) (("1" (EXPAND "turnOmega") (("1" (EXPAND "ground_speed") (("1" (LEMMA "vectors_2D.norm_scal") (("1" (INST - "norm(vect2(v0))" "(# x := sin(trk(v0) + omega * t),
                        y := cos(trk(v0) + omega * t) #)") (("1" (EXPAND "vect2" + 1) (("1" (EXPAND "*" -1) (("1" (REPLACES -1) (("1" (EXPAND "abs") (("1" (ASSERT) (("1" (TYPEPRED "norm(vect2(v0))") (("1" (ASSERT) (("1" (LEMMA "sin2_cos2") (("1" (INST?) (("1" (GRIND :EXCLUDE ("sin" "cos" "vect2")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "turnOmega") (("2" (EXPAND "center") (("2" (EXPAND "vect2" + 1) (("2" (EXPAND "-") (("2" (ASSERT) (("2" (EXPAND "vect2") (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|ground_speed| CONST-DECL "nnreal" |track_3D| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzhVect3| NONEMPTY-TYPE-EQ-DECL NIL |track_3D| NIL) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|) (|atan2| CONST-DECL "real" |atan2| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (TRUE CONST-DECL "bool" |booleans| NIL) (|norm_scal| FORMULA-DECL NIL |vectors_2D| |vectors|) (|turnOmega| CONST-DECL "[Vect3, Vect3]" |kinematics_turn| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|ground_speed_nzv| APPLICATION-JUDGEMENT "posreal" |track_3D| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|center| CONST-DECL "Vect2" |kinematics_turn| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|turnOmega_TCC2| 0 (|turnOmega_TCC2-1| |nil| 3610359934 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|groundSpeed| CONST-DECL "nnreal" |Velocity| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|turnOmega| SUBTYPE "kinematics_turn.omega" "nznum"))) (|turnOmega_test| 0 (|turnOmega_test-1| |nil| 3603612980 ("" (EXPAND "turnOmega") (("" (REWRITE "cos_plus") (("" (REWRITE "sin_plus") (("" (EXPAND "trk") (("" (ASSERT) (("" (CASE "norm((# x := 0, y := 1 #)) = 1") (("1" (EXPAND "groundSpeed") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REWRITE "cos_pi") (("1" (ASSERT) (("1" (REWRITE "sin_pi") (("1" (ASSERT) (("1" (GRIND :EXCLUDE "cos") (("1" (REWRITE "sin_0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "cos_0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "norm") (("2" (EXPAND "sqv") (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_plus| FORMULA-DECL NIL |sincos| |trig|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|cos_pi| FORMULA-DECL NIL |sincos| |trig|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|sin_pi| FORMULA-DECL NIL |sincos| |trig|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|) (|atan_0| FORMULA-DECL NIL |atan| |trig|) (|atan2| CONST-DECL "real" |atan2| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|) (|groundSpeed| CONST-DECL "nnreal" |Velocity| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_plus| FORMULA-DECL NIL |sincos| |trig|) (|turnOmega| CONST-DECL "[Vect2, Vect2]" |kinematics_turn| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|turnOmega_test2| 0 (|turnOmega_test2-1| |nil| 3603613337 ("" (EXPAND "turnOmega") (("" (REWRITE "cos_plus") (("" (REWRITE "sin_plus") (("" (EXPAND "trk") (("" (ASSERT) (("" (CASE "norm((# x := 0, y := 1 #)) = 1") (("1" (EXPAND "groundSpeed") (("1" (REPLACE -1) (("1" (REWRITE "cos_neg") (("1" (REWRITE "sin_neg") (("1" (ASSERT) (("1" (REWRITE "cos_pi") (("1" (ASSERT) (("1" (REWRITE "sin_pi") (("1" (ASSERT) (("1" (GRIND) (("1" (REWRITE "sin_0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "cos_0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_plus| FORMULA-DECL NIL |sincos| |trig|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_pi| FORMULA-DECL NIL |sincos| |trig|) (|sin_pi| FORMULA-DECL NIL |sincos| |trig|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|) (|atan_0| FORMULA-DECL NIL |atan| |trig|) (|atan2| CONST-DECL "real" |atan2| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|) (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|groundSpeed| CONST-DECL "nnreal" |Velocity| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_plus| FORMULA-DECL NIL |sincos| |trig|) (|turnOmega| CONST-DECL "[Vect2, Vect2]" |kinematics_turn| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) NIL)) (|turnOmega_test3| 0 (|turnOmega_test3-2| |nil| 3603617506 ("" (EXPAND "turnOmega") (("" (REWRITE "cos_plus") (("" (REWRITE "sin_plus") (("" (EXPAND "trk") (("" (ASSERT) (("" (CASE "norm((# x := 0, y := 1 #)) = 1") (("1" (EXPAND "groundSpeed") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REWRITE "cos_pi2") (("1" (REWRITE "sin_pi2") (("1" (ASSERT) (("1" (GRIND :EXCLUDE ("cos" "sin")) (("1" (REWRITE "cos_0") (("1" (REWRITE "sin_0") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REWRITE "cos_0") (("2" (REWRITE "sin_0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_plus| FORMULA-DECL NIL |sincos| |trig|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|cos_pi2| FORMULA-DECL NIL |sincos| |trig|) (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|atan_0| FORMULA-DECL NIL |atan| |trig|) (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sin_pi2| FORMULA-DECL NIL |sincos| |trig|) (|groundSpeed| CONST-DECL "nnreal" |Velocity| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_plus| FORMULA-DECL NIL |sincos| |trig|) (|turnOmega| CONST-DECL "[Vect2, Vect2]" |kinematics_turn| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) NIL) (|turnOmega_test3-1| |nil| 3603617495 ("" (POSTPONE) NIL NIL) NIL SHOSTAK)) (|turnOmega_test4| 0 (|turnOmega_test4-1| |nil| 3603617602 ("" (EXPAND "turnOmega") (("" (REWRITE "cos_plus") (("" (REWRITE "sin_plus") (("" (EXPAND "trk") (("" (ASSERT) (("" (CASE "norm((# x := 0, y := 1 #)) = 1") (("1" (EXPAND "groundSpeed") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "cos_neg") (("1" (INST - "pi/2") (("1" (REPLACES -1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (REPLACES -1) (("1" (REWRITE "cos_pi2") (("1" (REWRITE "sin_pi2") (("1" (ASSERT) (("1" (GRIND :EXCLUDE ("cos" "sin")) (("1" (REWRITE "sin_0") (("1" (REWRITE "cos_0") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REWRITE "cos_0") (("2" (REWRITE "sin_0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_plus| FORMULA-DECL NIL |sincos| |trig|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|trk| CONST-DECL "nnreal_lt_2pi" |track| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|) (TRUE CONST-DECL "bool" |booleans| NIL) (|cos_pi2| FORMULA-DECL NIL |sincos| |trig|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|) (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|atan_0| FORMULA-DECL NIL |atan| |trig|) (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sin_pi2| FORMULA-DECL NIL |sincos| |trig|) (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|groundSpeed| CONST-DECL "nnreal" |Velocity| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_plus| FORMULA-DECL NIL |sincos| |trig|) (|turnOmega| CONST-DECL "[Vect2, Vect2]" |kinematics_turn| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) NIL)))
