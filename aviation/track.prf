(|track| (|trkgs2vectz_nonzero| 0 (|trkgs2vectz_nonzero-2| |nil| 3785321846 ("" (SKEEP) (("" (EXPAND "trkgs2vectz") (("" (LEMMA "sin2_cos2") (("" (LEMMA "sqv_zero") (("" (REPLACES -3 -1 :DIR RL) (("" (REWRITE "sqv_sos") (("" (EXPAND "sos") (("" (ASSERT) (("" (EXPAND "*") (("" (REWRITE "sq_times") (("" (REWRITE "sq_times") (("" (LEMMA "sq_eq_0") (("" (INST?) (("" (CASE "NOT sq(gsp)>0") (("1" (ASSERT) NIL NIL) ("2" (HIDE -2) (("2" (INST - "trk") (("2" (MULT-BY -3 "sq(gsp)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|trkgs2vectz| CONST-DECL "Vect2" |track| NIL) (|sqv_zero| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sqv_sos| FORMULA-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sq_times| FORMULA-DECL NIL |sq| |reals|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sq_eq_0| FORMULA-DECL NIL |sq| |reals|) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|sos| CONST-DECL "nnreal" |vectors_2D| |vectors|) (TRUE CONST-DECL "bool" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|)) NIL (|trkgs2vectz_nonzero| SUBTYPE "track.trkgs2vectz(track.trk, track.gsp)" "Nz_vect2"))) (|trkgs2vect_TCC1| 0 (|trkgs2vect_TCC1-1| |nil| 3785321552 ("" (SKEEP) (("" (LEMMA "trkgs2vectz_nonzero") (("" (INSTEEP) (("" (EXPAND "trkgs2vectz") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|trkgs2vectz_nonzero| JUDGEMENT-TCC NIL |track| NIL) (|trkgs2vectz| CONST-DECL "Vect2" |track| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL (|trkgs2vect| SUBTYPE "vectors_2D.*(track.gsp, (# x := sincos_def.sin(track.trk), y := sincos_def.cos(track.trk) #))" "Nz_vect2"))) (|trkgs2vectz_eq| 0 (|trkgs2vectz_eq-1| |nil| 3785321789 ("" (SKEEP) (("" (EXPAND "trkgs2vectz") (("" (EXPAND "trkgs2vect") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ((|trkgs2vectz| CONST-DECL "Vect2" |track| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| NIL)) SHOSTAK)) (|track_TCC1| 0 (|track_TCC1-1| |nil| 3460312047 ("" (SKEEP) (("" (TYPEPRED "v") (("" (FLATTEN) (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL) ((|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|track| SUBTYPE "track.v`x" "{z: reals.real | booleans.=>(track.v`y = 0, z /= 0)}"))) (|sin_track| 0 (|sin_track-1| |nil| 3460330771 ("" (SKEEP) (("" (EXPAND "track") (("" (REWRITE "sin_atan2") (("1" (LIFT-IF) (("1" (GROUND) (("1" (FIELD 1) (("1" (BOTH-SIDES-F 1 "sq") (("1" (REWRITE "sq_norm") (("1" (REWRITE "sqv_sos") (("1" (EXPAND "sos") (("1" (REPLACES -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "sq_eq") NIL NIL)) NIL)) NIL) ("2" (FIELD 2) (("2" (NEG-FORMULA 2) (("2" (BOTH-SIDES-F 2 "sq") (("1" (REWRITE "sq_norm") (("1" (REWRITE "sq_neg") (("1" (REWRITE "sqv_sos") (("1" (EXPAND "sos") (("1" (REPLACES -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "sq_eq") NIL NIL)) NIL)) NIL)) NIL) ("3" (FIELD) (("3" (CANCEL-BY 1 "v`x") (("3" (BOTH-SIDES-F 2 "sq") (("1" (REWRITE "sq_norm") (("1" (REWRITE "sq_times") (("1" (REWRITE "sq_div") (("1" (REAL-PROPS) (("1" (REWRITE "sqv_sos") (("1" (EXPAND "sos") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "sq_eq") (("2" (MULT-CASES 1) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (FIELD 2) (("4" (CANCEL-BY 2 "v`x") (("4" (NEG-FORMULA 3) (("4" (BOTH-SIDES-F 3 "sq") (("1" (REWRITE "sq_norm") (("1" (REWRITE "sq_neg") (("1" (REWRITE "sq_times") (("1" (REWRITE "sq_div") (("1" (REAL-PROPS) (("1" (REWRITE "sqv_sos") (("1" (EXPAND "sos") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "sq_eq") (("2" (NEG-FORMULA 1 :AUTO-STEP (GRIND-REALS)) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "v") (("2" (FLATTEN) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|) (FDX_13 SKOLEM-CONST-DECL "posreal" |track| NIL) (FDX_12 SKOLEM-CONST-DECL "real" |track| NIL) (FDX_11 SKOLEM-CONST-DECL "{x1: {nnz: nnreal | nnz * nnz = 1 + sq(v`x / v`y)} | x1 > 0}" |track| NIL) (|both_sides_times_neg_ge1| FORMULA-DECL NIL |real_props| NIL) (|negreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nonpos_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (<= CONST-DECL "bool" |reals| NIL) (|neg_times_ge| FORMULA-DECL NIL |real_props| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (DIV_14 SKOLEM-CONST-DECL "real" |track| NIL) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonzero_times3| FORMULA-DECL NIL |real_props| NIL) (FDX_9 SKOLEM-CONST-DECL "posreal" |track| NIL) (FDX_8 SKOLEM-CONST-DECL "real" |track| NIL) (FDX_7 SKOLEM-CONST-DECL "{x1: {nnz: nnreal | nnz * nnz = 1 + sq(v`x / v`y)} | x1 > 0}" |track| NIL) (|v| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|sq_times| FORMULA-DECL NIL |sq| |reals|) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|div_cancel1| FORMULA-DECL NIL |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sq_div| FORMULA-DECL NIL |sq| |reals|) (|pos_times_ge| FORMULA-DECL NIL |real_props| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (DIV_10 SKOLEM-CONST-DECL "real" |track| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|sq_neg| FORMULA-DECL NIL |sq| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|neg_neg| FORMULA-DECL NIL |extra_tegies| NIL) (|neg_one_times| FORMULA-DECL NIL |extra_tegies| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|div_cancel2| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sq_eq| FORMULA-DECL NIL |sq| |reals|) (|sq_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sos| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sq_0| FORMULA-DECL NIL |sq| |reals|) (|sqv_sos| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|sin_atan2| FORMULA-DECL NIL |atan2| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL)) (|cos_track| 0 (|cos_track-2| |nil| 3602107493 ("" (SKEEP) (("" (EXPAND "track") (("" (REWRITE "cos_atan2") (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (FIELD 1) (("1" (BOTH-SIDES-F 1 "sq") (("1" (REWRITE "sq_norm") (("1" (REWRITE "sq_times") (("1" (REWRITE "sq_div") (("1" (REAL-PROPS) (("1" (REWRITE "sqv_sos") (("1" (EXPAND "sos") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "sq_eq") (("2" (MULT-CASES 1) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (FIELD 2) (("2" (NEG-FORMULA 2) (("2" (BOTH-SIDES-F 2 "sq") (("1" (REWRITE "sq_norm") (("1" (REWRITE "sq_neg") (("1" (REWRITE "sq_times") (("1" (REWRITE "sq_div") (("1" (REAL-PROPS) (("1" (REWRITE "sqv_sos") (("1" (EXPAND "sos") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "sq_eq") (("2" (NEG-FORMULA 1 :AUTO-STEP (GRIND-REALS)) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "v") (("2" (FLATTEN) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|) (|neg_one_times| FORMULA-DECL NIL |extra_tegies| NIL) (|neg_neg| FORMULA-DECL NIL |extra_tegies| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|both_sides_times_neg_ge1| FORMULA-DECL NIL |real_props| NIL) (|negreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nonpos_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (<= CONST-DECL "bool" |reals| NIL) (|neg_times_ge| FORMULA-DECL NIL |real_props| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|sq_neg| FORMULA-DECL NIL |sq| |reals|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|sq_times| FORMULA-DECL NIL |sq| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|div_cancel1| FORMULA-DECL NIL |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sos| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqv_sos| FORMULA-DECL NIL |vectors_2D| |vectors|) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|sq_div| FORMULA-DECL NIL |sq| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sq_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|pos_times_ge| FORMULA-DECL NIL |real_props| NIL) (|sq_eq| FORMULA-DECL NIL |sq| |reals|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|cos_atan2| FORMULA-DECL NIL |atan2| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL) (|cos_track-1| |nil| 3460312258 ("" (SKEEP) (("" (EXPAND "track") (("" (REWRITE "cos_atan2") (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (FIELD 1) (("1" (BOTH-SIDES-F 1 "sq") (("1" (REWRITE "sq_norm") (("1" (REWRITE "sq_times") (("1" (REWRITE "sq_div") (("1" (REAL-PROPS) (("1" (REWRITE "sqv_sq") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "sq_eq") (("2" (MULT-CASES 1) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (FIELD 2) (("2" (NEG-FORMULA 2) (("2" (BOTH-SIDES-F 2 "sq") (("1" (REWRITE "sq_norm") (("1" (REWRITE "sq_neg") (("1" (REWRITE "sq_times") (("1" (REWRITE "sq_div") (("1" (REAL-PROPS) (("1" (REWRITE "sqv_sq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "sq_eq") (("2" (NEG-FORMULA 1 :AUTO-STEP (GRIND-REALS)) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "v") (("2" (FLATTEN) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|norm_id| 0 (|norm_id-2| |nil| 3602107517 ("" (SKEEP) (("" (EXPAND "trkgs2vect") (("" (EXPAND "norm") (("" (REWRITE "sqv_scal") (("" (SQ-SIMP) (("" (REWRITE "sqv_sos") (("" (EXPAND "sos") (("" (LEMMA "sin2_cos2") (("" (INST?) (("" (REPLACES -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|trkgs2vect| CONST-DECL "Nz_vect2" |track| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|sqv_sos| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|) (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sos| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|) (TRUE CONST-DECL "bool" |booleans| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)) NIL) (|norm_id-1| |nil| 3464478912 ("" (SKEEP) (("" (EXPAND "trkgs2vect") (("" (EXPAND "norm") (("" (REWRITE "sqv_scal") (("" (REWRITE "sqv_sq") (("" (LEMMA "sin2_cos2") (("" (INST?) (("" (REPLACES -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|track_id| 0 (|track_id-1| |nil| 3460311988 ("" (SKEEP) (("" (EXPAND "trkgs2vect") (("" (EXPAND "track") (("" (EXPAND "*") (("" (LEMMA "atan2_cancel_pos") (("" (INST -1 "gsp" "cos(trk)" "sin(trk)") (("" (SPLIT -1) (("1" (REPLACES -1) (("1" (LEMMA "atan2_cos_sin") (("1" (INST -1 "to2pi(trk)") (("1" (REWRITE "cos_id_to2pi") (("1" (REWRITE "sin_id_to2pi") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (FLATTEN) (("2" (LEMMA "sin2_cos2") (("2" (INST? -1) (("2" (REPLACES (-2 -3)) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|trkgs2vect| CONST-DECL "Nz_vect2" |track| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|sin2_cos2| FORMULA-DECL NIL |sincos_def| |trig|) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|sq_0| FORMULA-DECL NIL |sq| |reals|) (TRUE CONST-DECL "bool" |booleans| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|sin_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|cos_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|atan2_cos_sin| FORMULA-DECL NIL |atan2| |trig|) (|atan2_cancel_pos| FORMULA-DECL NIL |atan2| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL)) NIL)) (|trkgs2vectz_id| 0 (|trkgs2vectz_id-1| |nil| 3785321675 ("" (SKEEP) (("" (EXPAND "trkgs2vectz") (("" (EXPAND "*") (("" (REWRITE "sin_track") (("" (REWRITE "cos_track") (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|trkgs2vectz| CONST-DECL "Vect2" |track| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sin_track| FORMULA-DECL NIL |track| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|cos_track| FORMULA-DECL NIL |track| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|)) NIL)) (|trkgs2vect_id| 0 (|trkgs2vect_id-1| |nil| 3460330284 ("" (SKEEP) (("" (REWRITE "trkgs2vectz_eq" :DIR RL) (("" (REWRITE "trkgs2vectz_id") NIL NIL)) NIL)) NIL) ((|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|trkgs2vectz_eq| FORMULA-DECL NIL |track| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|trkgs2vectz_nonzero| APPLICATION-JUDGEMENT "Nz_vect2" |track| NIL) (|trkgs2vectz_id| FORMULA-DECL NIL |track| NIL)) SHOSTAK)) (|track_scal| 0 (|track_scal-1| |nil| 3603705319 ("" (SKEEP) (("" (EXPAND "track") (("" (EXPAND "atan2") (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (REWRITE "vx_scal") (("" (REWRITE "vy_scal") (("" (ASSERT) (("" (LIFT-IF) (("" (LIFT-IF) (("" (ASSERT) (("" (GROUND) (("1" (MULT-BY 1 "c") (("1" (ASSERT) NIL NIL)) NIL) ("2" (MULT-BY 1 "c") (("2" (ASSERT) NIL NIL)) NIL) ("3" (MULT-BY -1 "c") (("3" (ASSERT) NIL NIL)) NIL) ("4" (MULT-BY 1 "c") (("4" (ASSERT) NIL NIL)) NIL) ("5" (MULT-BY -2 "c") (("5" (ASSERT) NIL NIL)) NIL) ("6" (MULT-BY -1 "c") (("6" (ASSERT) NIL NIL)) NIL) ("7" (MULT-BY 1 "c") (("7" (ASSERT) NIL NIL)) NIL) ("8" (MULT-BY -2 "c") (("8" (ASSERT) NIL NIL)) NIL) ("9" (MULT-BY -1 "c") (("9" (ASSERT) NIL NIL)) NIL) ("10" (MULT-BY -1 "c") (("10" (ASSERT) NIL NIL)) NIL) ("11" (MULT-BY -2 "c") (("11" (ASSERT) NIL NIL)) NIL) ("12" (MULT-BY -1 "c") (("12" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|vx_scal| FORMULA-DECL NIL |vectors_2D| |vectors|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|both_sides_times_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|both_sides_times_pos_gt1| FORMULA-DECL NIL |real_props| NIL) (|vy_scal| FORMULA-DECL NIL |vectors_2D| |vectors|) (|atan2| CONST-DECL "real" |atan2| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|ordered_eps_1_TCC1| 0 (|ordered_eps_1_TCC1-1| |nil| 3461513175 ("" (SUBTYPE-TCC) NIL NIL) ((|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|det| CONST-DECL "real" |det_2D| |vectors|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) NIL (|ordered_eps_1| SUBTYPE "number_fields./(det_2D.det(track.vi, track.s), (number_fields.*(vectors_2D.norm(track.nvo), vectors_2D.norm(track.s))))" "real_abs_le1"))) (|ordered_eps_1| 0 (|ordered_eps_1-2| "" 3505030827 ("" (SKEEP) (("" (SKOLETIN* 1) (("" (CASE-REPLACE "det(nvo,s) = norm(nvo)*norm(s)*sin(track(nvo)-track(s))") (("1" (HIDE -1) (("1" (CASE-REPLACE "norm(nvo) * norm(s) * sin(track(nvo) - track(s)) > det(vi, s) IFF
                             sin(track(nvo) - track(s)) > det(vi, s) / (norm(nvo)*norm(s))") (("1" (HIDE -1) (("1" (BOTH-SIDES-F -3 "sin") (("1" (REWRITE "sin_asin") (("1" (REPLACES -1 :DIR RL) (("1" (LEMMA "sin_gt_to2pi") (("1" (INST -1 "track(nvo)-track(s)" "psi") (("1" (ASSERT) (("1" (REPLACES -1) (("1" (CASE-REPLACE "psi < to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 AND
                                            to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 < pi - psi IFF 0 < to2pi(track(nvo) - track(s) - psi) AND
                                            to2pi(track(nvo) - track(s) - psi) < pi - 2*psi") (("1" (HIDE -1) (("1" (REPLACES (-1 -2 -3)) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi < 0") (("1" (CASE "psi < to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2") (("1" (HIDE 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "to2pi(track(nvo) - track(s) - psi) < pi - 2 * psi") (("1" (HIDE 1 2) (("1" (LEMMA "to2pi_neg") (("1" (INST -1 "to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi") (("1" (LEMMA "to2pi_to2pi") (("1" (INST -1 "track(nvo) + pi / 2 - track(s)" "-pi/2 - psi") (("1" (REPLACES -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE-REPLACE "psi < to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 AND
                                                                   to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 < pi - psi IFF 0 < to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi AND  to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi < pi - 2*psi") (("1" (HIDE -1) (("1" (LEMMA "to2pi_id") (("1" (INST -1 "to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi") (("1" (LEMMA "to2pi_to2pi") (("1" (INST -1 "track(nvo) + pi / 2 - track(s)" "-pi/2 - psi") (("1" (REPLACES -1) (("1" (SPLIT +) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND-REALS) (("1" (MULT-BY 1 "(norm(nvo) * norm(s))") (("1" (ASSERT) NIL NIL)) NIL) ("2" (MULT-BY -1 "(norm(nvo) * norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "trkgs2vect_id") (("2" (INST-CP -1 "nvo") (("2" (INST -1 "s") (("2" (EXPAND "trkgs2vect") (("2" (REWRITE "sin_minus") (("2" (NAME-REPLACE "ts" "track(s)") (("2" (NAME-REPLACE "tnvo" "track(nvo)") (("2" (EXPAND "det") (("2" (NAME-REPLACE "nnvo" "norm(nvo)") (("2" (NAME-REPLACE "ns" "norm(s)") (("2" (REPLACES (-1 -2) :DIR RL) (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (<= CONST-DECL "bool" |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|det| CONST-DECL "real" |det_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|trkgs2vect_id| FORMULA-DECL NIL |track| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|div_cancel2| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|both_sides_times_pos_gt1| FORMULA-DECL NIL |real_props| NIL) (|sin_asin| FORMULA-DECL NIL |trig_inverses| |trig|) (|sin_gt_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|to2pi_neg| FORMULA-DECL NIL |to2pi| |trig|) (|to2pi_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|psi| SKOLEM-CONST-DECL "real_abs_le_pi2" |track| NIL) (|s| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|nvo| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|ordered_det_ge| 0 (|ordered_det_ge-1| |nil| 3461513312 ("" (SKEEP) (("" (SKOLETIN* 1) (("" (CASE-REPLACE "det(nvo,s) = norm(nvo)*norm(s)*sin(track(nvo)-track(s))") (("1" (HIDE -1) (("1" (CASE-REPLACE "norm(nvo) * norm(s) * sin(track(nvo) - track(s)) >= det(vi, s) IFF
                             sin(track(nvo) - track(s)) >= det(vi, s) / (norm(nvo)*norm(s))") (("1" (HIDE -1) (("1" (BOTH-SIDES-F -3 "sin") (("1" (REWRITE "sin_asin") (("1" (REPLACES -1 :DIR RL) (("1" (LEMMA "sin_ge_to2pi") (("1" (INST -1 "track(nvo)-track(s)" "psi") (("1" (ASSERT) (("1" (REPLACES -1) (("1" (CASE-REPLACE "psi <= to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 AND
                                            to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 <= pi - psi IFF 0 <= to2pi(track(nvo) - track(s) - psi) AND
                                            to2pi(track(nvo) - track(s) - psi) <= pi - 2*psi") (("1" (HIDE -1) (("1" (REPLACES (-1 -2 -3)) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi < 0") (("1" (CASE "psi <= to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2") (("1" (HIDE 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "to2pi(track(nvo) - track(s) - psi) <= pi - 2 * psi") (("1" (HIDE 1 2) (("1" (LEMMA "to2pi_neg") (("1" (INST -1 "to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi") (("1" (LEMMA "to2pi_to2pi") (("1" (INST -1 "track(nvo) + pi / 2 - track(s)" "-pi/2 - psi") (("1" (REPLACES -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE-REPLACE "psi <= to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 AND
                                                                   to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 <= pi - psi IFF 0 <= to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi AND  to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi <= pi - 2*psi") (("1" (HIDE -1) (("1" (LEMMA "to2pi_id") (("1" (INST -1 "to2pi(track(nvo) + pi / 2 - track(s)) - pi / 2 - psi") (("1" (LEMMA "to2pi_to2pi") (("1" (INST -1 "track(nvo) + pi / 2 - track(s)" "-pi/2 - psi") (("1" (REPLACES -1) (("1" (SPLIT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND-REALS) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "trkgs2vect_id") (("2" (INST-CP -1 "nvo") (("2" (INST -1 "s") (("2" (EXPAND "trkgs2vect") (("2" (REWRITE "sin_minus") (("2" (NAME-REPLACE "ts" "track(s)") (("2" (NAME-REPLACE "tnvo" "track(nvo)") (("2" (EXPAND "det") (("2" (NAME-REPLACE "nnvo" "norm(nvo)") (("2" (NAME-REPLACE "ns" "norm(s)") (("2" (REPLACES (-1 -2) :DIR RL) (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (<= CONST-DECL "bool" |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|det| CONST-DECL "real" |det_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|trkgs2vect_id| FORMULA-DECL NIL |track| NIL) (|div_mult_pos_ge2| FORMULA-DECL NIL |real_props| NIL) (|sin_asin| FORMULA-DECL NIL |trig_inverses| |trig|) (|sin_ge_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|to2pi_neg| FORMULA-DECL NIL |to2pi| |trig|) (|to2pi_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|psi| SKOLEM-CONST-DECL "real_abs_le_pi2" |track| NIL) (|s| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|nvo| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|ordered_eps_neg_1| 0 (|ordered_eps_neg_1-1| |nil| 3460980839 ("" (SKEEP) (("" (LEMMA "ordered_det_ge") (("" (INST -1 "nvo" "s" "vi") (("" (GROUND) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|ordered_det_ge| FORMULA-DECL NIL |track| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|ordered_eps_1_dot_gt_0| 0 (|ordered_eps_1_dot_gt_0-1| |nil| 3461500351 ("" (SKEEP) (("" (SKOLETIN* 1) (("" (CASE-REPLACE "nvo*s = norm(nvo)*norm(s)*cos(track(nvo)-track(s))") (("1" (HIDE -1) (("1" (CASE-REPLACE "norm(nvo) * norm(s) * cos(track(nvo) - track(s)) > 0 IFF cos(track(nvo) - track(s)) > 0") (("1" (HIDE -1) (("1" (LEMMA "cos_pos_to2pi") (("1" (INST?) (("1" (REPLACES -1) (("1" (CASE-REPLACE "-pi / 2 < to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 AND
                                             to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 < pi / 2 IFF -pi / 2 - psi < to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 - psi AND
                                             to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 - psi < pi/2 - psi") (("1" (HIDE -1) (("1" (CASE "to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 - psi >= 0") (("1" (LEMMA "to2pi_id") (("1" (INST -1 "to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 - psi") (("1" (REPLACES -1 :DIR RL) (("1" (LEMMA "to2pi_to2pi") (("1" (INST -1 "track(nvo) - track(s) + pi / 2" "-pi/2 - psi") (("1" (REPLACES -1) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (LEMMA "ordered_eps_1") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACES -5 :DIR RL) (("1" (REPLACES -1) (("1" (REPLACES -3) (("1" (ASSERT) (("1" (REPLACES -3 :DIR RL) (("1" (NAME-REPLACE "xx" "to2pi(track(nvo) - phi - psi)") (("1" (HIDE -3) (("1" (REPLACES -2) (("1" (SPLIT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "beta <= 3*pi/2 - psi") (("1" (LEMMA "to2pi_neg") (("1" (INST -1 "to2pi(track(nvo) + pi / 2 - phi) - pi / 2 - psi") (("1" (LEMMA "to2pi_to2pi") (("1" (INST -1 "track(nvo) + pi / 2 - phi" "-pi/2 -psi") (("1" (REPLACES -1) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FLATTEN) (("1" (LEMMA "ordered_eps_1") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "nvo") (("2" (FLATTEN) (("2" (TYPEPRED "s") (("2" (FLATTEN) (("2" (GROUND) (("1" (MULT-CASES -1) (("1" (MULT-CASES -1) NIL NIL)) NIL) ("2" (MULT-CASES 1) (("2" (MULT-CASES 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE "cos_minus") (("2" (REWRITE "cos_track") (("2" (REWRITE "cos_track") (("2" (REWRITE "sin_track") (("2" (REWRITE "sin_track") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (<= CONST-DECL "bool" |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|det| CONST-DECL "real" |det_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|cos_track| FORMULA-DECL NIL |track| NIL) (|sin_track| FORMULA-DECL NIL |track| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_minus| FORMULA-DECL NIL |sincos| |trig|) (|pos_times_gt| FORMULA-DECL NIL |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|psi| SKOLEM-CONST-DECL "real_abs_le_pi2" |track| NIL) (|s| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|nvo| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|to2pi_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|abs_mult| FORMULA-DECL NIL |real_props| NIL) (|abs_div| FORMULA-DECL NIL |real_props| NIL) (|neg_times_le| FORMULA-DECL NIL |real_props| NIL) (|neg_times_lt| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|ordered_eps_1| FORMULA-DECL NIL |track| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|to2pi_neg| FORMULA-DECL NIL |to2pi| |trig|) (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|both_sides_minus_lt1| FORMULA-DECL NIL |real_props| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|cos_pos_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|ordered_eps_1_dot_ge_0| 0 (|ordered_eps_1_dot_ge_0-1| |nil| 3461500391 ("" (SKEEP) (("" (SKOLETIN* 1) (("" (CASE-REPLACE "nvo*s = norm(nvo)*norm(s)*cos(track(nvo)-track(s))") (("1" (HIDE -1) (("1" (CASE-REPLACE "norm(nvo) * norm(s) * cos(track(nvo) - track(s)) >= 0 IFF cos(track(nvo) - track(s)) >= 0") (("1" (HIDE -1) (("1" (LEMMA "cos_nneg_to2pi") (("1" (INST?) (("1" (REPLACES -1) (("1" (CASE-REPLACE "-pi / 2 <= to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 AND
                                             to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 <= pi / 2 IFF -pi / 2 - psi <= to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 - psi AND
                                             to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 - psi <= pi/2 - psi") (("1" (HIDE -1) (("1" (CASE "to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 - psi >= 0") (("1" (LEMMA "to2pi_id") (("1" (INST -1 "to2pi(track(nvo) - track(s) + pi / 2) - pi / 2 - psi") (("1" (REPLACES -1 :DIR RL) (("1" (LEMMA "to2pi_to2pi") (("1" (INST -1 "track(nvo) - track(s) + pi / 2" "-pi/2 - psi") (("1" (REPLACES -1) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (LEMMA "ordered_eps_1") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACES -5 :DIR RL) (("1" (REPLACES -1) (("1" (REPLACES -3) (("1" (ASSERT) (("1" (REPLACES -3 :DIR RL) (("1" (NAME-REPLACE "xx" "to2pi(track(nvo) - phi - psi)") (("1" (HIDE -3) (("1" (REPLACES -2) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "beta <= 3*pi/2 - psi") (("1" (LEMMA "to2pi_neg") (("1" (INST -1 "to2pi(track(nvo) + pi / 2 - phi) - pi / 2 - psi") (("1" (LEMMA "to2pi_to2pi") (("1" (INST -1 "track(nvo) + pi / 2 - phi" "-pi/2 -psi") (("1" (REPLACES -1) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (LEMMA "ordered_eps_1") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "nvo") (("2" (FLATTEN) (("2" (TYPEPRED "s") (("2" (FLATTEN) (("2" (GROUND) (("1" (MULT-CASES -1) (("1" (MULT-CASES -1) NIL NIL)) NIL) ("2" (MULT-CASES 1) (("2" (MULT-CASES 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE "cos_minus") (("2" (REWRITE "cos_track") (("2" (REWRITE "cos_track") (("2" (REWRITE "sin_track") (("2" (REWRITE "sin_track") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (<= CONST-DECL "bool" |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|det| CONST-DECL "real" |det_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|cos_track| FORMULA-DECL NIL |track| NIL) (|sin_track| FORMULA-DECL NIL |track| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_minus| FORMULA-DECL NIL |sincos| |trig|) (|pos_times_ge| FORMULA-DECL NIL |real_props| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|psi| SKOLEM-CONST-DECL "real_abs_le_pi2" |track| NIL) (|s| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|nvo| SKOLEM-CONST-DECL "Nz_vect2" |track| NIL) (|to2pi_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|abs_mult| FORMULA-DECL NIL |real_props| NIL) (|abs_div| FORMULA-DECL NIL |real_props| NIL) (|neg_times_le| FORMULA-DECL NIL |real_props| NIL) (|neg_times_lt| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|ordered_eps_1| FORMULA-DECL NIL |track| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|to2pi_neg| FORMULA-DECL NIL |to2pi| |trig|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|cos_nneg_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|ordered_eps_1_dot_lt_0| 0 (|ordered_eps_1_dot_lt_0-1| |nil| 3461500509 ("" (SKEEP) (("" (SKOLETIN* 1) (("" (LEMMA "ordered_eps_1") (("" (INST?) (("" (ASSERT) (("" (LEMMA "ordered_eps_1_dot_ge_0") (("" (INST -1 "nvo" "s" "vi") (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (<= CONST-DECL "bool" |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|det| CONST-DECL "real" |det_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|ordered_eps_1_dot_ge_0| FORMULA-DECL NIL |track| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|ordered_eps_1| FORMULA-DECL NIL |track| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|ordered_eps_1_dot_le_0| 0 (|ordered_eps_1_dot_le_0-1| |nil| 3461500584 ("" (SKEEP) (("" (SKOLETIN* 1) (("" (LEMMA "ordered_eps_1") (("" (INST?) (("" (ASSERT) (("" (LEMMA "ordered_eps_1_dot_gt_0") (("" (INST -1 "nvo" "s" "vi") (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (<= CONST-DECL "bool" |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|det| CONST-DECL "real" |det_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|ordered_eps_1_dot_gt_0| FORMULA-DECL NIL |track| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|ordered_eps_1| FORMULA-DECL NIL |track| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|trk_TCC1| 0 (|trk_TCC1-1| |nil| 3610211218 ("" (SKEEP) (("" (LEMMA "pi_bnds") (("" (GROUND) NIL NIL)) NIL)) NIL) ((|pi_bnds| FORMULA-DECL NIL |atan| |trig|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) NIL (|trk| SUBTYPE "0" "nnreal_lt_2pi"))) (|trk_TCC2| 0 (|trk_TCC2-1| |nil| 3610211218 ("" (SUBTYPE-TCC) NIL NIL) ((|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL (|trk| SUBTYPE "track.vv" "Nz_vect2"))) (|add_track_TCC1| 0 (|add_track_TCC1-2| "" 3884832516 ("" (SKEEP) (("" (TYPEPRED ("v")) (("" (EXPAND "trkgs2vect") (("" (REWRITE "sin_plus") (("" (REWRITE "cos_plus") (("" (TYPEPRED "track(v)") (("" (REWRITE "cos_track") (("" (REWRITE "sin_track") (("" (EXPAND "*" 1 5) (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|add_track| SUBTYPE "(# x := (LET sin_theta = sincos_def.sin(track.theta), cos_theta = sincos_def.cos(track.theta) IN ((number_fields.+)(number_fields.*(track.v`x, track.cos_theta), number_fields.*(track.v`y, track.sin_theta)), (number_fields.+)(number_fields.*((number_fields.-)(track.v`x), track.sin_theta), number_fields.*(track.v`y, track.cos_theta))))`1, y := (LET sin_theta = sincos_def.sin(track.theta), cos_theta = sincos_def.cos(track.theta) IN ((number_fields.+)(number_fields.*(track.v`x, track.cos_theta), number_fields.*(track.v`y, track.sin_theta)), (number_fields.+)(number_fields.*((number_fields.-)(track.v`x), track.sin_theta), number_fields.*(track.v`y, track.cos_theta))))`2 #)" "{w: vectors_2D_def.Vect2 | w = track.trkgs2vect((number_fields.+)(track.theta, track.track(track.v)), vectors_2D.norm(track.v))}")) (|add_track_TCC1-1| |nil| 3635604374 ("" (SKEEP) (("" (TYPEPRED (V)) (("" (EXPAND "trkgs2vect") (("" (REWRITE "sin_plus") (("" (REWRITE "cos_plus") (("" (TYPEPRED "track(v)") (("" (REWRITE "cos_track") (("" (REWRITE "sin_track") (("" (EXPAND "*" 1 5) (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|sin_plus| FORMULA-DECL NIL |sincos| |trig|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| NIL) (|sin_track| FORMULA-DECL NIL |track| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_track| FORMULA-DECL NIL |track| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_plus| FORMULA-DECL NIL |sincos| |trig|) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)) NIL (|add_track| SUBTYPE "(# x := (LET sin_theta = sincos_def.sin(track.theta), cos_theta = sincos_def.cos(track.theta) IN ((number_fields.+)(number_fields.*(track.v`x, track.cos_theta), number_fields.*(track.v`y, track.sin_theta)), (number_fields.+)(number_fields.*((number_fields.-)(track.v`x), track.sin_theta), number_fields.*(track.v`y, track.cos_theta))))`1, y := (LET sin_theta = sincos_def.sin(track.theta), cos_theta = sincos_def.cos(track.theta) IN ((number_fields.+)(number_fields.*(track.v`x, track.cos_theta), number_fields.*(track.v`y, track.sin_theta)), (number_fields.+)(number_fields.*((number_fields.-)(track.v`x), track.sin_theta), number_fields.*(track.v`y, track.cos_theta))))`2 #)" "{w: vectors_2D_def.Vect2 | w = track.trkgs2vect((number_fields.+)(track.theta, track.track(track.v)), vectors_2D.norm(track.v))}"))))
