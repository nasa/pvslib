(|ln_exp_def|
 (|nn_rational_expt_def| 0
  (|nn_rational_expt_def-1| |nil| 3432418222
   ("" (SKOSIMP)
    (("" (EXPAND "nn_rational_expt")
      (("" (REWRITE "expt_exp")
        (("1" (REWRITE "nn_root_def")
          (("1" (REWRITE "ln_exp")
            (("1" (LEMMA "rational_def" ("r" "q!1")) (("1" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (TYPEPRED "q!1")
            (("2" (EXPAND ">=" -1)
              (("2" (EXPAND "<=" -1)
                (("2" (SPLIT)
                  (("1" (LEMMA "numerator_pos" ("r" "q!1"))
                    (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (LEMMA "numerator_is_zero" ("r" "q!1"))
                    (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|nnreal_expt_def| 0
  (|nnreal_expt_def-2| |nil| 3453736998
   ("" (SKOSIMP)
    (("" (EXPAND "nnreal_expt")
      (("" (ASSERT)
        (("" (CASE-REPLACE "z!1=0")
          (("1" (REWRITE "exp_0") NIL NIL)
           ("2" (ASSERT)
            (("2" (CASE "z!1>0")
              (("1" (HIDE 1)
                (("1" (LEMMA "trich_lt" ("x" "y!1" "y" "1"))
                  (("1" (SPLIT)
                    (("1" (ASSERT)
                      (("1"
                        (TYPEPRED "glb(extend[real, nnreal, bool, FALSE]
                              ({z | EXISTS q: q <= z!1 AND z = nn_rational_expt(y!1, q)}))")
                        (("1"
                          (NAME-REPLACE "GLB"
                           "glb(extend[real, nnreal, bool, FALSE]
                              ({z | EXISTS q: q <= z!1 AND z = nn_rational_expt(y!1, q)}))")
                          (("1" (EXPAND "extend")
                            (("1" (EXPAND "greatest_lower_bound?")
                              (("1" (FLATTEN)
                                (("1" (EXPAND "lower_bound?")
                                  (("1"
                                    (LEMMA "trich_lt"
                                     ("x" "GLB" "y" "exp(z!1 * ln(y!1))"))
                                    (("1" (SPLIT -1)
                                      (("1" (HIDE 1)
                                        (("1" (LEMMA "exp_continuous")
                                          (("1" (EXPAND "continuous?")
                                            (("1" (INST - "z!1 * ln(y!1)")
                                              (("1" (EXPAND "continuous?")
                                                (("1"
                                                  (NAME "EPS"
                                                        "exp(z!1 * ln(y!1))-GLB")
                                                  (("1" (INST - "EPS")
                                                    (("1" (SKOSIMP)
                                                      (("1"
                                                        (LEMMA
                                                         "ln_strict_increasing")
                                                        (("1"
                                                          (EXPAND
                                                           "strict_increasing?")
                                                          (("1"
                                                            (INST - "y!1" "1")
                                                            (("1"
                                                              (REWRITE "ln_1")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "posreal_div_posreal_is_posreal"
                                                                   ("px"
                                                                    "delta!1"
                                                                    "py"
                                                                    "abs(ln(y!1))"))
                                                                  (("1"
                                                                    (INST -7
                                                                     "exp(z!1 * ln(y!1))")
                                                                    (("1"
                                                                      (SPLIT
                                                                       -7)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (SKOSIMP)
                                                                        (("2"
                                                                          (TYPEPRED
                                                                           "s!1")
                                                                          (("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (SKOSIMP)
                                                                              (("2"
                                                                                (LEMMA
                                                                                 "both_sides_times_neg_le1"
                                                                                 ("nz"
                                                                                  "ln(y!1)"
                                                                                  "y"
                                                                                  "q!1"
                                                                                  "x"
                                                                                  "z!1"))
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "exp_increasing")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "increasing?")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -
                                                                                         "z!1 * ln(y!1)"
                                                                                         "q!1 * ln(y!1)")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (REWRITE
                                                                                             "nn_rational_expt_def")
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (PROPAX) NIL NIL)
                                       ("3" (HIDE -3)
                                        (("3"
                                          (NAME "EPS" "GLB-exp(z!1 * ln(y!1))")
                                          (("3" (CASE "EPS>0")
                                            (("1" (LEMMA "exp_continuous")
                                              (("1" (EXPAND "continuous?")
                                                (("1" (INST - "z!1 * ln(y!1)")
                                                  (("1" (EXPAND "continuous?")
                                                    (("1" (INST - "EPS")
                                                      (("1" (SKOSIMP)
                                                        (("1"
                                                          (LEMMA
                                                           "ln_strict_increasing")
                                                          (("1"
                                                            (EXPAND
                                                             "strict_increasing?")
                                                            (("1"
                                                              (INST - "y!1"
                                                               "1")
                                                              (("1"
                                                                (REWRITE
                                                                 "ln_1")
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "posreal_div_posreal_is_posreal"
                                                                     ("px"
                                                                      "delta!1"
                                                                      "py"
                                                                      "abs(ln(y!1))"))
                                                                    (("1"
                                                                      (LEMMA
                                                                       "density_positive"
                                                                       ("x"
                                                                        "max(0,z!1-delta!1 / abs(ln(y!1)))"
                                                                        "y"
                                                                        "z!1"))
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (SPLIT)
                                                                          (("1"
                                                                            (SKOSIMP)
                                                                            (("1"
                                                                              (INST
                                                                               -
                                                                               "r!1*ln(y!1)")
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "abs_mult"
                                                                                 ("x"
                                                                                  "r!1-z!1"
                                                                                  "y"
                                                                                  "ln(y!1)"))
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "div_mult_pos_lt2"
                                                                                     ("x"
                                                                                      "abs(r!1 - z!1)"
                                                                                      "py"
                                                                                      "abs(ln(y!1))"
                                                                                      "z"
                                                                                      "delta!1"))
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       *
                                                                                       RL)
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -1
                                                                                         -2)
                                                                                        (("1"
                                                                                          (NAME-REPLACE
                                                                                           "DELTA"
                                                                                           "delta!1 / abs(ln(y!1))")
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "abs"
                                                                                             -5)
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (LEMMA
                                                                                                 "both_sides_times_neg_lt1"
                                                                                                 ("nz"
                                                                                                  "ln(y!1)"
                                                                                                  "y"
                                                                                                  "r!1"
                                                                                                  "x"
                                                                                                  "z!1"))
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (LEMMA
                                                                                                     "exp_strict_increasing")
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "strict_increasing?")
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -
                                                                                                         "z!1 * ln(y!1)"
                                                                                                         "r!1 * ln(y!1)")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -
                                                                                                             "exp(r!1 * ln(y!1))")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (INST
                                                                                                               +
                                                                                                               "r!1")
                                                                                                              (("2"
                                                                                                                (ASSERT)
                                                                                                                (("2"
                                                                                                                  (REWRITE
                                                                                                                   "nn_rational_expt_def")
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (NAME-REPLACE
                                                                             "DELTA"
                                                                             "delta!1 / abs(ln(y!1))")
                                                                            (("2"
                                                                              (HIDE-ALL-BUT
                                                                               (-1
                                                                                -9
                                                                                1))
                                                                              (("2"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (NAME-REPLACE
                                                                             "DELTA"
                                                                             "delta!1 / abs(ln(y!1))")
                                                                            (("3"
                                                                              (HIDE-ALL-BUT
                                                                               (-1
                                                                                -9
                                                                                1))
                                                                              (("3"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)
                     ("3" (ASSERT)
                      (("3"
                        (TYPEPRED "lub(extend[real, nnreal, bool, FALSE]
                              ({z | EXISTS q: q <= z!1 AND z = nn_rational_expt(y!1, q)}))")
                        (("3"
                          (NAME-REPLACE "LUB"
                           "lub(extend[real, nnreal, bool, FALSE]
                              ({z | EXISTS q: q <= z!1 AND z = nn_rational_expt(y!1, q)}))")
                          (("3" (EXPAND "least_upper_bound?")
                            (("3" (EXPAND "extend")
                              (("3" (EXPAND "upper_bound?")
                                (("3" (FLATTEN)
                                  (("3" (LEMMA "ln_strict_increasing")
                                    (("3" (EXPAND "strict_increasing?")
                                      (("3" (INST - "1" "y!1")
                                        (("3" (REWRITE "ln_1")
                                          (("3" (ASSERT)
                                            (("3"
                                              (LEMMA "trich_lt"
                                               ("x" "LUB" "y"
                                                "exp(z!1 * ln(y!1))"))
                                              (("3" (SPLIT)
                                                (("1" (HIDE -4 1)
                                                  (("1"
                                                    (NAME "EPS"
                                                          "exp(z!1 * ln(y!1))-LUB")
                                                    (("1"
                                                      (LEMMA "exp_continuous")
                                                      (("1"
                                                        (EXPAND "continuous?")
                                                        (("1"
                                                          (INST -
                                                           "z!1*ln(y!1)")
                                                          (("1"
                                                            (EXPAND
                                                             "continuous?")
                                                            (("1"
                                                              (INST - "EPS")
                                                              (("1" (SKOSIMP)
                                                                (("1"
                                                                  (LEMMA
                                                                   "posreal_div_posreal_is_posreal"
                                                                   ("px"
                                                                    "delta!1"
                                                                    "py"
                                                                    "ln(y!1)"))
                                                                  (("1"
                                                                    (LEMMA
                                                                     "density_positive"
                                                                     ("x"
                                                                      "max(0,z!1-delta!1 / ln(y!1))"
                                                                      "y"
                                                                      "z!1"))
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (SPLIT)
                                                                        (("1"
                                                                          (SKOSIMP)
                                                                          (("1"
                                                                            (INST
                                                                             -4
                                                                             "r!1*ln(y!1)")
                                                                            (("1"
                                                                              (LEMMA
                                                                               "abs_mult"
                                                                               ("x"
                                                                                "r!1-z!1"
                                                                                "y"
                                                                                "ln(y!1)"))
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1)
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "div_mult_pos_lt2"
                                                                                   ("x"
                                                                                    " abs(r!1 - z!1)"
                                                                                    "py"
                                                                                    "abs(ln(y!1))"
                                                                                    "z"
                                                                                    "delta!1"))
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1
                                                                                     *
                                                                                     RL)
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "abs")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (HIDE
                                                                                           -1
                                                                                           -2)
                                                                                          (("1"
                                                                                            (LEMMA
                                                                                             "both_sides_times_pos_lt1"
                                                                                             ("pz"
                                                                                              "ln(y!1)"
                                                                                              "x"
                                                                                              "r!1"
                                                                                              "y"
                                                                                              "z!1"))
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (LEMMA
                                                                                                 "exp_strict_increasing")
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "strict_increasing?")
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -
                                                                                                     "r!1 * ln(y!1)"
                                                                                                     "z!1 * ln(y!1)")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -
                                                                                                         "exp(r!1*ln(y!1))")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (INST
                                                                                                           +
                                                                                                           "r!1")
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (REWRITE
                                                                                                               "nn_rational_expt_def")
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (EXPAND
                                                                                     "abs")
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (NAME-REPLACE
                                                                           "DELTA"
                                                                           "delta!1 / ln(y!1)")
                                                                          (("2"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -8
                                                                              1))
                                                                            (("2"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("3"
                                                                          (NAME-REPLACE
                                                                           "DELTA"
                                                                           "delta!1 / ln(y!1)")
                                                                          (("3"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -8
                                                                              1))
                                                                            (("3"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (PROPAX) NIL NIL)
                                                 ("3"
                                                  (INST -4
                                                   "exp(z!1 * ln(y!1))")
                                                  (("3" (SPLIT)
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (SKOSIMP)
                                                      (("2" (HIDE 2)
                                                        (("2" (TYPEPRED "s!1")
                                                          (("2" (ASSERT)
                                                            (("2" (SKOSIMP)
                                                              (("2"
                                                                (LEMMA
                                                                 "both_sides_times_pos_le1"
                                                                 ("pz"
                                                                  "ln(y!1)" "x"
                                                                  "q!1" "y"
                                                                  "z!1"))
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "exp_increasing")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "increasing?")
                                                                      (("2"
                                                                        (INST -
                                                                         "q!1 * ln(y!1)"
                                                                         "z!1 * ln(y!1)")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (REWRITE
                                                                             "nn_rational_expt_def")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|nnreal_expt_def-1| |nil| 3432419188
   ("" (SKOSIMP)
    (("" (EXPAND "nnreal_expt")
      (("" (ASSERT)
        (("" (CASE-REPLACE "z!1=0")
          (("1" (REWRITE "exp_0") NIL NIL)
           ("2" (ASSERT)
            (("2" (CASE "z!1>0")
              (("1" (HIDE 1)
                (("1" (LEMMA "trich_lt" ("x" "y!1" "y" "1"))
                  (("1" (SPLIT)
                    (("1" (ASSERT)
                      (("1"
                        (TYPEPRED "glb(extend[real, nnreal, bool, FALSE]
              ({z | EXISTS q: q <= z!1 AND z = nn_rational_expt(y!1, q)}))")
                        (("1"
                          (NAME-REPLACE "GLB"
                           "glb(extend[real, nnreal, bool, FALSE]
              ({z | EXISTS q: q <= z!1 AND z = nn_rational_expt(y!1, q)}))")
                          (("1" (EXPAND "extend")
                            (("1" (EXPAND "greatest_lower_bound?")
                              (("1" (FLATTEN)
                                (("1" (EXPAND "lower_bound?")
                                  (("1"
                                    (LEMMA "trich_lt"
                                     ("x" "GLB" "y" "exp(z!1 * ln(y!1))"))
                                    (("1" (SPLIT -1)
                                      (("1" (HIDE 1)
                                        (("1" (LEMMA "exp_continuous")
                                          (("1" (EXPAND "continuous")
                                            (("1" (INST - "z!1 * ln(y!1)")
                                              (("1" (REWRITE "continuity_def")
                                                (("1"
                                                  (NAME "EPS"
                                                        "exp(z!1 * ln(y!1))-GLB")
                                                  (("1" (INST - "EPS")
                                                    (("1" (SKOSIMP)
                                                      (("1"
                                                        (LEMMA
                                                         "ln_strict_increasing")
                                                        (("1"
                                                          (EXPAND
                                                           "strict_increasing?")
                                                          (("1"
                                                            (INST - "y!1" "1")
                                                            (("1"
                                                              (REWRITE "ln_1")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "posreal_div_posreal_is_posreal"
                                                                   ("px"
                                                                    "delta!1"
                                                                    "py"
                                                                    "abs(ln(y!1))"))
                                                                  (("1"
                                                                    (INST -7
                                                                     "exp(z!1 * ln(y!1))")
                                                                    (("1"
                                                                      (SPLIT
                                                                       -7)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (SKOSIMP)
                                                                        (("2"
                                                                          (TYPEPRED
                                                                           "s!1")
                                                                          (("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (SKOSIMP)
                                                                              (("2"
                                                                                (LEMMA
                                                                                 "both_sides_times_neg_le1"
                                                                                 ("nz"
                                                                                  "ln(y!1)"
                                                                                  "y"
                                                                                  "q!1"
                                                                                  "x"
                                                                                  "z!1"))
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "exp_increasing")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "increasing?")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -
                                                                                         "z!1 * ln(y!1)"
                                                                                         "q!1 * ln(y!1)")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (REWRITE
                                                                                             "nn_rational_expt_def")
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (PROPAX) NIL NIL)
                                       ("3" (HIDE -3 1)
                                        (("3"
                                          (NAME "EPS" "GLB-exp(z!1 * ln(y!1))")
                                          (("3" (CASE "EPS>0")
                                            (("1" (LEMMA "exp_continuous")
                                              (("1" (EXPAND "continuous")
                                                (("1" (INST - "z!1 * ln(y!1)")
                                                  (("1"
                                                    (REWRITE "continuity_def")
                                                    (("1" (INST - "EPS")
                                                      (("1" (SKOSIMP)
                                                        (("1"
                                                          (LEMMA
                                                           "ln_strict_increasing")
                                                          (("1"
                                                            (EXPAND
                                                             "strict_increasing?")
                                                            (("1"
                                                              (INST - "y!1"
                                                               "1")
                                                              (("1"
                                                                (REWRITE
                                                                 "ln_1")
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "posreal_div_posreal_is_posreal"
                                                                     ("px"
                                                                      "delta!1"
                                                                      "py"
                                                                      "abs(ln(y!1))"))
                                                                    (("1"
                                                                      (LEMMA
                                                                       "density_positive"
                                                                       ("x"
                                                                        "max(0,z!1-delta!1 / abs(ln(y!1)))"
                                                                        "y"
                                                                        "z!1"))
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (SPLIT)
                                                                          (("1"
                                                                            (SKOSIMP)
                                                                            (("1"
                                                                              (INST
                                                                               -
                                                                               "r!1*ln(y!1)")
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "abs_mult"
                                                                                 ("x"
                                                                                  "r!1-z!1"
                                                                                  "y"
                                                                                  "ln(y!1)"))
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "div_mult_pos_lt2"
                                                                                     ("x"
                                                                                      "abs(r!1 - z!1)"
                                                                                      "py"
                                                                                      "abs(ln(y!1))"
                                                                                      "z"
                                                                                      "delta!1"))
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       *
                                                                                       RL)
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -1
                                                                                         -2)
                                                                                        (("1"
                                                                                          (NAME-REPLACE
                                                                                           "DELTA"
                                                                                           "delta!1 / abs(ln(y!1))")
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "abs"
                                                                                             -5)
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (LEMMA
                                                                                                 "both_sides_times_neg_lt1"
                                                                                                 ("nz"
                                                                                                  "ln(y!1)"
                                                                                                  "y"
                                                                                                  "r!1"
                                                                                                  "x"
                                                                                                  "z!1"))
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (LEMMA
                                                                                                     "exp_strict_increasing")
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "strict_increasing?")
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -
                                                                                                         "z!1 * ln(y!1)"
                                                                                                         "r!1 * ln(y!1)")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -
                                                                                                             "exp(r!1 * ln(y!1))")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (INST
                                                                                                               +
                                                                                                               "r!1")
                                                                                                              (("2"
                                                                                                                (ASSERT)
                                                                                                                (("2"
                                                                                                                  (REWRITE
                                                                                                                   "nn_rational_expt_def")
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (NAME-REPLACE
                                                                             "DELTA"
                                                                             "delta!1 / abs(ln(y!1))")
                                                                            (("2"
                                                                              (HIDE-ALL-BUT
                                                                               (-1
                                                                                -9
                                                                                1))
                                                                              (("2"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (NAME-REPLACE
                                                                             "DELTA"
                                                                             "delta!1 / abs(ln(y!1))")
                                                                            (("3"
                                                                              (HIDE-ALL-BUT
                                                                               (-1
                                                                                -9
                                                                                1))
                                                                              (("3"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (REPLACE -1)
                        (("2" (REWRITE "ln_1")
                          (("2" (REWRITE "exp_0") NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("3" (ASSERT)
                      (("3"
                        (TYPEPRED "lub(extend[real, nnreal, bool, FALSE]
              ({z | EXISTS q: q <= z!1 AND z = nn_rational_expt(y!1, q)}))")
                        (("3"
                          (NAME-REPLACE "LUB"
                           "lub(extend[real, nnreal, bool, FALSE]
              ({z | EXISTS q: q <= z!1 AND z = nn_rational_expt(y!1, q)}))")
                          (("3" (EXPAND "least_upper_bound?")
                            (("3" (EXPAND "extend")
                              (("3" (EXPAND "upper_bound?")
                                (("3" (FLATTEN)
                                  (("3" (LEMMA "ln_strict_increasing")
                                    (("3" (EXPAND "strict_increasing?")
                                      (("3" (INST - "1" "y!1")
                                        (("3" (REWRITE "ln_1")
                                          (("3" (ASSERT)
                                            (("3"
                                              (LEMMA "trich_lt"
                                               ("x" "LUB" "y"
                                                "exp(z!1 * ln(y!1))"))
                                              (("3" (SPLIT)
                                                (("1" (HIDE -4 1)
                                                  (("1"
                                                    (NAME "EPS"
                                                          "exp(z!1 * ln(y!1))-LUB")
                                                    (("1"
                                                      (LEMMA "exp_continuous")
                                                      (("1"
                                                        (EXPAND "continuous")
                                                        (("1"
                                                          (INST -
                                                           "z!1*ln(y!1)")
                                                          (("1"
                                                            (REWRITE
                                                             "continuity_def")
                                                            (("1"
                                                              (INST - "EPS")
                                                              (("1" (SKOSIMP)
                                                                (("1"
                                                                  (LEMMA
                                                                   "posreal_div_posreal_is_posreal"
                                                                   ("px"
                                                                    "delta!1"
                                                                    "py"
                                                                    "ln(y!1)"))
                                                                  (("1"
                                                                    (LEMMA
                                                                     "density_positive"
                                                                     ("x"
                                                                      "max(0,z!1-delta!1 / ln(y!1))"
                                                                      "y"
                                                                      "z!1"))
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (SPLIT)
                                                                        (("1"
                                                                          (SKOSIMP)
                                                                          (("1"
                                                                            (INST
                                                                             -4
                                                                             "r!1*ln(y!1)")
                                                                            (("1"
                                                                              (LEMMA
                                                                               "abs_mult"
                                                                               ("x"
                                                                                "r!1-z!1"
                                                                                "y"
                                                                                "ln(y!1)"))
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1)
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "div_mult_pos_lt2"
                                                                                   ("x"
                                                                                    " abs(r!1 - z!1)"
                                                                                    "py"
                                                                                    "abs(ln(y!1))"
                                                                                    "z"
                                                                                    "delta!1"))
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1
                                                                                     *
                                                                                     RL)
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "abs")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (HIDE
                                                                                           -1
                                                                                           -2)
                                                                                          (("1"
                                                                                            (LEMMA
                                                                                             "both_sides_times_pos_lt1"
                                                                                             ("pz"
                                                                                              "ln(y!1)"
                                                                                              "x"
                                                                                              "r!1"
                                                                                              "y"
                                                                                              "z!1"))
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (LEMMA
                                                                                                 "exp_strict_increasing")
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "strict_increasing?")
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -
                                                                                                     "r!1 * ln(y!1)"
                                                                                                     "z!1 * ln(y!1)")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -
                                                                                                         "exp(r!1*ln(y!1))")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (INST
                                                                                                           +
                                                                                                           "r!1")
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (REWRITE
                                                                                                               "nn_rational_expt_def")
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (EXPAND
                                                                                     "abs")
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (NAME-REPLACE
                                                                           "DELTA"
                                                                           "delta!1 / ln(y!1)")
                                                                          (("2"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -8
                                                                              1))
                                                                            (("2"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("3"
                                                                          (NAME-REPLACE
                                                                           "DELTA"
                                                                           "delta!1 / ln(y!1)")
                                                                          (("3"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -8
                                                                              1))
                                                                            (("3"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (PROPAX) NIL NIL)
                                                 ("3"
                                                  (INST -4
                                                   "exp(z!1 * ln(y!1))")
                                                  (("3" (SPLIT)
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (SKOSIMP)
                                                      (("2" (HIDE 2)
                                                        (("2" (TYPEPRED "s!1")
                                                          (("2" (ASSERT)
                                                            (("2" (SKOSIMP)
                                                              (("2"
                                                                (LEMMA
                                                                 "both_sides_times_pos_le1"
                                                                 ("pz"
                                                                  "ln(y!1)" "x"
                                                                  "q!1" "y"
                                                                  "z!1"))
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "exp_increasing")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "increasing?")
                                                                      (("2"
                                                                        (INST -
                                                                         "q!1 * ln(y!1)"
                                                                         "z!1 * ln(y!1)")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (REWRITE
                                                                             "nn_rational_expt_def")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|real_expt_def_TCC1| 0
  (|real_expt_def_TCC1-1| |nil| 3432422172 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|real_expt_def| SUBTYPE "ln_exp_def.x"
    "{a | booleans.OR(reals.>=(real_expt.a, 0), reals.>(ln_exp_def.y, 0))}")))
 (|real_expt_def| 0
  (|real_expt_def-1| |nil| 3432422300
   ("" (SKOSIMP)
    (("" (EXPAND "^")
      (("" (CASE-REPLACE "x!1>=0")
        (("1" (REWRITE "nnreal_expt_def") NIL NIL)
         ("2" (ASSERT)
          (("2" (REWRITE "nnreal_expt_def")
            (("2" (REWRITE "ln_div") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|nn_log_def_TCC1| 0
  (|nn_log_def_TCC1-1| |nil| 3432421334 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL))
   NIL (|nn_log_def| SUBTYPE "ln_exp_def.r" "{r | nn_log.r /= 1}")))
 (|nn_log_def_TCC2| 0
  (|nn_log_def_TCC2-1| |nil| 3432421334
   ("" (SKOSIMP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (LEMMA "ln_strict_increasing")
          (("1" (EXPAND "strict_increasing?")
            (("1" (INST - "1" "r!1")
              (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (LEMMA "ln_strict_increasing")
          (("2" (EXPAND "strict_increasing?")
            (("2" (INST - "r!1" "1")
              (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ln_strict_increasing| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|ln_1| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|strict_increasing?| CONST-DECL "bool" |real_fun_preds| |reals|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   NIL (|nn_log_def| SUBTYPE "ln_exp.ln(ln_exp_def.r)" "nznum")))
 (|nn_log_def| 0
  (|nn_log_def-1| |nil| 3432421335
   ("" (SKOSIMP)
    (("" (LEMMA "nn_expt_log" ("y" "y!1" "ne1x" "r!1"))
      (("" (REWRITE "nnreal_expt_def")
        (("" (LEMMA "ln_exp" ("x" "nn_log(r!1)(y!1) * ln(r!1)"))
          (("" (REPLACE -2) (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|log_def_TCC1| 0
  (|log_def_TCC1-1| |nil| 3432421672
   ("" (SKOSIMP)
    (("" (TYPEPRED "ne1x!1")
      (("" (LEMMA "trich_lt" ("x" "ne1x!1" "y" "1"))
        (("" (SPLIT)
          (("1" (LEMMA "ln_strict_increasing")
            (("1" (EXPAND "strict_increasing?")
              (("1" (INST - "ne1x!1" "1")
                (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL)
           ("3" (LEMMA "ln_strict_increasing")
            (("3" (EXPAND "strict_increasing?")
              (("3" (INST - "1" "ne1x!1")
                (("3" (REWRITE "ln_1") (("3" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((/= CONST-DECL "boolean" |notequal| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|strict_increasing?| CONST-DECL "bool" |real_fun_preds| |reals|)
    (|ln_1| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|ln_strict_increasing| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|trich_lt| FORMULA-DECL NIL |real_props| NIL))
   NIL (|log_def| SUBTYPE "ln_exp.ln(ln_exp_def.ne1x)" "nznum")))
 (|log_def| 0
  (|log_def-1| |nil| 3432421673
   ("" (SKOSIMP)
    (("" (TYPEPRED "ne1x!1")
      (("" (LEMMA "trich_lt" ("x" "ne1x!1" "y" "1"))
        (("" (SPLIT -1)
          (("1" (EXPAND "log")
            (("1" (EXPAND "log")
              (("1" (ASSERT)
                (("1" (CASE-REPLACE "y!1<=1")
                  (("1" (REWRITE "nn_log_def") NIL NIL)
                   ("2" (ASSERT)
                    (("2" (REWRITE "nn_log_def")
                      (("1" (REWRITE "ln_div") (("1" (ASSERT) NIL NIL)) NIL)
                       ("2" (REWRITE "div_mult_pos_le1" 1) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (REPLACE -1)
            (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)
           ("3" (EXPAND "log")
            (("3" (EXPAND "log")
              (("3" (ASSERT)
                (("3" (CASE-REPLACE "y!1>=1")
                  (("1" (REWRITE "nn_log_def") NIL NIL)
                   ("2" (ASSERT)
                    (("2" (REWRITE "nn_log_def")
                      (("1" (REWRITE "ln_div") (("1" (ASSERT) NIL NIL)) NIL)
                       ("2" (REWRITE "div_mult_pos_ge1" 1) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|log_continuous| 0
  (|log_continuous-2| "" 3790094307
   ("" (SKOSIMP)
    (("" (CASE-REPLACE "log(ne1x!1)=lambda (y:posreal): ln(y)/ln(ne1x!1)")
      (("1" (HIDE -1)
        (("1" (LEMMA "ln_continuous")
          (("1" (LEMMA "scal_cont_fun[posreal]" ("f" "ln" "u" "1/ln(ne1x!1)"))
            (("1" (ASSERT)
              (("1" (HIDE -2)
                (("1" (EXPAND "*")
                  (("1"
                    (CASE-REPLACE
                     "(LAMBDA (x: posreal): 1 / ln(ne1x!1) * ln(x))=(LAMBDA (y: posreal): ln(y) / ln(ne1x!1))")
                    (("1" (HIDE -1 2)
                      (("1" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE-ALL-BUT 1)
              (("2" (EXPAND "/=")
                (("2" (LEMMA "ln_strict_increasing")
                  (("2" (EXPAND "strict_increasing?")
                    (("2" (CASE "ne1x!1<1")
                      (("1" (INST - "ne1x!1" "1")
                        (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL)) NIL))
                        NIL)
                       ("2" (INST - "1" "ne1x!1")
                        (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (APPLY-EXTENSIONALITY :HIDE? T)
          (("1" (LEMMA "log_def" ("ne1x" "ne1x!1" "y" "x!1"))
            (("1" (EXPAND "log" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)
           ("2" (LEMMA "ln_strict_increasing")
            (("2" (EXPAND "strict_increasing?")
              (("2" (CASE "ne1x!1<1")
                (("1" (INST - "ne1x!1" "1")
                  (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("2" (INST - "1" "ne1x!1")
                  (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (ASSERT)
        (("3" (EXPAND "/=")
          (("3" (LEMMA "ln_strict_increasing")
            (("3" (EXPAND "strict_increasing?")
              (("3" (CASE "ne1x!1<1")
                (("1" (INST - "ne1x!1" "1")
                  (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("2" (INST - "1" "ne1x!1")
                  (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|log_continuous-1| |nil| 3432579214
   ("" (SKOSIMP)
    (("" (EXPAND "continuous")
      (("" (SKOSIMP)
        (("" (CASE-REPLACE "log(ne1x!1)=lambda (y:posreal): ln(y)/ln(ne1x!1)")
          (("1" (HIDE -1)
            (("1" (LEMMA "ln_continuous")
              (("1"
                (LEMMA "scal_cont_fun[posreal]" ("f" "ln" "u" "1/ln(ne1x!1)"))
                (("1" (ASSERT)
                  (("1" (HIDE -2)
                    (("1" (EXPAND "continuous" -1)
                      (("1" (INST - "x0!1")
                        (("1" (EXPAND "*")
                          (("1"
                            (CASE-REPLACE
                             "(LAMBDA (x: posreal): 1 / ln(ne1x!1) * ln(x))=(LAMBDA (y: posreal): ln(y) / ln(ne1x!1))")
                            (("1" (HIDE -1 2)
                              (("1" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE-ALL-BUT 1)
                  (("2" (EXPAND "/=")
                    (("2" (LEMMA "ln_strict_increasing")
                      (("2" (EXPAND "strict_increasing?")
                        (("2" (CASE "ne1x!1<1")
                          (("1" (INST - "ne1x!1" "1")
                            (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL)
                           ("2" (INST - "1" "ne1x!1")
                            (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2)
            (("2" (APPLY-EXTENSIONALITY :HIDE? T)
              (("1" (LEMMA "log_def" ("ne1x" "ne1x!1" "y" "x!1"))
                (("1" (EXPAND "log" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)
               ("2" (LEMMA "ln_strict_increasing")
                (("2" (EXPAND "strict_increasing?")
                  (("2" (CASE "ne1x!1<1")
                    (("1" (INST - "ne1x!1" "1")
                      (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("2" (INST - "1" "ne1x!1")
                      (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (ASSERT)
            (("3" (EXPAND "/=")
              (("3" (LEMMA "ln_strict_increasing")
                (("3" (EXPAND "strict_increasing?")
                  (("3" (CASE "ne1x!1<1")
                    (("1" (INST - "ne1x!1" "1")
                      (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("2" (INST - "1" "ne1x!1")
                      (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|log_derivable_TCC1| 0
  (|log_derivable_TCC1-1| |nil| 3432580342
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*) (("" (INST + "e!1/2") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   NIL
   (|log_derivable| ASSUMING "analysis@derivatives[posreal].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?")))
 (|log_derivable_TCC2| 0
  (|log_derivable_TCC2-1| |nil| 3432580342
   ("" (EXPAND "not_one_element?")
    (("" (SKOSIMP) (("" (INST + "x!1+1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   NIL
   (|log_derivable| ASSUMING "analysis@derivatives[posreal].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?")))
 (|log_derivable_TCC3| 0
  (|log_derivable_TCC3-1| |nil| 3432580342
   ("" (SKOSIMP)
    (("" (HIDE -1)
      (("" (SKOSIMP)
        (("" (TYPEPRED "y!1")
          (("" (REWRITE "zero_times3")
            (("" (HIDE -1 -2)
              (("" (LEMMA "ln_strict_increasing")
                (("" (EXPAND "strict_increasing?")
                  (("" (CASE "ne1x!1<1")
                    (("1" (INST - "ne1x!1" "1")
                      (("1" (REWRITE "ln_1") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("2" (INST - "1" "ne1x!1")
                      (("2" (REWRITE "ln_1") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|strict_increasing?| CONST-DECL "bool" |real_fun_preds| |reals|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|ln_1| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (< CONST-DECL "bool" |reals| NIL)
    (|ln_strict_increasing| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|zero_times3| FORMULA-DECL NIL |real_props| NIL))
   NIL
   (|log_derivable| SUBTYPE
    "(number_fields.*(ln_exp.ln(ln_exp_def.ne1x), ln_exp_def.y))" "nznum")))
 (|log_derivable| 0
  (|log_derivable-1| |nil| 3432580630
   ("" (SKOSIMP)
    (("" (LEMMA "ln_derivable")
      (("" (FLATTEN)
        (("" (CASE "ln(ne1x!1)=0")
          (("1" (LEMMA "ln_eq_0" ("px" "ne1x!1")) (("1" (ASSERT) NIL NIL)) NIL)
           ("2"
            (LEMMA "scal_derivable_fun[posreal]" ("f" "ln" "b" "1/ln(ne1x!1)"))
            (("1" (ASSERT)
              (("1"
                (LEMMA "deriv_scal_fun[posreal]"
                 ("b" "1 / ln(ne1x!1)" "ff" "ln"))
                (("1" (REPLACE -4)
                  (("1" (EXPAND "*" -1 2)
                    (("1" (CASE-REPLACE "(1 / ln(ne1x!1) * ln)=log(ne1x!1)")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (APPLY-EXTENSIONALITY :HIDE? T)
                        (("2" (HIDE-ALL-BUT (1 2))
                          (("2" (LEMMA "log_def" ("ne1x" "ne1x!1" "y" "x!1"))
                            (("2" (EXPAND "log" -1)
                              (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|real_expt_continuous| 0
  (|real_expt_continuous-1| |nil| 3432581634
   ("" (SKOLEM + ("a!1"))
    (("" (CASE-REPLACE "(LAMBDA y: y ^ a!1)=lambda y: exp(a!1*ln(y))")
      (("1" (HIDE -1)
        (("1" (LEMMA "ln_continuous")
          (("1" (LEMMA "exp_continuous")
            (("1" (LEMMA "scal_fun_continuous[posreal]" ("u" "a!1" "h" "ln"))
              (("1"
                (LEMMA "composition_cont_fun[posreal,real]"
                 ("f" "*[posreal](a!1, ln)" "g" "exp"))
                (("1" (ASSERT)
                  (("1" (EXPAND "o")
                    (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL)
               ("2" (PROPAX) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (APPLY-EXTENSIONALITY :HIDE? T)
          (("2" (REWRITE "real_expt_def") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|real_expt_derivable_TCC1| 0
  (|real_expt_derivable_TCC1-1| |nil| 3432605120 ("" (ASSUMING-TCC) NIL NIL)
   ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|fullset| CONST-DECL "set" |sets| NIL))
   NIL
   (|real_expt_derivable| SUBTYPE "((number_fields.-)(ln_exp_def.x, 1))"
    "{a | booleans.OR(reals.>=(real_expt.a, 0), reals.>(ln_exp_def.y, 0))}")))
 (|real_expt_derivable| 0
  (|real_expt_derivable-2| "" 3790094309
   ("" (SKOSIMP)
    (("" (CASE "FORALL x: (LAMBDA y: y ^ x) = (LAMBDA y: exp(x * ln(y)))")
      (("1" (INST-CP - "x!1")
        (("1" (INST - "x!1-1")
          (("1" (REPLACE -2)
            (("1" (HIDE -2)
              (("1" (LEMMA "ln_derivable")
                (("1" (LEMMA "exp_deriv")
                  (("1" (FLATTEN)
                    (("1"
                      (LEMMA "derivable_scal[posreal]" ("b" "x!1" "ff" "ln"))
                      (("1"
                        (LEMMA "deriv_scal_fun[posreal]" ("b" "x!1" "ff" "ln"))
                        (("1" (REPLACE -6)
                          (("1" (EXPAND "*" -1 2)
                            (("1"
                              (LEMMA "composition_derivable_fun[posreal,real]"
                               ("f" "x!1*ln" "g" "exp"))
                              (("1" (ASSERT)
                                (("1"
                                  (LEMMA "deriv_comp_fun[posreal,real]"
                                   ("ff" "x!1*ln" "gg" "exp"))
                                  (("1" (REPLACE -3)
                                    (("1" (REPLACE -6)
                                      (("1" (EXPAND "o")
                                        (("1" (EXPAND "*")
                                          (("1" (REPLACE -1)
                                            (("1" (REPLACE -2)
                                              (("1"
                                                (APPLY-EXTENSIONALITY :HIDE? T)
                                                (("1" (HIDE-ALL-BUT (-9 1))
                                                  (("1" (HIDE -1)
                                                    (("1"
                                                      (LEMMA "real_expt_def"
                                                       ("y" "x!2" "x" "x!1-1"))
                                                      (("1" (REPLACE -1)
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (REWRITE
                                                             "exp_diff")
                                                            (("1"
                                                              (REWRITE
                                                               "exp_ln")
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (SKOSIMP)
          (("2" (APPLY-EXTENSIONALITY :HIDE? T)
            (("2" (REWRITE "real_expt_def") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|real_expt_derivable-1| |nil| 3432605121
   ("" (SKOSIMP)
    (("" (CASE "FORALL x: (LAMBDA y: y ^ x) = (LAMBDA y: exp(x * ln(y)))")
      (("1" (INST-CP - "x!1")
        (("1" (INST - "x!1-1")
          (("1" (REPLACE -2)
            (("1" (HIDE -2)
              (("1" (LEMMA "ln_derivable")
                (("1" (LEMMA "exp_deriv")
                  (("1" (FLATTEN)
                    (("1"
                      (LEMMA "derivable_scal[posreal]" ("b" "x!1" "ff" "ln"))
                      (("1"
                        (LEMMA "deriv_scal_fun[posreal]" ("b" "x!1" "ff" "ln"))
                        (("1" (REPLACE -6)
                          (("1" (EXPAND "*" -1 2)
                            (("1"
                              (LEMMA "composition_derivable_fun[posreal,real]"
                               ("f" "x!1*ln" "g" "exp"))
                              (("1" (ASSERT)
                                (("1"
                                  (LEMMA "deriv_comp_fun[posreal,real]"
                                   ("ff" "x!1*ln" "gg" "exp"))
                                  (("1" (REPLACE -3)
                                    (("1" (REPLACE -6)
                                      (("1" (EXPAND "o")
                                        (("1" (EXPAND "*")
                                          (("1" (REPLACE -1)
                                            (("1" (REPLACE -2)
                                              (("1"
                                                (APPLY-EXTENSIONALITY :HIDE? T)
                                                (("1" (HIDE-ALL-BUT (-9 1))
                                                  (("1" (HIDE -1)
                                                    (("1"
                                                      (LEMMA "real_expt_def"
                                                       ("y" "x!2" "x" "x!1-1"))
                                                      (("1" (REPLACE -1)
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (REWRITE
                                                             "exp_diff")
                                                            (("1"
                                                              (REWRITE
                                                               "exp_ln")
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE-ALL-BUT 1)
                                (("2" (ASSERT)
                                  (("2" (EXPAND "not_one_element?")
                                    (("2" (SKOSIMP*)
                                      (("2" (INST + "x!2+1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (HIDE-ALL-BUT 1)
                                (("3" (ASSERT)
                                  (("3" (EXPAND "deriv_domain?")
                                    (("3" (SKOSIMP*)
                                      (("3" (INST + E!1/2)
                                        (("3" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("4" (HIDE-ALL-BUT 1)
                                (("4" (ASSERT)
                                  (("4" (EXPAND "not_one_element?")
                                    (("4" (SKOSIMP*)
                                      (("4" (INST + "x!2+1")
                                        (("4" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("5" (HIDE-ALL-BUT 1)
                                (("5" (EXPAND "deriv_domain?")
                                  (("5" (SKOSIMP*)
                                    (("5" (INST + E!1/2)
                                      (("5" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (SKOSIMP)
          (("2" (APPLY-EXTENSIONALITY :HIDE? T)
            (("2" (REWRITE "real_expt_def") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

