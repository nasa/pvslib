(|cont_real_vect2|
 (|continuity_def| 0
  (|continuity_def-1| |nil| 3302273405
   ("" (SKOSIMP*)
    (("" (SPLIT +)
      (("1" (EXPAND "continuous_rv?")
        (("1" (EXPAND "convergence") (("1" (FLATTEN) NIL NIL)) NIL)) NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "convergence")
          (("2" (EXPAND "continuous_rv?") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL))
 (|continuity_def2| 0
  (|continuity_def2-1| |nil| 3302273405
   ("" (SKOSIMP*)
    (("" (REWRITE "continuity_def")
      (("" (REWRITE "convergent_in_domain") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   NIL NIL))
 (|continuous_iff_comps| 0
  (|continuous_iff_comps-1| |nil| 3474200152
   ("" (SKOSIMP*)
    (("" (SPLIT +)
      (("1" (FLATTEN)
        (("1" (EXPAND "continuous?")
          (("1" (EXPAND "continuous_rv?")
            (("1" (SPLIT +)
              (("1" (SKOSIMP*)
                (("1" (INST - "epsilon!1")
                  (("1" (SKOSIMP*)
                    (("1" (INST + "delta!1")
                      (("1" (SKOSIMP*)
                        (("1" (INST?)
                          (("1" (ASSERT)
                            (("1" (HIDE -1)
                              (("1" (LEMMA "norm_ge_comps")
                                (("1" (INST?)
                                  (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKOSIMP*)
                (("2" (INST - "epsilon!1")
                  (("2" (SKOSIMP*)
                    (("2" (INST + "delta!1")
                      (("2" (SKOSIMP*)
                        (("2" (INST?)
                          (("2" (ASSERT)
                            (("2" (HIDE -1)
                              (("2" (LEMMA "norm_ge_comps")
                                (("2" (INST?)
                                  (("2" (FLATTEN)
                                    (("2" (HIDE -1)
                                      (("2" (EXPAND "-")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "continuous_rv?")
          (("2" (EXPAND "continuous?")
            (("2" (SKOSIMP*)
              (("2" (INST -1 "epsilon!1/sqrt(2)")
                (("2" (INST -2 "epsilon!1/sqrt(2)")
                  (("2" (SKOSIMP*)
                    (("2" (INST + "min(delta!1,delta!2)")
                      (("2" (SKEEP)
                        (("2" (INST - "x")
                          (("2" (INST - "x")
                            (("2" (ASSERT)
                              (("2" (LEMMA "sq_lt")
                                (("2"
                                  (INST - "norm(f!1(x) - f!1(a!1))"
                                   "epsilon!1")
                                  (("2" (ASSERT)
                                    (("2" (HIDE 2)
                                      (("2" (LEMMA "sq_lt")
                                        (("2"
                                          (INST - "abs(f!1(x)`x - f!1(a!1)`x)"
                                           "epsilon!1 / sqrt(2)")
                                          (("2" (ASSERT)
                                            (("2" (HIDE -2)
                                              (("2" (LEMMA "sq_lt")
                                                (("2"
                                                  (INST -
                                                   "abs(f!1(x)`y - f!1(a!1)`y)"
                                                   "epsilon!1 / sqrt(2)")
                                                  (("2" (ASSERT)
                                                    (("2" (HIDE -3)
                                                      (("2"
                                                        (ADD-FORMULAS -1 -2)
                                                        (("2"
                                                          (CASE-REPLACE
                                                           "2 * sq(epsilon!1 / sqrt(2)) = sq(epsilon!1)")
                                                          (("1"
                                                            (CASE
                                                                "sq(norm(f!1(x) - f!1(a!1))) = sq(f!1(x)`x - f!1(a!1)`x) + sq(f!1(x)`y - f!1(a!1)`y)")
                                                            (("1" (ASSERT) NIL
                                                              NIL)
                                                             ("2" (HIDE - 2)
                                                              (("2"
                                                                (REWRITE
                                                                 "sq_norm")
                                                                (("2" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (HIDE-ALL-BUT 1)
                                                            (("2" (GRIND)
                                                              (("2" (FIELD 1)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_lt| FORMULA-DECL NIL |sq| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq_abs| FORMULA-DECL NIL |sq| |reals|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|div_times| FORMULA-DECL NIL |real_props| NIL)
    (|times_div1| FORMULA-DECL NIL |real_props| NIL)
    (|sq_norm| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}"
     |real_defs| NIL)
    (|continuous_rv?| CONST-DECL "bool" |cont_real_vect2| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|norm_ge_comps| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|T_pred| CONST-DECL "[real -> boolean]" |cont_real_vect2| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |cont_real_vect2| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL))
 (|cont_rv_iff_comps| 0
  (|cont_rv_iff_comps-1| |nil| 3474198054
   ("" (SKOSIMP*)
    (("" (SPLIT +)
      (("1" (FLATTEN)
        (("1" (EXPAND "continuous?")
          (("1" (EXPAND "continuous_rv?")
            (("1" (EXPAND "continuous_rv?")
              (("1" (EXPAND "continuous?")
                (("1" (SPLIT +)
                  (("1" (SKEEP)
                    (("1" (SKOSIMP*)
                      (("1" (INST - "x0")
                        (("1" (INST - "epsilon!1")
                          (("1" (SKOSIMP*)
                            (("1" (INST + "delta!1")
                              (("1" (SKOSIMP*)
                                (("1" (INST?)
                                  (("1" (ASSERT)
                                    (("1" (HIDE -1)
                                      (("1" (LEMMA "norm_ge_comps")
                                        (("1" (INST?)
                                          (("1" (EXPAND "-")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKEEP)
                    (("2" (SKOSIMP*)
                      (("2" (INST - "x0")
                        (("2" (INST - "epsilon!1")
                          (("2" (SKOSIMP*)
                            (("2" (INST + "delta!1")
                              (("2" (SKOSIMP*)
                                (("2" (INST?)
                                  (("2" (ASSERT)
                                    (("2" (HIDE -1)
                                      (("2" (LEMMA "norm_ge_comps")
                                        (("2" (INST?)
                                          (("2" (FLATTEN)
                                            (("2" (HIDE -1)
                                              (("2" (EXPAND "-")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "continuous_rv?")
          (("2" (EXPAND "continuous?")
            (("2" (EXPAND "continuous_rv?")
              (("2" (EXPAND "continuous?")
                (("2" (SKEEP)
                  (("2" (SKOSIMP*)
                    (("2" (INST - "x0")
                      (("2" (INST -2 "x0")
                        (("2" (INST -1 "epsilon!1/sqrt(2)")
                          (("2" (INST -2 "epsilon!1/sqrt(2)")
                            (("2" (SKOSIMP*)
                              (("2" (INST + "min(delta!1,delta!2)")
                                (("2" (SKEEP)
                                  (("2" (INST - "x")
                                    (("2" (INST - "x")
                                      (("2" (ASSERT)
                                        (("2" (LEMMA "sq_lt")
                                          (("2"
                                            (INST - "norm(f!1(x) - f!1(x0))"
                                             "epsilon!1")
                                            (("2" (ASSERT)
                                              (("2" (HIDE 2)
                                                (("2" (LEMMA "sq_lt")
                                                  (("2"
                                                    (INST -
                                                     "abs(f!1(x)`x - f!1(x0)`x)"
                                                     "epsilon!1 / sqrt(2)")
                                                    (("2" (ASSERT)
                                                      (("2" (HIDE -2)
                                                        (("2" (LEMMA "sq_lt")
                                                          (("2"
                                                            (INST -
                                                             "abs(f!1(x)`y - f!1(x0)`y)"
                                                             "epsilon!1 / sqrt(2)")
                                                            (("2" (ASSERT)
                                                              (("2" (HIDE -3)
                                                                (("2"
                                                                  (ADD-FORMULAS
                                                                   -1 -2)
                                                                  (("2"
                                                                    (CASE-REPLACE
                                                                     "2 * sq(epsilon!1 / sqrt(2)) = sq(epsilon!1)")
                                                                    (("1"
                                                                      (CASE
                                                                          "sq(norm(f!1(x) - f!1(x0))) = sq(f!1(x)`x - f!1(x0)`x) + sq(f!1(x)`y - f!1(x0)`y)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE -
                                                                         2)
                                                                        (("2"
                                                                          (REWRITE
                                                                           "sq_norm")
                                                                          (("2"
                                                                            (GRIND)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (HIDE-ALL-BUT
                                                                       1)
                                                                      (("2"
                                                                        (GRIND)
                                                                        (("2"
                                                                          (FIELD
                                                                           1)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|continuous_rv?| CONST-DECL "bool" |cont_real_vect2| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|norm_ge_comps| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |cont_real_vect2| NIL)
    (|T_pred| CONST-DECL "[real -> boolean]" |cont_real_vect2| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|continuous_rv?| CONST-DECL "bool" |cont_real_vect2| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_lt| FORMULA-DECL NIL |sq| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq_abs| FORMULA-DECL NIL |sq| |reals|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|div_times| FORMULA-DECL NIL |real_props| NIL)
    (|times_div1| FORMULA-DECL NIL |real_props| NIL)
    (|sq_norm| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}"
     |real_defs| NIL))
   NIL))
 (|sum_continuous_rv| 0
  (|sum_continuous_rv-1| |nil| 3302273405
   ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "sum_fun_convergent[T]"))
    NIL NIL)
   NIL NIL))
 (|diff_continuous_rv| 0
  (|diff_continuous_rv-3| |nil| 3473595198
   ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "diff_fun_convergent[T]"))
    NIL NIL)
   NIL NIL)
  (|diff_continuous_rv-2| |nil| 3442334818
   ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "diff_fun_convergent"))
    NIL NIL)
   NIL NIL)
  (|diff_continuous_rv-1| |nil| 3302273405
   ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "diff_fun_convergent"))
    NIL NIL)
   NIL NIL))
 (|const_continuous_rv| 0
  (|const_continuous_rv-1| |nil| 3302273405
   ("" (SKOSIMP*)
    (("" (REWRITE "continuity_def2")
      (("" (LEMMA "const_fun_convergent")
        (("" (EXPAND "const_vfun") (("" (INST?) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   NIL NIL))
 (|scal_continuous_rv| 0
  (|scal_continuous_rv-2| "" 3790093455
   ("" (SKEEP)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (CASE "abs(a) = 0")
          (("1" (CASE-REPLACE "a = 0")
            (("1" (INST + "100")
              (("1" (SKOSIMP*)
                (("1" (HIDE -)
                  (("1" (CASE-REPLACE "(0 * f)(x!1) - (0 * f)(x0) = zero")
                    (("1" (ASSERT) NIL NIL)
                     ("2" (HIDE 2)
                      (("2" (GRIND)
                        (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE -2 2)
              (("2" (LEMMA "abs_eq_0")
                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL)
           ("2" (INST - "epsilon!1/abs(a)")
            (("1" (SKOSIMP*)
              (("1" (INST + "delta!1")
                (("1" (SKOSIMP*)
                  (("1" (INST - "x!1")
                    (("1" (ASSERT)
                      (("1" (CROSS-MULT -1)
                        (("1" (EXPAND "*")
                          (("1" (LEMMA "norm_scal")
                            (("1" (INST - "a" "f(x!1) - f(x0)")
                              (("1" (ASSERT)
                                (("1" (REPLACE -1 * RL)
                                  (("1" (HIDE -1)
                                    (("1" (GRIND :EXCLUDE "norm") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (HIDE 2)
                (("2" (CASE "epsilon!1 / abs(a) > 0")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (HIDE 2) (("2" (CROSS-MULT 1) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (CASE "abs(a) = 0")
              (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|continuous_rv?| CONST-DECL "bool" |cont_real_vect2| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|T_pred| CONST-DECL "[real -> boolean]" |cont_real_vect2| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |cont_real_vect2| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|abs_eq_0| FORMULA-DECL NIL |abs_lems| |reals|)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|norm_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sub_zero_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|neg_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|norm_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|a| SKOLEM-CONST-DECL "T" |cont_real_vect2| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|epsilon!1| SKOLEM-CONST-DECL "posreal" |cont_real_vect2| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL))
   SHOSTAK)
  (|scal_continuous_rv-1| |nil| 3445183264
   ("" (SKEEP)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (CASE "abs(a) = 0")
          (("1" (CASE-REPLACE "a = 0")
            (("1" (INST + "100")
              (("1" (SKOSIMP*)
                (("1" (HIDE -)
                  (("1" (CASE-REPLACE "(0 * f)(x!1) - (0 * f)(x0) = zero")
                    (("1" (ASSERT) NIL NIL)
                     ("2" (HIDE 2)
                      (("2" (GRIND)
                        (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE -2 2)
              (("2" (LEMMA "abs_eq_0")
                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL)
           ("2" (INST - "epsilon!1/abs(a)")
            (("1" (SKOSIMP*)
              (("1" (INST + DELTA!1)
                (("1" (SKOSIMP*)
                  (("1" (INST - X!1)
                    (("1" (ASSERT)
                      (("1" (CROSS-MULT -1)
                        (("1" (ASSERT)
                          (("1" (EXPAND "*")
                            (("1" (LEMMA "norm_scal")
                              (("1" (INST - A "f(x!1) - f(x0)")
                                (("1" (ASSERT)
                                  (("1" (REPLACE -1 * RL)
                                    (("1" (HIDE -1)
                                      (("1" (GRIND :EXCLUDE "norm") NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (HIDE 2)
                (("2" (CASE "epsilon!1 / abs(a) > 0")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (HIDE 2)
                    (("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (CASE "abs(a) = 0")
              (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|prod_continuous_rv| 0
  (|prod_continuous_rv-3| |nil| 3474199783
   ("" (SKOSIMP*)
    (("" (LEMMA "continuous_iff_comps")
      (("" (INST - "x0!1" "hh!1 * f!1")
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (LEMMA "continuous_iff_comps")
              (("" (INST?)
                (("" (ASSERT)
                  (("" (HIDE -3)
                    (("" (FLATTEN)
                      (("" (LEMMA PROD_CONTINUOUS)
                        ((""
                          (INST - "(LAMBDA (t: T): hh!1(t))"
                           "(LAMBDA (t: T): f!1(t)`x)" "x0!1")
                          (("" (EXPAND "*" -1)
                            (("" (ASSERT)
                              (("" (SPLIT -1)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "*" 1)
                                    (("1" (EXPAND "*")
                                      (("1" (HIDE -1 -2)
                                        (("1" (LEMMA PROD_CONTINUOUS)
                                          (("1"
                                            (INST - "(LAMBDA (t: T): hh!1(t))"
                                             "(LAMBDA (t: T): f!1(t)`y)"
                                             "x0!1")
                                            (("1" (EXPAND "*" -1)
                                              (("1"
                                                (CASE-REPLACE
                                                 "(LAMBDA (t: T): hh!1(t)) = hh!1")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2"
                                                  (APPLY-EXTENSIONALITY 1
                                                   :HIDE? T)
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2"
                                  (CASE-REPLACE
                                   "(LAMBDA (t: T): hh!1(t)) = hh!1")
                                  (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|prod_continuous_rv-2| |nil| 3473596718
   ("" (SKOSIMP*)
    (("" (LEMMA "cont_rv_iff_comps")
      (("" (INST - "hh!1 * f!1")
        (("" (ASSERT)
          (("" (FLATTEN)
            (("" (HIDE -1)
              (("" (SPLIT -1)
                (("1" (HIDE -2 -3)
                  (("1" (EXPAND "continuous_rv?" -1) (("1" (INST?) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (EXPAND "*")
                    (("2" (EXPAND "*")
                      (("2" (LEMMA "cont_rv_iff_comps")
                        (("2" (INST?)
                          (("2" (ASSERT)
                            (("2" (FLATTEN)
                              (("2" (HIDE -2)
                                (("2" (SPLIT -1)
                                  (("1" (FLATTEN)
                                    (("1" (HIDE -2)
                                      (("1" (HIDE -3)
                                        (("1" (LEMMA PROD_CONT_FUN)
                                          (("1"
                                            (INST - "(LAMBDA (t: T): hh!1(t))"
                                             "(LAMBDA (t: T): f!1(t)`x)")
                                            (("1" (EXPAND "*" -1)
                                              (("1" (HIDE 2)
                                                (("1" (EXPAND "continuous?" 1)
                                                  (("1" (POSTPONE) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (POSTPONE) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (POSTPONE) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|prod_continuous_rv-1| |nil| 3473595230
   ("" (SKEEP)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (EXPAND "*")
          ((""
            (NAME "MAXH"
                  "max({h: real | EXISTS (xx: T): x0 - 1 <= xx AND xx <= x0+1 AND hh(xx) = h})")
            (("1" (INST - "epsilon!1/MAXH")
              (("1" (SKOSIMP*)
                (("1" (INST + "min(1,delta!1)")
                  (("1" (SKOSIMP*)
                    (("1" (INST - X!1)
                      (("1" (ASSERT)
                        (("1" (CROSS-MULT -2)
                          (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL))
              NIL)
             ("2" (POSTPONE) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|neg_continuous_rv| 0
  (|neg_continuous_rv-1| |nil| 3302273405
   ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "neg_fun_convergent")) NIL
    NIL)
   NIL NIL))
 (|sum_cont_rv_fun| 0
  (|sum_cont_rv_fun-1| |nil| 3393866517
   ("" (SKOSIMP*)
    (("" (ASSERT)
      (("" (EXPAND "continuous_rv?")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (INST?)
              (("" (LEMMA "sum_continuous_rv")
                (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|diff_cont_rv_fun| 0
  (|diff_cont_rv_fun-1| |nil| 3393866553
   ("" (SKOSIMP*)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (INST?)
          (("" (INST?) (("" (REWRITE "diff_continuous_rv") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|const_cont_rv_fun| 0
  (|const_cont_rv_fun-2| "" 3790093456
   ("" (SKOSIMP*)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (LEMMA "const_continuous_rv") (("" (INST?) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|const_cont_rv_fun-1| |nil| 3393866606
   ("" (SKOSIMP*)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (LEMMA "const_continuous_rv")
          (("" (INST?) (("" (EXPAND "const_vfun") (("" (INST?) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|const_vfun_cont_rv| 0
  (|const_vfun_cont_rv-1| |nil| 3474118434
   ("" (SKOSIMP*)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (LEMMA "const_continuous_rv")
          (("" (INST?) (("" (EXPAND "const_vfun") (("" (INST?) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL))
 (|scal_cont_rv_fun| 0
  (|scal_cont_rv_fun-1| |nil| 3473598583
   ("" (SKOSIMP*)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (LEMMA "scal_continuous_rv")
          (("" (INST?) (("" (ASSERT) (("" (INST?) NIL NIL)) NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|prod_cont_rv_fun| 0
  (|prod_cont_rv_fun-2| |nil| 3474198595
   ("" (SKOSIMP*)
    (("" (LEMMA "cont_rv_iff_comps")
      (("" (INST - "hh!1 * f!1")
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (LEMMA "cont_rv_iff_comps")
              (("" (INST?)
                (("" (ASSERT)
                  (("" (HIDE -3)
                    (("" (FLATTEN)
                      (("" (LEMMA PROD_CONT_FUN)
                        ((""
                          (INST - "(LAMBDA (t: T): hh!1(t))"
                           "(LAMBDA (t: T): f!1(t)`x)")
                          (("" (EXPAND "*" -1)
                            (("" (ASSERT)
                              (("" (SPLIT -1)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "*" 1)
                                    (("1" (EXPAND "*")
                                      (("1" (HIDE -1 -2)
                                        (("1" (LEMMA PROD_CONT_FUN)
                                          (("1"
                                            (INST - "(LAMBDA (t: T): hh!1(t))"
                                             "(LAMBDA (t: T): f!1(t)`y)")
                                            (("1" (EXPAND "*" -1)
                                              (("1"
                                                (CASE-REPLACE
                                                 "(LAMBDA (t: T): hh!1(t)) = hh!1")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2"
                                                  (APPLY-EXTENSIONALITY 1
                                                   :HIDE? T)
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2"
                                  (CASE-REPLACE
                                   "(LAMBDA (t: T): hh!1(t)) = hh!1")
                                  (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|prod_cont_rv_fun-1| |nil| 3473598431
   ("" (SKOSIMP*)
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (INST?)
          (("" (LEMMA PROD_CONTINUOUS_RV)
            (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|neg_cont_rv_fun| 0
  (|neg_cont_rv_fun-1| |nil| 3393866960
   ("" (SKOSIMP*)
    (("" (ASSERT)
      (("" (EXPAND "continuous_rv?")
        (("" (SKOSIMP*)
          (("" (INST?) (("" (REWRITE "neg_continuous_rv") NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|continuous_rv_fun_TCC1| 0
  (|continuous_rv_fun_TCC1-1| |nil| 3302273405
   ("" (INST + "(LAMBDA (x: T): zero)")
    (("" (EXPAND "continuous_rv?")
      (("" (SKOSIMP*)
        (("" (EXPAND "continuous_rv?")
          (("" (SKOSIMP*)
            (("" (INST + "1") (("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|continuous_rv_fun| EXISTENCE ""
    "{f | cont_real_vect2.continuous_rv?(cont_real_vect2.f)}")))
 (|sum_fun_continuous_rv| 0
  (|sum_fun_continuous_rv-1| |nil| 3302273405
   ("" (SKOSIMP*)
    (("" (TYPEPRED "h1!1")
      (("" (TYPEPRED "h2!1")
        (("" (EXPAND "continuous_rv?")
          (("" (SKOSIMP*)
            (("" (INST?)
              (("" (INST?) (("" (REWRITE "sum_continuous_rv") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|sum_fun_continuous_rv| SUBTYPE
    "LAMBDA (x: T): (vectors_2D.+)(cont_real_vect2.h1(x), cont_real_vect2.h2(x))"
    "continuous_rv_fun")))
 (|diff_fun_continuous_rv| 0
  (|diff_fun_continuous_rv-1| |nil| 3302273405
   ("" (SKOSIMP*)
    (("" (TYPEPRED "h1!1")
      (("" (TYPEPRED "h2!1")
        (("" (EXPAND "continuous_rv?")
          (("" (SKOSIMP*)
            (("" (INST?)
              (("" (INST?) (("" (REWRITE "diff_continuous_rv") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|diff_fun_continuous_rv| SUBTYPE
    "LAMBDA (x: T): (vectors_2D.-)(cont_real_vect2.h1(x), cont_real_vect2.h2(x))"
    "continuous_rv_fun")))
 (|const_fun_continuous_rv| 0
  (|const_fun_continuous_rv-1| |nil| 3302273405
   ("" (SKOSIMP*)
    (("" (LEMMA "const_vfun_cont_rv") (("" (INST?) NIL NIL)) NIL)) NIL)
   NIL NIL
   (|const_fun_continuous_rv| SUBTYPE
    "vect_fun_ops_rv[T].const_vfun(cont_real_vect2.u)" "continuous_rv_fun")))
 (|neg_fun_continuous_rv| 0
  (|neg_fun_continuous_rv-1| |nil| 3302273405
   ("" (SKOSIMP*)
    (("" (TYPEPRED "h!1")
      (("" (EXPAND "continuous_rv?")
        (("" (SKOSIMP*)
          (("" (INST?) (("" (REWRITE "neg_continuous_rv") NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|neg_fun_continuous_rv| SUBTYPE
    "LAMBDA (x: T): (vectors_2D.-)(cont_real_vect2.h(x))"
    "continuous_rv_fun"))))

