(|mixed_sigmas| (|IMP_sigma_TCC1| 0 (|IMP_sigma_TCC1-1| |nil| 3537537618 ("" (LEMMA "connected_domain1") (("" (PROPAX) NIL NIL)) NIL) ((|connected_domain1| FORMULA-DECL NIL |mixed_sigmas| NIL)) NIL (|IMP_sigma| ASSUMING "sigma[T].sigma" "connected_domain: ASSUMPTION (FORALL (x, y: sigma.T), (z: integers.integer): booleans.IMPLIES(booleans.AND(reals.<=(x, z), reals.<=(z, y)), sigma.T_pred(z)))"))) (|IMP_sigma_TCC2| 0 (|IMP_sigma_TCC2-1| |nil| 3537537618 ("" (LEMMA "connected_domain2") (("" (PROPAX) NIL NIL)) NIL) ((|connected_domain2| FORMULA-DECL NIL |mixed_sigmas| NIL)) NIL (|IMP_sigma| ASSUMING "sigma[H].sigma" "connected_domain: ASSUMPTION (FORALL (x, y: sigma.T), (z: integers.integer): booleans.IMPLIES(booleans.AND(reals.<=(x, z), reals.<=(z, y)), sigma.T_pred(z)))"))) (|mixed_sigmas_const_eq_TCC1| 0 (|mixed_sigmas_const_eq_TCC1-2| "" 3882296240 ("" (SKEEP) (("" (LEMMA "T_pred_lem[T]") (("" (INST - "thigh" "tlow" _) (("" (SKEEP) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|mixed_sigmas_const_eq| SUBTYPE "(number_fields.+)(mixed_sigmas.tlow, mixed_sigmas.i)" "T")) (|mixed_sigmas_const_eq_TCC1-1| |nil| 3537536439 ("" (SKEEP) (("" (LEMMA "T_pred_lem[T]") (("" (INST - THIGH TLOW _) (("" (SKEEP) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((T FORMAL-SUBTYPE-DECL NIL |mixed_sigmas| NIL) (|T_pred| CONST-DECL "[int -> boolean]" |mixed_sigmas| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|T_pred_lem| FORMULA-DECL NIL |sigma| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|T_low| TYPE-EQ-DECL NIL |sigma| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| NIL) (<= CONST-DECL "bool" |reals| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)) NIL (|mixed_sigmas_const_eq| SUBTYPE "(number_fields.+)(mixed_sigmas.tlow, mixed_sigmas.i)" "T"))) (|mixed_sigmas_const_eq_TCC2| 0 (|mixed_sigmas_const_eq_TCC2-1| |nil| 3537536439 ("" (SKEEP) (("" (SKEEP) (("" (LEMMA "T_pred_lem[H]") (("" (INST - "hhigh" "hlow" _) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| NIL) (|T_low| TYPE-EQ-DECL NIL |sigma| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|T_pred_lem| FORMULA-DECL NIL |sigma| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|H_pred| CONST-DECL "[int -> boolean]" |mixed_sigmas| NIL) (H FORMAL-SUBTYPE-DECL NIL |mixed_sigmas| NIL)) NIL (|mixed_sigmas_const_eq| SUBTYPE "(number_fields.+)(mixed_sigmas.hlow, mixed_sigmas.i)" "H"))) (|mixed_sigmas_const_eq| 0 (|mixed_sigmas_const_eq-2| "" 3803788400 ("" (CASE "FORALL (F: [T -> real], G: [H -> real], hhigh: T_high[H],
                            hlow: T_low[H], thigh: T_high[T], tlow: T_low[T]):
                      (thigh - tlow = hhigh - hlow AND
                        (FORALL (i: nat):
                           i <= thigh - tlow IMPLIES F(tlow + i) = G(hlow + i)))
                       IMPLIES (FORALL (i: nat):
                           i <= thigh - tlow IMPLIES sigma[T](tlow, tlow+i, F) = sigma[H](hlow, hlow+i, G))") (("1" (SKEEP) (("1" (INST - "F" "G" "hhigh" "hlow" "thigh" "tlow") (("1" (ASSERT) (("1" (REPLACE -3) (("1" (INST - "thigh-tlow") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "sigma" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (INDUCT "i") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "sigma" +) (("1" (EXPAND "sigma" +) (("1" (INST - "0") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (ASSERT) (("2" (EXPAND "sigma" +) (("2" (INST - "1+j") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (LEMMA "T_pred_lem[H]") (("3" (INST - "hhigh" "hlow" "i+hlow") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (LEMMA "T_pred_lem[T]") (("4" (INST - "thigh" "tlow" "i+tlow") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (SKEEP) (("3" (LEMMA "T_pred_lem[H]") (("3" (INST - "hhigh" "hlow" "hlow + i") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (SKEEP) (("4" (LEMMA "T_pred_lem[T]") (("4" (INST - "thigh" "tlow" "i+tlow") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (SKEEP) (("5" (LEMMA "T_pred_lem[H]") (("5" (INST - "hhigh" "hlow" "hlow + i") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (HIDE 2) (("6" (SKEEP) (("6" (SKEEP) (("6" (LEMMA "T_pred_lem[T]") (("6" (INST - "thigh" "tlow" "i+tlow") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|tlow| SKOLEM-CONST-DECL "T_low[T]" |mixed_sigmas| NIL) (|thigh| SKOLEM-CONST-DECL "T_high[T]" |mixed_sigmas| NIL) (|hlow| SKOLEM-CONST-DECL "T_low[H]" |mixed_sigmas| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|T_pred_lem| FORMULA-DECL NIL |sigma| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|tlow| SKOLEM-CONST-DECL "T_low[T]" |mixed_sigmas| NIL) (|thigh| SKOLEM-CONST-DECL "T_high[T]" |mixed_sigmas| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sigma| DEF-DECL "real" |sigma| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_low| TYPE-EQ-DECL NIL |sigma| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| NIL) (<= CONST-DECL "bool" |reals| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (H FORMAL-SUBTYPE-DECL NIL |mixed_sigmas| NIL) (|H_pred| CONST-DECL "[int -> boolean]" |mixed_sigmas| NIL) (T FORMAL-SUBTYPE-DECL NIL |mixed_sigmas| NIL) (|T_pred| CONST-DECL "[int -> boolean]" |mixed_sigmas| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)) SHOSTAK) (|mixed_sigmas_const_eq-1| |nil| 3537536793 ("" (CASE "FORALL (F: [T -> real], G: [H -> real], hhigh: T_high[H],
                     hlow: T_low[H], thigh: T_high[T], tlow: T_low[T]):
               (thigh - tlow = hhigh - hlow AND
                 (FORALL (i: nat):
                    i <= thigh - tlow IMPLIES F(tlow + i) = G(hlow + i)))
                IMPLIES (FORALL (i: nat):
                    i <= thigh - tlow IMPLIES sigma[T](tlow, tlow+i, F) = sigma[H](hlow, hlow+i, G))") (("1" (SKEEP) (("1" (INST - "F" "G" "hhigh" "hlow" "thigh" "tlow") (("1" (ASSERT) (("1" (REPLACE -3) (("1" (INST - "thigh-tlow") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "sigma" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (INDUCT "i") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "sigma" +) (("1" (EXPAND "sigma" +) (("1" (INST - "0") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (ASSERT) (("2" (EXPAND "sigma" +) (("2" (INST - "1+j") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (LEMMA "T_pred_lem[H]") (("3" (INST - "hhigh" "hlow" "i+hlow") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (LEMMA "T_pred_lem[T]") (("4" (INST - "thigh" "tlow" "i+tlow") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (SKEEP) (("3" (LEMMA "T_pred_lem[H]") (("3" (INST - "hhigh" "hlow" "hlow + i1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (SKEEP) (("4" (LEMMA "T_pred_lem[T]") (("4" (INST - "thigh" "tlow" "i1+tlow") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (SKEEP) (("5" (LEMMA "T_pred_lem[H]") (("5" (INST - "hhigh" "hlow" "hlow + i") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (HIDE 2) (("6" (SKEEP) (("6" (SKEEP) (("6" (LEMMA "T_pred_lem[T]") (("6" (INST - "thigh" "tlow" "i+tlow") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|mixed_sigmas_eq| 0 (|mixed_sigmas_eq-1| |nil| 3537537619 ("" (LEMMA "mixed_sigmas_const_eq") (("" (INST - _ _ _ _ _ _ 1) (("" (ASSERT) (("" (CASE "FORALL (aa:real): 1*aa = aa") (("1" (REWRITE -1) (("1" (REWRITE -1) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|mixed_sigmas_const_eq| FORMULA-DECL NIL |mixed_sigmas| NIL)) SHOSTAK)))
